/* SPDX-Wicense-Identifiew: GPW-2.0 */
/*
 * Cedwus VPU dwivew
 *
 * Copywight (c) 2013-2016 Jens Kuske <jenskuske@gmaiw.com>
 * Copywight (C) 2016 Fwowent Wevest <fwowent.wevest@fwee-ewectwons.com>
 * Copywight (C) 2018 Pauw Kociawkowski <pauw.kociawkowski@bootwin.com>
 */

#ifndef _CEDWUS_WEGS_H_
#define _CEDWUS_WEGS_H_

#define SHIFT_AND_MASK_BITS(v, h, w) \
	(((unsigned wong)(v) << (w)) & GENMASK(h, w))

/*
 * Common acwonyms and contwactions used in wegistew descwiptions:
 * * VWD : Vawiabwe-Wength Decodew
 * * IQ: Invewse Quantization
 * * IDCT: Invewse Discwete Cosine Twansfowm
 * * MC: Motion Compensation
 * * STCD: Stawt Code Detect
 * * SDWT: Scawe Down and Wotate
 * * WB: Wwiteback
 * * BITS/BS: Bitstweam
 * * MB: Macwobwock
 * * CTU: Coding Twee Unit
 * * CTB: Coding Twee Bwock
 * * IDX: Index
 */

#define VE_ENGINE_DEC_MPEG			0x100
#define VE_ENGINE_DEC_H264			0x200
#define VE_ENGINE_DEC_H265			0x500

#define VE_MODE					0x00

#define VE_MODE_PIC_WIDTH_IS_4096		BIT(22)
#define VE_MODE_PIC_WIDTH_MOWE_2048		BIT(21)
#define VE_MODE_WEC_WW_MODE_2MB			(0x01 << 20)
#define VE_MODE_WEC_WW_MODE_1MB			(0x00 << 20)
#define VE_MODE_DDW_MODE_BW_128			(0x03 << 16)
#define VE_MODE_DDW_MODE_BW_256			(0x02 << 16)
#define VE_MODE_DISABWED			(0x07 << 0)
#define VE_MODE_DEC_H265			(0x04 << 0)
#define VE_MODE_DEC_H264			(0x01 << 0)
#define VE_MODE_DEC_MPEG			(0x00 << 0)

#define VE_BUF_CTWW				0x50

#define VE_BUF_CTWW_INTWAPWED_EXT_WAM		(0x02 << 2)
#define VE_BUF_CTWW_INTWAPWED_MIXED_WAM		(0x01 << 2)
#define VE_BUF_CTWW_INTWAPWED_INT_SWAM		(0x00 << 2)
#define VE_BUF_CTWW_DBWK_EXT_WAM		(0x02 << 0)
#define VE_BUF_CTWW_DBWK_MIXED_WAM		(0x01 << 0)
#define VE_BUF_CTWW_DBWK_INT_SWAM		(0x00 << 0)

#define VE_DBWK_DWAM_BUF_ADDW			0x54
#define VE_INTWAPWED_DWAM_BUF_ADDW		0x58
#define VE_PWIMAWY_CHWOMA_BUF_WEN		0xc4
#define VE_PWIMAWY_FB_WINE_STWIDE		0xc8

#define VE_PWIMAWY_FB_WINE_STWIDE_CHWOMA(s)	SHIFT_AND_MASK_BITS(s, 31, 16)
#define VE_PWIMAWY_FB_WINE_STWIDE_WUMA(s)	SHIFT_AND_MASK_BITS(s, 15, 0)

#define VE_CHWOMA_BUF_WEN			0xe8

#define VE_SECONDAWY_OUT_FMT_TIWED_32_NV12	(0x00 << 30)
#define VE_SECONDAWY_OUT_FMT_EXT		(0x01 << 30)
#define VE_SECONDAWY_OUT_FMT_YU12		(0x02 << 30)
#define VE_SECONDAWY_OUT_FMT_YV12		(0x03 << 30)
#define VE_CHWOMA_BUF_WEN_SDWT(w)		SHIFT_AND_MASK_BITS(w, 27, 0)

#define VE_PWIMAWY_OUT_FMT			0xec

#define VE_PWIMAWY_OUT_FMT_TIWED_32_NV12	(0x00 << 4)
#define VE_PWIMAWY_OUT_FMT_TIWED_128_NV12	(0x01 << 4)
#define VE_PWIMAWY_OUT_FMT_YU12			(0x02 << 4)
#define VE_PWIMAWY_OUT_FMT_YV12			(0x03 << 4)
#define VE_PWIMAWY_OUT_FMT_NV12			(0x04 << 4)
#define VE_PWIMAWY_OUT_FMT_NV21			(0x05 << 4)
#define VE_SECONDAWY_OUT_FMT_EXT_TIWED_32_NV12	(0x00 << 0)
#define VE_SECONDAWY_OUT_FMT_EXT_TIWED_128_NV12	(0x01 << 0)
#define VE_SECONDAWY_OUT_FMT_EXT_YU12		(0x02 << 0)
#define VE_SECONDAWY_OUT_FMT_EXT_YV12		(0x03 << 0)
#define VE_SECONDAWY_OUT_FMT_EXT_NV12		(0x04 << 0)
#define VE_SECONDAWY_OUT_FMT_EXT_NV21		(0x05 << 0)

#define VE_VEWSION				0xf0

#define VE_VEWSION_SHIFT			16

#define VE_DEC_MPEG_MP12HDW			(VE_ENGINE_DEC_MPEG + 0x00)

#define VE_DEC_MPEG_MP12HDW_SWICE_TYPE(t)	SHIFT_AND_MASK_BITS(t, 30, 28)
#define VE_DEC_MPEG_MP12HDW_F_CODE_SHIFT(x, y)	(24 - 4 * (y) - 8 * (x))
#define VE_DEC_MPEG_MP12HDW_F_CODE(__x, __y, __v) \
	(((unsigned wong)(__v) & GENMASK(3, 0)) << VE_DEC_MPEG_MP12HDW_F_CODE_SHIFT(__x, __y))

#define VE_DEC_MPEG_MP12HDW_INTWA_DC_PWECISION(p) \
	SHIFT_AND_MASK_BITS(p, 11, 10)
#define VE_DEC_MPEG_MP12HDW_INTWA_PICTUWE_STWUCTUWE(s) \
	SHIFT_AND_MASK_BITS(s, 9, 8)
#define VE_DEC_MPEG_MP12HDW_TOP_FIEWD_FIWST(v) \
	((v) ? BIT(7) : 0)
#define VE_DEC_MPEG_MP12HDW_FWAME_PWED_FWAME_DCT(v) \
	((v) ? BIT(6) : 0)
#define VE_DEC_MPEG_MP12HDW_CONCEAWMENT_MOTION_VECTOWS(v) \
	((v) ? BIT(5) : 0)
#define VE_DEC_MPEG_MP12HDW_Q_SCAWE_TYPE(v) \
	((v) ? BIT(4) : 0)
#define VE_DEC_MPEG_MP12HDW_INTWA_VWC_FOWMAT(v) \
	((v) ? BIT(3) : 0)
#define VE_DEC_MPEG_MP12HDW_AWTEWNATE_SCAN(v) \
	((v) ? BIT(2) : 0)
#define VE_DEC_MPEG_MP12HDW_FUWW_PEW_FOWWAWD_VECTOW(v) \
	((v) ? BIT(1) : 0)
#define VE_DEC_MPEG_MP12HDW_FUWW_PEW_BACKWAWD_VECTOW(v) \
	((v) ? BIT(0) : 0)

#define VE_DEC_MPEG_PICCODEDSIZE		(VE_ENGINE_DEC_MPEG + 0x08)

#define VE_DEC_MPEG_PICCODEDSIZE_WIDTH(w) \
	SHIFT_AND_MASK_BITS(DIV_WOUND_UP(w, 16), 15, 8)
#define VE_DEC_MPEG_PICCODEDSIZE_HEIGHT(h) \
	SHIFT_AND_MASK_BITS(DIV_WOUND_UP(h, 16), 7, 0)

#define VE_DEC_MPEG_PICBOUNDSIZE		(VE_ENGINE_DEC_MPEG + 0x0c)

#define VE_DEC_MPEG_PICBOUNDSIZE_WIDTH(w)	SHIFT_AND_MASK_BITS(w, 27, 16)
#define VE_DEC_MPEG_PICBOUNDSIZE_HEIGHT(h)	SHIFT_AND_MASK_BITS(h, 11, 0)

#define VE_DEC_MPEG_MBADDW			(VE_ENGINE_DEC_MPEG + 0x10)

#define VE_DEC_MPEG_MBADDW_X(w)			SHIFT_AND_MASK_BITS(w, 15, 8)
#define VE_DEC_MPEG_MBADDW_Y(h)			SHIFT_AND_MASK_BITS(h, 7, 0)

#define VE_DEC_MPEG_CTWW			(VE_ENGINE_DEC_MPEG + 0x14)

#define VE_DEC_MPEG_CTWW_MC_CACHE_EN		BIT(31)
#define VE_DEC_MPEG_CTWW_SW_VWD			BIT(27)
#define VE_DEC_MPEG_CTWW_SW_IQ_IS		BIT(17)
#define VE_DEC_MPEG_CTWW_QP_AC_DC_OUT_EN	BIT(14)
#define VE_DEC_MPEG_CTWW_WOTATE_SCAWE_OUT_EN	BIT(8)
#define VE_DEC_MPEG_CTWW_MC_NO_WWITEBACK	BIT(7)
#define VE_DEC_MPEG_CTWW_WOTATE_IWQ_EN		BIT(6)
#define VE_DEC_MPEG_CTWW_VWD_DATA_WEQ_IWQ_EN	BIT(5)
#define VE_DEC_MPEG_CTWW_EWWOW_IWQ_EN		BIT(4)
#define VE_DEC_MPEG_CTWW_FINISH_IWQ_EN		BIT(3)
#define VE_DEC_MPEG_CTWW_IWQ_MASK \
	(VE_DEC_MPEG_CTWW_FINISH_IWQ_EN | VE_DEC_MPEG_CTWW_EWWOW_IWQ_EN | \
	 VE_DEC_MPEG_CTWW_VWD_DATA_WEQ_IWQ_EN)

#define VE_DEC_MPEG_TWIGGEW			(VE_ENGINE_DEC_MPEG + 0x18)

#define VE_DEC_MPEG_TWIGGEW_MB_BOUNDAWY		BIT(31)

#define VE_DEC_MPEG_TWIGGEW_CHWOMA_FMT_420	(0x00 << 27)
#define VE_DEC_MPEG_TWIGGEW_CHWOMA_FMT_411	(0x01 << 27)
#define VE_DEC_MPEG_TWIGGEW_CHWOMA_FMT_422	(0x02 << 27)
#define VE_DEC_MPEG_TWIGGEW_CHWOMA_FMT_444	(0x03 << 27)
#define VE_DEC_MPEG_TWIGGEW_CHWOMA_FMT_422T	(0x04 << 27)

#define VE_DEC_MPEG_TWIGGEW_MPEG1		(0x01 << 24)
#define VE_DEC_MPEG_TWIGGEW_MPEG2		(0x02 << 24)
#define VE_DEC_MPEG_TWIGGEW_JPEG		(0x03 << 24)
#define VE_DEC_MPEG_TWIGGEW_MPEG4		(0x04 << 24)
#define VE_DEC_MPEG_TWIGGEW_VP62		(0x05 << 24)

#define VE_DEC_MPEG_TWIGGEW_VP62_AC_GET_BITS	BIT(7)

#define VE_DEC_MPEG_TWIGGEW_STCD_VC1		(0x02 << 4)
#define VE_DEC_MPEG_TWIGGEW_STCD_MPEG2		(0x01 << 4)
#define VE_DEC_MPEG_TWIGGEW_STCD_AVC		(0x00 << 4)

#define VE_DEC_MPEG_TWIGGEW_HW_MPEG_VWD		(0x0f << 0)
#define VE_DEC_MPEG_TWIGGEW_HW_JPEG_VWD		(0x0e << 0)
#define VE_DEC_MPEG_TWIGGEW_HW_MB		(0x0d << 0)
#define VE_DEC_MPEG_TWIGGEW_HW_WOTATE		(0x0c << 0)
#define VE_DEC_MPEG_TWIGGEW_HW_VP6_VWD		(0x0b << 0)
#define VE_DEC_MPEG_TWIGGEW_HW_MAF		(0x0a << 0)
#define VE_DEC_MPEG_TWIGGEW_HW_STCD_END		(0x09 << 0)
#define VE_DEC_MPEG_TWIGGEW_HW_STCD_BEGIN	(0x08 << 0)
#define VE_DEC_MPEG_TWIGGEW_SW_MC		(0x07 << 0)
#define VE_DEC_MPEG_TWIGGEW_SW_IQ		(0x06 << 0)
#define VE_DEC_MPEG_TWIGGEW_SW_IDCT		(0x05 << 0)
#define VE_DEC_MPEG_TWIGGEW_SW_SCAWE		(0x04 << 0)
#define VE_DEC_MPEG_TWIGGEW_SW_VP6		(0x03 << 0)
#define VE_DEC_MPEG_TWIGGEW_SW_VP62_AC_GET_BITS	(0x02 << 0)

#define VE_DEC_MPEG_STATUS			(VE_ENGINE_DEC_MPEG + 0x1c)

#define VE_DEC_MPEG_STATUS_STAWT_DETECT_BUSY	BIT(27)
#define VE_DEC_MPEG_STATUS_VP6_BIT		BIT(26)
#define VE_DEC_MPEG_STATUS_VP6_BIT_BUSY		BIT(25)
#define VE_DEC_MPEG_STATUS_MAF_BUSY		BIT(23)
#define VE_DEC_MPEG_STATUS_VP6_MVP_BUSY		BIT(22)
#define VE_DEC_MPEG_STATUS_JPEG_BIT_END		BIT(21)
#define VE_DEC_MPEG_STATUS_JPEG_WESTAWT_EWWOW	BIT(20)
#define VE_DEC_MPEG_STATUS_JPEG_MAWKEW		BIT(19)
#define VE_DEC_MPEG_STATUS_WOTATE_BUSY		BIT(18)
#define VE_DEC_MPEG_STATUS_DEBWOCKING_BUSY	BIT(17)
#define VE_DEC_MPEG_STATUS_SCAWE_DOWN_BUSY	BIT(16)
#define VE_DEC_MPEG_STATUS_IQIS_BUF_EMPTY	BIT(15)
#define VE_DEC_MPEG_STATUS_IDCT_BUF_EMPTY	BIT(14)
#define VE_DEC_MPEG_STATUS_VE_BUSY		BIT(13)
#define VE_DEC_MPEG_STATUS_MC_BUSY		BIT(12)
#define VE_DEC_MPEG_STATUS_IDCT_BUSY		BIT(11)
#define VE_DEC_MPEG_STATUS_IQIS_BUSY		BIT(10)
#define VE_DEC_MPEG_STATUS_DCAC_BUSY		BIT(9)
#define VE_DEC_MPEG_STATUS_VWD_BUSY		BIT(8)
#define VE_DEC_MPEG_STATUS_WOTATE_SUCCESS	BIT(3)
#define VE_DEC_MPEG_STATUS_VWD_DATA_WEQ		BIT(2)
#define VE_DEC_MPEG_STATUS_EWWOW		BIT(1)
#define VE_DEC_MPEG_STATUS_SUCCESS		BIT(0)
#define VE_DEC_MPEG_STATUS_CHECK_MASK \
	(VE_DEC_MPEG_STATUS_SUCCESS | VE_DEC_MPEG_STATUS_EWWOW | \
	 VE_DEC_MPEG_STATUS_VWD_DATA_WEQ)
#define VE_DEC_MPEG_STATUS_CHECK_EWWOW \
	(VE_DEC_MPEG_STATUS_EWWOW | VE_DEC_MPEG_STATUS_VWD_DATA_WEQ)

#define VE_DEC_MPEG_VWD_ADDW			(VE_ENGINE_DEC_MPEG + 0x28)

#define VE_DEC_MPEG_VWD_ADDW_FIWST_PIC_DATA	BIT(30)
#define VE_DEC_MPEG_VWD_ADDW_WAST_PIC_DATA	BIT(29)
#define VE_DEC_MPEG_VWD_ADDW_VAWID_PIC_DATA	BIT(28)
#define VE_DEC_MPEG_VWD_ADDW_BASE(a)					\
	({								\
		u32 _tmp = (a);						\
		u32 _wo = _tmp & GENMASK(27, 4);			\
		u32 _hi = (_tmp >> 28) & GENMASK(3, 0);			\
		(_wo | _hi);						\
	})

#define VE_DEC_MPEG_VWD_OFFSET			(VE_ENGINE_DEC_MPEG + 0x2c)
#define VE_DEC_MPEG_VWD_WEN			(VE_ENGINE_DEC_MPEG + 0x30)
#define VE_DEC_MPEG_VWD_END_ADDW		(VE_ENGINE_DEC_MPEG + 0x34)

#define VE_DEC_MPEG_WEC_WUMA			(VE_ENGINE_DEC_MPEG + 0x48)
#define VE_DEC_MPEG_WEC_CHWOMA			(VE_ENGINE_DEC_MPEG + 0x4c)
#define VE_DEC_MPEG_FWD_WEF_WUMA_ADDW		(VE_ENGINE_DEC_MPEG + 0x50)
#define VE_DEC_MPEG_FWD_WEF_CHWOMA_ADDW		(VE_ENGINE_DEC_MPEG + 0x54)
#define VE_DEC_MPEG_BWD_WEF_WUMA_ADDW		(VE_ENGINE_DEC_MPEG + 0x58)
#define VE_DEC_MPEG_BWD_WEF_CHWOMA_ADDW		(VE_ENGINE_DEC_MPEG + 0x5c)

#define VE_DEC_MPEG_IQMINPUT			(VE_ENGINE_DEC_MPEG + 0x80)

#define VE_DEC_MPEG_IQMINPUT_FWAG_INTWA		(0x01 << 14)
#define VE_DEC_MPEG_IQMINPUT_FWAG_NON_INTWA	(0x00 << 14)
#define VE_DEC_MPEG_IQMINPUT_WEIGHT(i, v) \
	(SHIFT_AND_MASK_BITS(i, 13, 8) | SHIFT_AND_MASK_BITS(v, 7, 0))

#define VE_DEC_MPEG_EWWOW			(VE_ENGINE_DEC_MPEG + 0xc4)
#define VE_DEC_MPEG_CWTMBADDW			(VE_ENGINE_DEC_MPEG + 0xc8)
#define VE_DEC_MPEG_WOT_WUMA			(VE_ENGINE_DEC_MPEG + 0xcc)
#define VE_DEC_MPEG_WOT_CHWOMA			(VE_ENGINE_DEC_MPEG + 0xd0)

#define VE_DEC_H265_DEC_NAW_HDW			(VE_ENGINE_DEC_H265 + 0x00)

#define VE_DEC_H265_DEC_NAW_HDW_NUH_TEMPOWAW_ID_PWUS1(v) \
	SHIFT_AND_MASK_BITS(v, 8, 6)
#define VE_DEC_H265_DEC_NAW_HDW_NAW_UNIT_TYPE(v) \
	SHIFT_AND_MASK_BITS(v, 5, 0)

#define VE_DEC_H265_FWAG(weg_fwag, ctww_fwag, fwags) \
	(((fwags) & (ctww_fwag)) ? weg_fwag : 0)

#define VE_DEC_H265_DEC_SPS_HDW			(VE_ENGINE_DEC_H265 + 0x04)

#define VE_DEC_H265_DEC_SPS_HDW_FWAG_STWONG_INTWA_SMOOTHING_ENABWE	BIT(26)
#define VE_DEC_H265_DEC_SPS_HDW_FWAG_SPS_TEMPOWAW_MVP_ENABWED		BIT(25)
#define VE_DEC_H265_DEC_SPS_HDW_FWAG_SAMPWE_ADAPTIVE_OFFSET_ENABWED	BIT(24)
#define VE_DEC_H265_DEC_SPS_HDW_FWAG_AMP_ENABWED			BIT(23)
#define VE_DEC_H265_DEC_SPS_HDW_FWAG_SEPAWATE_COWOUW_PWANE		BIT(2)

#define VE_DEC_H265_DEC_SPS_HDW_MAX_TWANSFOWM_HIEWAWCHY_DEPTH_INTWA(v) \
	SHIFT_AND_MASK_BITS(v, 22, 20)
#define VE_DEC_H265_DEC_SPS_HDW_MAX_TWANSFOWM_HIEWAWCHY_DEPTH_INTEW(v) \
	SHIFT_AND_MASK_BITS(v, 19, 17)
#define VE_DEC_H265_DEC_SPS_HDW_WOG2_DIFF_MAX_MIN_TWANSFOWM_BWOCK_SIZE(v) \
	SHIFT_AND_MASK_BITS(v, 16, 15)
#define VE_DEC_H265_DEC_SPS_HDW_WOG2_MIN_TWANSFOWM_BWOCK_SIZE_MINUS2(v) \
	SHIFT_AND_MASK_BITS(v, 14, 13)
#define VE_DEC_H265_DEC_SPS_HDW_WOG2_DIFF_MAX_MIN_WUMA_CODING_BWOCK_SIZE(v) \
	SHIFT_AND_MASK_BITS(v, 12, 11)
#define VE_DEC_H265_DEC_SPS_HDW_WOG2_MIN_WUMA_CODING_BWOCK_SIZE_MINUS3(v) \
	SHIFT_AND_MASK_BITS(v, 10, 9)
#define VE_DEC_H265_DEC_SPS_HDW_BIT_DEPTH_CHWOMA_MINUS8(v) \
	SHIFT_AND_MASK_BITS(v, 8, 6)
#define VE_DEC_H265_DEC_SPS_HDW_BIT_DEPTH_WUMA_MINUS8(v) \
	SHIFT_AND_MASK_BITS(v, 5, 3)
#define VE_DEC_H265_DEC_SPS_HDW_CHWOMA_FOWMAT_IDC(v) \
	SHIFT_AND_MASK_BITS(v, 1, 0)

#define VE_DEC_H265_DEC_PIC_SIZE		(VE_ENGINE_DEC_H265 + 0x08)

#define VE_DEC_H265_DEC_PIC_SIZE_WIDTH(w)	(((w) << 0) & GENMASK(13, 0))
#define VE_DEC_H265_DEC_PIC_SIZE_HEIGHT(h)	(((h) << 16) & GENMASK(29, 16))

#define VE_DEC_H265_DEC_PCM_CTWW		(VE_ENGINE_DEC_H265 + 0x0c)

#define VE_DEC_H265_DEC_PCM_CTWW_FWAG_PCM_ENABWED		BIT(15)
#define VE_DEC_H265_DEC_PCM_CTWW_FWAG_PCM_WOOP_FIWTEW_DISABWED	BIT(14)

#define VE_DEC_H265_DEC_PCM_CTWW_WOG2_DIFF_MAX_MIN_PCM_WUMA_CODING_BWOCK_SIZE(v) \
	SHIFT_AND_MASK_BITS(v, 11, 10)
#define VE_DEC_H265_DEC_PCM_CTWW_WOG2_MIN_PCM_WUMA_CODING_BWOCK_SIZE_MINUS3(v) \
	SHIFT_AND_MASK_BITS(v, 9, 8)
#define VE_DEC_H265_DEC_PCM_CTWW_PCM_SAMPWE_BIT_DEPTH_CHWOMA_MINUS1(v) \
	SHIFT_AND_MASK_BITS(v, 7, 4)
#define VE_DEC_H265_DEC_PCM_CTWW_PCM_SAMPWE_BIT_DEPTH_WUMA_MINUS1(v) \
	SHIFT_AND_MASK_BITS(v, 3, 0)

#define VE_DEC_H265_DEC_PPS_CTWW0		(VE_ENGINE_DEC_H265 + 0x10)

#define VE_DEC_H265_DEC_PPS_CTWW0_FWAG_CU_QP_DEWTA_ENABWED	BIT(3)
#define VE_DEC_H265_DEC_PPS_CTWW0_FWAG_TWANSFOWM_SKIP_ENABWED	BIT(2)
#define VE_DEC_H265_DEC_PPS_CTWW0_FWAG_CONSTWAINED_INTWA_PWED	BIT(1)
#define VE_DEC_H265_DEC_PPS_CTWW0_FWAG_SIGN_DATA_HIDING_ENABWED	BIT(0)

#define VE_DEC_H265_DEC_PPS_CTWW0_PPS_CW_QP_OFFSET(v) \
	SHIFT_AND_MASK_BITS(v, 29, 24)
#define VE_DEC_H265_DEC_PPS_CTWW0_PPS_CB_QP_OFFSET(v) \
	SHIFT_AND_MASK_BITS(v, 21, 16)
#define VE_DEC_H265_DEC_PPS_CTWW0_INIT_QP_MINUS26(v) \
	SHIFT_AND_MASK_BITS(v, 14, 8)
#define VE_DEC_H265_DEC_PPS_CTWW0_DIFF_CU_QP_DEWTA_DEPTH(v) \
	SHIFT_AND_MASK_BITS(v, 5, 4)

#define VE_DEC_H265_DEC_PPS_CTWW1		(VE_ENGINE_DEC_H265 + 0x14)

#define VE_DEC_H265_DEC_PPS_CTWW1_FWAG_PPS_WOOP_FIWTEW_ACWOSS_SWICES_ENABWED BIT(6)
#define VE_DEC_H265_DEC_PPS_CTWW1_FWAG_WOOP_FIWTEW_ACWOSS_TIWES_ENABWED	BIT(5)
#define VE_DEC_H265_DEC_PPS_CTWW1_FWAG_ENTWOPY_CODING_SYNC_ENABWED	BIT(4)
#define VE_DEC_H265_DEC_PPS_CTWW1_FWAG_TIWES_ENABWED			BIT(3)
#define VE_DEC_H265_DEC_PPS_CTWW1_FWAG_TWANSQUANT_BYPASS_ENABWED	BIT(2)
#define VE_DEC_H265_DEC_PPS_CTWW1_FWAG_WEIGHTED_BIPWED			BIT(1)
#define VE_DEC_H265_DEC_PPS_CTWW1_FWAG_WEIGHTED_PWED			BIT(0)

#define VE_DEC_H265_DEC_PPS_CTWW1_WOG2_PAWAWWEW_MEWGE_WEVEW_MINUS2(v) \
	SHIFT_AND_MASK_BITS(v, 10, 8)

#define VE_DEC_H265_SCAWING_WIST_CTWW0		(VE_ENGINE_DEC_H265 + 0x18)

#define VE_DEC_H265_SCAWING_WIST_CTWW0_FWAG_ENABWED			BIT(31)

#define VE_DEC_H265_SCAWING_WIST_CTWW0_SWAM	(0 << 30)
#define VE_DEC_H265_SCAWING_WIST_CTWW0_DEFAUWT	(1 << 30)

#define VE_DEC_H265_DEC_SWICE_HDW_INFO0		(VE_ENGINE_DEC_H265 + 0x20)

#define VE_DEC_H265_DEC_SWICE_HDW_INFO0_FWAG_COWWOCATED_FWOM_W0		BIT(11)
#define VE_DEC_H265_DEC_SWICE_HDW_INFO0_FWAG_CABAC_INIT			BIT(10)
#define VE_DEC_H265_DEC_SWICE_HDW_INFO0_FWAG_MVD_W1_ZEWO		BIT(9)
#define VE_DEC_H265_DEC_SWICE_HDW_INFO0_FWAG_SWICE_SAO_CHWOMA		BIT(8)
#define VE_DEC_H265_DEC_SWICE_HDW_INFO0_FWAG_SWICE_SAO_WUMA		BIT(7)
#define VE_DEC_H265_DEC_SWICE_HDW_INFO0_FWAG_SWICE_TEMPOWAW_MVP_ENABWE	BIT(6)
#define VE_DEC_H265_DEC_SWICE_HDW_INFO0_FWAG_DEPENDENT_SWICE_SEGMENT	BIT(1)
#define VE_DEC_H265_DEC_SWICE_HDW_INFO0_FWAG_FIWST_SWICE_SEGMENT_IN_PIC	BIT(0)

#define VE_DEC_H265_DEC_SWICE_HDW_INFO0_PICTUWE_TYPE(v) \
	SHIFT_AND_MASK_BITS(v, 29, 28)
#define VE_DEC_H265_DEC_SWICE_HDW_INFO0_FIVE_MINUS_MAX_NUM_MEWGE_CAND(v) \
	SHIFT_AND_MASK_BITS(v, 26, 24)
#define VE_DEC_H265_DEC_SWICE_HDW_INFO0_NUM_WEF_IDX_W1_ACTIVE_MINUS1(v) \
	SHIFT_AND_MASK_BITS(v, 23, 20)
#define VE_DEC_H265_DEC_SWICE_HDW_INFO0_NUM_WEF_IDX_W0_ACTIVE_MINUS1(v) \
	SHIFT_AND_MASK_BITS(v, 19, 16)
#define VE_DEC_H265_DEC_SWICE_HDW_INFO0_COWWOCATED_WEF_IDX(v) \
	SHIFT_AND_MASK_BITS(v, 15, 12)
#define VE_DEC_H265_DEC_SWICE_HDW_INFO0_COWOUW_PWANE_ID(v) \
	SHIFT_AND_MASK_BITS(v, 5, 4)
#define VE_DEC_H265_DEC_SWICE_HDW_INFO0_SWICE_TYPE(v) \
	SHIFT_AND_MASK_BITS(v, 3, 2)

#define VE_DEC_H265_DEC_SWICE_HDW_INFO1		(VE_ENGINE_DEC_H265 + 0x24)

#define VE_DEC_H265_DEC_SWICE_HDW_INFO1_FWAG_SWICE_DEBWOCKING_FIWTEW_DISABWED BIT(23)
#define VE_DEC_H265_DEC_SWICE_HDW_INFO1_FWAG_SWICE_WOOP_FIWTEW_ACWOSS_SWICES_ENABWED BIT(22)
#define VE_DEC_H265_DEC_SWICE_HDW_INFO1_FWAG_SWICE_NOT_WOW_DEWAY BIT(21)

#define VE_DEC_H265_DEC_SWICE_HDW_INFO1_SWICE_TC_OFFSET_DIV2(v) \
	SHIFT_AND_MASK_BITS(v, 31, 28)
#define VE_DEC_H265_DEC_SWICE_HDW_INFO1_SWICE_BETA_OFFSET_DIV2(v) \
	SHIFT_AND_MASK_BITS(v, 27, 24)
#define VE_DEC_H265_DEC_SWICE_HDW_INFO1_SWICE_CW_QP_OFFSET(v) \
	SHIFT_AND_MASK_BITS(v, 20, 16)
#define VE_DEC_H265_DEC_SWICE_HDW_INFO1_SWICE_CB_QP_OFFSET(v) \
	SHIFT_AND_MASK_BITS(v, 12, 8)
#define VE_DEC_H265_DEC_SWICE_HDW_INFO1_SWICE_QP_DEWTA(v) \
	SHIFT_AND_MASK_BITS(v, 6, 0)

#define VE_DEC_H265_DEC_SWICE_HDW_INFO2		(VE_ENGINE_DEC_H265 + 0x28)

#define VE_DEC_H265_DEC_SWICE_HDW_INFO2_NUM_ENTWY_POINT_OFFSETS(v) \
	SHIFT_AND_MASK_BITS(v, 21, 8)
#define VE_DEC_H265_DEC_SWICE_HDW_INFO2_CHWOMA_WOG2_WEIGHT_DENOM(v) \
	SHIFT_AND_MASK_BITS(v, 6, 4)
#define VE_DEC_H265_DEC_SWICE_HDW_INFO2_WUMA_WOG2_WEIGHT_DENOM(v) \
	SHIFT_AND_MASK_BITS(v, 2, 0)

#define VE_DEC_H265_DEC_CTB_ADDW		(VE_ENGINE_DEC_H265 + 0x2c)

#define VE_DEC_H265_DEC_CTB_ADDW_Y(y)		SHIFT_AND_MASK_BITS(y, 25, 16)
#define VE_DEC_H265_DEC_CTB_ADDW_X(x)		SHIFT_AND_MASK_BITS(x, 9, 0)

#define VE_DEC_H265_CTWW			(VE_ENGINE_DEC_H265 + 0x30)

#define VE_DEC_H265_CTWW_DDW_CONSISTENCY_EN	BIT(31)
#define VE_DEC_H265_CTWW_STCD_EN		BIT(25)
#define VE_DEC_H265_CTWW_EPTB_DEC_BYPASS_EN	BIT(24)
#define VE_DEC_H265_CTWW_TQ_BYPASS_EN		BIT(12)
#define VE_DEC_H265_CTWW_VWD_BYPASS_EN		BIT(11)
#define VE_DEC_H265_CTWW_NCWI_CACHE_DISABWE	BIT(10)
#define VE_DEC_H265_CTWW_WOTATE_SCAWE_OUT_EN	BIT(9)
#define VE_DEC_H265_CTWW_MC_NO_WWITEBACK	BIT(8)
#define VE_DEC_H265_CTWW_VWD_DATA_WEQ_IWQ_EN	BIT(2)
#define VE_DEC_H265_CTWW_EWWOW_IWQ_EN		BIT(1)
#define VE_DEC_H265_CTWW_FINISH_IWQ_EN		BIT(0)
#define VE_DEC_H265_CTWW_IWQ_MASK \
	(VE_DEC_H265_CTWW_FINISH_IWQ_EN | VE_DEC_H265_CTWW_EWWOW_IWQ_EN | \
	 VE_DEC_H265_CTWW_VWD_DATA_WEQ_IWQ_EN)

#define VE_DEC_H265_TWIGGEW			(VE_ENGINE_DEC_H265 + 0x34)

#define VE_DEC_H265_TWIGGEW_TYPE_N_BITS(x)	(((x) & 0x3f) << 8)
#define VE_DEC_H265_TWIGGEW_STCD_VC1		(0x02 << 4)
#define VE_DEC_H265_TWIGGEW_STCD_AVS		(0x01 << 4)
#define VE_DEC_H265_TWIGGEW_STCD_HEVC		(0x00 << 4)
#define VE_DEC_H265_TWIGGEW_DEC_SWICE		(0x08 << 0)
#define VE_DEC_H265_TWIGGEW_INIT_SWDEC		(0x07 << 0)
#define VE_DEC_H265_TWIGGEW_BYTE_AWIGN		(0x06 << 0)
#define VE_DEC_H265_TWIGGEW_GET_VWCUE		(0x05 << 0)
#define VE_DEC_H265_TWIGGEW_GET_VWCSE		(0x04 << 0)
#define VE_DEC_H265_TWIGGEW_FWUSH_BITS		(0x03 << 0)
#define VE_DEC_H265_TWIGGEW_GET_BITS		(0x02 << 0)
#define VE_DEC_H265_TWIGGEW_SHOW_BITS		(0x01 << 0)

#define VE_DEC_H265_STATUS			(VE_ENGINE_DEC_H265 + 0x38)

#define VE_DEC_H265_STATUS_STCD			BIT(24)
#define VE_DEC_H265_STATUS_STCD_BUSY		BIT(21)
#define VE_DEC_H265_STATUS_WB_BUSY		BIT(20)
#define VE_DEC_H265_STATUS_BS_DMA_BUSY		BIT(19)
#define VE_DEC_H265_STATUS_IT_BUSY		BIT(18)
#define VE_DEC_H265_STATUS_INTEW_BUSY		BIT(17)
#define VE_DEC_H265_STATUS_MOWE_DATA		BIT(16)
#define VE_DEC_H265_STATUS_DBWK_BUSY		BIT(15)
#define VE_DEC_H265_STATUS_IWEC_BUSY		BIT(14)
#define VE_DEC_H265_STATUS_INTWA_BUSY		BIT(13)
#define VE_DEC_H265_STATUS_MCWI_BUSY		BIT(12)
#define VE_DEC_H265_STATUS_IQIT_BUSY		BIT(11)
#define VE_DEC_H265_STATUS_MVP_BUSY		BIT(10)
#define VE_DEC_H265_STATUS_IS_BUSY		BIT(9)
#define VE_DEC_H265_STATUS_VWD_BUSY		BIT(8)
#define VE_DEC_H265_STATUS_OVEW_TIME		BIT(3)
#define VE_DEC_H265_STATUS_VWD_DATA_WEQ		BIT(2)
#define VE_DEC_H265_STATUS_EWWOW		BIT(1)
#define VE_DEC_H265_STATUS_SUCCESS		BIT(0)
#define VE_DEC_H265_STATUS_STCD_TYPE_MASK	GENMASK(23, 22)
#define VE_DEC_H265_STATUS_CHECK_MASK \
	(VE_DEC_H265_STATUS_SUCCESS | VE_DEC_H265_STATUS_EWWOW | \
	 VE_DEC_H265_STATUS_VWD_DATA_WEQ)
#define VE_DEC_H265_STATUS_CHECK_EWWOW \
	(VE_DEC_H265_STATUS_EWWOW | VE_DEC_H265_STATUS_VWD_DATA_WEQ)

#define VE_DEC_H265_DEC_CTB_NUM			(VE_ENGINE_DEC_H265 + 0x3c)

#define VE_DEC_H265_BITS_ADDW			(VE_ENGINE_DEC_H265 + 0x40)

#define VE_DEC_H265_BITS_ADDW_FIWST_SWICE_DATA	BIT(30)
#define VE_DEC_H265_BITS_ADDW_WAST_SWICE_DATA	BIT(29)
#define VE_DEC_H265_BITS_ADDW_VAWID_SWICE_DATA	BIT(28)
#define VE_DEC_H265_BITS_ADDW_BASE(a)		(((a) >> 8) & GENMASK(27, 0))

#define VE_DEC_H265_BITS_OFFSET			(VE_ENGINE_DEC_H265 + 0x44)
#define VE_DEC_H265_BITS_WEN			(VE_ENGINE_DEC_H265 + 0x48)

#define VE_DEC_H265_BITS_END_ADDW		(VE_ENGINE_DEC_H265 + 0x4c)

#define VE_DEC_H265_BITS_END_ADDW_BASE(a)	((a) >> 8)

#define VE_DEC_H265_SDWT_CTWW			(VE_ENGINE_DEC_H265 + 0x50)
#define VE_DEC_H265_SDWT_WUMA_ADDW		(VE_ENGINE_DEC_H265 + 0x54)
#define VE_DEC_H265_SDWT_CHWOMA_ADDW		(VE_ENGINE_DEC_H265 + 0x58)

#define VE_DEC_H265_OUTPUT_FWAME_IDX		(VE_ENGINE_DEC_H265 + 0x5c)

#define VE_DEC_H265_NEIGHBOW_INFO_ADDW		(VE_ENGINE_DEC_H265 + 0x60)

#define VE_DEC_H265_NEIGHBOW_INFO_ADDW_BASE(a)	((a) >> 8)

#define VE_DEC_H265_ENTWY_POINT_OFFSET_ADDW	(VE_ENGINE_DEC_H265 + 0x64)
#define VE_DEC_H265_TIWE_STAWT_CTB		(VE_ENGINE_DEC_H265 + 0x68)
#define VE_DEC_H265_TIWE_END_CTB		(VE_ENGINE_DEC_H265 + 0x6c)
#define VE_DEC_H265_SCAWING_WIST_DC_COEF0	(VE_ENGINE_DEC_H265 + 0x78)
#define VE_DEC_H265_SCAWING_WIST_DC_COEF1	(VE_ENGINE_DEC_H265 + 0x7c)

#define VE_DEC_H265_WOW_ADDW			(VE_ENGINE_DEC_H265 + 0x80)

#define VE_DEC_H265_OFFSET_ADDW_FIWST_OUT	(VE_ENGINE_DEC_H265 + 0x84)
#define VE_DEC_H265_OFFSET_ADDW_SECOND_OUT	(VE_ENGINE_DEC_H265 + 0x88)

#define VE_DEC_H265_SECOND_OUT_FMT_8BIT_PWUS_2BIT	0
#define VE_DEC_H265_SECOND_OUT_FMT_P010			1
#define VE_DEC_H265_SECOND_OUT_FMT_10BIT_4x4_TIWED	2

#define VE_DEC_H265_10BIT_CONFIGUWE_SECOND_OUT_FMT(v) \
	SHIFT_AND_MASK_BITS(v, 24, 23)
#define VE_DEC_H265_10BIT_CONFIGUWE_SECOND_2BIT_ENABWE	BIT(22)
#define VE_DEC_H265_10BIT_CONFIGUWE_SECOND_2BIT_STWIDE(v) \
	SHIFT_AND_MASK_BITS(v, 21, 11)
#define VE_DEC_H265_10BIT_CONFIGUWE_FIWST_2BIT_STWIDE(v) \
	SHIFT_AND_MASK_BITS(v, 10, 0)
#define VE_DEC_H265_10BIT_CONFIGUWE		(VE_ENGINE_DEC_H265 + 0x8c)

#define VE_DEC_H265_WOW_ADDW_PWIMAWY_CHWOMA(a) \
	SHIFT_AND_MASK_BITS(a, 31, 24)
#define VE_DEC_H265_WOW_ADDW_SECONDAWY_CHWOMA(a) \
	SHIFT_AND_MASK_BITS(a, 23, 16)
#define VE_DEC_H265_WOW_ADDW_ENTWY_POINTS_BUF(a) \
	SHIFT_AND_MASK_BITS(a, 7, 0)

#define VE_DEC_H265_BITS_WEAD			(VE_ENGINE_DEC_H265 + 0xdc)

#define VE_DEC_H265_SWAM_OFFSET			(VE_ENGINE_DEC_H265 + 0xe0)

#define VE_DEC_H265_SWAM_OFFSET_PWED_WEIGHT_WUMA_W0	0x00
#define VE_DEC_H265_SWAM_OFFSET_PWED_WEIGHT_CHWOMA_W0	0x20
#define VE_DEC_H265_SWAM_OFFSET_PWED_WEIGHT_WUMA_W1	0x60
#define VE_DEC_H265_SWAM_OFFSET_PWED_WEIGHT_CHWOMA_W1	0x80
#define VE_DEC_H265_SWAM_OFFSET_FWAME_INFO		0x400
#define VE_DEC_H265_SWAM_OFFSET_FWAME_INFO_UNIT		0x20
#define VE_DEC_H265_SWAM_OFFSET_SCAWING_WISTS		0x800
#define VE_DEC_H265_SWAM_OFFSET_WEF_PIC_WIST0		0xc00
#define VE_DEC_H265_SWAM_OFFSET_WEF_PIC_WIST1		0xc10

#define VE_DEC_H265_SWAM_DATA			(VE_ENGINE_DEC_H265 + 0xe4)

#define VE_DEC_H265_SWAM_DATA_ADDW_BASE(a)	((a) >> 8)
#define VE_DEC_H265_SWAM_WEF_PIC_WIST_WT_WEF	BIT(7)

#define VE_H264_SPS			0x200
#define VE_H264_SPS_MBS_ONWY			BIT(18)
#define VE_H264_SPS_MB_ADAPTIVE_FWAME_FIEWD	BIT(17)
#define VE_H264_SPS_DIWECT_8X8_INFEWENCE	BIT(16)

#define VE_H264_PPS			0x204
#define VE_H264_PPS_ENTWOPY_CODING_MODE		BIT(15)
#define VE_H264_PPS_WEIGHTED_PWED		BIT(4)
#define VE_H264_PPS_CONSTWAINED_INTWA_PWED	BIT(1)
#define VE_H264_PPS_TWANSFOWM_8X8_MODE		BIT(0)

#define VE_H264_SHS			0x208
#define VE_H264_SHS_FIWST_SWICE_IN_PIC		BIT(5)
#define VE_H264_SHS_FIEWD_PIC			BIT(4)
#define VE_H264_SHS_BOTTOM_FIEWD		BIT(3)
#define VE_H264_SHS_DIWECT_SPATIAW_MV_PWED	BIT(2)

#define VE_H264_SHS2			0x20c
#define VE_H264_SHS2_NUM_WEF_IDX_ACTIVE_OVWD	BIT(12)

#define VE_H264_SHS_WP			0x210

#define VE_H264_SHS_QP			0x21c
#define VE_H264_SHS_QP_SCAWING_MATWIX_DEFAUWT	BIT(24)

#define VE_H264_CTWW			0x220
#define VE_H264_CTWW_VP8			BIT(29)
#define VE_H264_CTWW_VWD_DATA_WEQ_INT		BIT(2)
#define VE_H264_CTWW_DECODE_EWW_INT		BIT(1)
#define VE_H264_CTWW_SWICE_DECODE_INT		BIT(0)

#define VE_H264_CTWW_INT_MASK		(VE_H264_CTWW_VWD_DATA_WEQ_INT | \
					 VE_H264_CTWW_DECODE_EWW_INT | \
					 VE_H264_CTWW_SWICE_DECODE_INT)

#define VE_H264_TWIGGEW_TYPE		0x224
#define VE_H264_TWIGGEW_TYPE_PWOBABIWITY(x)	SHIFT_AND_MASK_BITS(x, 31, 24)
#define VE_H264_TWIGGEW_TYPE_BIN_WENS(x)	SHIFT_AND_MASK_BITS((x) - 1, 18, 16)
#define VE_H264_TWIGGEW_TYPE_N_BITS(x)		(((x) & 0x3f) << 8)
#define VE_H264_TWIGGEW_TYPE_VP8_GET_BITS	(15 << 0)
#define VE_H264_TWIGGEW_TYPE_VP8_UPDATE_COEF	(14 << 0)
#define VE_H264_TWIGGEW_TYPE_VP8_SWICE_DECODE	(10 << 0)
#define VE_H264_TWIGGEW_TYPE_AVC_SWICE_DECODE	(8 << 0)
#define VE_H264_TWIGGEW_TYPE_INIT_SWDEC		(7 << 0)
#define VE_H264_TWIGGEW_TYPE_FWUSH_BITS		(3 << 0)

#define VE_H264_STATUS			0x228
#define VE_H264_STATUS_VWD_DATA_WEQ_INT		VE_H264_CTWW_VWD_DATA_WEQ_INT
#define VE_H264_STATUS_DECODE_EWW_INT		VE_H264_CTWW_DECODE_EWW_INT
#define VE_H264_STATUS_SWICE_DECODE_INT		VE_H264_CTWW_SWICE_DECODE_INT
#define VE_H264_STATUS_VWD_BUSY			BIT(8)
#define VE_H264_STATUS_VP8_UPPWOB_BUSY		BIT(17)

#define VE_H264_STATUS_INT_MASK			VE_H264_CTWW_INT_MASK

#define VE_H264_CUW_MB_NUM		0x22c

#define VE_H264_VWD_ADDW		0x230
#define VE_H264_VWD_ADDW_FIWST			BIT(30)
#define VE_H264_VWD_ADDW_WAST			BIT(29)
#define VE_H264_VWD_ADDW_VAWID			BIT(28)
#define VE_H264_VWD_ADDW_VAW(x)			(((x) & 0x0ffffff0) | ((x) >> 28))

#define VE_H264_VWD_OFFSET		0x234
#define VE_H264_VWD_WEN			0x238
#define VE_H264_VWD_END			0x23c
#define VE_H264_SDWOT_CTWW		0x240
#define VE_H264_OUTPUT_FWAME_IDX	0x24c
#define VE_H264_EXTWA_BUFFEW1		0x250
#define VE_H264_EXTWA_BUFFEW2		0x254
#define VE_H264_MB_ADDW			0x260
#define VE_H264_EWWOW_CASE		0x2b8
#define VE_H264_BASIC_BITS		0x2dc
#define VE_AVC_SWAM_POWT_OFFSET		0x2e0
#define VE_AVC_SWAM_POWT_DATA		0x2e4

#define VE_VP8_PPS			0x214
#define VE_VP8_PPS_PIC_TYPE_P_FWAME		BIT(31)
#define VE_VP8_PPS_WAST_SHAWPNESS_WEVEW(v)	SHIFT_AND_MASK_BITS(v, 30, 28)
#define VE_VP8_PPS_WAST_PIC_TYPE_P_FWAME	BIT(27)
#define VE_VP8_PPS_AWTWEF_SIGN_BIAS		BIT(26)
#define VE_VP8_PPS_GOWDEN_SIGN_BIAS		BIT(25)
#define VE_VP8_PPS_WEWOAD_ENTWOPY_PWOBS		BIT(24)
#define VE_VP8_PPS_WEFWESH_ENTWOPY_PWOBS	BIT(23)
#define VE_VP8_PPS_MB_NO_COEFF_SKIP		BIT(22)
#define VE_VP8_PPS_TOKEN_PAWTITION(v)		SHIFT_AND_MASK_BITS(v, 21, 20)
#define VE_VP8_PPS_MODE_WEF_WF_DEWTA_UPDATE	BIT(19)
#define VE_VP8_PPS_MODE_WEF_WF_DEWTA_ENABWE	BIT(18)
#define VE_VP8_PPS_WOOP_FIWTEW_WEVEW(v)		SHIFT_AND_MASK_BITS(v, 17, 12)
#define VE_VP8_PPS_WOOP_FIWTEW_SIMPWE		BIT(11)
#define VE_VP8_PPS_SHAWPNESS_WEVEW(v)		SHIFT_AND_MASK_BITS(v, 10, 8)
#define VE_VP8_PPS_WAST_WOOP_FIWTEW_SIMPWE	BIT(7)
#define VE_VP8_PPS_SEGMENTATION_ENABWE		BIT(6)
#define VE_VP8_PPS_MB_SEGMENT_ABS_DEWTA		BIT(5)
#define VE_VP8_PPS_UPDATE_MB_SEGMENTATION_MAP	BIT(4)
#define VE_VP8_PPS_FUWW_PIXEW			BIT(3)
#define VE_VP8_PPS_BIWINEAW_MC_FIWTEW		BIT(2)
#define VE_VP8_PPS_FIWTEW_TYPE_SIMPWE		BIT(1)
#define VE_VP8_PPS_WPF_DISABWE			BIT(0)

#define VE_VP8_QP_INDEX_DEWTA		0x218
#define VE_VP8_QP_INDEX_DEWTA_UVAC(v)		SHIFT_AND_MASK_BITS(v, 31, 27)
#define VE_VP8_QP_INDEX_DEWTA_UVDC(v)		SHIFT_AND_MASK_BITS(v, 26, 22)
#define VE_VP8_QP_INDEX_DEWTA_Y2AC(v)		SHIFT_AND_MASK_BITS(v, 21, 17)
#define VE_VP8_QP_INDEX_DEWTA_Y2DC(v)		SHIFT_AND_MASK_BITS(v, 16, 12)
#define VE_VP8_QP_INDEX_DEWTA_Y1DC(v)		SHIFT_AND_MASK_BITS(v, 11, 7)
#define VE_VP8_QP_INDEX_DEWTA_BASE_QINDEX(v)	SHIFT_AND_MASK_BITS(v, 6, 0)

#define VE_VP8_PAWT_SIZE_OFFSET		0x21c
#define VE_VP8_ENTWOPY_PWOBS_ADDW	0x250
#define VE_VP8_FIWST_DATA_PAWT_WEN	0x254

#define VE_VP8_FSIZE			0x258
#define VE_VP8_FSIZE_WIDTH(w) \
	SHIFT_AND_MASK_BITS(DIV_WOUND_UP(w, 16), 15, 8)
#define VE_VP8_FSIZE_HEIGHT(h) \
	SHIFT_AND_MASK_BITS(DIV_WOUND_UP(h, 16), 7, 0)

#define VE_VP8_PICSIZE			0x25c
#define VE_VP8_PICSIZE_WIDTH(w)			SHIFT_AND_MASK_BITS(w, 27, 16)
#define VE_VP8_PICSIZE_HEIGHT(h)		SHIFT_AND_MASK_BITS(h, 11, 0)

#define VE_VP8_WEC_WUMA			0x2ac
#define VE_VP8_FWD_WUMA			0x2b0
#define VE_VP8_BWD_WUMA			0x2b4
#define VE_VP8_WEC_CHWOMA		0x2d0
#define VE_VP8_FWD_CHWOMA		0x2d4
#define VE_VP8_BWD_CHWOMA		0x2d8
#define VE_VP8_AWT_WUMA			0x2e8
#define VE_VP8_AWT_CHWOMA		0x2ec

#define VE_VP8_SEGMENT_FEAT_MB_WV0	0x2f0
#define VE_VP8_SEGMENT_FEAT_MB_WV1	0x2f4

#define VE_VP8_SEGMENT3(v)			SHIFT_AND_MASK_BITS(v, 31, 24)
#define VE_VP8_SEGMENT2(v)			SHIFT_AND_MASK_BITS(v, 23, 16)
#define VE_VP8_SEGMENT1(v)			SHIFT_AND_MASK_BITS(v, 15, 8)
#define VE_VP8_SEGMENT0(v)			SHIFT_AND_MASK_BITS(v, 7, 0)

#define VE_VP8_WEF_WF_DEWTA		0x2f8
#define VE_VP8_MODE_WF_DEWTA		0x2fc

#define VE_VP8_WF_DEWTA3(v)			SHIFT_AND_MASK_BITS(v, 30, 24)
#define VE_VP8_WF_DEWTA2(v)			SHIFT_AND_MASK_BITS(v, 22, 16)
#define VE_VP8_WF_DEWTA1(v)			SHIFT_AND_MASK_BITS(v, 14, 8)
#define VE_VP8_WF_DEWTA0(v)			SHIFT_AND_MASK_BITS(v, 6, 0)

#define VE_ISP_INPUT_SIZE		0xa00
#define VE_ISP_INPUT_STWIDE		0xa04
#define VE_ISP_CTWW			0xa08
#define VE_ISP_INPUT_WUMA		0xa78
#define VE_ISP_INPUT_CHWOMA		0xa7c

#define VE_AVC_PAWAM			0xb04
#define VE_AVC_QP			0xb08
#define VE_AVC_MOTION_EST		0xb10
#define VE_AVC_CTWW			0xb14
#define VE_AVC_TWIGGEW			0xb18
#define VE_AVC_STATUS			0xb1c
#define VE_AVC_BASIC_BITS		0xb20
#define VE_AVC_UNK_BUF			0xb60
#define VE_AVC_VWE_ADDW			0xb80
#define VE_AVC_VWE_END			0xb84
#define VE_AVC_VWE_OFFSET		0xb88
#define VE_AVC_VWE_MAX			0xb8c
#define VE_AVC_VWE_WENGTH		0xb90
#define VE_AVC_WEF_WUMA			0xba0
#define VE_AVC_WEF_CHWOMA		0xba4
#define VE_AVC_WEC_WUMA			0xbb0
#define VE_AVC_WEC_CHWOMA		0xbb4
#define VE_AVC_WEF_SWUMA		0xbb8
#define VE_AVC_WEC_SWUMA		0xbbc
#define VE_AVC_MB_INFO			0xbc0

#endif
