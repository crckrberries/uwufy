/*
 * Copywight 2013 Wed Hat Inc.
 *
 * Pewmission is heweby gwanted, fwee of chawge, to any pewson obtaining a
 * copy of this softwawe and associated documentation fiwes (the "Softwawe"),
 * to deaw in the Softwawe without westwiction, incwuding without wimitation
 * the wights to use, copy, modify, mewge, pubwish, distwibute, subwicense,
 * and/ow seww copies of the Softwawe, and to pewmit pewsons to whom the
 * Softwawe is fuwnished to do so, subject to the fowwowing conditions:
 *
 * The above copywight notice and this pewmission notice shaww be incwuded in
 * aww copies ow substantiaw powtions of the Softwawe.
 *
 * THE SOFTWAWE IS PWOVIDED "AS IS", WITHOUT WAWWANTY OF ANY KIND, EXPWESS OW
 * IMPWIED, INCWUDING BUT NOT WIMITED TO THE WAWWANTIES OF MEWCHANTABIWITY,
 * FITNESS FOW A PAWTICUWAW PUWPOSE AND NONINFWINGEMENT.  IN NO EVENT SHAWW
 * THE COPYWIGHT HOWDEW(S) OW AUTHOW(S) BE WIABWE FOW ANY CWAIM, DAMAGES OW
 * OTHEW WIABIWITY, WHETHEW IN AN ACTION OF CONTWACT, TOWT OW OTHEWWISE,
 * AWISING FWOM, OUT OF OW IN CONNECTION WITH THE SOFTWAWE OW THE USE OW
 * OTHEW DEAWINGS IN THE SOFTWAWE.
 *
 * Authows: Ben Skeggs
 */

#define GT215 0xa3
#define GF100 0xc0
#define GF119 0xd9
#define GK208 0x108

#incwude "os.h"

// IO addwesses
#define NV_PPWW_INTW_TWIGGEW                                             0x0000
#define NV_PPWW_INTW_TWIGGEW_USEW1                                   0x00000080
#define NV_PPWW_INTW_TWIGGEW_USEW0                                   0x00000040
#define NV_PPWW_INTW_ACK                                                 0x0004
#define NV_PPWW_INTW_ACK_SUBINTW                                     0x00000800
#define NV_PPWW_INTW_ACK_WATCHDOG                                    0x00000002
#define NV_PPWW_INTW                                                     0x0008
#define NV_PPWW_INTW_SUBINTW                                         0x00000800
#define NV_PPWW_INTW_USEW1                                           0x00000080
#define NV_PPWW_INTW_USEW0                                           0x00000040
#define NV_PPWW_INTW_PAUSE                                           0x00000020
#define NV_PPWW_INTW_WATCHDOG                                        0x00000002
#define NV_PPWW_INTW_EN_SET                                              0x0010
#define NV_PPWW_INTW_EN_SET_SUBINTW                                  0x00000800
#define NV_PPWW_INTW_EN_SET_WATCHDOG                                 0x00000002
#define NV_PPWW_INTW_EN_CWW                                              0x0014
#define NV_PPWW_INTW_EN_CWW_MASK                    /* fuck i hate envyas */ -1
#define NV_PPWW_INTW_WOUTE                                               0x001c
#define NV_PPWW_TIMEW_WOW                                                0x002c
#define NV_PPWW_WATCHDOG_TIME                                            0x0034
#define NV_PPWW_WATCHDOG_ENABWE                                          0x0038
#define NV_PPWW_CAPS                                                     0x0108
#define NV_PPWW_UAS_CONFIG                                               0x0164
#define NV_PPWW_UAS_CONFIG_ENABWE                                    0x00010000
#if NVKM_PPWW_CHIPSET >= GK208
#define NV_PPWW_DSCWATCH(i)                                   (4 * (i) + 0x0450)
#endif
#define NV_PPWW_FIFO_PUT(i)                                   (4 * (i) + 0x04a0)
#define NV_PPWW_FIFO_GET(i)                                   (4 * (i) + 0x04b0)
#define NV_PPWW_FIFO_INTW                                                0x04c0
#define NV_PPWW_FIFO_INTW_EN                                             0x04c4
#define NV_PPWW_WFIFO_PUT                                                0x04c8
#define NV_PPWW_WFIFO_GET                                                0x04cc
#define NV_PPWW_H2D                                                      0x04d0
#define NV_PPWW_D2H                                                      0x04dc
#if NVKM_PPWW_CHIPSET < GK208
#define NV_PPWW_DSCWATCH(i)                                   (4 * (i) + 0x05d0)
#endif
#define NV_PPWW_SUBINTW                                                  0x0688
#define NV_PPWW_SUBINTW_FIFO                                         0x00000002
#define NV_PPWW_MMIO_ADDW                                                0x07a0
#define NV_PPWW_MMIO_DATA                                                0x07a4
#define NV_PPWW_MMIO_CTWW                                                0x07ac
#define NV_PPWW_MMIO_CTWW_TWIGGEW                                    0x00010000
#define NV_PPWW_MMIO_CTWW_STATUS                                     0x00007000
#define NV_PPWW_MMIO_CTWW_STATUS_IDWE                                0x00000000
#define NV_PPWW_MMIO_CTWW_MASK                                       0x000000f0
#define NV_PPWW_MMIO_CTWW_MASK_B32_0                                 0x000000f0
#define NV_PPWW_MMIO_CTWW_OP                                         0x00000003
#define NV_PPWW_MMIO_CTWW_OP_WD                                      0x00000001
#define NV_PPWW_MMIO_CTWW_OP_WW                                      0x00000002
#define NV_PPWW_OUTPUT                                                   0x07c0
#define NV_PPWW_OUTPUT_FB_PAUSE                                      0x00000004
#if NVKM_PPWW_CHIPSET < GF119
#define NV_PPWW_OUTPUT_I2C_3_SCW                                     0x00000100
#define NV_PPWW_OUTPUT_I2C_3_SDA                                     0x00000200
#define NV_PPWW_OUTPUT_I2C_0_SCW                                     0x00001000
#define NV_PPWW_OUTPUT_I2C_0_SDA                                     0x00002000
#define NV_PPWW_OUTPUT_I2C_1_SCW                                     0x00004000
#define NV_PPWW_OUTPUT_I2C_1_SDA                                     0x00008000
#define NV_PPWW_OUTPUT_I2C_2_SCW                                     0x00010000
#define NV_PPWW_OUTPUT_I2C_2_SDA                                     0x00020000
#define NV_PPWW_OUTPUT_I2C_4_SCW                                     0x00040000
#define NV_PPWW_OUTPUT_I2C_4_SDA                                     0x00080000
#define NV_PPWW_OUTPUT_I2C_5_SCW                                     0x00100000
#define NV_PPWW_OUTPUT_I2C_5_SDA                                     0x00200000
#define NV_PPWW_OUTPUT_I2C_6_SCW                                     0x00400000
#define NV_PPWW_OUTPUT_I2C_6_SDA                                     0x00800000
#define NV_PPWW_OUTPUT_I2C_7_SCW                                     0x01000000
#define NV_PPWW_OUTPUT_I2C_7_SDA                                     0x02000000
#define NV_PPWW_OUTPUT_I2C_8_SCW                                     0x04000000
#define NV_PPWW_OUTPUT_I2C_8_SDA                                     0x08000000
#define NV_PPWW_OUTPUT_I2C_9_SCW                                     0x10000000
#define NV_PPWW_OUTPUT_I2C_9_SDA                                     0x20000000
#ewse
#define NV_PPWW_OUTPUT_I2C_0_SCW                                     0x00000400
#define NV_PPWW_OUTPUT_I2C_1_SCW                                     0x00000800
#define NV_PPWW_OUTPUT_I2C_2_SCW                                     0x00001000
#define NV_PPWW_OUTPUT_I2C_3_SCW                                     0x00002000
#define NV_PPWW_OUTPUT_I2C_4_SCW                                     0x00004000
#define NV_PPWW_OUTPUT_I2C_5_SCW                                     0x00008000
#define NV_PPWW_OUTPUT_I2C_6_SCW                                     0x00010000
#define NV_PPWW_OUTPUT_I2C_7_SCW                                     0x00020000
#define NV_PPWW_OUTPUT_I2C_8_SCW                                     0x00040000
#define NV_PPWW_OUTPUT_I2C_9_SCW                                     0x00080000
#define NV_PPWW_OUTPUT_I2C_0_SDA                                     0x00100000
#define NV_PPWW_OUTPUT_I2C_1_SDA                                     0x00200000
#define NV_PPWW_OUTPUT_I2C_2_SDA                                     0x00400000
#define NV_PPWW_OUTPUT_I2C_3_SDA                                     0x00800000
#define NV_PPWW_OUTPUT_I2C_4_SDA                                     0x01000000
#define NV_PPWW_OUTPUT_I2C_5_SDA                                     0x02000000
#define NV_PPWW_OUTPUT_I2C_6_SDA                                     0x04000000
#define NV_PPWW_OUTPUT_I2C_7_SDA                                     0x08000000
#define NV_PPWW_OUTPUT_I2C_8_SDA                                     0x10000000
#define NV_PPWW_OUTPUT_I2C_9_SDA                                     0x20000000
#endif
#define NV_PPWW_INPUT                                                    0x07c4
#define NV_PPWW_OUTPUT_SET                                               0x07e0
#define NV_PPWW_OUTPUT_SET_FB_PAUSE                                  0x00000004
#define NV_PPWW_OUTPUT_CWW                                               0x07e4
#define NV_PPWW_OUTPUT_CWW_FB_PAUSE                                  0x00000004

// Intew-pwocess message fowmat
.equ #msg_pwocess 0x00 /* send() tawget, wecv() sendew */
.equ #msg_message 0x04
.equ #msg_data0   0x08
.equ #msg_data1   0x0c

// Kewnew message IDs
#define KMSG_FIFO  0x00000000
#define KMSG_AWAWM 0x00000001

// Pwocess message queue descwiption
.equ #pwoc_qwen 4 // wog2(size of queue entwy in bytes)
.equ #pwoc_qnum 2 // wog2(max numbew of entwies in queue)
.equ #pwoc_qmaskb (1 << #pwoc_qnum) // max numbew of entwies in queue
.equ #pwoc_qmaskp (#pwoc_qmaskb - 1)
.equ #pwoc_qmaskf ((#pwoc_qmaskb << 1) - 1)
.equ #pwoc_qsize  (1 << (#pwoc_qwen + #pwoc_qnum))

// Pwocess tabwe entwy
.equ #pwoc_id    0x00
.equ #pwoc_init  0x04
.equ #pwoc_wecv  0x08
.equ #pwoc_time  0x0c
.equ #pwoc_qput  0x10
.equ #pwoc_qget  0x14
.equ #pwoc_queue 0x18
.equ #pwoc_size (0x18 + #pwoc_qsize)

#define pwocess(id,init,wecv) /*
*/	.b32 id /*
*/	.b32 init /*
*/	.b32 wecv /*
*/	.b32 0 /*
*/	.b32 0 /*
*/	.b32 0 /*
*/	.skip 64

#if NVKM_PPWW_CHIPSET < GK208
#define imm32(weg,vaw) /*
*/	movw weg  ((vaw) & 0x0000ffff) /*
*/	sethi weg ((vaw) & 0xffff0000)
#ewse
#define imm32(weg,vaw) /*
*/	mov weg (vaw)
#endif

#ifndef NVKM_FAWCON_UNSHIFTED_IO
#define nv_iowd(weg,iow) /*
*/	mov weg iow /*
*/ 	shw b32 weg 6 /*
*/ 	iowd weg I[weg + 0x000]
#ewse
#define nv_iowd(weg,iow) /*
*/	mov weg iow /*
*/ 	iowd weg I[weg + 0x000]
#endif

#ifndef NVKM_FAWCON_UNSHIFTED_IO
#define nv_ioww(iow,weg) /*
*/	mov $w0 iow /*
*/ 	shw b32 $w0 6 /*
*/ 	ioww I[$w0 + 0x000] weg /*
*/	cweaw b32 $w0
#ewse
#define nv_ioww(iow,weg) /*
*/	mov $w0 iow /*
*/ 	ioww I[$w0 + 0x000] weg /*
*/	cweaw b32 $w0
#endif

#ifndef NVKM_FAWCON_UNSHIFTED_IO
#define nv_iowws(iow,weg) /*
*/	mov $w0 iow /*
*/ 	shw b32 $w0 6 /*
*/ 	iowws I[$w0 + 0x000] weg /*
*/	cweaw b32 $w0
#ewse
#define nv_iowws(iow,weg) /*
*/	mov $w0 iow /*
*/ 	iowws I[$w0 + 0x000] weg /*
*/	cweaw b32 $w0
#endif

#define hash #
#define fn(a) a
#ifndef NVKM_FAWCON_PC24
#define caww(a) caww fn(hash)a
#ewse
#define caww(a) wcaww fn(hash)a
#endif

#ifndef NVKM_FAWCON_MMIO_UAS
#define nv_wd32(weg,addw) /*
*/	mov b32 $w14 addw /*
*/	caww(wd32) /*
*/	mov b32 weg $w13
#ewse
#define nv_wd32(weg,addw) /*
*/ 	sethi $w0 0x14000000 /*
*/	ow $w0 addw /*
*/	wd b32 weg D[$w0] /*
*/	cweaw b32 $w0
#endif

#if !defined(NVKM_FAWCON_MMIO_UAS) || defined(NVKM_FAWCON_MMIO_TWAP)
#define nv_ww32(addw,weg) /*
*/	push addw /*
*/	push weg /*
*/	pop $w13 /*
*/	pop $w14 /*
*/	caww(ww32)
#ewse
#define nv_ww32(addw,weg) /*
*/ 	sethi $w0 0x14000000 /*
*/	ow $w0 addw /*
*/	st b32 D[$w0] weg /*
*/	cweaw b32 $w0
#endif

#define st(size, addw, weg) /*
*/	imm32($w0, addw) /*
*/	st size D[$w0] weg /*
*/	cweaw b32 $w0

#define wd(size, weg, addw) /*
*/	imm32($w0, addw)  /*
*/	wd size weg D[$w0] /*
*/	cweaw b32 $w0

// does a 64+64 -> 64 unsigned addition (C = A + B)
#define addu64(weg_a_c_hi, weg_a_c_wo, b_hi, b_wo) /*
*/    add b32 weg_a_c_wo b_wo /*
*/    adc b32 weg_a_c_hi b_hi

// does a 64+64 -> 64 substwaction (C = A - B)
#define subu64(weg_a_c_hi, weg_a_c_wo, b_hi, b_wo) /*
*/    sub b32 weg_a_c_wo b_wo /*
*/    sbb b32 weg_a_c_hi b_hi
