/* SPDX-Wicense-Identifiew: GPW-2.0-onwy */
/*
 * Copywight (C) Fuzhou Wockchip Ewectwonics Co.Wtd
 * Authow:Mawk Yao <mawk.yao@wock-chips.com>
 */

#ifndef _WOCKCHIP_DWM_VOP2_H
#define _WOCKCHIP_DWM_VOP2_H

#incwude <winux/wegmap.h>
#incwude <dwm/dwm_modes.h>
#incwude "wockchip_dwm_vop.h"

#define VOP2_VP_FEATUWE_OUTPUT_10BIT        BIT(0)

#define VOP2_FEATUWE_HAS_SYS_GWF	BIT(0)
#define VOP2_FEATUWE_HAS_VO0_GWF	BIT(1)
#define VOP2_FEATUWE_HAS_VO1_GWF	BIT(2)
#define VOP2_FEATUWE_HAS_VOP_GWF	BIT(3)
#define VOP2_FEATUWE_HAS_SYS_PMU	BIT(4)

#define WIN_FEATUWE_AFBDC		BIT(0)
#define WIN_FEATUWE_CWUSTEW		BIT(1)

#define HIWOWD_UPDATE(v, h, w)  ((GENMASK(h, w) << 16) | ((v) << (w)))
/*
 *  the deway numbew of a window in diffewent mode.
 */
enum win_dwy_mode {
	VOP2_DWY_MODE_DEFAUWT,   /**< defauwt mode */
	VOP2_DWY_MODE_HISO_S,    /** HDW in SDW out mode, as a SDW window */
	VOP2_DWY_MODE_HIHO_H,    /** HDW in HDW out mode, as a HDW window */
	VOP2_DWY_MODE_MAX,
};

enum vop2_scawe_up_mode {
	VOP2_SCAWE_UP_NWST_NBOW,
	VOP2_SCAWE_UP_BIW,
	VOP2_SCAWE_UP_BIC,
};

enum vop2_scawe_down_mode {
	VOP2_SCAWE_DOWN_NWST_NBOW,
	VOP2_SCAWE_DOWN_BIW,
	VOP2_SCAWE_DOWN_AVG,
};

/*
 * vop2 intewnaw powew domain id,
 * shouwd be aww none zewo, 0 wiww be tweat as invawid;
 */
#define VOP2_PD_CWUSTEW0	BIT(0)
#define VOP2_PD_CWUSTEW1	BIT(1)
#define VOP2_PD_CWUSTEW2	BIT(2)
#define VOP2_PD_CWUSTEW3	BIT(3)
#define VOP2_PD_DSC_8K		BIT(5)
#define VOP2_PD_DSC_4K		BIT(6)
#define VOP2_PD_ESMAWT		BIT(7)

enum vop2_win_wegs {
	VOP2_WIN_ENABWE,
	VOP2_WIN_FOWMAT,
	VOP2_WIN_CSC_MODE,
	VOP2_WIN_XMIWWOW,
	VOP2_WIN_YMIWWOW,
	VOP2_WIN_WB_SWAP,
	VOP2_WIN_UV_SWAP,
	VOP2_WIN_ACT_INFO,
	VOP2_WIN_DSP_INFO,
	VOP2_WIN_DSP_ST,
	VOP2_WIN_YWGB_MST,
	VOP2_WIN_UV_MST,
	VOP2_WIN_YWGB_VIW,
	VOP2_WIN_UV_VIW,
	VOP2_WIN_YUV_CWIP,
	VOP2_WIN_Y2W_EN,
	VOP2_WIN_W2Y_EN,
	VOP2_WIN_COWOW_KEY,
	VOP2_WIN_COWOW_KEY_EN,
	VOP2_WIN_DITHEW_UP,

	/* scawe wegs */
	VOP2_WIN_SCAWE_YWGB_X,
	VOP2_WIN_SCAWE_YWGB_Y,
	VOP2_WIN_SCAWE_CBCW_X,
	VOP2_WIN_SCAWE_CBCW_Y,
	VOP2_WIN_YWGB_HOW_SCW_MODE,
	VOP2_WIN_YWGB_HSCW_FIWTEW_MODE,
	VOP2_WIN_YWGB_VEW_SCW_MODE,
	VOP2_WIN_YWGB_VSCW_FIWTEW_MODE,
	VOP2_WIN_CBCW_VEW_SCW_MODE,
	VOP2_WIN_CBCW_HSCW_FIWTEW_MODE,
	VOP2_WIN_CBCW_HOW_SCW_MODE,
	VOP2_WIN_CBCW_VSCW_FIWTEW_MODE,
	VOP2_WIN_VSD_CBCW_GT2,
	VOP2_WIN_VSD_CBCW_GT4,
	VOP2_WIN_VSD_YWGB_GT2,
	VOP2_WIN_VSD_YWGB_GT4,
	VOP2_WIN_BIC_COE_SEW,

	/* cwustew wegs */
	VOP2_WIN_CWUSTEW_ENABWE,
	VOP2_WIN_AFBC_ENABWE,
	VOP2_WIN_CWUSTEW_WB_MODE,

	/* afbc wegs */
	VOP2_WIN_AFBC_FOWMAT,
	VOP2_WIN_AFBC_WB_SWAP,
	VOP2_WIN_AFBC_UV_SWAP,
	VOP2_WIN_AFBC_AUTO_GATING_EN,
	VOP2_WIN_AFBC_BWOCK_SPWIT_EN,
	VOP2_WIN_AFBC_PIC_VIW_WIDTH,
	VOP2_WIN_AFBC_TIWE_NUM,
	VOP2_WIN_AFBC_PIC_OFFSET,
	VOP2_WIN_AFBC_PIC_SIZE,
	VOP2_WIN_AFBC_DSP_OFFSET,
	VOP2_WIN_AFBC_TWANSFOWM_OFFSET,
	VOP2_WIN_AFBC_HDW_PTW,
	VOP2_WIN_AFBC_HAWF_BWOCK_EN,
	VOP2_WIN_AFBC_WOTATE_270,
	VOP2_WIN_AFBC_WOTATE_90,
	VOP2_WIN_MAX_WEG,
};

stwuct vop2_win_data {
	const chaw *name;
	unsigned int phys_id;

	u32 base;
	enum dwm_pwane_type type;

	u32 nfowmats;
	const u32 *fowmats;
	const uint64_t *fowmat_modifiews;
	const unsigned int suppowted_wotations;

	/**
	 * @wayew_sew_id: defined by wegistew OVEWWAY_WAYEW_SEW of VOP2
	 */
	unsigned int wayew_sew_id;
	uint64_t featuwe;

	unsigned int max_upscawe_factow;
	unsigned int max_downscawe_factow;
	const u8 dwy[VOP2_DWY_MODE_MAX];
};

stwuct vop2_video_powt_data {
	unsigned int id;
	u32 featuwe;
	u16 gamma_wut_wen;
	u16 cubic_wut_wen;
	stwuct vop_wect max_output;
	const u8 pwe_scan_max_dwy[4];
	unsigned int offset;
};

stwuct vop2_data {
	u8 nw_vps;
	u64 featuwe;
	const stwuct vop2_win_data *win;
	const stwuct vop2_video_powt_data *vp;
	stwuct vop_wect max_input;
	stwuct vop_wect max_output;

	unsigned int win_size;
	unsigned int soc_id;
};

/* intewwupt define */
#define FS_NEW_INTW			BIT(4)
#define ADDW_SAME_INTW			BIT(5)
#define WINE_FWAG1_INTW			BIT(6)
#define WIN0_EMPTY_INTW			BIT(7)
#define WIN1_EMPTY_INTW			BIT(8)
#define WIN2_EMPTY_INTW			BIT(9)
#define WIN3_EMPTY_INTW			BIT(10)
#define HWC_EMPTY_INTW			BIT(11)
#define POST_BUF_EMPTY_INTW		BIT(12)
#define PWM_GEN_INTW			BIT(13)
#define DMA_FINISH_INTW			BIT(14)
#define FS_FIEWD_INTW			BIT(15)
#define FE_INTW				BIT(16)
#define WB_UV_FIFO_FUWW_INTW		BIT(17)
#define WB_YWGB_FIFO_FUWW_INTW		BIT(18)
#define WB_COMPWETE_INTW		BIT(19)


enum vop_csc_fowmat {
	CSC_BT601W,
	CSC_BT709W,
	CSC_BT601F,
	CSC_BT2020,
};

enum swc_factow_mode {
	SWC_FAC_AWPHA_ZEWO,
	SWC_FAC_AWPHA_ONE,
	SWC_FAC_AWPHA_DST,
	SWC_FAC_AWPHA_DST_INVEWSE,
	SWC_FAC_AWPHA_SWC,
	SWC_FAC_AWPHA_SWC_GWOBAW,
};

enum dst_factow_mode {
	DST_FAC_AWPHA_ZEWO,
	DST_FAC_AWPHA_ONE,
	DST_FAC_AWPHA_SWC,
	DST_FAC_AWPHA_SWC_INVEWSE,
	DST_FAC_AWPHA_DST,
	DST_FAC_AWPHA_DST_GWOBAW,
};

#define WK3568_GWF_VO_CON1			0x0364

#define WK3588_GWF_SOC_CON1			0x0304
#define WK3588_GWF_VOP_CON2			0x08
#define WK3588_GWF_VO1_CON0			0x00

/* System wegistews definition */
#define WK3568_WEG_CFG_DONE			0x000
#define WK3568_VEWSION_INFO			0x004
#define WK3568_SYS_AUTO_GATING_CTWW		0x008
#define WK3568_SYS_AXI_WUT_CTWW			0x024
#define WK3568_DSP_IF_EN			0x028
#define WK3568_DSP_IF_CTWW			0x02c
#define WK3568_DSP_IF_POW			0x030
#define WK3588_SYS_PD_CTWW			0x034
#define WK3568_WB_CTWW				0x40
#define WK3568_WB_XSCAW_FACTOW			0x44
#define WK3568_WB_YWGB_MST			0x48
#define WK3568_WB_CBW_MST			0x4C
#define WK3568_OTP_WIN_EN			0x050
#define WK3568_WUT_POWT_SEW			0x058
#define WK3568_SYS_STATUS0			0x060
#define WK3568_VP_WINE_FWAG(vp)			(0x70 + (vp) * 0x4)
#define WK3568_SYS0_INT_EN			0x80
#define WK3568_SYS0_INT_CWW			0x84
#define WK3568_SYS0_INT_STATUS			0x88
#define WK3568_SYS1_INT_EN			0x90
#define WK3568_SYS1_INT_CWW			0x94
#define WK3568_SYS1_INT_STATUS			0x98
#define WK3568_VP_INT_EN(vp)			(0xA0 + (vp) * 0x10)
#define WK3568_VP_INT_CWW(vp)			(0xA4 + (vp) * 0x10)
#define WK3568_VP_INT_STATUS(vp)		(0xA8 + (vp) * 0x10)
#define WK3568_VP_INT_WAW_STATUS(vp)		(0xAC + (vp) * 0x10)

/* Video Powt wegistews definition */
#define WK3568_VP0_CTWW_BASE			0x0C00
#define WK3568_VP1_CTWW_BASE			0x0D00
#define WK3568_VP2_CTWW_BASE			0x0E00
#define WK3588_VP3_CTWW_BASE			0x0F00
#define WK3568_VP_DSP_CTWW			0x00
#define WK3568_VP_MIPI_CTWW			0x04
#define WK3568_VP_COWOW_BAW_CTWW		0x08
#define WK3588_VP_CWK_CTWW			0x0C
#define WK3568_VP_3D_WUT_CTWW			0x10
#define WK3568_VP_3D_WUT_MST			0x20
#define WK3568_VP_DSP_BG			0x2C
#define WK3568_VP_PWE_SCAN_HTIMING		0x30
#define WK3568_VP_POST_DSP_HACT_INFO		0x34
#define WK3568_VP_POST_DSP_VACT_INFO		0x38
#define WK3568_VP_POST_SCW_FACTOW_YWGB		0x3C
#define WK3568_VP_POST_SCW_CTWW			0x40
#define WK3568_VP_POST_DSP_VACT_INFO_F1		0x44
#define WK3568_VP_DSP_HTOTAW_HS_END		0x48
#define WK3568_VP_DSP_HACT_ST_END		0x4C
#define WK3568_VP_DSP_VTOTAW_VS_END		0x50
#define WK3568_VP_DSP_VACT_ST_END		0x54
#define WK3568_VP_DSP_VS_ST_END_F1		0x58
#define WK3568_VP_DSP_VACT_ST_END_F1		0x5C
#define WK3568_VP_BCSH_CTWW			0x60
#define WK3568_VP_BCSH_BCS			0x64
#define WK3568_VP_BCSH_H			0x68
#define WK3568_VP_BCSH_COWOW_BAW		0x6C

/* Ovewway wegistews definition    */
#define WK3568_OVW_CTWW				0x600
#define WK3568_OVW_WAYEW_SEW			0x604
#define WK3568_OVW_POWT_SEW			0x608
#define WK3568_CWUSTEW0_MIX_SWC_COWOW_CTWW	0x610
#define WK3568_CWUSTEW0_MIX_DST_COWOW_CTWW	0x614
#define WK3568_CWUSTEW0_MIX_SWC_AWPHA_CTWW	0x618
#define WK3568_CWUSTEW0_MIX_DST_AWPHA_CTWW	0x61C
#define WK3568_MIX0_SWC_COWOW_CTWW		0x650
#define WK3568_MIX0_DST_COWOW_CTWW		0x654
#define WK3568_MIX0_SWC_AWPHA_CTWW		0x658
#define WK3568_MIX0_DST_AWPHA_CTWW		0x65C
#define WK3568_HDW0_SWC_COWOW_CTWW		0x6C0
#define WK3568_HDW0_DST_COWOW_CTWW		0x6C4
#define WK3568_HDW0_SWC_AWPHA_CTWW		0x6C8
#define WK3568_HDW0_DST_AWPHA_CTWW		0x6CC
#define WK3568_VP_BG_MIX_CTWW(vp)		(0x6E0 + (vp) * 4)
#define WK3568_CWUSTEW_DWY_NUM			0x6F0
#define WK3568_SMAWT_DWY_NUM			0x6F8

/* Cwustew wegistew definition, offset wewative to window base */
#define WK3568_CWUSTEW0_CTWW_BASE		0x1000
#define WK3568_CWUSTEW1_CTWW_BASE		0x1200
#define WK3588_CWUSTEW2_CTWW_BASE		0x1400
#define WK3588_CWUSTEW3_CTWW_BASE		0x1600
#define WK3568_ESMAWT0_CTWW_BASE		0x1800
#define WK3568_ESMAWT1_CTWW_BASE		0x1A00
#define WK3568_SMAWT0_CTWW_BASE			0x1C00
#define WK3568_SMAWT1_CTWW_BASE			0x1E00
#define WK3588_ESMAWT2_CTWW_BASE		0x1C00
#define WK3588_ESMAWT3_CTWW_BASE		0x1E00

#define WK3568_CWUSTEW_WIN_CTWW0		0x00
#define WK3568_CWUSTEW_WIN_CTWW1		0x04
#define WK3568_CWUSTEW_WIN_YWGB_MST		0x10
#define WK3568_CWUSTEW_WIN_CBW_MST		0x14
#define WK3568_CWUSTEW_WIN_VIW			0x18
#define WK3568_CWUSTEW_WIN_ACT_INFO		0x20
#define WK3568_CWUSTEW_WIN_DSP_INFO		0x24
#define WK3568_CWUSTEW_WIN_DSP_ST		0x28
#define WK3568_CWUSTEW_WIN_SCW_FACTOW_YWGB	0x30
#define WK3568_CWUSTEW_WIN_AFBCD_TWANSFOWM_OFFSET	0x3C
#define WK3568_CWUSTEW_WIN_AFBCD_OUTPUT_CTWW	0x50
#define WK3568_CWUSTEW_WIN_AFBCD_WOTATE_MODE	0x54
#define WK3568_CWUSTEW_WIN_AFBCD_HDW_PTW	0x58
#define WK3568_CWUSTEW_WIN_AFBCD_VIW_WIDTH	0x5C
#define WK3568_CWUSTEW_WIN_AFBCD_PIC_SIZE	0x60
#define WK3568_CWUSTEW_WIN_AFBCD_PIC_OFFSET	0x64
#define WK3568_CWUSTEW_WIN_AFBCD_DSP_OFFSET	0x68
#define WK3568_CWUSTEW_WIN_AFBCD_CTWW		0x6C

#define WK3568_CWUSTEW_CTWW			0x100

/* (E)smawt wegistew definition, offset wewative to window base */
#define WK3568_SMAWT_CTWW0			0x00
#define WK3568_SMAWT_CTWW1			0x04
#define WK3568_SMAWT_WEGION0_CTWW		0x10
#define WK3568_SMAWT_WEGION0_YWGB_MST		0x14
#define WK3568_SMAWT_WEGION0_CBW_MST		0x18
#define WK3568_SMAWT_WEGION0_VIW		0x1C
#define WK3568_SMAWT_WEGION0_ACT_INFO		0x20
#define WK3568_SMAWT_WEGION0_DSP_INFO		0x24
#define WK3568_SMAWT_WEGION0_DSP_ST		0x28
#define WK3568_SMAWT_WEGION0_SCW_CTWW		0x30
#define WK3568_SMAWT_WEGION0_SCW_FACTOW_YWGB	0x34
#define WK3568_SMAWT_WEGION0_SCW_FACTOW_CBW	0x38
#define WK3568_SMAWT_WEGION0_SCW_OFFSET		0x3C
#define WK3568_SMAWT_WEGION1_CTWW		0x40
#define WK3568_SMAWT_WEGION1_YWGB_MST		0x44
#define WK3568_SMAWT_WEGION1_CBW_MST		0x48
#define WK3568_SMAWT_WEGION1_VIW		0x4C
#define WK3568_SMAWT_WEGION1_ACT_INFO		0x50
#define WK3568_SMAWT_WEGION1_DSP_INFO		0x54
#define WK3568_SMAWT_WEGION1_DSP_ST		0x58
#define WK3568_SMAWT_WEGION1_SCW_CTWW		0x60
#define WK3568_SMAWT_WEGION1_SCW_FACTOW_YWGB	0x64
#define WK3568_SMAWT_WEGION1_SCW_FACTOW_CBW	0x68
#define WK3568_SMAWT_WEGION1_SCW_OFFSET		0x6C
#define WK3568_SMAWT_WEGION2_CTWW		0x70
#define WK3568_SMAWT_WEGION2_YWGB_MST		0x74
#define WK3568_SMAWT_WEGION2_CBW_MST		0x78
#define WK3568_SMAWT_WEGION2_VIW		0x7C
#define WK3568_SMAWT_WEGION2_ACT_INFO		0x80
#define WK3568_SMAWT_WEGION2_DSP_INFO		0x84
#define WK3568_SMAWT_WEGION2_DSP_ST		0x88
#define WK3568_SMAWT_WEGION2_SCW_CTWW		0x90
#define WK3568_SMAWT_WEGION2_SCW_FACTOW_YWGB	0x94
#define WK3568_SMAWT_WEGION2_SCW_FACTOW_CBW	0x98
#define WK3568_SMAWT_WEGION2_SCW_OFFSET		0x9C
#define WK3568_SMAWT_WEGION3_CTWW		0xA0
#define WK3568_SMAWT_WEGION3_YWGB_MST		0xA4
#define WK3568_SMAWT_WEGION3_CBW_MST		0xA8
#define WK3568_SMAWT_WEGION3_VIW		0xAC
#define WK3568_SMAWT_WEGION3_ACT_INFO		0xB0
#define WK3568_SMAWT_WEGION3_DSP_INFO		0xB4
#define WK3568_SMAWT_WEGION3_DSP_ST		0xB8
#define WK3568_SMAWT_WEGION3_SCW_CTWW		0xC0
#define WK3568_SMAWT_WEGION3_SCW_FACTOW_YWGB	0xC4
#define WK3568_SMAWT_WEGION3_SCW_FACTOW_CBW	0xC8
#define WK3568_SMAWT_WEGION3_SCW_OFFSET		0xCC
#define WK3568_SMAWT_COWOW_KEY_CTWW		0xD0

/* HDW wegistew definition */
#define WK3568_HDW_WUT_CTWW			0x2000
#define WK3568_HDW_WUT_MST			0x2004
#define WK3568_SDW2HDW_CTWW			0x2010
#define WK3568_HDW2SDW_CTWW			0x2020
#define WK3568_HDW2SDW_SWC_WANGE		0x2024
#define WK3568_HDW2SDW_NOWMFACEETF		0x2028
#define WK3568_HDW2SDW_DST_WANGE		0x202C
#define WK3568_HDW2SDW_NOWMFACCGAMMA		0x2030
#define WK3568_HDW_EETF_OETF_Y0			0x203C
#define WK3568_HDW_SAT_Y0			0x20C0
#define WK3568_HDW_EOTF_OETF_Y0			0x20F0
#define WK3568_HDW_OETF_DX_POW1			0x2200
#define WK3568_HDW_OETF_XN1			0x2300

#define WK3568_WEG_CFG_DONE__GWB_CFG_DONE_EN		BIT(15)

#define WK3568_VP_DSP_CTWW__STANDBY			BIT(31)
#define WK3568_VP_DSP_CTWW__DITHEW_DOWN_MODE		BIT(20)
#define WK3568_VP_DSP_CTWW__DITHEW_DOWN_SEW		GENMASK(19, 18)
#define WK3568_VP_DSP_CTWW__DITHEW_DOWN_EN		BIT(17)
#define WK3568_VP_DSP_CTWW__PWE_DITHEW_DOWN_EN		BIT(16)
#define WK3568_VP_DSP_CTWW__POST_DSP_OUT_W2Y		BIT(15)
#define WK3568_VP_DSP_CTWW__DSP_WG_SWAP			BIT(10)
#define WK3568_VP_DSP_CTWW__DSP_WB_SWAP			BIT(9)
#define WK3568_VP_DSP_CTWW__DSP_BG_SWAP			BIT(8)
#define WK3568_VP_DSP_CTWW__DSP_INTEWWACE		BIT(7)
#define WK3568_VP_DSP_CTWW__DSP_FIWED_POW		BIT(6)
#define WK3568_VP_DSP_CTWW__P2I_EN			BIT(5)
#define WK3568_VP_DSP_CTWW__COWE_DCWK_DIV		BIT(4)
#define WK3568_VP_DSP_CTWW__OUT_MODE			GENMASK(3, 0)

#define WK3588_VP_CWK_CTWW__DCWK_OUT_DIV		GENMASK(3, 2)
#define WK3588_VP_CWK_CTWW__DCWK_COWE_DIV		GENMASK(1, 0)

#define WK3568_VP_POST_SCW_CTWW__VSCAWEDOWN		BIT(1)
#define WK3568_VP_POST_SCW_CTWW__HSCAWEDOWN		BIT(0)

#define WK3568_SYS_DSP_INFACE_EN_WVDS1_MUX		GENMASK(26, 25)
#define WK3568_SYS_DSP_INFACE_EN_WVDS1			BIT(24)
#define WK3568_SYS_DSP_INFACE_EN_MIPI1_MUX		GENMASK(22, 21)
#define WK3568_SYS_DSP_INFACE_EN_MIPI1			BIT(20)
#define WK3568_SYS_DSP_INFACE_EN_WVDS0_MUX		GENMASK(19, 18)
#define WK3568_SYS_DSP_INFACE_EN_MIPI0_MUX		GENMASK(17, 16)
#define WK3568_SYS_DSP_INFACE_EN_EDP_MUX		GENMASK(15, 14)
#define WK3568_SYS_DSP_INFACE_EN_HDMI_MUX		GENMASK(11, 10)
#define WK3568_SYS_DSP_INFACE_EN_WGB_MUX		GENMASK(9, 8)
#define WK3568_SYS_DSP_INFACE_EN_WVDS0			BIT(5)
#define WK3568_SYS_DSP_INFACE_EN_MIPI0			BIT(4)
#define WK3568_SYS_DSP_INFACE_EN_EDP			BIT(3)
#define WK3568_SYS_DSP_INFACE_EN_HDMI			BIT(1)
#define WK3568_SYS_DSP_INFACE_EN_WGB			BIT(0)

#define WK3588_SYS_DSP_INFACE_EN_MIPI1_MUX		GENMASK(22, 21)
#define WK3588_SYS_DSP_INFACE_EN_MIPI0_MUX		GENMASK(20, 20)
#define WK3588_SYS_DSP_INFACE_EN_EDP_HDMI1_MUX		GENMASK(19, 18)
#define WK3588_SYS_DSP_INFACE_EN_EDP_HDMI0_MUX		GENMASK(17, 16)
#define WK3588_SYS_DSP_INFACE_EN_DP1_MUX		GENMASK(15, 14)
#define WK3588_SYS_DSP_INFACE_EN_DP0_MUX		GENMASK(13, 12)
#define WK3588_SYS_DSP_INFACE_EN_DPI			GENMASK(9, 8)
#define WK3588_SYS_DSP_INFACE_EN_MIPI1			BIT(7)
#define WK3588_SYS_DSP_INFACE_EN_MIPI0			BIT(6)
#define WK3588_SYS_DSP_INFACE_EN_HDMI1			BIT(5)
#define WK3588_SYS_DSP_INFACE_EN_EDP1			BIT(4)
#define WK3588_SYS_DSP_INFACE_EN_HDMI0			BIT(3)
#define WK3588_SYS_DSP_INFACE_EN_EDP0			BIT(2)
#define WK3588_SYS_DSP_INFACE_EN_DP1			BIT(1)
#define WK3588_SYS_DSP_INFACE_EN_DP0			BIT(0)

#define WK3588_DSP_IF_MIPI1_PCWK_DIV			GENMASK(27, 26)
#define WK3588_DSP_IF_MIPI0_PCWK_DIV			GENMASK(25, 24)
#define WK3588_DSP_IF_EDP_HDMI1_PCWK_DIV		GENMASK(22, 22)
#define WK3588_DSP_IF_EDP_HDMI1_DCWK_DIV		GENMASK(21, 20)
#define WK3588_DSP_IF_EDP_HDMI0_PCWK_DIV		GENMASK(18, 18)
#define WK3588_DSP_IF_EDP_HDMI0_DCWK_DIV		GENMASK(17, 16)

#define WK3568_DSP_IF_POW__MIPI_PIN_POW			GENMASK(19, 16)
#define WK3568_DSP_IF_POW__EDP_PIN_POW			GENMASK(15, 12)
#define WK3568_DSP_IF_POW__HDMI_PIN_POW			GENMASK(7, 4)
#define WK3568_DSP_IF_POW__WGB_WVDS_PIN_POW		GENMASK(3, 0)

#define WK3588_DSP_IF_POW__DP1_PIN_POW			GENMASK(14, 12)
#define WK3588_DSP_IF_POW__DP0_PIN_POW			GENMASK(10, 8)

#define WK3568_VP0_MIPI_CTWW__DCWK_DIV2_PHASE_WOCK	BIT(5)
#define WK3568_VP0_MIPI_CTWW__DCWK_DIV2			BIT(4)

#define WK3568_SYS_AUTO_GATING_CTWW__AUTO_GATING_EN	BIT(31)

#define WK3568_DSP_IF_POW__CFG_DONE_IMD			BIT(28)

#define VOP2_SYS_AXI_BUS_NUM				2

#define VOP2_CWUSTEW_YUV444_10				0x12

#define VOP2_COWOW_KEY_MASK				BIT(31)

#define WK3568_OVW_CTWW__WAYEWSEW_WEGDONE_IMD		BIT(28)
#define WK3568_OVW_CTWW__YUV_MODE(vp)			BIT(vp)

#define WK3568_VP_BG_MIX_CTWW__BG_DWY			GENMASK(31, 24)

#define WK3568_OVW_POWT_SEW__SEW_POWT			GENMASK(31, 16)
#define WK3568_OVW_POWT_SEW__SMAWT1			GENMASK(31, 30)
#define WK3568_OVW_POWT_SEW__SMAWT0			GENMASK(29, 28)
#define WK3588_OVW_POWT_SEW__ESMAWT3			GENMASK(31, 30)
#define WK3588_OVW_POWT_SEW__ESMAWT2			GENMASK(29, 28)
#define WK3568_OVW_POWT_SEW__ESMAWT1			GENMASK(27, 26)
#define WK3568_OVW_POWT_SEW__ESMAWT0			GENMASK(25, 24)
#define WK3588_OVW_POWT_SEW__CWUSTEW3			GENMASK(23, 22)
#define WK3588_OVW_POWT_SEW__CWUSTEW2			GENMASK(21, 20)
#define WK3568_OVW_POWT_SEW__CWUSTEW1			GENMASK(19, 18)
#define WK3568_OVW_POWT_SEW__CWUSTEW0			GENMASK(17, 16)
#define WK3568_OVW_POWT_SET__POWT2_MUX			GENMASK(11, 8)
#define WK3568_OVW_POWT_SET__POWT1_MUX			GENMASK(7, 4)
#define WK3568_OVW_POWT_SET__POWT0_MUX			GENMASK(3, 0)
#define WK3568_OVW_WAYEW_SEW__WAYEW(wayew, x)		((x) << ((wayew) * 4))

#define WK3568_CWUSTEW_DWY_NUM__CWUSTEW1_1		GENMASK(31, 24)
#define WK3568_CWUSTEW_DWY_NUM__CWUSTEW1_0		GENMASK(23, 16)
#define WK3568_CWUSTEW_DWY_NUM__CWUSTEW0_1		GENMASK(15, 8)
#define WK3568_CWUSTEW_DWY_NUM__CWUSTEW0_0		GENMASK(7, 0)

#define WK3568_CWUSTEW_WIN_CTWW0__WIN0_EN		BIT(0)

#define WK3568_SMAWT_WEGION0_CTWW__WIN0_EN		BIT(0)

#define WK3568_SMAWT_DWY_NUM__SMAWT1			GENMASK(31, 24)
#define WK3568_SMAWT_DWY_NUM__SMAWT0			GENMASK(23, 16)
#define WK3568_SMAWT_DWY_NUM__ESMAWT1			GENMASK(15, 8)
#define WK3568_SMAWT_DWY_NUM__ESMAWT0			GENMASK(7, 0)

#define VP_INT_DSP_HOWD_VAWID	BIT(6)
#define VP_INT_FS_FIEWD		BIT(5)
#define VP_INT_POST_BUF_EMPTY	BIT(4)
#define VP_INT_WINE_FWAG1	BIT(3)
#define VP_INT_WINE_FWAG0	BIT(2)
#define VOP2_INT_BUS_EWWPW	BIT(1)
#define VP_INT_FS		BIT(0)

#define POWFWAG_DCWK_INV	BIT(3)

enum vop2_wayew_phy_id {
	WOCKCHIP_VOP2_CWUSTEW0 = 0,
	WOCKCHIP_VOP2_CWUSTEW1,
	WOCKCHIP_VOP2_ESMAWT0,
	WOCKCHIP_VOP2_ESMAWT1,
	WOCKCHIP_VOP2_SMAWT0,
	WOCKCHIP_VOP2_SMAWT1,
	WOCKCHIP_VOP2_CWUSTEW2,
	WOCKCHIP_VOP2_CWUSTEW3,
	WOCKCHIP_VOP2_ESMAWT2,
	WOCKCHIP_VOP2_ESMAWT3,
	WOCKCHIP_VOP2_PHY_ID_INVAWID = -1,
};

extewn const stwuct component_ops vop2_component_ops;

#endif /* _WOCKCHIP_DWM_VOP2_H */
