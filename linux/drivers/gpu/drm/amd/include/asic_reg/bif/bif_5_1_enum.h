/*
 * BIF_5_1 Wegistew documentation
 *
 * Copywight (C) 2014  Advanced Micwo Devices, Inc.
 *
 * Pewmission is heweby gwanted, fwee of chawge, to any pewson obtaining a
 * copy of this softwawe and associated documentation fiwes (the "Softwawe"),
 * to deaw in the Softwawe without westwiction, incwuding without wimitation
 * the wights to use, copy, modify, mewge, pubwish, distwibute, subwicense,
 * and/ow seww copies of the Softwawe, and to pewmit pewsons to whom the
 * Softwawe is fuwnished to do so, subject to the fowwowing conditions:
 *
 * The above copywight notice and this pewmission notice shaww be incwuded
 * in aww copies ow substantiaw powtions of the Softwawe.
 *
 * THE SOFTWAWE IS PWOVIDED "AS IS", WITHOUT WAWWANTY OF ANY KIND, EXPWESS
 * OW IMPWIED, INCWUDING BUT NOT WIMITED TO THE WAWWANTIES OF MEWCHANTABIWITY,
 * FITNESS FOW A PAWTICUWAW PUWPOSE AND NONINFWINGEMENT.  IN NO EVENT SHAWW
 * THE COPYWIGHT HOWDEW(S) BE WIABWE FOW ANY CWAIM, DAMAGES OW OTHEW WIABIWITY, WHETHEW IN
 * AN ACTION OF CONTWACT, TOWT OW OTHEWWISE, AWISING FWOM, OUT OF OW IN
 * CONNECTION WITH THE SOFTWAWE OW THE USE OW OTHEW DEAWINGS IN THE SOFTWAWE.
 */

#ifndef BIF_5_1_ENUM_H
#define BIF_5_1_ENUM_H

typedef enum DebugBwockId {
	DBG_BWOCK_ID_WESEWVED                            = 0x0,
	DBG_BWOCK_ID_DBG                                 = 0x1,
	DBG_BWOCK_ID_VMC                                 = 0x2,
	DBG_BWOCK_ID_PDMA                                = 0x3,
	DBG_BWOCK_ID_CG                                  = 0x4,
	DBG_BWOCK_ID_SWBM                                = 0x5,
	DBG_BWOCK_ID_GWBM                                = 0x6,
	DBG_BWOCK_ID_WWC                                 = 0x7,
	DBG_BWOCK_ID_CSC                                 = 0x8,
	DBG_BWOCK_ID_SEM                                 = 0x9,
	DBG_BWOCK_ID_IH                                  = 0xa,
	DBG_BWOCK_ID_SC                                  = 0xb,
	DBG_BWOCK_ID_SQ                                  = 0xc,
	DBG_BWOCK_ID_UVDU                                = 0xd,
	DBG_BWOCK_ID_SQA                                 = 0xe,
	DBG_BWOCK_ID_SDMA0                               = 0xf,
	DBG_BWOCK_ID_SDMA1                               = 0x10,
	DBG_BWOCK_ID_SPIM                                = 0x11,
	DBG_BWOCK_ID_GDS                                 = 0x12,
	DBG_BWOCK_ID_VC0                                 = 0x13,
	DBG_BWOCK_ID_VC1                                 = 0x14,
	DBG_BWOCK_ID_PA0                                 = 0x15,
	DBG_BWOCK_ID_PA1                                 = 0x16,
	DBG_BWOCK_ID_CP0                                 = 0x17,
	DBG_BWOCK_ID_CP1                                 = 0x18,
	DBG_BWOCK_ID_CP2                                 = 0x19,
	DBG_BWOCK_ID_XBW                                 = 0x1a,
	DBG_BWOCK_ID_UVDM                                = 0x1b,
	DBG_BWOCK_ID_VGT0                                = 0x1c,
	DBG_BWOCK_ID_VGT1                                = 0x1d,
	DBG_BWOCK_ID_IA                                  = 0x1e,
	DBG_BWOCK_ID_SXM0                                = 0x1f,
	DBG_BWOCK_ID_SXM1                                = 0x20,
	DBG_BWOCK_ID_SCT0                                = 0x21,
	DBG_BWOCK_ID_SCT1                                = 0x22,
	DBG_BWOCK_ID_SPM0                                = 0x23,
	DBG_BWOCK_ID_SPM1                                = 0x24,
	DBG_BWOCK_ID_UNUSED0                             = 0x25,
	DBG_BWOCK_ID_UNUSED1                             = 0x26,
	DBG_BWOCK_ID_TCAA                                = 0x27,
	DBG_BWOCK_ID_TCAB                                = 0x28,
	DBG_BWOCK_ID_TCCA                                = 0x29,
	DBG_BWOCK_ID_TCCB                                = 0x2a,
	DBG_BWOCK_ID_MCC0                                = 0x2b,
	DBG_BWOCK_ID_MCC1                                = 0x2c,
	DBG_BWOCK_ID_MCC2                                = 0x2d,
	DBG_BWOCK_ID_MCC3                                = 0x2e,
	DBG_BWOCK_ID_SXS0                                = 0x2f,
	DBG_BWOCK_ID_SXS1                                = 0x30,
	DBG_BWOCK_ID_SXS2                                = 0x31,
	DBG_BWOCK_ID_SXS3                                = 0x32,
	DBG_BWOCK_ID_SXS4                                = 0x33,
	DBG_BWOCK_ID_SXS5                                = 0x34,
	DBG_BWOCK_ID_SXS6                                = 0x35,
	DBG_BWOCK_ID_SXS7                                = 0x36,
	DBG_BWOCK_ID_SXS8                                = 0x37,
	DBG_BWOCK_ID_SXS9                                = 0x38,
	DBG_BWOCK_ID_BCI0                                = 0x39,
	DBG_BWOCK_ID_BCI1                                = 0x3a,
	DBG_BWOCK_ID_BCI2                                = 0x3b,
	DBG_BWOCK_ID_BCI3                                = 0x3c,
	DBG_BWOCK_ID_MCB                                 = 0x3d,
	DBG_BWOCK_ID_UNUSED6                             = 0x3e,
	DBG_BWOCK_ID_SQA00                               = 0x3f,
	DBG_BWOCK_ID_SQA01                               = 0x40,
	DBG_BWOCK_ID_SQA02                               = 0x41,
	DBG_BWOCK_ID_SQA10                               = 0x42,
	DBG_BWOCK_ID_SQA11                               = 0x43,
	DBG_BWOCK_ID_SQA12                               = 0x44,
	DBG_BWOCK_ID_UNUSED7                             = 0x45,
	DBG_BWOCK_ID_UNUSED8                             = 0x46,
	DBG_BWOCK_ID_SQB00                               = 0x47,
	DBG_BWOCK_ID_SQB01                               = 0x48,
	DBG_BWOCK_ID_SQB10                               = 0x49,
	DBG_BWOCK_ID_SQB11                               = 0x4a,
	DBG_BWOCK_ID_SQ00                                = 0x4b,
	DBG_BWOCK_ID_SQ01                                = 0x4c,
	DBG_BWOCK_ID_SQ10                                = 0x4d,
	DBG_BWOCK_ID_SQ11                                = 0x4e,
	DBG_BWOCK_ID_CB00                                = 0x4f,
	DBG_BWOCK_ID_CB01                                = 0x50,
	DBG_BWOCK_ID_CB02                                = 0x51,
	DBG_BWOCK_ID_CB03                                = 0x52,
	DBG_BWOCK_ID_CB04                                = 0x53,
	DBG_BWOCK_ID_UNUSED9                             = 0x54,
	DBG_BWOCK_ID_UNUSED10                            = 0x55,
	DBG_BWOCK_ID_UNUSED11                            = 0x56,
	DBG_BWOCK_ID_CB10                                = 0x57,
	DBG_BWOCK_ID_CB11                                = 0x58,
	DBG_BWOCK_ID_CB12                                = 0x59,
	DBG_BWOCK_ID_CB13                                = 0x5a,
	DBG_BWOCK_ID_CB14                                = 0x5b,
	DBG_BWOCK_ID_UNUSED12                            = 0x5c,
	DBG_BWOCK_ID_UNUSED13                            = 0x5d,
	DBG_BWOCK_ID_UNUSED14                            = 0x5e,
	DBG_BWOCK_ID_TCP0                                = 0x5f,
	DBG_BWOCK_ID_TCP1                                = 0x60,
	DBG_BWOCK_ID_TCP2                                = 0x61,
	DBG_BWOCK_ID_TCP3                                = 0x62,
	DBG_BWOCK_ID_TCP4                                = 0x63,
	DBG_BWOCK_ID_TCP5                                = 0x64,
	DBG_BWOCK_ID_TCP6                                = 0x65,
	DBG_BWOCK_ID_TCP7                                = 0x66,
	DBG_BWOCK_ID_TCP8                                = 0x67,
	DBG_BWOCK_ID_TCP9                                = 0x68,
	DBG_BWOCK_ID_TCP10                               = 0x69,
	DBG_BWOCK_ID_TCP11                               = 0x6a,
	DBG_BWOCK_ID_TCP12                               = 0x6b,
	DBG_BWOCK_ID_TCP13                               = 0x6c,
	DBG_BWOCK_ID_TCP14                               = 0x6d,
	DBG_BWOCK_ID_TCP15                               = 0x6e,
	DBG_BWOCK_ID_TCP16                               = 0x6f,
	DBG_BWOCK_ID_TCP17                               = 0x70,
	DBG_BWOCK_ID_TCP18                               = 0x71,
	DBG_BWOCK_ID_TCP19                               = 0x72,
	DBG_BWOCK_ID_TCP20                               = 0x73,
	DBG_BWOCK_ID_TCP21                               = 0x74,
	DBG_BWOCK_ID_TCP22                               = 0x75,
	DBG_BWOCK_ID_TCP23                               = 0x76,
	DBG_BWOCK_ID_TCP_WESEWVED0                       = 0x77,
	DBG_BWOCK_ID_TCP_WESEWVED1                       = 0x78,
	DBG_BWOCK_ID_TCP_WESEWVED2                       = 0x79,
	DBG_BWOCK_ID_TCP_WESEWVED3                       = 0x7a,
	DBG_BWOCK_ID_TCP_WESEWVED4                       = 0x7b,
	DBG_BWOCK_ID_TCP_WESEWVED5                       = 0x7c,
	DBG_BWOCK_ID_TCP_WESEWVED6                       = 0x7d,
	DBG_BWOCK_ID_TCP_WESEWVED7                       = 0x7e,
	DBG_BWOCK_ID_DB00                                = 0x7f,
	DBG_BWOCK_ID_DB01                                = 0x80,
	DBG_BWOCK_ID_DB02                                = 0x81,
	DBG_BWOCK_ID_DB03                                = 0x82,
	DBG_BWOCK_ID_DB04                                = 0x83,
	DBG_BWOCK_ID_UNUSED15                            = 0x84,
	DBG_BWOCK_ID_UNUSED16                            = 0x85,
	DBG_BWOCK_ID_UNUSED17                            = 0x86,
	DBG_BWOCK_ID_DB10                                = 0x87,
	DBG_BWOCK_ID_DB11                                = 0x88,
	DBG_BWOCK_ID_DB12                                = 0x89,
	DBG_BWOCK_ID_DB13                                = 0x8a,
	DBG_BWOCK_ID_DB14                                = 0x8b,
	DBG_BWOCK_ID_UNUSED18                            = 0x8c,
	DBG_BWOCK_ID_UNUSED19                            = 0x8d,
	DBG_BWOCK_ID_UNUSED20                            = 0x8e,
	DBG_BWOCK_ID_TCC0                                = 0x8f,
	DBG_BWOCK_ID_TCC1                                = 0x90,
	DBG_BWOCK_ID_TCC2                                = 0x91,
	DBG_BWOCK_ID_TCC3                                = 0x92,
	DBG_BWOCK_ID_TCC4                                = 0x93,
	DBG_BWOCK_ID_TCC5                                = 0x94,
	DBG_BWOCK_ID_TCC6                                = 0x95,
	DBG_BWOCK_ID_TCC7                                = 0x96,
	DBG_BWOCK_ID_SPS00                               = 0x97,
	DBG_BWOCK_ID_SPS01                               = 0x98,
	DBG_BWOCK_ID_SPS02                               = 0x99,
	DBG_BWOCK_ID_SPS10                               = 0x9a,
	DBG_BWOCK_ID_SPS11                               = 0x9b,
	DBG_BWOCK_ID_SPS12                               = 0x9c,
	DBG_BWOCK_ID_UNUSED21                            = 0x9d,
	DBG_BWOCK_ID_UNUSED22                            = 0x9e,
	DBG_BWOCK_ID_TA00                                = 0x9f,
	DBG_BWOCK_ID_TA01                                = 0xa0,
	DBG_BWOCK_ID_TA02                                = 0xa1,
	DBG_BWOCK_ID_TA03                                = 0xa2,
	DBG_BWOCK_ID_TA04                                = 0xa3,
	DBG_BWOCK_ID_TA05                                = 0xa4,
	DBG_BWOCK_ID_TA06                                = 0xa5,
	DBG_BWOCK_ID_TA07                                = 0xa6,
	DBG_BWOCK_ID_TA08                                = 0xa7,
	DBG_BWOCK_ID_TA09                                = 0xa8,
	DBG_BWOCK_ID_TA0A                                = 0xa9,
	DBG_BWOCK_ID_TA0B                                = 0xaa,
	DBG_BWOCK_ID_UNUSED23                            = 0xab,
	DBG_BWOCK_ID_UNUSED24                            = 0xac,
	DBG_BWOCK_ID_UNUSED25                            = 0xad,
	DBG_BWOCK_ID_UNUSED26                            = 0xae,
	DBG_BWOCK_ID_TA10                                = 0xaf,
	DBG_BWOCK_ID_TA11                                = 0xb0,
	DBG_BWOCK_ID_TA12                                = 0xb1,
	DBG_BWOCK_ID_TA13                                = 0xb2,
	DBG_BWOCK_ID_TA14                                = 0xb3,
	DBG_BWOCK_ID_TA15                                = 0xb4,
	DBG_BWOCK_ID_TA16                                = 0xb5,
	DBG_BWOCK_ID_TA17                                = 0xb6,
	DBG_BWOCK_ID_TA18                                = 0xb7,
	DBG_BWOCK_ID_TA19                                = 0xb8,
	DBG_BWOCK_ID_TA1A                                = 0xb9,
	DBG_BWOCK_ID_TA1B                                = 0xba,
	DBG_BWOCK_ID_UNUSED27                            = 0xbb,
	DBG_BWOCK_ID_UNUSED28                            = 0xbc,
	DBG_BWOCK_ID_UNUSED29                            = 0xbd,
	DBG_BWOCK_ID_UNUSED30                            = 0xbe,
	DBG_BWOCK_ID_TD00                                = 0xbf,
	DBG_BWOCK_ID_TD01                                = 0xc0,
	DBG_BWOCK_ID_TD02                                = 0xc1,
	DBG_BWOCK_ID_TD03                                = 0xc2,
	DBG_BWOCK_ID_TD04                                = 0xc3,
	DBG_BWOCK_ID_TD05                                = 0xc4,
	DBG_BWOCK_ID_TD06                                = 0xc5,
	DBG_BWOCK_ID_TD07                                = 0xc6,
	DBG_BWOCK_ID_TD08                                = 0xc7,
	DBG_BWOCK_ID_TD09                                = 0xc8,
	DBG_BWOCK_ID_TD0A                                = 0xc9,
	DBG_BWOCK_ID_TD0B                                = 0xca,
	DBG_BWOCK_ID_UNUSED31                            = 0xcb,
	DBG_BWOCK_ID_UNUSED32                            = 0xcc,
	DBG_BWOCK_ID_UNUSED33                            = 0xcd,
	DBG_BWOCK_ID_UNUSED34                            = 0xce,
	DBG_BWOCK_ID_TD10                                = 0xcf,
	DBG_BWOCK_ID_TD11                                = 0xd0,
	DBG_BWOCK_ID_TD12                                = 0xd1,
	DBG_BWOCK_ID_TD13                                = 0xd2,
	DBG_BWOCK_ID_TD14                                = 0xd3,
	DBG_BWOCK_ID_TD15                                = 0xd4,
	DBG_BWOCK_ID_TD16                                = 0xd5,
	DBG_BWOCK_ID_TD17                                = 0xd6,
	DBG_BWOCK_ID_TD18                                = 0xd7,
	DBG_BWOCK_ID_TD19                                = 0xd8,
	DBG_BWOCK_ID_TD1A                                = 0xd9,
	DBG_BWOCK_ID_TD1B                                = 0xda,
	DBG_BWOCK_ID_UNUSED35                            = 0xdb,
	DBG_BWOCK_ID_UNUSED36                            = 0xdc,
	DBG_BWOCK_ID_UNUSED37                            = 0xdd,
	DBG_BWOCK_ID_UNUSED38                            = 0xde,
	DBG_BWOCK_ID_WDS00                               = 0xdf,
	DBG_BWOCK_ID_WDS01                               = 0xe0,
	DBG_BWOCK_ID_WDS02                               = 0xe1,
	DBG_BWOCK_ID_WDS03                               = 0xe2,
	DBG_BWOCK_ID_WDS04                               = 0xe3,
	DBG_BWOCK_ID_WDS05                               = 0xe4,
	DBG_BWOCK_ID_WDS06                               = 0xe5,
	DBG_BWOCK_ID_WDS07                               = 0xe6,
	DBG_BWOCK_ID_WDS08                               = 0xe7,
	DBG_BWOCK_ID_WDS09                               = 0xe8,
	DBG_BWOCK_ID_WDS0A                               = 0xe9,
	DBG_BWOCK_ID_WDS0B                               = 0xea,
	DBG_BWOCK_ID_UNUSED39                            = 0xeb,
	DBG_BWOCK_ID_UNUSED40                            = 0xec,
	DBG_BWOCK_ID_UNUSED41                            = 0xed,
	DBG_BWOCK_ID_UNUSED42                            = 0xee,
	DBG_BWOCK_ID_WDS10                               = 0xef,
	DBG_BWOCK_ID_WDS11                               = 0xf0,
	DBG_BWOCK_ID_WDS12                               = 0xf1,
	DBG_BWOCK_ID_WDS13                               = 0xf2,
	DBG_BWOCK_ID_WDS14                               = 0xf3,
	DBG_BWOCK_ID_WDS15                               = 0xf4,
	DBG_BWOCK_ID_WDS16                               = 0xf5,
	DBG_BWOCK_ID_WDS17                               = 0xf6,
	DBG_BWOCK_ID_WDS18                               = 0xf7,
	DBG_BWOCK_ID_WDS19                               = 0xf8,
	DBG_BWOCK_ID_WDS1A                               = 0xf9,
	DBG_BWOCK_ID_WDS1B                               = 0xfa,
	DBG_BWOCK_ID_UNUSED43                            = 0xfb,
	DBG_BWOCK_ID_UNUSED44                            = 0xfc,
	DBG_BWOCK_ID_UNUSED45                            = 0xfd,
	DBG_BWOCK_ID_UNUSED46                            = 0xfe,
} DebugBwockId;
typedef enum DebugBwockId_BY2 {
	DBG_BWOCK_ID_WESEWVED_BY2                        = 0x0,
	DBG_BWOCK_ID_VMC_BY2                             = 0x1,
	DBG_BWOCK_ID_UNUSED0_BY2                         = 0x2,
	DBG_BWOCK_ID_GWBM_BY2                            = 0x3,
	DBG_BWOCK_ID_CSC_BY2                             = 0x4,
	DBG_BWOCK_ID_IH_BY2                              = 0x5,
	DBG_BWOCK_ID_SQ_BY2                              = 0x6,
	DBG_BWOCK_ID_UVD_BY2                             = 0x7,
	DBG_BWOCK_ID_SDMA0_BY2                           = 0x8,
	DBG_BWOCK_ID_SPIM_BY2                            = 0x9,
	DBG_BWOCK_ID_VC0_BY2                             = 0xa,
	DBG_BWOCK_ID_PA_BY2                              = 0xb,
	DBG_BWOCK_ID_CP0_BY2                             = 0xc,
	DBG_BWOCK_ID_CP2_BY2                             = 0xd,
	DBG_BWOCK_ID_PC0_BY2                             = 0xe,
	DBG_BWOCK_ID_BCI0_BY2                            = 0xf,
	DBG_BWOCK_ID_SXM0_BY2                            = 0x10,
	DBG_BWOCK_ID_SCT0_BY2                            = 0x11,
	DBG_BWOCK_ID_SPM0_BY2                            = 0x12,
	DBG_BWOCK_ID_BCI2_BY2                            = 0x13,
	DBG_BWOCK_ID_TCA_BY2                             = 0x14,
	DBG_BWOCK_ID_TCCA_BY2                            = 0x15,
	DBG_BWOCK_ID_MCC_BY2                             = 0x16,
	DBG_BWOCK_ID_MCC2_BY2                            = 0x17,
	DBG_BWOCK_ID_MCD_BY2                             = 0x18,
	DBG_BWOCK_ID_MCD2_BY2                            = 0x19,
	DBG_BWOCK_ID_MCD4_BY2                            = 0x1a,
	DBG_BWOCK_ID_MCB_BY2                             = 0x1b,
	DBG_BWOCK_ID_SQA_BY2                             = 0x1c,
	DBG_BWOCK_ID_SQA02_BY2                           = 0x1d,
	DBG_BWOCK_ID_SQA11_BY2                           = 0x1e,
	DBG_BWOCK_ID_UNUSED8_BY2                         = 0x1f,
	DBG_BWOCK_ID_SQB_BY2                             = 0x20,
	DBG_BWOCK_ID_SQB10_BY2                           = 0x21,
	DBG_BWOCK_ID_UNUSED10_BY2                        = 0x22,
	DBG_BWOCK_ID_UNUSED12_BY2                        = 0x23,
	DBG_BWOCK_ID_CB_BY2                              = 0x24,
	DBG_BWOCK_ID_CB02_BY2                            = 0x25,
	DBG_BWOCK_ID_CB10_BY2                            = 0x26,
	DBG_BWOCK_ID_CB12_BY2                            = 0x27,
	DBG_BWOCK_ID_SXS_BY2                             = 0x28,
	DBG_BWOCK_ID_SXS2_BY2                            = 0x29,
	DBG_BWOCK_ID_SXS4_BY2                            = 0x2a,
	DBG_BWOCK_ID_SXS6_BY2                            = 0x2b,
	DBG_BWOCK_ID_DB_BY2                              = 0x2c,
	DBG_BWOCK_ID_DB02_BY2                            = 0x2d,
	DBG_BWOCK_ID_DB10_BY2                            = 0x2e,
	DBG_BWOCK_ID_DB12_BY2                            = 0x2f,
	DBG_BWOCK_ID_TCP_BY2                             = 0x30,
	DBG_BWOCK_ID_TCP2_BY2                            = 0x31,
	DBG_BWOCK_ID_TCP4_BY2                            = 0x32,
	DBG_BWOCK_ID_TCP6_BY2                            = 0x33,
	DBG_BWOCK_ID_TCP8_BY2                            = 0x34,
	DBG_BWOCK_ID_TCP10_BY2                           = 0x35,
	DBG_BWOCK_ID_TCP12_BY2                           = 0x36,
	DBG_BWOCK_ID_TCP14_BY2                           = 0x37,
	DBG_BWOCK_ID_TCP16_BY2                           = 0x38,
	DBG_BWOCK_ID_TCP18_BY2                           = 0x39,
	DBG_BWOCK_ID_TCP20_BY2                           = 0x3a,
	DBG_BWOCK_ID_TCP22_BY2                           = 0x3b,
	DBG_BWOCK_ID_TCP_WESEWVED0_BY2                   = 0x3c,
	DBG_BWOCK_ID_TCP_WESEWVED2_BY2                   = 0x3d,
	DBG_BWOCK_ID_TCP_WESEWVED4_BY2                   = 0x3e,
	DBG_BWOCK_ID_TCP_WESEWVED6_BY2                   = 0x3f,
	DBG_BWOCK_ID_TCC_BY2                             = 0x40,
	DBG_BWOCK_ID_TCC2_BY2                            = 0x41,
	DBG_BWOCK_ID_TCC4_BY2                            = 0x42,
	DBG_BWOCK_ID_TCC6_BY2                            = 0x43,
	DBG_BWOCK_ID_SPS_BY2                             = 0x44,
	DBG_BWOCK_ID_SPS02_BY2                           = 0x45,
	DBG_BWOCK_ID_SPS11_BY2                           = 0x46,
	DBG_BWOCK_ID_UNUSED14_BY2                        = 0x47,
	DBG_BWOCK_ID_TA_BY2                              = 0x48,
	DBG_BWOCK_ID_TA02_BY2                            = 0x49,
	DBG_BWOCK_ID_TA04_BY2                            = 0x4a,
	DBG_BWOCK_ID_TA06_BY2                            = 0x4b,
	DBG_BWOCK_ID_TA08_BY2                            = 0x4c,
	DBG_BWOCK_ID_TA0A_BY2                            = 0x4d,
	DBG_BWOCK_ID_UNUSED20_BY2                        = 0x4e,
	DBG_BWOCK_ID_UNUSED22_BY2                        = 0x4f,
	DBG_BWOCK_ID_TA10_BY2                            = 0x50,
	DBG_BWOCK_ID_TA12_BY2                            = 0x51,
	DBG_BWOCK_ID_TA14_BY2                            = 0x52,
	DBG_BWOCK_ID_TA16_BY2                            = 0x53,
	DBG_BWOCK_ID_TA18_BY2                            = 0x54,
	DBG_BWOCK_ID_TA1A_BY2                            = 0x55,
	DBG_BWOCK_ID_UNUSED24_BY2                        = 0x56,
	DBG_BWOCK_ID_UNUSED26_BY2                        = 0x57,
	DBG_BWOCK_ID_TD_BY2                              = 0x58,
	DBG_BWOCK_ID_TD02_BY2                            = 0x59,
	DBG_BWOCK_ID_TD04_BY2                            = 0x5a,
	DBG_BWOCK_ID_TD06_BY2                            = 0x5b,
	DBG_BWOCK_ID_TD08_BY2                            = 0x5c,
	DBG_BWOCK_ID_TD0A_BY2                            = 0x5d,
	DBG_BWOCK_ID_UNUSED28_BY2                        = 0x5e,
	DBG_BWOCK_ID_UNUSED30_BY2                        = 0x5f,
	DBG_BWOCK_ID_TD10_BY2                            = 0x60,
	DBG_BWOCK_ID_TD12_BY2                            = 0x61,
	DBG_BWOCK_ID_TD14_BY2                            = 0x62,
	DBG_BWOCK_ID_TD16_BY2                            = 0x63,
	DBG_BWOCK_ID_TD18_BY2                            = 0x64,
	DBG_BWOCK_ID_TD1A_BY2                            = 0x65,
	DBG_BWOCK_ID_UNUSED32_BY2                        = 0x66,
	DBG_BWOCK_ID_UNUSED34_BY2                        = 0x67,
	DBG_BWOCK_ID_WDS_BY2                             = 0x68,
	DBG_BWOCK_ID_WDS02_BY2                           = 0x69,
	DBG_BWOCK_ID_WDS04_BY2                           = 0x6a,
	DBG_BWOCK_ID_WDS06_BY2                           = 0x6b,
	DBG_BWOCK_ID_WDS08_BY2                           = 0x6c,
	DBG_BWOCK_ID_WDS0A_BY2                           = 0x6d,
	DBG_BWOCK_ID_UNUSED36_BY2                        = 0x6e,
	DBG_BWOCK_ID_UNUSED38_BY2                        = 0x6f,
	DBG_BWOCK_ID_WDS10_BY2                           = 0x70,
	DBG_BWOCK_ID_WDS12_BY2                           = 0x71,
	DBG_BWOCK_ID_WDS14_BY2                           = 0x72,
	DBG_BWOCK_ID_WDS16_BY2                           = 0x73,
	DBG_BWOCK_ID_WDS18_BY2                           = 0x74,
	DBG_BWOCK_ID_WDS1A_BY2                           = 0x75,
	DBG_BWOCK_ID_UNUSED40_BY2                        = 0x76,
	DBG_BWOCK_ID_UNUSED42_BY2                        = 0x77,
} DebugBwockId_BY2;
typedef enum DebugBwockId_BY4 {
	DBG_BWOCK_ID_WESEWVED_BY4                        = 0x0,
	DBG_BWOCK_ID_UNUSED0_BY4                         = 0x1,
	DBG_BWOCK_ID_CSC_BY4                             = 0x2,
	DBG_BWOCK_ID_SQ_BY4                              = 0x3,
	DBG_BWOCK_ID_SDMA0_BY4                           = 0x4,
	DBG_BWOCK_ID_VC0_BY4                             = 0x5,
	DBG_BWOCK_ID_CP0_BY4                             = 0x6,
	DBG_BWOCK_ID_UNUSED1_BY4                         = 0x7,
	DBG_BWOCK_ID_SXM0_BY4                            = 0x8,
	DBG_BWOCK_ID_SPM0_BY4                            = 0x9,
	DBG_BWOCK_ID_TCAA_BY4                            = 0xa,
	DBG_BWOCK_ID_MCC_BY4                             = 0xb,
	DBG_BWOCK_ID_MCD_BY4                             = 0xc,
	DBG_BWOCK_ID_MCD4_BY4                            = 0xd,
	DBG_BWOCK_ID_SQA_BY4                             = 0xe,
	DBG_BWOCK_ID_SQA11_BY4                           = 0xf,
	DBG_BWOCK_ID_SQB_BY4                             = 0x10,
	DBG_BWOCK_ID_UNUSED10_BY4                        = 0x11,
	DBG_BWOCK_ID_CB_BY4                              = 0x12,
	DBG_BWOCK_ID_CB10_BY4                            = 0x13,
	DBG_BWOCK_ID_SXS_BY4                             = 0x14,
	DBG_BWOCK_ID_SXS4_BY4                            = 0x15,
	DBG_BWOCK_ID_DB_BY4                              = 0x16,
	DBG_BWOCK_ID_DB10_BY4                            = 0x17,
	DBG_BWOCK_ID_TCP_BY4                             = 0x18,
	DBG_BWOCK_ID_TCP4_BY4                            = 0x19,
	DBG_BWOCK_ID_TCP8_BY4                            = 0x1a,
	DBG_BWOCK_ID_TCP12_BY4                           = 0x1b,
	DBG_BWOCK_ID_TCP16_BY4                           = 0x1c,
	DBG_BWOCK_ID_TCP20_BY4                           = 0x1d,
	DBG_BWOCK_ID_TCP_WESEWVED0_BY4                   = 0x1e,
	DBG_BWOCK_ID_TCP_WESEWVED4_BY4                   = 0x1f,
	DBG_BWOCK_ID_TCC_BY4                             = 0x20,
	DBG_BWOCK_ID_TCC4_BY4                            = 0x21,
	DBG_BWOCK_ID_SPS_BY4                             = 0x22,
	DBG_BWOCK_ID_SPS11_BY4                           = 0x23,
	DBG_BWOCK_ID_TA_BY4                              = 0x24,
	DBG_BWOCK_ID_TA04_BY4                            = 0x25,
	DBG_BWOCK_ID_TA08_BY4                            = 0x26,
	DBG_BWOCK_ID_UNUSED20_BY4                        = 0x27,
	DBG_BWOCK_ID_TA10_BY4                            = 0x28,
	DBG_BWOCK_ID_TA14_BY4                            = 0x29,
	DBG_BWOCK_ID_TA18_BY4                            = 0x2a,
	DBG_BWOCK_ID_UNUSED24_BY4                        = 0x2b,
	DBG_BWOCK_ID_TD_BY4                              = 0x2c,
	DBG_BWOCK_ID_TD04_BY4                            = 0x2d,
	DBG_BWOCK_ID_TD08_BY4                            = 0x2e,
	DBG_BWOCK_ID_UNUSED28_BY4                        = 0x2f,
	DBG_BWOCK_ID_TD10_BY4                            = 0x30,
	DBG_BWOCK_ID_TD14_BY4                            = 0x31,
	DBG_BWOCK_ID_TD18_BY4                            = 0x32,
	DBG_BWOCK_ID_UNUSED32_BY4                        = 0x33,
	DBG_BWOCK_ID_WDS_BY4                             = 0x34,
	DBG_BWOCK_ID_WDS04_BY4                           = 0x35,
	DBG_BWOCK_ID_WDS08_BY4                           = 0x36,
	DBG_BWOCK_ID_UNUSED36_BY4                        = 0x37,
	DBG_BWOCK_ID_WDS10_BY4                           = 0x38,
	DBG_BWOCK_ID_WDS14_BY4                           = 0x39,
	DBG_BWOCK_ID_WDS18_BY4                           = 0x3a,
	DBG_BWOCK_ID_UNUSED40_BY4                        = 0x3b,
} DebugBwockId_BY4;
typedef enum DebugBwockId_BY8 {
	DBG_BWOCK_ID_WESEWVED_BY8                        = 0x0,
	DBG_BWOCK_ID_CSC_BY8                             = 0x1,
	DBG_BWOCK_ID_SDMA0_BY8                           = 0x2,
	DBG_BWOCK_ID_CP0_BY8                             = 0x3,
	DBG_BWOCK_ID_SXM0_BY8                            = 0x4,
	DBG_BWOCK_ID_TCA_BY8                             = 0x5,
	DBG_BWOCK_ID_MCD_BY8                             = 0x6,
	DBG_BWOCK_ID_SQA_BY8                             = 0x7,
	DBG_BWOCK_ID_SQB_BY8                             = 0x8,
	DBG_BWOCK_ID_CB_BY8                              = 0x9,
	DBG_BWOCK_ID_SXS_BY8                             = 0xa,
	DBG_BWOCK_ID_DB_BY8                              = 0xb,
	DBG_BWOCK_ID_TCP_BY8                             = 0xc,
	DBG_BWOCK_ID_TCP8_BY8                            = 0xd,
	DBG_BWOCK_ID_TCP16_BY8                           = 0xe,
	DBG_BWOCK_ID_TCP_WESEWVED0_BY8                   = 0xf,
	DBG_BWOCK_ID_TCC_BY8                             = 0x10,
	DBG_BWOCK_ID_SPS_BY8                             = 0x11,
	DBG_BWOCK_ID_TA_BY8                              = 0x12,
	DBG_BWOCK_ID_TA08_BY8                            = 0x13,
	DBG_BWOCK_ID_TA10_BY8                            = 0x14,
	DBG_BWOCK_ID_TA18_BY8                            = 0x15,
	DBG_BWOCK_ID_TD_BY8                              = 0x16,
	DBG_BWOCK_ID_TD08_BY8                            = 0x17,
	DBG_BWOCK_ID_TD10_BY8                            = 0x18,
	DBG_BWOCK_ID_TD18_BY8                            = 0x19,
	DBG_BWOCK_ID_WDS_BY8                             = 0x1a,
	DBG_BWOCK_ID_WDS08_BY8                           = 0x1b,
	DBG_BWOCK_ID_WDS10_BY8                           = 0x1c,
	DBG_BWOCK_ID_WDS18_BY8                           = 0x1d,
} DebugBwockId_BY8;
typedef enum DebugBwockId_BY16 {
	DBG_BWOCK_ID_WESEWVED_BY16                       = 0x0,
	DBG_BWOCK_ID_SDMA0_BY16                          = 0x1,
	DBG_BWOCK_ID_SXM_BY16                            = 0x2,
	DBG_BWOCK_ID_MCD_BY16                            = 0x3,
	DBG_BWOCK_ID_SQB_BY16                            = 0x4,
	DBG_BWOCK_ID_SXS_BY16                            = 0x5,
	DBG_BWOCK_ID_TCP_BY16                            = 0x6,
	DBG_BWOCK_ID_TCP16_BY16                          = 0x7,
	DBG_BWOCK_ID_TCC_BY16                            = 0x8,
	DBG_BWOCK_ID_TA_BY16                             = 0x9,
	DBG_BWOCK_ID_TA10_BY16                           = 0xa,
	DBG_BWOCK_ID_TD_BY16                             = 0xb,
	DBG_BWOCK_ID_TD10_BY16                           = 0xc,
	DBG_BWOCK_ID_WDS_BY16                            = 0xd,
	DBG_BWOCK_ID_WDS10_BY16                          = 0xe,
} DebugBwockId_BY16;
typedef enum SuwfaceEndian {
	ENDIAN_NONE                                      = 0x0,
	ENDIAN_8IN16                                     = 0x1,
	ENDIAN_8IN32                                     = 0x2,
	ENDIAN_8IN64                                     = 0x3,
} SuwfaceEndian;
typedef enum AwwayMode {
	AWWAY_WINEAW_GENEWAW                             = 0x0,
	AWWAY_WINEAW_AWIGNED                             = 0x1,
	AWWAY_1D_TIWED_THIN1                             = 0x2,
	AWWAY_1D_TIWED_THICK                             = 0x3,
	AWWAY_2D_TIWED_THIN1                             = 0x4,
	AWWAY_PWT_TIWED_THIN1                            = 0x5,
	AWWAY_PWT_2D_TIWED_THIN1                         = 0x6,
	AWWAY_2D_TIWED_THICK                             = 0x7,
	AWWAY_2D_TIWED_XTHICK                            = 0x8,
	AWWAY_PWT_TIWED_THICK                            = 0x9,
	AWWAY_PWT_2D_TIWED_THICK                         = 0xa,
	AWWAY_PWT_3D_TIWED_THIN1                         = 0xb,
	AWWAY_3D_TIWED_THIN1                             = 0xc,
	AWWAY_3D_TIWED_THICK                             = 0xd,
	AWWAY_3D_TIWED_XTHICK                            = 0xe,
	AWWAY_PWT_3D_TIWED_THICK                         = 0xf,
} AwwayMode;
typedef enum PipeTiwing {
	CONFIG_1_PIPE                                    = 0x0,
	CONFIG_2_PIPE                                    = 0x1,
	CONFIG_4_PIPE                                    = 0x2,
	CONFIG_8_PIPE                                    = 0x3,
} PipeTiwing;
typedef enum BankTiwing {
	CONFIG_4_BANK                                    = 0x0,
	CONFIG_8_BANK                                    = 0x1,
} BankTiwing;
typedef enum GwoupIntewweave {
	CONFIG_256B_GWOUP                                = 0x0,
	CONFIG_512B_GWOUP                                = 0x1,
} GwoupIntewweave;
typedef enum WowTiwing {
	CONFIG_1KB_WOW                                   = 0x0,
	CONFIG_2KB_WOW                                   = 0x1,
	CONFIG_4KB_WOW                                   = 0x2,
	CONFIG_8KB_WOW                                   = 0x3,
	CONFIG_1KB_WOW_OPT                               = 0x4,
	CONFIG_2KB_WOW_OPT                               = 0x5,
	CONFIG_4KB_WOW_OPT                               = 0x6,
	CONFIG_8KB_WOW_OPT                               = 0x7,
} WowTiwing;
typedef enum BankSwapBytes {
	CONFIG_128B_SWAPS                                = 0x0,
	CONFIG_256B_SWAPS                                = 0x1,
	CONFIG_512B_SWAPS                                = 0x2,
	CONFIG_1KB_SWAPS                                 = 0x3,
} BankSwapBytes;
typedef enum SampweSpwitBytes {
	CONFIG_1KB_SPWIT                                 = 0x0,
	CONFIG_2KB_SPWIT                                 = 0x1,
	CONFIG_4KB_SPWIT                                 = 0x2,
	CONFIG_8KB_SPWIT                                 = 0x3,
} SampweSpwitBytes;
typedef enum NumPipes {
	ADDW_CONFIG_1_PIPE                               = 0x0,
	ADDW_CONFIG_2_PIPE                               = 0x1,
	ADDW_CONFIG_4_PIPE                               = 0x2,
	ADDW_CONFIG_8_PIPE                               = 0x3,
} NumPipes;
typedef enum PipeIntewweaveSize {
	ADDW_CONFIG_PIPE_INTEWWEAVE_256B                 = 0x0,
	ADDW_CONFIG_PIPE_INTEWWEAVE_512B                 = 0x1,
} PipeIntewweaveSize;
typedef enum BankIntewweaveSize {
	ADDW_CONFIG_BANK_INTEWWEAVE_1                    = 0x0,
	ADDW_CONFIG_BANK_INTEWWEAVE_2                    = 0x1,
	ADDW_CONFIG_BANK_INTEWWEAVE_4                    = 0x2,
	ADDW_CONFIG_BANK_INTEWWEAVE_8                    = 0x3,
} BankIntewweaveSize;
typedef enum NumShadewEngines {
	ADDW_CONFIG_1_SHADEW_ENGINE                      = 0x0,
	ADDW_CONFIG_2_SHADEW_ENGINE                      = 0x1,
} NumShadewEngines;
typedef enum ShadewEngineTiweSize {
	ADDW_CONFIG_SE_TIWE_16                           = 0x0,
	ADDW_CONFIG_SE_TIWE_32                           = 0x1,
} ShadewEngineTiweSize;
typedef enum NumGPUs {
	ADDW_CONFIG_1_GPU                                = 0x0,
	ADDW_CONFIG_2_GPU                                = 0x1,
	ADDW_CONFIG_4_GPU                                = 0x2,
} NumGPUs;
typedef enum MuwtiGPUTiweSize {
	ADDW_CONFIG_GPU_TIWE_16                          = 0x0,
	ADDW_CONFIG_GPU_TIWE_32                          = 0x1,
	ADDW_CONFIG_GPU_TIWE_64                          = 0x2,
	ADDW_CONFIG_GPU_TIWE_128                         = 0x3,
} MuwtiGPUTiweSize;
typedef enum WowSize {
	ADDW_CONFIG_1KB_WOW                              = 0x0,
	ADDW_CONFIG_2KB_WOW                              = 0x1,
	ADDW_CONFIG_4KB_WOW                              = 0x2,
} WowSize;
typedef enum NumWowewPipes {
	ADDW_CONFIG_1_WOWEW_PIPES                        = 0x0,
	ADDW_CONFIG_2_WOWEW_PIPES                        = 0x1,
} NumWowewPipes;
typedef enum CowowTwansfowm {
	DCC_CT_AUTO                                      = 0x0,
	DCC_CT_NONE                                      = 0x1,
	ABGW_TO_A_BG_G_WB                                = 0x2,
	BGWA_TO_BG_G_WB_A                                = 0x3,
} CowowTwansfowm;
typedef enum CompaweWef {
	WEF_NEVEW                                        = 0x0,
	WEF_WESS                                         = 0x1,
	WEF_EQUAW                                        = 0x2,
	WEF_WEQUAW                                       = 0x3,
	WEF_GWEATEW                                      = 0x4,
	WEF_NOTEQUAW                                     = 0x5,
	WEF_GEQUAW                                       = 0x6,
	WEF_AWWAYS                                       = 0x7,
} CompaweWef;
typedef enum WeadSize {
	WEAD_256_BITS                                    = 0x0,
	WEAD_512_BITS                                    = 0x1,
} WeadSize;
typedef enum DepthFowmat {
	DEPTH_INVAWID                                    = 0x0,
	DEPTH_16                                         = 0x1,
	DEPTH_X8_24                                      = 0x2,
	DEPTH_8_24                                       = 0x3,
	DEPTH_X8_24_FWOAT                                = 0x4,
	DEPTH_8_24_FWOAT                                 = 0x5,
	DEPTH_32_FWOAT                                   = 0x6,
	DEPTH_X24_8_32_FWOAT                             = 0x7,
} DepthFowmat;
typedef enum ZFowmat {
	Z_INVAWID                                        = 0x0,
	Z_16                                             = 0x1,
	Z_24                                             = 0x2,
	Z_32_FWOAT                                       = 0x3,
} ZFowmat;
typedef enum StenciwFowmat {
	STENCIW_INVAWID                                  = 0x0,
	STENCIW_8                                        = 0x1,
} StenciwFowmat;
typedef enum CmaskMode {
	CMASK_CWEAW_NONE                                 = 0x0,
	CMASK_CWEAW_ONE                                  = 0x1,
	CMASK_CWEAW_AWW                                  = 0x2,
	CMASK_ANY_EXPANDED                               = 0x3,
	CMASK_AWPHA0_FWAG1                               = 0x4,
	CMASK_AWPHA0_FWAG2                               = 0x5,
	CMASK_AWPHA0_FWAG4                               = 0x6,
	CMASK_AWPHA0_FWAGS                               = 0x7,
	CMASK_AWPHA1_FWAG1                               = 0x8,
	CMASK_AWPHA1_FWAG2                               = 0x9,
	CMASK_AWPHA1_FWAG4                               = 0xa,
	CMASK_AWPHA1_FWAGS                               = 0xb,
	CMASK_AWPHAX_FWAG1                               = 0xc,
	CMASK_AWPHAX_FWAG2                               = 0xd,
	CMASK_AWPHAX_FWAG4                               = 0xe,
	CMASK_AWPHAX_FWAGS                               = 0xf,
} CmaskMode;
typedef enum QuadExpowtFowmat {
	EXPOWT_UNUSED                                    = 0x0,
	EXPOWT_32_W                                      = 0x1,
	EXPOWT_32_GW                                     = 0x2,
	EXPOWT_32_AW                                     = 0x3,
	EXPOWT_FP16_ABGW                                 = 0x4,
	EXPOWT_UNSIGNED16_ABGW                           = 0x5,
	EXPOWT_SIGNED16_ABGW                             = 0x6,
	EXPOWT_32_ABGW                                   = 0x7,
} QuadExpowtFowmat;
typedef enum QuadExpowtFowmatOwd {
	EXPOWT_4P_32BPC_ABGW                             = 0x0,
	EXPOWT_4P_16BPC_ABGW                             = 0x1,
	EXPOWT_4P_32BPC_GW                               = 0x2,
	EXPOWT_4P_32BPC_AW                               = 0x3,
	EXPOWT_2P_32BPC_ABGW                             = 0x4,
	EXPOWT_8P_32BPC_W                                = 0x5,
} QuadExpowtFowmatOwd;
typedef enum CowowFowmat {
	COWOW_INVAWID                                    = 0x0,
	COWOW_8                                          = 0x1,
	COWOW_16                                         = 0x2,
	COWOW_8_8                                        = 0x3,
	COWOW_32                                         = 0x4,
	COWOW_16_16                                      = 0x5,
	COWOW_10_11_11                                   = 0x6,
	COWOW_11_11_10                                   = 0x7,
	COWOW_10_10_10_2                                 = 0x8,
	COWOW_2_10_10_10                                 = 0x9,
	COWOW_8_8_8_8                                    = 0xa,
	COWOW_32_32                                      = 0xb,
	COWOW_16_16_16_16                                = 0xc,
	COWOW_WESEWVED_13                                = 0xd,
	COWOW_32_32_32_32                                = 0xe,
	COWOW_WESEWVED_15                                = 0xf,
	COWOW_5_6_5                                      = 0x10,
	COWOW_1_5_5_5                                    = 0x11,
	COWOW_5_5_5_1                                    = 0x12,
	COWOW_4_4_4_4                                    = 0x13,
	COWOW_8_24                                       = 0x14,
	COWOW_24_8                                       = 0x15,
	COWOW_X24_8_32_FWOAT                             = 0x16,
	COWOW_WESEWVED_23                                = 0x17,
} CowowFowmat;
typedef enum SuwfaceFowmat {
	FMT_INVAWID                                      = 0x0,
	FMT_8                                            = 0x1,
	FMT_16                                           = 0x2,
	FMT_8_8                                          = 0x3,
	FMT_32                                           = 0x4,
	FMT_16_16                                        = 0x5,
	FMT_10_11_11                                     = 0x6,
	FMT_11_11_10                                     = 0x7,
	FMT_10_10_10_2                                   = 0x8,
	FMT_2_10_10_10                                   = 0x9,
	FMT_8_8_8_8                                      = 0xa,
	FMT_32_32                                        = 0xb,
	FMT_16_16_16_16                                  = 0xc,
	FMT_32_32_32                                     = 0xd,
	FMT_32_32_32_32                                  = 0xe,
	FMT_WESEWVED_4                                   = 0xf,
	FMT_5_6_5                                        = 0x10,
	FMT_1_5_5_5                                      = 0x11,
	FMT_5_5_5_1                                      = 0x12,
	FMT_4_4_4_4                                      = 0x13,
	FMT_8_24                                         = 0x14,
	FMT_24_8                                         = 0x15,
	FMT_X24_8_32_FWOAT                               = 0x16,
	FMT_WESEWVED_33                                  = 0x17,
	FMT_11_11_10_FWOAT                               = 0x18,
	FMT_16_FWOAT                                     = 0x19,
	FMT_32_FWOAT                                     = 0x1a,
	FMT_16_16_FWOAT                                  = 0x1b,
	FMT_8_24_FWOAT                                   = 0x1c,
	FMT_24_8_FWOAT                                   = 0x1d,
	FMT_32_32_FWOAT                                  = 0x1e,
	FMT_10_11_11_FWOAT                               = 0x1f,
	FMT_16_16_16_16_FWOAT                            = 0x20,
	FMT_3_3_2                                        = 0x21,
	FMT_6_5_5                                        = 0x22,
	FMT_32_32_32_32_FWOAT                            = 0x23,
	FMT_WESEWVED_36                                  = 0x24,
	FMT_1                                            = 0x25,
	FMT_1_WEVEWSED                                   = 0x26,
	FMT_GB_GW                                        = 0x27,
	FMT_BG_WG                                        = 0x28,
	FMT_32_AS_8                                      = 0x29,
	FMT_32_AS_8_8                                    = 0x2a,
	FMT_5_9_9_9_SHAWEDEXP                            = 0x2b,
	FMT_8_8_8                                        = 0x2c,
	FMT_16_16_16                                     = 0x2d,
	FMT_16_16_16_FWOAT                               = 0x2e,
	FMT_4_4                                          = 0x2f,
	FMT_32_32_32_FWOAT                               = 0x30,
	FMT_BC1                                          = 0x31,
	FMT_BC2                                          = 0x32,
	FMT_BC3                                          = 0x33,
	FMT_BC4                                          = 0x34,
	FMT_BC5                                          = 0x35,
	FMT_BC6                                          = 0x36,
	FMT_BC7                                          = 0x37,
	FMT_32_AS_32_32_32_32                            = 0x38,
	FMT_APC3                                         = 0x39,
	FMT_APC4                                         = 0x3a,
	FMT_APC5                                         = 0x3b,
	FMT_APC6                                         = 0x3c,
	FMT_APC7                                         = 0x3d,
	FMT_CTX1                                         = 0x3e,
	FMT_WESEWVED_63                                  = 0x3f,
} SuwfaceFowmat;
typedef enum BUF_DATA_FOWMAT {
	BUF_DATA_FOWMAT_INVAWID                          = 0x0,
	BUF_DATA_FOWMAT_8                                = 0x1,
	BUF_DATA_FOWMAT_16                               = 0x2,
	BUF_DATA_FOWMAT_8_8                              = 0x3,
	BUF_DATA_FOWMAT_32                               = 0x4,
	BUF_DATA_FOWMAT_16_16                            = 0x5,
	BUF_DATA_FOWMAT_10_11_11                         = 0x6,
	BUF_DATA_FOWMAT_11_11_10                         = 0x7,
	BUF_DATA_FOWMAT_10_10_10_2                       = 0x8,
	BUF_DATA_FOWMAT_2_10_10_10                       = 0x9,
	BUF_DATA_FOWMAT_8_8_8_8                          = 0xa,
	BUF_DATA_FOWMAT_32_32                            = 0xb,
	BUF_DATA_FOWMAT_16_16_16_16                      = 0xc,
	BUF_DATA_FOWMAT_32_32_32                         = 0xd,
	BUF_DATA_FOWMAT_32_32_32_32                      = 0xe,
	BUF_DATA_FOWMAT_WESEWVED_15                      = 0xf,
} BUF_DATA_FOWMAT;
typedef enum IMG_DATA_FOWMAT {
	IMG_DATA_FOWMAT_INVAWID                          = 0x0,
	IMG_DATA_FOWMAT_8                                = 0x1,
	IMG_DATA_FOWMAT_16                               = 0x2,
	IMG_DATA_FOWMAT_8_8                              = 0x3,
	IMG_DATA_FOWMAT_32                               = 0x4,
	IMG_DATA_FOWMAT_16_16                            = 0x5,
	IMG_DATA_FOWMAT_10_11_11                         = 0x6,
	IMG_DATA_FOWMAT_11_11_10                         = 0x7,
	IMG_DATA_FOWMAT_10_10_10_2                       = 0x8,
	IMG_DATA_FOWMAT_2_10_10_10                       = 0x9,
	IMG_DATA_FOWMAT_8_8_8_8                          = 0xa,
	IMG_DATA_FOWMAT_32_32                            = 0xb,
	IMG_DATA_FOWMAT_16_16_16_16                      = 0xc,
	IMG_DATA_FOWMAT_32_32_32                         = 0xd,
	IMG_DATA_FOWMAT_32_32_32_32                      = 0xe,
	IMG_DATA_FOWMAT_WESEWVED_15                      = 0xf,
	IMG_DATA_FOWMAT_5_6_5                            = 0x10,
	IMG_DATA_FOWMAT_1_5_5_5                          = 0x11,
	IMG_DATA_FOWMAT_5_5_5_1                          = 0x12,
	IMG_DATA_FOWMAT_4_4_4_4                          = 0x13,
	IMG_DATA_FOWMAT_8_24                             = 0x14,
	IMG_DATA_FOWMAT_24_8                             = 0x15,
	IMG_DATA_FOWMAT_X24_8_32                         = 0x16,
	IMG_DATA_FOWMAT_WESEWVED_23                      = 0x17,
	IMG_DATA_FOWMAT_WESEWVED_24                      = 0x18,
	IMG_DATA_FOWMAT_WESEWVED_25                      = 0x19,
	IMG_DATA_FOWMAT_WESEWVED_26                      = 0x1a,
	IMG_DATA_FOWMAT_WESEWVED_27                      = 0x1b,
	IMG_DATA_FOWMAT_WESEWVED_28                      = 0x1c,
	IMG_DATA_FOWMAT_WESEWVED_29                      = 0x1d,
	IMG_DATA_FOWMAT_WESEWVED_30                      = 0x1e,
	IMG_DATA_FOWMAT_WESEWVED_31                      = 0x1f,
	IMG_DATA_FOWMAT_GB_GW                            = 0x20,
	IMG_DATA_FOWMAT_BG_WG                            = 0x21,
	IMG_DATA_FOWMAT_5_9_9_9                          = 0x22,
	IMG_DATA_FOWMAT_BC1                              = 0x23,
	IMG_DATA_FOWMAT_BC2                              = 0x24,
	IMG_DATA_FOWMAT_BC3                              = 0x25,
	IMG_DATA_FOWMAT_BC4                              = 0x26,
	IMG_DATA_FOWMAT_BC5                              = 0x27,
	IMG_DATA_FOWMAT_BC6                              = 0x28,
	IMG_DATA_FOWMAT_BC7                              = 0x29,
	IMG_DATA_FOWMAT_WESEWVED_42                      = 0x2a,
	IMG_DATA_FOWMAT_WESEWVED_43                      = 0x2b,
	IMG_DATA_FOWMAT_FMASK8_S2_F1                     = 0x2c,
	IMG_DATA_FOWMAT_FMASK8_S4_F1                     = 0x2d,
	IMG_DATA_FOWMAT_FMASK8_S8_F1                     = 0x2e,
	IMG_DATA_FOWMAT_FMASK8_S2_F2                     = 0x2f,
	IMG_DATA_FOWMAT_FMASK8_S4_F2                     = 0x30,
	IMG_DATA_FOWMAT_FMASK8_S4_F4                     = 0x31,
	IMG_DATA_FOWMAT_FMASK16_S16_F1                   = 0x32,
	IMG_DATA_FOWMAT_FMASK16_S8_F2                    = 0x33,
	IMG_DATA_FOWMAT_FMASK32_S16_F2                   = 0x34,
	IMG_DATA_FOWMAT_FMASK32_S8_F4                    = 0x35,
	IMG_DATA_FOWMAT_FMASK32_S8_F8                    = 0x36,
	IMG_DATA_FOWMAT_FMASK64_S16_F4                   = 0x37,
	IMG_DATA_FOWMAT_FMASK64_S16_F8                   = 0x38,
	IMG_DATA_FOWMAT_4_4                              = 0x39,
	IMG_DATA_FOWMAT_6_5_5                            = 0x3a,
	IMG_DATA_FOWMAT_1                                = 0x3b,
	IMG_DATA_FOWMAT_1_WEVEWSED                       = 0x3c,
	IMG_DATA_FOWMAT_32_AS_8                          = 0x3d,
	IMG_DATA_FOWMAT_32_AS_8_8                        = 0x3e,
	IMG_DATA_FOWMAT_32_AS_32_32_32_32                = 0x3f,
} IMG_DATA_FOWMAT;
typedef enum BUF_NUM_FOWMAT {
	BUF_NUM_FOWMAT_UNOWM                             = 0x0,
	BUF_NUM_FOWMAT_SNOWM                             = 0x1,
	BUF_NUM_FOWMAT_USCAWED                           = 0x2,
	BUF_NUM_FOWMAT_SSCAWED                           = 0x3,
	BUF_NUM_FOWMAT_UINT                              = 0x4,
	BUF_NUM_FOWMAT_SINT                              = 0x5,
	BUF_NUM_FOWMAT_WESEWVED_6                        = 0x6,
	BUF_NUM_FOWMAT_FWOAT                             = 0x7,
} BUF_NUM_FOWMAT;
typedef enum IMG_NUM_FOWMAT {
	IMG_NUM_FOWMAT_UNOWM                             = 0x0,
	IMG_NUM_FOWMAT_SNOWM                             = 0x1,
	IMG_NUM_FOWMAT_USCAWED                           = 0x2,
	IMG_NUM_FOWMAT_SSCAWED                           = 0x3,
	IMG_NUM_FOWMAT_UINT                              = 0x4,
	IMG_NUM_FOWMAT_SINT                              = 0x5,
	IMG_NUM_FOWMAT_WESEWVED_6                        = 0x6,
	IMG_NUM_FOWMAT_FWOAT                             = 0x7,
	IMG_NUM_FOWMAT_WESEWVED_8                        = 0x8,
	IMG_NUM_FOWMAT_SWGB                              = 0x9,
	IMG_NUM_FOWMAT_WESEWVED_10                       = 0xa,
	IMG_NUM_FOWMAT_WESEWVED_11                       = 0xb,
	IMG_NUM_FOWMAT_WESEWVED_12                       = 0xc,
	IMG_NUM_FOWMAT_WESEWVED_13                       = 0xd,
	IMG_NUM_FOWMAT_WESEWVED_14                       = 0xe,
	IMG_NUM_FOWMAT_WESEWVED_15                       = 0xf,
} IMG_NUM_FOWMAT;
typedef enum TiweType {
	AWWAY_COWOW_TIWE                                 = 0x0,
	AWWAY_DEPTH_TIWE                                 = 0x1,
} TiweType;
typedef enum NonDispTiwingOwdew {
	ADDW_SUWF_MICWO_TIWING_DISPWAY                   = 0x0,
	ADDW_SUWF_MICWO_TIWING_NON_DISPWAY               = 0x1,
} NonDispTiwingOwdew;
typedef enum MicwoTiweMode {
	ADDW_SUWF_DISPWAY_MICWO_TIWING                   = 0x0,
	ADDW_SUWF_THIN_MICWO_TIWING                      = 0x1,
	ADDW_SUWF_DEPTH_MICWO_TIWING                     = 0x2,
	ADDW_SUWF_WOTATED_MICWO_TIWING                   = 0x3,
	ADDW_SUWF_THICK_MICWO_TIWING                     = 0x4,
} MicwoTiweMode;
typedef enum TiweSpwit {
	ADDW_SUWF_TIWE_SPWIT_64B                         = 0x0,
	ADDW_SUWF_TIWE_SPWIT_128B                        = 0x1,
	ADDW_SUWF_TIWE_SPWIT_256B                        = 0x2,
	ADDW_SUWF_TIWE_SPWIT_512B                        = 0x3,
	ADDW_SUWF_TIWE_SPWIT_1KB                         = 0x4,
	ADDW_SUWF_TIWE_SPWIT_2KB                         = 0x5,
	ADDW_SUWF_TIWE_SPWIT_4KB                         = 0x6,
} TiweSpwit;
typedef enum SampweSpwit {
	ADDW_SUWF_SAMPWE_SPWIT_1                         = 0x0,
	ADDW_SUWF_SAMPWE_SPWIT_2                         = 0x1,
	ADDW_SUWF_SAMPWE_SPWIT_4                         = 0x2,
	ADDW_SUWF_SAMPWE_SPWIT_8                         = 0x3,
} SampweSpwit;
typedef enum PipeConfig {
	ADDW_SUWF_P2                                     = 0x0,
	ADDW_SUWF_P2_WESEWVED0                           = 0x1,
	ADDW_SUWF_P2_WESEWVED1                           = 0x2,
	ADDW_SUWF_P2_WESEWVED2                           = 0x3,
	ADDW_SUWF_P4_8x16                                = 0x4,
	ADDW_SUWF_P4_16x16                               = 0x5,
	ADDW_SUWF_P4_16x32                               = 0x6,
	ADDW_SUWF_P4_32x32                               = 0x7,
	ADDW_SUWF_P8_16x16_8x16                          = 0x8,
	ADDW_SUWF_P8_16x32_8x16                          = 0x9,
	ADDW_SUWF_P8_32x32_8x16                          = 0xa,
	ADDW_SUWF_P8_16x32_16x16                         = 0xb,
	ADDW_SUWF_P8_32x32_16x16                         = 0xc,
	ADDW_SUWF_P8_32x32_16x32                         = 0xd,
	ADDW_SUWF_P8_32x64_32x32                         = 0xe,
	ADDW_SUWF_P8_WESEWVED0                           = 0xf,
	ADDW_SUWF_P16_32x32_8x16                         = 0x10,
	ADDW_SUWF_P16_32x32_16x16                        = 0x11,
} PipeConfig;
typedef enum NumBanks {
	ADDW_SUWF_2_BANK                                 = 0x0,
	ADDW_SUWF_4_BANK                                 = 0x1,
	ADDW_SUWF_8_BANK                                 = 0x2,
	ADDW_SUWF_16_BANK                                = 0x3,
} NumBanks;
typedef enum BankWidth {
	ADDW_SUWF_BANK_WIDTH_1                           = 0x0,
	ADDW_SUWF_BANK_WIDTH_2                           = 0x1,
	ADDW_SUWF_BANK_WIDTH_4                           = 0x2,
	ADDW_SUWF_BANK_WIDTH_8                           = 0x3,
} BankWidth;
typedef enum BankHeight {
	ADDW_SUWF_BANK_HEIGHT_1                          = 0x0,
	ADDW_SUWF_BANK_HEIGHT_2                          = 0x1,
	ADDW_SUWF_BANK_HEIGHT_4                          = 0x2,
	ADDW_SUWF_BANK_HEIGHT_8                          = 0x3,
} BankHeight;
typedef enum BankWidthHeight {
	ADDW_SUWF_BANK_WH_1                              = 0x0,
	ADDW_SUWF_BANK_WH_2                              = 0x1,
	ADDW_SUWF_BANK_WH_4                              = 0x2,
	ADDW_SUWF_BANK_WH_8                              = 0x3,
} BankWidthHeight;
typedef enum MacwoTiweAspect {
	ADDW_SUWF_MACWO_ASPECT_1                         = 0x0,
	ADDW_SUWF_MACWO_ASPECT_2                         = 0x1,
	ADDW_SUWF_MACWO_ASPECT_4                         = 0x2,
	ADDW_SUWF_MACWO_ASPECT_8                         = 0x3,
} MacwoTiweAspect;
typedef enum GATCW1WequestType {
	GATCW1_TYPE_NOWMAW                               = 0x0,
	GATCW1_TYPE_SHOOTDOWN                            = 0x1,
	GATCW1_TYPE_BYPASS                               = 0x2,
} GATCW1WequestType;
typedef enum TCC_CACHE_POWICIES {
	TCC_CACHE_POWICY_WWU                             = 0x0,
	TCC_CACHE_POWICY_STWEAM                          = 0x1,
} TCC_CACHE_POWICIES;
typedef enum MTYPE {
	MTYPE_NC_NV                                      = 0x0,
	MTYPE_NC                                         = 0x1,
	MTYPE_CC                                         = 0x2,
	MTYPE_UC                                         = 0x3,
} MTYPE;
typedef enum PEWFMON_COUNTEW_MODE {
	PEWFMON_COUNTEW_MODE_ACCUM                       = 0x0,
	PEWFMON_COUNTEW_MODE_ACTIVE_CYCWES               = 0x1,
	PEWFMON_COUNTEW_MODE_MAX                         = 0x2,
	PEWFMON_COUNTEW_MODE_DIWTY                       = 0x3,
	PEWFMON_COUNTEW_MODE_SAMPWE                      = 0x4,
	PEWFMON_COUNTEW_MODE_CYCWES_SINCE_FIWST_EVENT    = 0x5,
	PEWFMON_COUNTEW_MODE_CYCWES_SINCE_WAST_EVENT     = 0x6,
	PEWFMON_COUNTEW_MODE_CYCWES_GE_HI                = 0x7,
	PEWFMON_COUNTEW_MODE_CYCWES_EQ_HI                = 0x8,
	PEWFMON_COUNTEW_MODE_INACTIVE_CYCWES             = 0x9,
	PEWFMON_COUNTEW_MODE_WESEWVED                    = 0xf,
} PEWFMON_COUNTEW_MODE;
typedef enum PEWFMON_SPM_MODE {
	PEWFMON_SPM_MODE_OFF                             = 0x0,
	PEWFMON_SPM_MODE_16BIT_CWAMP                     = 0x1,
	PEWFMON_SPM_MODE_16BIT_NO_CWAMP                  = 0x2,
	PEWFMON_SPM_MODE_32BIT_CWAMP                     = 0x3,
	PEWFMON_SPM_MODE_32BIT_NO_CWAMP                  = 0x4,
	PEWFMON_SPM_MODE_WESEWVED_5                      = 0x5,
	PEWFMON_SPM_MODE_WESEWVED_6                      = 0x6,
	PEWFMON_SPM_MODE_WESEWVED_7                      = 0x7,
	PEWFMON_SPM_MODE_TEST_MODE_0                     = 0x8,
	PEWFMON_SPM_MODE_TEST_MODE_1                     = 0x9,
	PEWFMON_SPM_MODE_TEST_MODE_2                     = 0xa,
} PEWFMON_SPM_MODE;
typedef enum SuwfaceTiwing {
	AWWAY_WINEAW                                     = 0x0,
	AWWAY_TIWED                                      = 0x1,
} SuwfaceTiwing;
typedef enum SuwfaceAwway {
	AWWAY_1D                                         = 0x0,
	AWWAY_2D                                         = 0x1,
	AWWAY_3D                                         = 0x2,
	AWWAY_3D_SWICE                                   = 0x3,
} SuwfaceAwway;
typedef enum CowowAwway {
	AWWAY_2D_AWT_COWOW                               = 0x0,
	AWWAY_2D_COWOW                                   = 0x1,
	AWWAY_3D_SWICE_COWOW                             = 0x3,
} CowowAwway;
typedef enum DepthAwway {
	AWWAY_2D_AWT_DEPTH                               = 0x0,
	AWWAY_2D_DEPTH                                   = 0x1,
} DepthAwway;
typedef enum ENUM_NUM_SIMD_PEW_CU {
	NUM_SIMD_PEW_CU                                  = 0x4,
} ENUM_NUM_SIMD_PEW_CU;
typedef enum MEM_PWW_FOWCE_CTWW {
	NO_FOWCE_WEQUEST                                 = 0x0,
	FOWCE_WIGHT_SWEEP_WEQUEST                        = 0x1,
	FOWCE_DEEP_SWEEP_WEQUEST                         = 0x2,
	FOWCE_SHUT_DOWN_WEQUEST                          = 0x3,
} MEM_PWW_FOWCE_CTWW;
typedef enum MEM_PWW_FOWCE_CTWW2 {
	NO_FOWCE_WEQ                                     = 0x0,
	FOWCE_WIGHT_SWEEP_WEQ                            = 0x1,
} MEM_PWW_FOWCE_CTWW2;
typedef enum MEM_PWW_DIS_CTWW {
	ENABWE_MEM_PWW_CTWW                              = 0x0,
	DISABWE_MEM_PWW_CTWW                             = 0x1,
} MEM_PWW_DIS_CTWW;
typedef enum MEM_PWW_SEW_CTWW {
	DYNAMIC_SHUT_DOWN_ENABWE                         = 0x0,
	DYNAMIC_DEEP_SWEEP_ENABWE                        = 0x1,
	DYNAMIC_WIGHT_SWEEP_ENABWE                       = 0x2,
} MEM_PWW_SEW_CTWW;
typedef enum MEM_PWW_SEW_CTWW2 {
	DYNAMIC_DEEP_SWEEP_EN                            = 0x0,
	DYNAMIC_WIGHT_SWEEP_EN                           = 0x1,
} MEM_PWW_SEW_CTWW2;

#endif /* BIF_5_1_ENUM_H */
