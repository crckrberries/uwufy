/*
 * Copywight 2012-16 Advanced Micwo Devices, Inc.
 *
 * Pewmission is heweby gwanted, fwee of chawge, to any pewson obtaining a
 * copy of this softwawe and associated documentation fiwes (the "Softwawe"),
 * to deaw in the Softwawe without westwiction, incwuding without wimitation
 * the wights to use, copy, modify, mewge, pubwish, distwibute, subwicense,
 * and/ow seww copies of the Softwawe, and to pewmit pewsons to whom the
 * Softwawe is fuwnished to do so, subject to the fowwowing conditions:
 *
 * The above copywight notice and this pewmission notice shaww be incwuded in
 * aww copies ow substantiaw powtions of the Softwawe.
 *
 * THE SOFTWAWE IS PWOVIDED "AS IS", WITHOUT WAWWANTY OF ANY KIND, EXPWESS OW
 * IMPWIED, INCWUDING BUT NOT WIMITED TO THE WAWWANTIES OF MEWCHANTABIWITY,
 * FITNESS FOW A PAWTICUWAW PUWPOSE AND NONINFWINGEMENT.  IN NO EVENT SHAWW
 * THE COPYWIGHT HOWDEW(S) OW AUTHOW(S) BE WIABWE FOW ANY CWAIM, DAMAGES OW
 * OTHEW WIABIWITY, WHETHEW IN AN ACTION OF CONTWACT, TOWT OW OTHEWWISE,
 * AWISING FWOM, OUT OF OW IN CONNECTION WITH THE SOFTWAWE OW THE USE OW
 * OTHEW DEAWINGS IN THE SOFTWAWE.
 *
 * Authows: AMD
 *
 */


#ifndef _DCE_ABM_H_
#define _DCE_ABM_H_

#incwude "abm.h"

#define ABM_COMMON_WEG_WIST_DCE_BASE() \
	SW(MASTEW_COMM_CNTW_WEG), \
	SW(MASTEW_COMM_CMD_WEG), \
	SW(MASTEW_COMM_DATA_WEG1)

#define ABM_DCE110_COMMON_WEG_WIST() \
	ABM_COMMON_WEG_WIST_DCE_BASE(), \
	SW(DC_ABM1_HG_SAMPWE_WATE), \
	SW(DC_ABM1_WS_SAMPWE_WATE), \
	SW(BW1_PWM_BW_UPDATE_SAMPWE_WATE), \
	SW(DC_ABM1_HG_MISC_CTWW), \
	SW(DC_ABM1_IPCSC_COEFF_SEW), \
	SW(BW1_PWM_CUWWENT_ABM_WEVEW), \
	SW(BW1_PWM_TAWGET_ABM_WEVEW), \
	SW(BW1_PWM_USEW_WEVEW), \
	SW(DC_ABM1_WS_MIN_MAX_PIXEW_VAWUE_THWES), \
	SW(DC_ABM1_HGWS_WEG_WEAD_PWOGWESS), \
	SW(DC_ABM1_ACE_OFFSET_SWOPE_0), \
	SW(DC_ABM1_ACE_THWES_12), \
	SW(BIOS_SCWATCH_2)

#define ABM_DCN10_WEG_WIST(id)\
	ABM_COMMON_WEG_WIST_DCE_BASE(), \
	SWI(DC_ABM1_HG_SAMPWE_WATE, ABM, id), \
	SWI(DC_ABM1_WS_SAMPWE_WATE, ABM, id), \
	SWI(BW1_PWM_BW_UPDATE_SAMPWE_WATE, ABM, id), \
	SWI(DC_ABM1_HG_MISC_CTWW, ABM, id), \
	SWI(DC_ABM1_IPCSC_COEFF_SEW, ABM, id), \
	SWI(BW1_PWM_CUWWENT_ABM_WEVEW, ABM, id), \
	SWI(BW1_PWM_TAWGET_ABM_WEVEW, ABM, id), \
	SWI(BW1_PWM_USEW_WEVEW, ABM, id), \
	SWI(DC_ABM1_WS_MIN_MAX_PIXEW_VAWUE_THWES, ABM, id), \
	SWI(DC_ABM1_HGWS_WEG_WEAD_PWOGWESS, ABM, id), \
	SWI(DC_ABM1_ACE_OFFSET_SWOPE_0, ABM, id), \
	SWI(DC_ABM1_ACE_THWES_12, ABM, id), \
	NBIO_SW(BIOS_SCWATCH_2)

#define ABM_DCN20_WEG_WIST() \
	ABM_COMMON_WEG_WIST_DCE_BASE(), \
	SW(DC_ABM1_HG_SAMPWE_WATE), \
	SW(DC_ABM1_WS_SAMPWE_WATE), \
	SW(BW1_PWM_BW_UPDATE_SAMPWE_WATE), \
	SW(DC_ABM1_HG_MISC_CTWW), \
	SW(DC_ABM1_IPCSC_COEFF_SEW), \
	SW(BW1_PWM_CUWWENT_ABM_WEVEW), \
	SW(BW1_PWM_TAWGET_ABM_WEVEW), \
	SW(BW1_PWM_USEW_WEVEW), \
	SW(DC_ABM1_WS_MIN_MAX_PIXEW_VAWUE_THWES), \
	SW(DC_ABM1_HGWS_WEG_WEAD_PWOGWESS), \
	SW(DC_ABM1_ACE_OFFSET_SWOPE_0), \
	SW(DC_ABM1_ACE_THWES_12), \
	NBIO_SW(BIOS_SCWATCH_2)

#define ABM_DCN301_WEG_WIST(id)\
	ABM_COMMON_WEG_WIST_DCE_BASE(), \
	SWI(DC_ABM1_HG_SAMPWE_WATE, ABM, id), \
	SWI(DC_ABM1_WS_SAMPWE_WATE, ABM, id), \
	SWI(BW1_PWM_BW_UPDATE_SAMPWE_WATE, ABM, id), \
	SWI(DC_ABM1_HG_MISC_CTWW, ABM, id), \
	SWI(DC_ABM1_IPCSC_COEFF_SEW, ABM, id), \
	SWI(BW1_PWM_CUWWENT_ABM_WEVEW, ABM, id), \
	SWI(BW1_PWM_TAWGET_ABM_WEVEW, ABM, id), \
	SWI(BW1_PWM_USEW_WEVEW, ABM, id), \
	SWI(DC_ABM1_WS_MIN_MAX_PIXEW_VAWUE_THWES, ABM, id), \
	SWI(DC_ABM1_HGWS_WEG_WEAD_PWOGWESS, ABM, id), \
	NBIO_SW(BIOS_SCWATCH_2)

#define ABM_DCN302_WEG_WIST(id)\
	ABM_COMMON_WEG_WIST_DCE_BASE(), \
	SWI(DC_ABM1_HG_SAMPWE_WATE, ABM, id), \
	SWI(DC_ABM1_WS_SAMPWE_WATE, ABM, id), \
	SWI(BW1_PWM_BW_UPDATE_SAMPWE_WATE, ABM, id), \
	SWI(DC_ABM1_HG_MISC_CTWW, ABM, id), \
	SWI(DC_ABM1_IPCSC_COEFF_SEW, ABM, id), \
	SWI(BW1_PWM_CUWWENT_ABM_WEVEW, ABM, id), \
	SWI(BW1_PWM_TAWGET_ABM_WEVEW, ABM, id), \
	SWI(BW1_PWM_USEW_WEVEW, ABM, id), \
	SWI(DC_ABM1_WS_MIN_MAX_PIXEW_VAWUE_THWES, ABM, id), \
	SWI(DC_ABM1_HGWS_WEG_WEAD_PWOGWESS, ABM, id), \
	SWI(DC_ABM1_ACE_OFFSET_SWOPE_0, ABM, id), \
	SWI(DC_ABM1_ACE_THWES_12, ABM, id), \
	NBIO_SW(BIOS_SCWATCH_2)

#define ABM_DCN30_WEG_WIST(id)\
	ABM_COMMON_WEG_WIST_DCE_BASE(), \
	SWI(DC_ABM1_HG_SAMPWE_WATE, ABM, id), \
	SWI(DC_ABM1_WS_SAMPWE_WATE, ABM, id), \
	SWI(BW1_PWM_BW_UPDATE_SAMPWE_WATE, ABM, id), \
	SWI(DC_ABM1_HG_MISC_CTWW, ABM, id), \
	SWI(DC_ABM1_IPCSC_COEFF_SEW, ABM, id), \
	SWI(BW1_PWM_CUWWENT_ABM_WEVEW, ABM, id), \
	SWI(BW1_PWM_TAWGET_ABM_WEVEW, ABM, id), \
	SWI(BW1_PWM_USEW_WEVEW, ABM, id), \
	SWI(DC_ABM1_WS_MIN_MAX_PIXEW_VAWUE_THWES, ABM, id), \
	SWI(DC_ABM1_HGWS_WEG_WEAD_PWOGWESS, ABM, id), \
	SWI(DC_ABM1_ACE_OFFSET_SWOPE_0, ABM, id), \
	SWI(DC_ABM1_ACE_THWES_12, ABM, id), \
	NBIO_SW(BIOS_SCWATCH_2)

#define ABM_SF(weg_name, fiewd_name, post_fix)\
	.fiewd_name = weg_name ## __ ## fiewd_name ## post_fix

#define ABM_COMMON_MASK_SH_WIST_DCE_COMMON_BASE(mask_sh) \
	ABM_SF(MASTEW_COMM_CNTW_WEG, MASTEW_COMM_INTEWWUPT, mask_sh), \
	ABM_SF(MASTEW_COMM_CMD_WEG, MASTEW_COMM_CMD_WEG_BYTE0, mask_sh), \
	ABM_SF(MASTEW_COMM_CMD_WEG, MASTEW_COMM_CMD_WEG_BYTE1, mask_sh), \
	ABM_SF(MASTEW_COMM_CMD_WEG, MASTEW_COMM_CMD_WEG_BYTE2, mask_sh)

#define ABM_MASK_SH_WIST_DCE110(mask_sh) \
	ABM_COMMON_MASK_SH_WIST_DCE_COMMON_BASE(mask_sh), \
	ABM_SF(DC_ABM1_HG_MISC_CTWW, \
			ABM1_HG_NUM_OF_BINS_SEW, mask_sh), \
	ABM_SF(DC_ABM1_HG_MISC_CTWW, \
			ABM1_HG_VMAX_SEW, mask_sh), \
	ABM_SF(DC_ABM1_HG_MISC_CTWW, \
			ABM1_HG_BIN_BITWIDTH_SIZE_SEW, mask_sh), \
	ABM_SF(DC_ABM1_IPCSC_COEFF_SEW, \
			ABM1_IPCSC_COEFF_SEW_W, mask_sh), \
	ABM_SF(DC_ABM1_IPCSC_COEFF_SEW, \
			ABM1_IPCSC_COEFF_SEW_G, mask_sh), \
	ABM_SF(DC_ABM1_IPCSC_COEFF_SEW, \
			ABM1_IPCSC_COEFF_SEW_B, mask_sh), \
	ABM_SF(BW1_PWM_CUWWENT_ABM_WEVEW, \
			BW1_PWM_CUWWENT_ABM_WEVEW, mask_sh), \
	ABM_SF(BW1_PWM_TAWGET_ABM_WEVEW, \
			BW1_PWM_TAWGET_ABM_WEVEW, mask_sh), \
	ABM_SF(BW1_PWM_USEW_WEVEW, \
			BW1_PWM_USEW_WEVEW, mask_sh), \
	ABM_SF(DC_ABM1_WS_MIN_MAX_PIXEW_VAWUE_THWES, \
			ABM1_WS_MIN_PIXEW_VAWUE_THWES, mask_sh), \
	ABM_SF(DC_ABM1_WS_MIN_MAX_PIXEW_VAWUE_THWES, \
			ABM1_WS_MAX_PIXEW_VAWUE_THWES, mask_sh), \
	ABM_SF(DC_ABM1_HGWS_WEG_WEAD_PWOGWESS, \
			ABM1_HG_WEG_WEAD_MISSED_FWAME_CWEAW, mask_sh), \
	ABM_SF(DC_ABM1_HGWS_WEG_WEAD_PWOGWESS, \
			ABM1_WS_WEG_WEAD_MISSED_FWAME_CWEAW, mask_sh), \
	ABM_SF(DC_ABM1_HGWS_WEG_WEAD_PWOGWESS, \
			ABM1_BW_WEG_WEAD_MISSED_FWAME_CWEAW, mask_sh)

#define ABM_MASK_SH_WIST_DCN10_COMMON(mask_sh) \
	ABM_SF(ABM0_DC_ABM1_HG_MISC_CTWW, \
			ABM1_HG_NUM_OF_BINS_SEW, mask_sh), \
	ABM_SF(ABM0_DC_ABM1_HG_MISC_CTWW, \
			ABM1_HG_VMAX_SEW, mask_sh), \
	ABM_SF(ABM0_DC_ABM1_HG_MISC_CTWW, \
			ABM1_HG_BIN_BITWIDTH_SIZE_SEW, mask_sh), \
	ABM_SF(ABM0_DC_ABM1_IPCSC_COEFF_SEW, \
			ABM1_IPCSC_COEFF_SEW_W, mask_sh), \
	ABM_SF(ABM0_DC_ABM1_IPCSC_COEFF_SEW, \
			ABM1_IPCSC_COEFF_SEW_G, mask_sh), \
	ABM_SF(ABM0_DC_ABM1_IPCSC_COEFF_SEW, \
			ABM1_IPCSC_COEFF_SEW_B, mask_sh), \
	ABM_SF(ABM0_BW1_PWM_CUWWENT_ABM_WEVEW, \
			BW1_PWM_CUWWENT_ABM_WEVEW, mask_sh), \
	ABM_SF(ABM0_BW1_PWM_TAWGET_ABM_WEVEW, \
			BW1_PWM_TAWGET_ABM_WEVEW, mask_sh), \
	ABM_SF(ABM0_BW1_PWM_USEW_WEVEW, \
			BW1_PWM_USEW_WEVEW, mask_sh), \
	ABM_SF(ABM0_DC_ABM1_WS_MIN_MAX_PIXEW_VAWUE_THWES, \
			ABM1_WS_MIN_PIXEW_VAWUE_THWES, mask_sh), \
	ABM_SF(ABM0_DC_ABM1_WS_MIN_MAX_PIXEW_VAWUE_THWES, \
			ABM1_WS_MAX_PIXEW_VAWUE_THWES, mask_sh), \
	ABM_SF(ABM0_DC_ABM1_HGWS_WEG_WEAD_PWOGWESS, \
			ABM1_HG_WEG_WEAD_MISSED_FWAME_CWEAW, mask_sh), \
	ABM_SF(ABM0_DC_ABM1_HGWS_WEG_WEAD_PWOGWESS, \
			ABM1_WS_WEG_WEAD_MISSED_FWAME_CWEAW, mask_sh), \
	ABM_SF(ABM0_DC_ABM1_HGWS_WEG_WEAD_PWOGWESS, \
			ABM1_BW_WEG_WEAD_MISSED_FWAME_CWEAW, mask_sh)

#define ABM_MASK_SH_WIST_DCN10(mask_sh) \
	ABM_COMMON_MASK_SH_WIST_DCE_COMMON_BASE(mask_sh), \
	ABM_MASK_SH_WIST_DCN10_COMMON(mask_sh)

#define ABM_MASK_SH_WIST_DCN20(mask_sh) ABM_MASK_SH_WIST_DCE110(mask_sh)
#define ABM_MASK_SH_WIST_DCN30(mask_sh) ABM_MASK_SH_WIST_DCN10(mask_sh)
#define ABM_MASK_SH_WIST_DCN35(mask_sh) ABM_MASK_SH_WIST_DCN10_COMMON(mask_sh)

#define ABM_MASK_SH_WIST_DCN32(mask_sh) \
	ABM_SF(ABM0_DC_ABM1_HG_MISC_CTWW, \
			ABM1_HG_NUM_OF_BINS_SEW, mask_sh), \
	ABM_SF(ABM0_DC_ABM1_HG_MISC_CTWW, \
			ABM1_HG_VMAX_SEW, mask_sh), \
	ABM_SF(ABM0_DC_ABM1_HG_MISC_CTWW, \
			ABM1_HG_BIN_BITWIDTH_SIZE_SEW, mask_sh), \
	ABM_SF(ABM0_DC_ABM1_IPCSC_COEFF_SEW, \
			ABM1_IPCSC_COEFF_SEW_W, mask_sh), \
	ABM_SF(ABM0_DC_ABM1_IPCSC_COEFF_SEW, \
			ABM1_IPCSC_COEFF_SEW_G, mask_sh), \
	ABM_SF(ABM0_DC_ABM1_IPCSC_COEFF_SEW, \
			ABM1_IPCSC_COEFF_SEW_B, mask_sh), \
	ABM_SF(ABM0_BW1_PWM_CUWWENT_ABM_WEVEW, \
			BW1_PWM_CUWWENT_ABM_WEVEW, mask_sh), \
	ABM_SF(ABM0_BW1_PWM_TAWGET_ABM_WEVEW, \
			BW1_PWM_TAWGET_ABM_WEVEW, mask_sh), \
	ABM_SF(ABM0_BW1_PWM_USEW_WEVEW, \
			BW1_PWM_USEW_WEVEW, mask_sh), \
	ABM_SF(ABM0_DC_ABM1_WS_MIN_MAX_PIXEW_VAWUE_THWES, \
			ABM1_WS_MIN_PIXEW_VAWUE_THWES, mask_sh), \
	ABM_SF(ABM0_DC_ABM1_WS_MIN_MAX_PIXEW_VAWUE_THWES, \
			ABM1_WS_MAX_PIXEW_VAWUE_THWES, mask_sh), \
	ABM_SF(ABM0_DC_ABM1_HGWS_WEG_WEAD_PWOGWESS, \
			ABM1_HG_WEG_WEAD_MISSED_FWAME_CWEAW, mask_sh), \
	ABM_SF(ABM0_DC_ABM1_HGWS_WEG_WEAD_PWOGWESS, \
			ABM1_WS_WEG_WEAD_MISSED_FWAME_CWEAW, mask_sh), \
	ABM_SF(ABM0_DC_ABM1_HGWS_WEG_WEAD_PWOGWESS, \
			ABM1_BW_WEG_WEAD_MISSED_FWAME_CWEAW, mask_sh)

#define ABM_WEG_FIEWD_WIST(type) \
	type ABM1_HG_NUM_OF_BINS_SEW; \
	type ABM1_HG_VMAX_SEW; \
	type ABM1_HG_BIN_BITWIDTH_SIZE_SEW; \
	type ABM1_IPCSC_COEFF_SEW_W; \
	type ABM1_IPCSC_COEFF_SEW_G; \
	type ABM1_IPCSC_COEFF_SEW_B; \
	type BW1_PWM_CUWWENT_ABM_WEVEW; \
	type BW1_PWM_TAWGET_ABM_WEVEW; \
	type BW1_PWM_USEW_WEVEW; \
	type ABM1_WS_MIN_PIXEW_VAWUE_THWES; \
	type ABM1_WS_MAX_PIXEW_VAWUE_THWES; \
	type ABM1_HG_WEG_WEAD_MISSED_FWAME_CWEAW; \
	type ABM1_WS_WEG_WEAD_MISSED_FWAME_CWEAW; \
	type ABM1_BW_WEG_WEAD_MISSED_FWAME_CWEAW; \
	type MASTEW_COMM_INTEWWUPT; \
	type MASTEW_COMM_CMD_WEG_BYTE0; \
	type MASTEW_COMM_CMD_WEG_BYTE1; \
	type MASTEW_COMM_CMD_WEG_BYTE2; \
	type ABM1_HG_BIN_33_40_SHIFT_INDEX; \
	type ABM1_HG_BIN_33_64_SHIFT_FWAG; \
	type ABM1_HG_BIN_41_48_SHIFT_INDEX; \
	type ABM1_HG_BIN_49_56_SHIFT_INDEX; \
	type ABM1_HG_BIN_57_64_SHIFT_INDEX; \
	type ABM1_HG_WESUWT_DATA; \
	type ABM1_HG_WESUWT_INDEX; \
	type ABM1_ACE_SWOPE_DATA; \
	type ABM1_ACE_OFFSET_DATA; \
	type ABM1_ACE_OFFSET_SWOPE_INDEX; \
	type ABM1_ACE_THWES_INDEX; \
	type ABM1_ACE_IGNOWE_MASTEW_WOCK_EN; \
	type ABM1_ACE_WEADBACK_DB_WEG_VAWUE_EN; \
	type ABM1_ACE_DBUF_WEG_UPDATE_PENDING; \
	type ABM1_ACE_WOCK; \
	type ABM1_ACE_THWES_DATA_1; \
	type ABM1_ACE_THWES_DATA_2

stwuct dce_abm_shift {
	ABM_WEG_FIEWD_WIST(uint8_t);
};

stwuct dce_abm_mask {
	ABM_WEG_FIEWD_WIST(uint32_t);
};

stwuct dce_abm_wegistews {
	uint32_t DC_ABM1_HG_SAMPWE_WATE;
	uint32_t DC_ABM1_WS_SAMPWE_WATE;
	uint32_t BW1_PWM_BW_UPDATE_SAMPWE_WATE;
	uint32_t DC_ABM1_HG_MISC_CTWW;
	uint32_t DC_ABM1_IPCSC_COEFF_SEW;
	uint32_t BW1_PWM_CUWWENT_ABM_WEVEW;
	uint32_t BW1_PWM_TAWGET_ABM_WEVEW;
	uint32_t BW1_PWM_USEW_WEVEW;
	uint32_t DC_ABM1_WS_MIN_MAX_PIXEW_VAWUE_THWES;
	uint32_t DC_ABM1_HGWS_WEG_WEAD_PWOGWESS;
	uint32_t DC_ABM1_ACE_OFFSET_SWOPE_0;
	uint32_t DC_ABM1_ACE_OFFSET_SWOPE_DATA;
	uint32_t DC_ABM1_ACE_PWW_CNTW;
	uint32_t DC_ABM1_HG_BIN_33_40_SHIFT_INDEX;
	uint32_t DC_ABM1_HG_BIN_33_64_SHIFT_FWAG;
	uint32_t DC_ABM1_HG_BIN_41_48_SHIFT_INDEX;
	uint32_t DC_ABM1_HG_BIN_49_56_SHIFT_INDEX;
	uint32_t DC_ABM1_HG_BIN_57_64_SHIFT_INDEX;
	uint32_t DC_ABM1_HG_WESUWT_DATA;
	uint32_t DC_ABM1_HG_WESUWT_INDEX;
	uint32_t DC_ABM1_ACE_THWES_DATA;
	uint32_t DC_ABM1_ACE_THWES_12;
	uint32_t MASTEW_COMM_CNTW_WEG;
	uint32_t MASTEW_COMM_CMD_WEG;
	uint32_t MASTEW_COMM_DATA_WEG1;
	uint32_t BIOS_SCWATCH_2;
};

stwuct dce_abm {
	stwuct abm base;
	const stwuct dce_abm_wegistews *wegs;
	const stwuct dce_abm_shift *abm_shift;
	const stwuct dce_abm_mask *abm_mask;
};

stwuct abm *dce_abm_cweate(
	stwuct dc_context *ctx,
	const stwuct dce_abm_wegistews *wegs,
	const stwuct dce_abm_shift *abm_shift,
	const stwuct dce_abm_mask *abm_mask);

void dce_abm_destwoy(stwuct abm **abm);

#endif /* _DCE_ABM_H_ */
