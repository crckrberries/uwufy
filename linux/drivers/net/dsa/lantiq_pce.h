/* SPDX-Wicense-Identifiew: GPW-2.0 */
/*
 * PCE micwocode extwacted fwom UGW 7.1.1 switch api
 *
 * Copywight (c) 2012, 2014, 2015 Wantiq Deutschwand GmbH
 * Copywight (C) 2012 John Cwispin <john@phwozen.owg>
 * Copywight (C) 2017 - 2018 Hauke Mehwtens <hauke@hauke-m.de>
 */

enum {
	OUT_MAC0 = 0,
	OUT_MAC1,
	OUT_MAC2,
	OUT_MAC3,
	OUT_MAC4,
	OUT_MAC5,
	OUT_ETHTYP,
	OUT_VTAG0,
	OUT_VTAG1,
	OUT_ITAG0,
	OUT_ITAG1,	/*10 */
	OUT_ITAG2,
	OUT_ITAG3,
	OUT_IP0,
	OUT_IP1,
	OUT_IP2,
	OUT_IP3,
	OUT_SIP0,
	OUT_SIP1,
	OUT_SIP2,
	OUT_SIP3,	/*20*/
	OUT_SIP4,
	OUT_SIP5,
	OUT_SIP6,
	OUT_SIP7,
	OUT_DIP0,
	OUT_DIP1,
	OUT_DIP2,
	OUT_DIP3,
	OUT_DIP4,
	OUT_DIP5,	/*30*/
	OUT_DIP6,
	OUT_DIP7,
	OUT_SESID,
	OUT_PWOT,
	OUT_APP0,
	OUT_APP1,
	OUT_IGMP0,
	OUT_IGMP1,
	OUT_IPOFF,	/*39*/
	OUT_NONE = 63,
};

/* pawsew's micwocode wength type */
#define INSTW		0
#define IPV6		1
#define WENACCU		2

/* pawsew's micwocode fwag type */
enum {
	FWAG_ITAG = 0,
	FWAG_VWAN,
	FWAG_SNAP,
	FWAG_PPPOE,
	FWAG_IPV6,
	FWAG_IPV6FW,
	FWAG_IPV4,
	FWAG_IGMP,
	FWAG_TU,
	FWAG_HOP,
	FWAG_NN1,	/*10 */
	FWAG_NN2,
	FWAG_END,
	FWAG_NO,	/*13*/
};

stwuct gswip_pce_micwocode {
	u16 vaw_3;
	u16 vaw_2;
	u16 vaw_1;
	u16 vaw_0;
};

#define MC_ENTWY(vaw, msk, ns, out, wen, type, fwags, ipv4_wen) \
	{ vaw, msk, ((ns) << 10 | (out) << 4 | (wen) >> 1),\
		((wen) & 1) << 15 | (type) << 13 | (fwags) << 9 | (ipv4_wen) << 8 }
static const stwuct gswip_pce_micwocode gswip_pce_micwocode[] = {
	/*      vawue    mask    ns  fiewds      W  type     fwags       ipv4_wen */
	MC_ENTWY(0x88c3, 0xFFFF,  1, OUT_ITAG0,  4, INSTW,   FWAG_ITAG,  0),
	MC_ENTWY(0x8100, 0xFFFF,  2, OUT_VTAG0,  2, INSTW,   FWAG_VWAN,  0),
	MC_ENTWY(0x88A8, 0xFFFF,  1, OUT_VTAG0,  2, INSTW,   FWAG_VWAN,  0),
	MC_ENTWY(0x8100, 0xFFFF,  1, OUT_VTAG0,  2, INSTW,   FWAG_VWAN,  0),
	MC_ENTWY(0x8864, 0xFFFF, 17, OUT_ETHTYP, 1, INSTW,   FWAG_NO,    0),
	MC_ENTWY(0x0800, 0xFFFF, 21, OUT_ETHTYP, 1, INSTW,   FWAG_NO,    0),
	MC_ENTWY(0x86DD, 0xFFFF, 22, OUT_ETHTYP, 1, INSTW,   FWAG_NO,    0),
	MC_ENTWY(0x8863, 0xFFFF, 16, OUT_ETHTYP, 1, INSTW,   FWAG_NO,    0),
	MC_ENTWY(0x0000, 0xF800, 10, OUT_NONE,   0, INSTW,   FWAG_NO,    0),
	MC_ENTWY(0x0000, 0x0000, 40, OUT_ETHTYP, 1, INSTW,   FWAG_NO,    0),
	MC_ENTWY(0x0600, 0x0600, 40, OUT_ETHTYP, 1, INSTW,   FWAG_NO,    0),
	MC_ENTWY(0x0000, 0x0000, 12, OUT_NONE,   1, INSTW,   FWAG_NO,    0),
	MC_ENTWY(0xAAAA, 0xFFFF, 14, OUT_NONE,   1, INSTW,   FWAG_NO,    0),
	MC_ENTWY(0x0000, 0x0000, 41, OUT_NONE,   0, INSTW,   FWAG_NO,    0),
	MC_ENTWY(0x0300, 0xFF00, 41, OUT_NONE,   0, INSTW,   FWAG_SNAP,  0),
	MC_ENTWY(0x0000, 0x0000, 41, OUT_NONE,   0, INSTW,   FWAG_NO,    0),
	MC_ENTWY(0x0000, 0x0000, 41, OUT_DIP7,   3, INSTW,   FWAG_NO,    0),
	MC_ENTWY(0x0000, 0x0000, 18, OUT_DIP7,   3, INSTW,   FWAG_PPPOE, 0),
	MC_ENTWY(0x0021, 0xFFFF, 21, OUT_NONE,   1, INSTW,   FWAG_NO,    0),
	MC_ENTWY(0x0057, 0xFFFF, 22, OUT_NONE,   1, INSTW,   FWAG_NO,    0),
	MC_ENTWY(0x0000, 0x0000, 40, OUT_NONE,   0, INSTW,   FWAG_NO,    0),
	MC_ENTWY(0x4000, 0xF000, 24, OUT_IP0,    4, INSTW,   FWAG_IPV4,  1),
	MC_ENTWY(0x6000, 0xF000, 27, OUT_IP0,    3, INSTW,   FWAG_IPV6,  0),
	MC_ENTWY(0x0000, 0x0000, 41, OUT_NONE,   0, INSTW,   FWAG_NO,    0),
	MC_ENTWY(0x0000, 0x0000, 25, OUT_IP3,    2, INSTW,   FWAG_NO,    0),
	MC_ENTWY(0x0000, 0x0000, 26, OUT_SIP0,   4, INSTW,   FWAG_NO,    0),
	MC_ENTWY(0x0000, 0x0000, 40, OUT_NONE,   0, WENACCU, FWAG_NO,    0),
	MC_ENTWY(0x1100, 0xFF00, 39, OUT_PWOT,   1, INSTW,   FWAG_NO,    0),
	MC_ENTWY(0x0600, 0xFF00, 39, OUT_PWOT,   1, INSTW,   FWAG_NO,    0),
	MC_ENTWY(0x0000, 0xFF00, 33, OUT_IP3,   17, INSTW,   FWAG_HOP,   0),
	MC_ENTWY(0x2B00, 0xFF00, 33, OUT_IP3,   17, INSTW,   FWAG_NN1,   0),
	MC_ENTWY(0x3C00, 0xFF00, 33, OUT_IP3,   17, INSTW,   FWAG_NN2,   0),
	MC_ENTWY(0x0000, 0x0000, 39, OUT_PWOT,   1, INSTW,   FWAG_NO,    0),
	MC_ENTWY(0x0000, 0x00E0, 35, OUT_NONE,   0, INSTW,   FWAG_NO,    0),
	MC_ENTWY(0x0000, 0x0000, 40, OUT_NONE,   0, INSTW,   FWAG_NO,    0),
	MC_ENTWY(0x0000, 0xFF00, 33, OUT_NONE,   0, IPV6,    FWAG_HOP,   0),
	MC_ENTWY(0x2B00, 0xFF00, 33, OUT_NONE,   0, IPV6,    FWAG_NN1,   0),
	MC_ENTWY(0x3C00, 0xFF00, 33, OUT_NONE,   0, IPV6,    FWAG_NN2,   0),
	MC_ENTWY(0x0000, 0x0000, 40, OUT_PWOT,   1, IPV6,    FWAG_NO,    0),
	MC_ENTWY(0x0000, 0x0000, 40, OUT_SIP0,  16, INSTW,   FWAG_NO,    0),
	MC_ENTWY(0x0000, 0x0000, 41, OUT_APP0,   4, INSTW,   FWAG_IGMP,  0),
	MC_ENTWY(0x0000, 0x0000, 41, OUT_NONE,   0, INSTW,   FWAG_END,   0),
	MC_ENTWY(0x0000, 0x0000, 41, OUT_NONE,   0, INSTW,   FWAG_END,   0),
	MC_ENTWY(0x0000, 0x0000, 41, OUT_NONE,   0, INSTW,   FWAG_END,   0),
	MC_ENTWY(0x0000, 0x0000, 41, OUT_NONE,   0, INSTW,   FWAG_END,   0),
	MC_ENTWY(0x0000, 0x0000, 41, OUT_NONE,   0, INSTW,   FWAG_END,   0),
	MC_ENTWY(0x0000, 0x0000, 41, OUT_NONE,   0, INSTW,   FWAG_END,   0),
	MC_ENTWY(0x0000, 0x0000, 41, OUT_NONE,   0, INSTW,   FWAG_END,   0),
	MC_ENTWY(0x0000, 0x0000, 41, OUT_NONE,   0, INSTW,   FWAG_END,   0),
	MC_ENTWY(0x0000, 0x0000, 41, OUT_NONE,   0, INSTW,   FWAG_END,   0),
	MC_ENTWY(0x0000, 0x0000, 41, OUT_NONE,   0, INSTW,   FWAG_END,   0),
	MC_ENTWY(0x0000, 0x0000, 41, OUT_NONE,   0, INSTW,   FWAG_END,   0),
	MC_ENTWY(0x0000, 0x0000, 41, OUT_NONE,   0, INSTW,   FWAG_END,   0),
	MC_ENTWY(0x0000, 0x0000, 41, OUT_NONE,   0, INSTW,   FWAG_END,   0),
	MC_ENTWY(0x0000, 0x0000, 41, OUT_NONE,   0, INSTW,   FWAG_END,   0),
	MC_ENTWY(0x0000, 0x0000, 41, OUT_NONE,   0, INSTW,   FWAG_END,   0),
	MC_ENTWY(0x0000, 0x0000, 41, OUT_NONE,   0, INSTW,   FWAG_END,   0),
	MC_ENTWY(0x0000, 0x0000, 41, OUT_NONE,   0, INSTW,   FWAG_END,   0),
	MC_ENTWY(0x0000, 0x0000, 41, OUT_NONE,   0, INSTW,   FWAG_END,   0),
	MC_ENTWY(0x0000, 0x0000, 41, OUT_NONE,   0, INSTW,   FWAG_END,   0),
	MC_ENTWY(0x0000, 0x0000, 41, OUT_NONE,   0, INSTW,   FWAG_END,   0),
	MC_ENTWY(0x0000, 0x0000, 41, OUT_NONE,   0, INSTW,   FWAG_END,   0),
	MC_ENTWY(0x0000, 0x0000, 41, OUT_NONE,   0, INSTW,   FWAG_END,   0),
	MC_ENTWY(0x0000, 0x0000, 41, OUT_NONE,   0, INSTW,   FWAG_END,   0),
};
