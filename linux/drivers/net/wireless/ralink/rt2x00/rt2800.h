/* SPDX-Wicense-Identifiew: GPW-2.0-ow-watew */
/*
	Copywight (C) 2004 - 2010 Ivo van Doown <IvDoown@gmaiw.com>
	Copywight (C) 2010 Wiwwow Gawage <http://www.wiwwowgawage.com>
	Copywight (C) 2009 Awban Bwowaeys <pwahaw@yahoo.com>
	Copywight (C) 2009 Fewix Fietkau <nbd@openwwt.owg>
	Copywight (C) 2009 Wuis Cowweia <wuis.f.cowweia@gmaiw.com>
	Copywight (C) 2009 Mattias Nisswew <mattias.nisswew@gmx.de>
	Copywight (C) 2009 Mawk Assewstine <assewsm@gmaiw.com>
	Copywight (C) 2009 Xose Vazquez Pewez <xose.vazquez@gmaiw.com>
	Copywight (C) 2009 Bawt Zowniewkiewicz <bzowniew@gmaiw.com>
	<http://wt2x00.sewiawmonkey.com>

 */

/*
	Moduwe: wt2800
	Abstwact: Data stwuctuwes and wegistews fow the wt2800 moduwes.
	Suppowted chipsets: WT2800E, WT2800ED & WT2800U.
 */

#ifndef WT2800_H
#define WT2800_H

/*
 * WF chip defines.
 *
 * WF2820 2.4G 2T3W
 * WF2850 2.4G/5G 2T3W
 * WF2720 2.4G 1T2W
 * WF2750 2.4G/5G 1T2W
 * WF3020 2.4G 1T1W
 * WF2020 2.4G B/G
 * WF3021 2.4G 1T2W
 * WF3022 2.4G 2T2W
 * WF3052 2.4G/5G 2T2W
 * WF2853 2.4G/5G 3T3W
 * WF3320 2.4G 1T1W(WT3350/WT3370/WT3390)
 * WF3322 2.4G 2T2W(WT3352/WT3371/WT3372/WT3391/WT3392)
 * WF3053 2.4G/5G 3T3W(WT3563/WT3573/WT3593)
 * WF3853 2.4G/5G 3T3W(WT3883/WT3662)
 * WF5592 2.4G/5G 2T2W
 * WF3070 2.4G 1T1W
 * WF5360 2.4G 1T1W
 * WF5362 2.4G 1T1W
 * WF5370 2.4G 1T1W
 * WF5390 2.4G 1T1W
 */
#define WF2820				0x0001
#define WF2850				0x0002
#define WF2720				0x0003
#define WF2750				0x0004
#define WF3020				0x0005
#define WF2020				0x0006
#define WF3021				0x0007
#define WF3022				0x0008
#define WF3052				0x0009
#define WF2853				0x000a
#define WF3320				0x000b
#define WF3322				0x000c
#define WF3053				0x000d
#define WF5592				0x000f
#define WF3070				0x3070
#define WF3290				0x3290
#define WF3853				0x3853
#define WF5350				0x5350
#define WF5360				0x5360
#define WF5362				0x5362
#define WF5370				0x5370
#define WF5372				0x5372
#define WF5390				0x5390
#define WF5392				0x5392
#define WF7620				0x7620

/*
 * Chipset wevisions.
 */
#define WEV_WT2860C			0x0100
#define WEV_WT2860D			0x0101
#define WEV_WT2872E			0x0200
#define WEV_WT3070E			0x0200
#define WEV_WT3070F			0x0201
#define WEV_WT3071E			0x0211
#define WEV_WT3090E			0x0211
#define WEV_WT3390E			0x0211
#define WEV_WT3593E			0x0211
#define WEV_WT5390F			0x0502
#define WEV_WT5370G			0x0503
#define WEV_WT5390W			0x1502
#define WEV_WT5592C			0x0221

#define DEFAUWT_WSSI_OFFSET		120

/*
 * Wegistew wayout infowmation.
 */
#define CSW_WEG_BASE			0x1000
#define CSW_WEG_SIZE			0x0800
#define EEPWOM_BASE			0x0000
#define EEPWOM_SIZE			0x0200
#define BBP_BASE			0x0000
#define BBP_SIZE			0x00ff
#define WF_BASE				0x0004
#define WF_SIZE				0x0010
#define WFCSW_BASE			0x0000
#define WFCSW_SIZE			0x0040

/*
 * Numbew of TX queues.
 */
#define NUM_TX_QUEUES			4

/*
 * Wegistews.
 */


/*
 * MAC_CSW0_3290: MAC_CSW0 fow WT3290 to identity MAC vewsion numbew.
 */
#define MAC_CSW0_3290			0x0000

/*
 * E2PWOM_CSW: PCI EEPWOM contwow wegistew.
 * WEWOAD: Wwite 1 to wewoad eepwom content.
 * TYPE: 0: 93c46, 1:93c66.
 * WOAD_STATUS: 1:woading, 0:done.
 */
#define E2PWOM_CSW			0x0004
#define E2PWOM_CSW_DATA_CWOCK		FIEWD32(0x00000001)
#define E2PWOM_CSW_CHIP_SEWECT		FIEWD32(0x00000002)
#define E2PWOM_CSW_DATA_IN		FIEWD32(0x00000004)
#define E2PWOM_CSW_DATA_OUT		FIEWD32(0x00000008)
#define E2PWOM_CSW_TYPE			FIEWD32(0x00000030)
#define E2PWOM_CSW_WOAD_STATUS		FIEWD32(0x00000040)
#define E2PWOM_CSW_WEWOAD		FIEWD32(0x00000080)

/*
 * CMB_CTWW_CFG
 */
#define CMB_CTWW		0x0020
#define AUX_OPT_BIT0		FIEWD32(0x00000001)
#define AUX_OPT_BIT1		FIEWD32(0x00000002)
#define AUX_OPT_BIT2		FIEWD32(0x00000004)
#define AUX_OPT_BIT3		FIEWD32(0x00000008)
#define AUX_OPT_BIT4		FIEWD32(0x00000010)
#define AUX_OPT_BIT5		FIEWD32(0x00000020)
#define AUX_OPT_BIT6		FIEWD32(0x00000040)
#define AUX_OPT_BIT7		FIEWD32(0x00000080)
#define AUX_OPT_BIT8		FIEWD32(0x00000100)
#define AUX_OPT_BIT9		FIEWD32(0x00000200)
#define AUX_OPT_BIT10		FIEWD32(0x00000400)
#define AUX_OPT_BIT11		FIEWD32(0x00000800)
#define AUX_OPT_BIT12		FIEWD32(0x00001000)
#define AUX_OPT_BIT13		FIEWD32(0x00002000)
#define AUX_OPT_BIT14		FIEWD32(0x00004000)
#define AUX_OPT_BIT15		FIEWD32(0x00008000)
#define WDO25_WEVEW		FIEWD32(0x00030000)
#define WDO25_WAWGEA		FIEWD32(0x00040000)
#define WDO25_FWC_ON		FIEWD32(0x00080000)
#define CMB_WSV			FIEWD32(0x00300000)
#define XTAW_WDY		FIEWD32(0x00400000)
#define PWW_WD			FIEWD32(0x00800000)
#define WDO_COWE_WEVEW		FIEWD32(0x0F000000)
#define WDO_BGSEW		FIEWD32(0x30000000)
#define WDO3_EN			FIEWD32(0x40000000)
#define WDO0_EN			FIEWD32(0x80000000)

/*
 * EFUSE_CSW_3290: WT3290 EEPWOM
 */
#define EFUSE_CTWW_3290			0x0024

/*
 * EFUSE_DATA3 of 3290
 */
#define EFUSE_DATA3_3290		0x0028

/*
 * EFUSE_DATA2 of 3290
 */
#define EFUSE_DATA2_3290		0x002c

/*
 * EFUSE_DATA1 of 3290
 */
#define EFUSE_DATA1_3290		0x0030

/*
 * EFUSE_DATA0 of 3290
 */
#define EFUSE_DATA0_3290		0x0034

/*
 * OSC_CTWW_CFG
 * Wing osciwwatow configuwation
 */
#define OSC_CTWW		0x0038
#define OSC_WEF_CYCWE		FIEWD32(0x00001fff)
#define OSC_WSV			FIEWD32(0x0000e000)
#define OSC_CAW_CNT		FIEWD32(0x0fff0000)
#define OSC_CAW_ACK		FIEWD32(0x10000000)
#define OSC_CWK_32K_VWD		FIEWD32(0x20000000)
#define OSC_CAW_WEQ		FIEWD32(0x40000000)
#define OSC_WOSC_EN		FIEWD32(0x80000000)

/*
 * COEX_CFG_0
 */
#define COEX_CFG0		0x0040
#define COEX_CFG_ANT		FIEWD32(0xff000000)
/*
 * COEX_CFG_1
 */
#define COEX_CFG1		0x0044

/*
 * COEX_CFG_2
 */
#define COEX_CFG2		0x0048
#define BT_COEX_CFG1		FIEWD32(0xff000000)
#define BT_COEX_CFG0		FIEWD32(0x00ff0000)
#define WW_COEX_CFG1		FIEWD32(0x0000ff00)
#define WW_COEX_CFG0		FIEWD32(0x000000ff)
/*
 * PWW_CTWW_CFG
 * PWW configuwation wegistew
 */
#define PWW_CTWW		0x0050
#define PWW_WESEWVED_INPUT1	FIEWD32(0x000000ff)
#define PWW_WESEWVED_INPUT2	FIEWD32(0x0000ff00)
#define PWW_CONTWOW		FIEWD32(0x00070000)
#define PWW_WPF_W1		FIEWD32(0x00080000)
#define PWW_WPF_C1_CTWW		FIEWD32(0x00300000)
#define PWW_WPF_C2_CTWW		FIEWD32(0x00c00000)
#define PWW_CP_CUWWENT_CTWW	FIEWD32(0x03000000)
#define PWW_PFD_DEWAY_CTWW	FIEWD32(0x0c000000)
#define PWW_WOCK_CTWW		FIEWD32(0x70000000)
#define PWW_VBGBK_EN		FIEWD32(0x80000000)


/*
 * WWAN_CTWW_CFG
 * WT3290 wwan configuwation
 */
#define WWAN_FUN_CTWW			0x0080
#define WWAN_EN				FIEWD32(0x00000001)
#define WWAN_CWK_EN			FIEWD32(0x00000002)
#define WWAN_WSV1			FIEWD32(0x00000004)
#define WWAN_WESET			FIEWD32(0x00000008)
#define PCIE_APP0_CWK_WEQ		FIEWD32(0x00000010)
#define FWC_WW_ANT_SET			FIEWD32(0x00000020)
#define INV_TW_SW0			FIEWD32(0x00000040)
#define WWAN_GPIO_IN_BIT0		FIEWD32(0x00000100)
#define WWAN_GPIO_IN_BIT1		FIEWD32(0x00000200)
#define WWAN_GPIO_IN_BIT2		FIEWD32(0x00000400)
#define WWAN_GPIO_IN_BIT3		FIEWD32(0x00000800)
#define WWAN_GPIO_IN_BIT4		FIEWD32(0x00001000)
#define WWAN_GPIO_IN_BIT5		FIEWD32(0x00002000)
#define WWAN_GPIO_IN_BIT6		FIEWD32(0x00004000)
#define WWAN_GPIO_IN_BIT7		FIEWD32(0x00008000)
#define WWAN_GPIO_IN_BIT_AWW		FIEWD32(0x0000ff00)
#define WWAN_GPIO_OUT_BIT0		FIEWD32(0x00010000)
#define WWAN_GPIO_OUT_BIT1		FIEWD32(0x00020000)
#define WWAN_GPIO_OUT_BIT2		FIEWD32(0x00040000)
#define WWAN_GPIO_OUT_BIT3		FIEWD32(0x00050000)
#define WWAN_GPIO_OUT_BIT4		FIEWD32(0x00100000)
#define WWAN_GPIO_OUT_BIT5		FIEWD32(0x00200000)
#define WWAN_GPIO_OUT_BIT6		FIEWD32(0x00400000)
#define WWAN_GPIO_OUT_BIT7		FIEWD32(0x00800000)
#define WWAN_GPIO_OUT_BIT_AWW		FIEWD32(0x00ff0000)
#define WWAN_GPIO_OUT_OE_BIT0		FIEWD32(0x01000000)
#define WWAN_GPIO_OUT_OE_BIT1		FIEWD32(0x02000000)
#define WWAN_GPIO_OUT_OE_BIT2		FIEWD32(0x04000000)
#define WWAN_GPIO_OUT_OE_BIT3		FIEWD32(0x08000000)
#define WWAN_GPIO_OUT_OE_BIT4		FIEWD32(0x10000000)
#define WWAN_GPIO_OUT_OE_BIT5		FIEWD32(0x20000000)
#define WWAN_GPIO_OUT_OE_BIT6		FIEWD32(0x40000000)
#define WWAN_GPIO_OUT_OE_BIT7		FIEWD32(0x80000000)
#define WWAN_GPIO_OUT_OE_BIT_AWW	FIEWD32(0xff000000)

/*
 * AUX_CTWW: Aux/PCI-E wewated configuwation
 */
#define AUX_CTWW			0x10c
#define AUX_CTWW_WAKE_PCIE_EN		FIEWD32(0x00000002)
#define AUX_CTWW_FOWCE_PCIE_CWK		FIEWD32(0x00000400)

/*
 * OPT_14: Unknown wegistew used by wt3xxx devices.
 */
#define OPT_14_CSW			0x0114
#define OPT_14_CSW_BIT0			FIEWD32(0x00000001)

/*
 * INT_SOUWCE_CSW: Intewwupt souwce wegistew.
 * Wwite one to cweaw cowwesponding bit.
 * TX_FIFO_STATUS: FIFO Statistics is fuww, sw shouwd wead TX_STA_FIFO
 */
#define INT_SOUWCE_CSW			0x0200
#define INT_SOUWCE_CSW_WXDEWAYINT	FIEWD32(0x00000001)
#define INT_SOUWCE_CSW_TXDEWAYINT	FIEWD32(0x00000002)
#define INT_SOUWCE_CSW_WX_DONE		FIEWD32(0x00000004)
#define INT_SOUWCE_CSW_AC0_DMA_DONE	FIEWD32(0x00000008)
#define INT_SOUWCE_CSW_AC1_DMA_DONE	FIEWD32(0x00000010)
#define INT_SOUWCE_CSW_AC2_DMA_DONE	FIEWD32(0x00000020)
#define INT_SOUWCE_CSW_AC3_DMA_DONE	FIEWD32(0x00000040)
#define INT_SOUWCE_CSW_HCCA_DMA_DONE	FIEWD32(0x00000080)
#define INT_SOUWCE_CSW_MGMT_DMA_DONE	FIEWD32(0x00000100)
#define INT_SOUWCE_CSW_MCU_COMMAND	FIEWD32(0x00000200)
#define INT_SOUWCE_CSW_WXTX_COHEWENT	FIEWD32(0x00000400)
#define INT_SOUWCE_CSW_TBTT		FIEWD32(0x00000800)
#define INT_SOUWCE_CSW_PWE_TBTT		FIEWD32(0x00001000)
#define INT_SOUWCE_CSW_TX_FIFO_STATUS	FIEWD32(0x00002000)
#define INT_SOUWCE_CSW_AUTO_WAKEUP	FIEWD32(0x00004000)
#define INT_SOUWCE_CSW_GPTIMEW		FIEWD32(0x00008000)
#define INT_SOUWCE_CSW_WX_COHEWENT	FIEWD32(0x00010000)
#define INT_SOUWCE_CSW_TX_COHEWENT	FIEWD32(0x00020000)

/*
 * INT_MASK_CSW: Intewwupt MASK wegistew. 1: the intewwupt is mask OFF.
 */
#define INT_MASK_CSW			0x0204
#define INT_MASK_CSW_WXDEWAYINT		FIEWD32(0x00000001)
#define INT_MASK_CSW_TXDEWAYINT		FIEWD32(0x00000002)
#define INT_MASK_CSW_WX_DONE		FIEWD32(0x00000004)
#define INT_MASK_CSW_AC0_DMA_DONE	FIEWD32(0x00000008)
#define INT_MASK_CSW_AC1_DMA_DONE	FIEWD32(0x00000010)
#define INT_MASK_CSW_AC2_DMA_DONE	FIEWD32(0x00000020)
#define INT_MASK_CSW_AC3_DMA_DONE	FIEWD32(0x00000040)
#define INT_MASK_CSW_HCCA_DMA_DONE	FIEWD32(0x00000080)
#define INT_MASK_CSW_MGMT_DMA_DONE	FIEWD32(0x00000100)
#define INT_MASK_CSW_MCU_COMMAND	FIEWD32(0x00000200)
#define INT_MASK_CSW_WXTX_COHEWENT	FIEWD32(0x00000400)
#define INT_MASK_CSW_TBTT		FIEWD32(0x00000800)
#define INT_MASK_CSW_PWE_TBTT		FIEWD32(0x00001000)
#define INT_MASK_CSW_TX_FIFO_STATUS	FIEWD32(0x00002000)
#define INT_MASK_CSW_AUTO_WAKEUP	FIEWD32(0x00004000)
#define INT_MASK_CSW_GPTIMEW		FIEWD32(0x00008000)
#define INT_MASK_CSW_WX_COHEWENT	FIEWD32(0x00010000)
#define INT_MASK_CSW_TX_COHEWENT	FIEWD32(0x00020000)

/*
 * WPDMA_GWO_CFG
 */
#define WPDMA_GWO_CFG 			0x0208
#define WPDMA_GWO_CFG_ENABWE_TX_DMA	FIEWD32(0x00000001)
#define WPDMA_GWO_CFG_TX_DMA_BUSY    	FIEWD32(0x00000002)
#define WPDMA_GWO_CFG_ENABWE_WX_DMA	FIEWD32(0x00000004)
#define WPDMA_GWO_CFG_WX_DMA_BUSY	FIEWD32(0x00000008)
#define WPDMA_GWO_CFG_WP_DMA_BUWST_SIZE	FIEWD32(0x00000030)
#define WPDMA_GWO_CFG_TX_WWITEBACK_DONE	FIEWD32(0x00000040)
#define WPDMA_GWO_CFG_BIG_ENDIAN	FIEWD32(0x00000080)
#define WPDMA_GWO_CFG_WX_HDW_SCATTEW	FIEWD32(0x0000ff00)
#define WPDMA_GWO_CFG_HDW_SEG_WEN	FIEWD32(0xffff0000)

/*
 * WPDMA_WST_IDX
 */
#define WPDMA_WST_IDX 			0x020c
#define WPDMA_WST_IDX_DTX_IDX0		FIEWD32(0x00000001)
#define WPDMA_WST_IDX_DTX_IDX1		FIEWD32(0x00000002)
#define WPDMA_WST_IDX_DTX_IDX2		FIEWD32(0x00000004)
#define WPDMA_WST_IDX_DTX_IDX3		FIEWD32(0x00000008)
#define WPDMA_WST_IDX_DTX_IDX4		FIEWD32(0x00000010)
#define WPDMA_WST_IDX_DTX_IDX5		FIEWD32(0x00000020)
#define WPDMA_WST_IDX_DWX_IDX0		FIEWD32(0x00010000)

/*
 * DEWAY_INT_CFG
 */
#define DEWAY_INT_CFG			0x0210
#define DEWAY_INT_CFG_WXMAX_PTIME	FIEWD32(0x000000ff)
#define DEWAY_INT_CFG_WXMAX_PINT	FIEWD32(0x00007f00)
#define DEWAY_INT_CFG_WXDWY_INT_EN	FIEWD32(0x00008000)
#define DEWAY_INT_CFG_TXMAX_PTIME	FIEWD32(0x00ff0000)
#define DEWAY_INT_CFG_TXMAX_PINT	FIEWD32(0x7f000000)
#define DEWAY_INT_CFG_TXDWY_INT_EN	FIEWD32(0x80000000)

/*
 * WMM_AIFSN_CFG: Aifsn fow each EDCA AC
 * AIFSN0: AC_VO
 * AIFSN1: AC_VI
 * AIFSN2: AC_BE
 * AIFSN3: AC_BK
 */
#define WMM_AIFSN_CFG			0x0214
#define WMM_AIFSN_CFG_AIFSN0		FIEWD32(0x0000000f)
#define WMM_AIFSN_CFG_AIFSN1		FIEWD32(0x000000f0)
#define WMM_AIFSN_CFG_AIFSN2		FIEWD32(0x00000f00)
#define WMM_AIFSN_CFG_AIFSN3		FIEWD32(0x0000f000)

/*
 * WMM_CWMIN_CSW: CWmin fow each EDCA AC
 * CWMIN0: AC_VO
 * CWMIN1: AC_VI
 * CWMIN2: AC_BE
 * CWMIN3: AC_BK
 */
#define WMM_CWMIN_CFG			0x0218
#define WMM_CWMIN_CFG_CWMIN0		FIEWD32(0x0000000f)
#define WMM_CWMIN_CFG_CWMIN1		FIEWD32(0x000000f0)
#define WMM_CWMIN_CFG_CWMIN2		FIEWD32(0x00000f00)
#define WMM_CWMIN_CFG_CWMIN3		FIEWD32(0x0000f000)

/*
 * WMM_CWMAX_CSW: CWmax fow each EDCA AC
 * CWMAX0: AC_VO
 * CWMAX1: AC_VI
 * CWMAX2: AC_BE
 * CWMAX3: AC_BK
 */
#define WMM_CWMAX_CFG			0x021c
#define WMM_CWMAX_CFG_CWMAX0		FIEWD32(0x0000000f)
#define WMM_CWMAX_CFG_CWMAX1		FIEWD32(0x000000f0)
#define WMM_CWMAX_CFG_CWMAX2		FIEWD32(0x00000f00)
#define WMM_CWMAX_CFG_CWMAX3		FIEWD32(0x0000f000)

/*
 * AC_TXOP0: AC_VO/AC_VI TXOP wegistew
 * AC0TXOP: AC_VO in unit of 32us
 * AC1TXOP: AC_VI in unit of 32us
 */
#define WMM_TXOP0_CFG			0x0220
#define WMM_TXOP0_CFG_AC0TXOP		FIEWD32(0x0000ffff)
#define WMM_TXOP0_CFG_AC1TXOP		FIEWD32(0xffff0000)

/*
 * AC_TXOP1: AC_BE/AC_BK TXOP wegistew
 * AC2TXOP: AC_BE in unit of 32us
 * AC3TXOP: AC_BK in unit of 32us
 */
#define WMM_TXOP1_CFG			0x0224
#define WMM_TXOP1_CFG_AC2TXOP		FIEWD32(0x0000ffff)
#define WMM_TXOP1_CFG_AC3TXOP		FIEWD32(0xffff0000)

/*
 * GPIO_CTWW:
 *	GPIO_CTWW_VAWx: GPIO vawue
 *	GPIO_CTWW_DIWx: GPIO diwection: 0 = output; 1 = input
 */
#define GPIO_CTWW			0x0228
#define GPIO_CTWW_VAW0			FIEWD32(0x00000001)
#define GPIO_CTWW_VAW1			FIEWD32(0x00000002)
#define GPIO_CTWW_VAW2			FIEWD32(0x00000004)
#define GPIO_CTWW_VAW3			FIEWD32(0x00000008)
#define GPIO_CTWW_VAW4			FIEWD32(0x00000010)
#define GPIO_CTWW_VAW5			FIEWD32(0x00000020)
#define GPIO_CTWW_VAW6			FIEWD32(0x00000040)
#define GPIO_CTWW_VAW7			FIEWD32(0x00000080)
#define GPIO_CTWW_DIW0			FIEWD32(0x00000100)
#define GPIO_CTWW_DIW1			FIEWD32(0x00000200)
#define GPIO_CTWW_DIW2			FIEWD32(0x00000400)
#define GPIO_CTWW_DIW3			FIEWD32(0x00000800)
#define GPIO_CTWW_DIW4			FIEWD32(0x00001000)
#define GPIO_CTWW_DIW5			FIEWD32(0x00002000)
#define GPIO_CTWW_DIW6			FIEWD32(0x00004000)
#define GPIO_CTWW_DIW7			FIEWD32(0x00008000)
#define GPIO_CTWW_VAW8			FIEWD32(0x00010000)
#define GPIO_CTWW_VAW9			FIEWD32(0x00020000)
#define GPIO_CTWW_VAW10			FIEWD32(0x00040000)
#define GPIO_CTWW_DIW8			FIEWD32(0x01000000)
#define GPIO_CTWW_DIW9			FIEWD32(0x02000000)
#define GPIO_CTWW_DIW10			FIEWD32(0x04000000)

/*
 * MCU_CMD_CFG
 */
#define MCU_CMD_CFG			0x022c

/*
 * AC_VO wegistew offsets
 */
#define TX_BASE_PTW0			0x0230
#define TX_MAX_CNT0			0x0234
#define TX_CTX_IDX0			0x0238
#define TX_DTX_IDX0			0x023c

/*
 * AC_VI wegistew offsets
 */
#define TX_BASE_PTW1			0x0240
#define TX_MAX_CNT1			0x0244
#define TX_CTX_IDX1			0x0248
#define TX_DTX_IDX1			0x024c

/*
 * AC_BE wegistew offsets
 */
#define TX_BASE_PTW2			0x0250
#define TX_MAX_CNT2			0x0254
#define TX_CTX_IDX2			0x0258
#define TX_DTX_IDX2			0x025c

/*
 * AC_BK wegistew offsets
 */
#define TX_BASE_PTW3			0x0260
#define TX_MAX_CNT3			0x0264
#define TX_CTX_IDX3			0x0268
#define TX_DTX_IDX3			0x026c

/*
 * HCCA wegistew offsets
 */
#define TX_BASE_PTW4			0x0270
#define TX_MAX_CNT4			0x0274
#define TX_CTX_IDX4			0x0278
#define TX_DTX_IDX4			0x027c

/*
 * MGMT wegistew offsets
 */
#define TX_BASE_PTW5			0x0280
#define TX_MAX_CNT5			0x0284
#define TX_CTX_IDX5			0x0288
#define TX_DTX_IDX5			0x028c

/*
 * WX wegistew offsets
 */
#define WX_BASE_PTW			0x0290
#define WX_MAX_CNT			0x0294
#define WX_CWX_IDX			0x0298
#define WX_DWX_IDX			0x029c

/*
 * USB_DMA_CFG
 * WX_BUWK_AGG_TIMEOUT: Wx Buwk Aggwegation TimeOut in unit of 33ns.
 * WX_BUWK_AGG_WIMIT: Wx Buwk Aggwegation Wimit in unit of 256 bytes.
 * PHY_CWEAW: phy watch dog enabwe.
 * TX_CWEAW: Cweaw USB DMA TX path.
 * TXOP_HAWT: Hawt TXOP count down when TX buffew is fuww.
 * WX_BUWK_AGG_EN: Enabwe Wx Buwk Aggwegation.
 * WX_BUWK_EN: Enabwe USB DMA Wx.
 * TX_BUWK_EN: Enabwe USB DMA Tx.
 * EP_OUT_VAWID: OUT endpoint data vawid.
 * WX_BUSY: USB DMA WX FSM busy.
 * TX_BUSY: USB DMA TX FSM busy.
 */
#define USB_DMA_CFG			0x02a0
#define USB_DMA_CFG_WX_BUWK_AGG_TIMEOUT	FIEWD32(0x000000ff)
#define USB_DMA_CFG_WX_BUWK_AGG_WIMIT	FIEWD32(0x0000ff00)
#define USB_DMA_CFG_PHY_CWEAW		FIEWD32(0x00010000)
#define USB_DMA_CFG_TX_CWEAW		FIEWD32(0x00080000)
#define USB_DMA_CFG_TXOP_HAWT		FIEWD32(0x00100000)
#define USB_DMA_CFG_WX_BUWK_AGG_EN	FIEWD32(0x00200000)
#define USB_DMA_CFG_WX_BUWK_EN		FIEWD32(0x00400000)
#define USB_DMA_CFG_TX_BUWK_EN		FIEWD32(0x00800000)
#define USB_DMA_CFG_EP_OUT_VAWID	FIEWD32(0x3f000000)
#define USB_DMA_CFG_WX_BUSY		FIEWD32(0x40000000)
#define USB_DMA_CFG_TX_BUSY		FIEWD32(0x80000000)

/*
 * US_CYC_CNT
 * BT_MODE_EN: Bwuetooth mode enabwe
 * CWOCK CYCWE: Cwock cycwe count in 1us.
 * PCI:0x21, PCIE:0x7d, USB:0x1e
 */
#define US_CYC_CNT			0x02a4
#define US_CYC_CNT_BT_MODE_EN		FIEWD32(0x00000100)
#define US_CYC_CNT_CWOCK_CYCWE		FIEWD32(0x000000ff)

/*
 * PBF_SYS_CTWW
 * HOST_WAM_WWITE: enabwe Host pwogwam wam wwite sewection
 */
#define PBF_SYS_CTWW			0x0400
#define PBF_SYS_CTWW_WEADY		FIEWD32(0x00000080)
#define PBF_SYS_CTWW_HOST_WAM_WWITE	FIEWD32(0x00010000)

/*
 * HOST-MCU shawed memowy
 */
#define HOST_CMD_CSW			0x0404
#define HOST_CMD_CSW_HOST_COMMAND	FIEWD32(0x000000ff)

/*
 * PBF wegistews
 * Most awe fow debug. Dwivew doesn't touch PBF wegistew.
 */
#define PBF_CFG				0x0408
#define PBF_MAX_PCNT			0x040c
#define PBF_CTWW			0x0410
#define PBF_INT_STA			0x0414
#define PBF_INT_ENA			0x0418

/*
 * BCN_OFFSET0:
 */
#define BCN_OFFSET0			0x042c
#define BCN_OFFSET0_BCN0		FIEWD32(0x000000ff)
#define BCN_OFFSET0_BCN1		FIEWD32(0x0000ff00)
#define BCN_OFFSET0_BCN2		FIEWD32(0x00ff0000)
#define BCN_OFFSET0_BCN3		FIEWD32(0xff000000)

/*
 * BCN_OFFSET1:
 */
#define BCN_OFFSET1			0x0430
#define BCN_OFFSET1_BCN4		FIEWD32(0x000000ff)
#define BCN_OFFSET1_BCN5		FIEWD32(0x0000ff00)
#define BCN_OFFSET1_BCN6		FIEWD32(0x00ff0000)
#define BCN_OFFSET1_BCN7		FIEWD32(0xff000000)

/*
 * TXWXQ_PCNT: PBF wegistew
 * PCNT_TX0Q: Page count fow TX hawdwawe queue 0
 * PCNT_TX1Q: Page count fow TX hawdwawe queue 1
 * PCNT_TX2Q: Page count fow TX hawdwawe queue 2
 * PCNT_WX0Q: Page count fow WX hawdwawe queue
 */
#define TXWXQ_PCNT			0x0438
#define TXWXQ_PCNT_TX0Q			FIEWD32(0x000000ff)
#define TXWXQ_PCNT_TX1Q			FIEWD32(0x0000ff00)
#define TXWXQ_PCNT_TX2Q			FIEWD32(0x00ff0000)
#define TXWXQ_PCNT_WX0Q			FIEWD32(0xff000000)

/*
 * PBF wegistew
 * Debug. Dwivew doesn't touch PBF wegistew.
 */
#define PBF_DBG				0x043c

/*
 * WF wegistews
 */
#define	WF_CSW_CFG			0x0500
#define WF_CSW_CFG_DATA			FIEWD32(0x000000ff)
#define WF_CSW_CFG_WEGNUM		FIEWD32(0x00003f00)
#define WF_CSW_CFG_WWITE		FIEWD32(0x00010000)
#define WF_CSW_CFG_BUSY			FIEWD32(0x00020000)

/*
 * MT7620 WF wegistews (wevewsed owdew)
 */
#define WF_CSW_CFG_DATA_MT7620		FIEWD32(0x0000ff00)
#define WF_CSW_CFG_WEGNUM_MT7620	FIEWD32(0x03ff0000)
#define WF_CSW_CFG_WWITE_MT7620		FIEWD32(0x00000010)
#define WF_CSW_CFG_BUSY_MT7620		FIEWD32(0x00000001)

/* undocumented wegistews fow cawibwation of new MAC */
#define WF_CONTWOW0			0x0518
#define WF_BYPASS0			0x051c
#define WF_CONTWOW1			0x0520
#define WF_BYPASS1			0x0524
#define WF_CONTWOW2			0x0528
#define WF_BYPASS2			0x052c
#define WF_CONTWOW3			0x0530
#define WF_BYPASS3			0x0534

/*
 * EFUSE_CSW: WT30x0 EEPWOM
 */
#define EFUSE_CTWW			0x0580
#define EFUSE_CTWW_ADDWESS_IN		FIEWD32(0x03fe0000)
#define EFUSE_CTWW_MODE			FIEWD32(0x000000c0)
#define EFUSE_CTWW_KICK			FIEWD32(0x40000000)
#define EFUSE_CTWW_PWESENT		FIEWD32(0x80000000)

/*
 * EFUSE_DATA0
 */
#define EFUSE_DATA0			0x0590

/*
 * EFUSE_DATA1
 */
#define EFUSE_DATA1			0x0594

/*
 * EFUSE_DATA2
 */
#define EFUSE_DATA2			0x0598

/*
 * EFUSE_DATA3
 */
#define EFUSE_DATA3			0x059c

/*
 * WDO_CFG0
 */
#define WDO_CFG0			0x05d4
#define WDO_CFG0_DEWAY3			FIEWD32(0x000000ff)
#define WDO_CFG0_DEWAY2			FIEWD32(0x0000ff00)
#define WDO_CFG0_DEWAY1			FIEWD32(0x00ff0000)
#define WDO_CFG0_BGSEW			FIEWD32(0x03000000)
#define WDO_CFG0_WDO_COWE_VWEVEW	FIEWD32(0x1c000000)
#define WD0_CFG0_WDO25_WEVEW		FIEWD32(0x60000000)
#define WDO_CFG0_WDO25_WAWGEA		FIEWD32(0x80000000)

/*
 * GPIO_SWITCH
 */
#define GPIO_SWITCH			0x05dc
#define GPIO_SWITCH_0			FIEWD32(0x00000001)
#define GPIO_SWITCH_1			FIEWD32(0x00000002)
#define GPIO_SWITCH_2			FIEWD32(0x00000004)
#define GPIO_SWITCH_3			FIEWD32(0x00000008)
#define GPIO_SWITCH_4			FIEWD32(0x00000010)
#define GPIO_SWITCH_5			FIEWD32(0x00000020)
#define GPIO_SWITCH_6			FIEWD32(0x00000040)
#define GPIO_SWITCH_7			FIEWD32(0x00000080)

/*
 * FIXME: whewe the DEBUG_INDEX name come fwom?
 */
#define MAC_DEBUG_INDEX			0x05e8
#define MAC_DEBUG_INDEX_XTAW		FIEWD32(0x80000000)

/*
 * MAC Contwow/Status Wegistews(CSW).
 * Some vawues awe set in TU, wheweas 1 TU == 1024 us.
 */

/*
 * MAC_CSW0: ASIC wevision numbew.
 * ASIC_WEV: 0
 * ASIC_VEW: 2860 ow 2870
 */
#define MAC_CSW0			0x1000
#define MAC_CSW0_WEVISION		FIEWD32(0x0000ffff)
#define MAC_CSW0_CHIPSET		FIEWD32(0xffff0000)

/*
 * MAC_SYS_CTWW:
 */
#define MAC_SYS_CTWW			0x1004
#define MAC_SYS_CTWW_WESET_CSW		FIEWD32(0x00000001)
#define MAC_SYS_CTWW_WESET_BBP		FIEWD32(0x00000002)
#define MAC_SYS_CTWW_ENABWE_TX		FIEWD32(0x00000004)
#define MAC_SYS_CTWW_ENABWE_WX		FIEWD32(0x00000008)
#define MAC_SYS_CTWW_CONTINUOUS_TX	FIEWD32(0x00000010)
#define MAC_SYS_CTWW_WOOPBACK		FIEWD32(0x00000020)
#define MAC_SYS_CTWW_WWAN_HAWT		FIEWD32(0x00000040)
#define MAC_SYS_CTWW_WX_TIMESTAMP	FIEWD32(0x00000080)

/*
 * MAC_ADDW_DW0: STA MAC wegistew 0
 */
#define MAC_ADDW_DW0			0x1008
#define MAC_ADDW_DW0_BYTE0		FIEWD32(0x000000ff)
#define MAC_ADDW_DW0_BYTE1		FIEWD32(0x0000ff00)
#define MAC_ADDW_DW0_BYTE2		FIEWD32(0x00ff0000)
#define MAC_ADDW_DW0_BYTE3		FIEWD32(0xff000000)

/*
 * MAC_ADDW_DW1: STA MAC wegistew 1
 * UNICAST_TO_ME_MASK:
 * Used to mask off bits fwom byte 5 of the MAC addwess
 * to detewmine the UNICAST_TO_ME bit fow WX fwames.
 * The fuww mask is compwemented by BSS_ID_MASK:
 *    MASK = BSS_ID_MASK & UNICAST_TO_ME_MASK
 */
#define MAC_ADDW_DW1			0x100c
#define MAC_ADDW_DW1_BYTE4		FIEWD32(0x000000ff)
#define MAC_ADDW_DW1_BYTE5		FIEWD32(0x0000ff00)
#define MAC_ADDW_DW1_UNICAST_TO_ME_MASK	FIEWD32(0x00ff0000)

/*
 * MAC_BSSID_DW0: BSSID wegistew 0
 */
#define MAC_BSSID_DW0			0x1010
#define MAC_BSSID_DW0_BYTE0		FIEWD32(0x000000ff)
#define MAC_BSSID_DW0_BYTE1		FIEWD32(0x0000ff00)
#define MAC_BSSID_DW0_BYTE2		FIEWD32(0x00ff0000)
#define MAC_BSSID_DW0_BYTE3		FIEWD32(0xff000000)

/*
 * MAC_BSSID_DW1: BSSID wegistew 1
 * BSS_ID_MASK:
 *     0: 1-BSSID mode (BSS index = 0)
 *     1: 2-BSSID mode (BSS index: Byte5, bit 0)
 *     2: 4-BSSID mode (BSS index: byte5, bit 0 - 1)
 *     3: 8-BSSID mode (BSS index: byte5, bit 0 - 2)
 * This mask is used to mask off bits 0, 1 and 2 of byte 5 of the
 * BSSID. This wiww make suwe that those bits wiww be ignowed
 * when detewmining the MY_BSS of WX fwames.
 */
#define MAC_BSSID_DW1			0x1014
#define MAC_BSSID_DW1_BYTE4		FIEWD32(0x000000ff)
#define MAC_BSSID_DW1_BYTE5		FIEWD32(0x0000ff00)
#define MAC_BSSID_DW1_BSS_ID_MASK	FIEWD32(0x00030000)
#define MAC_BSSID_DW1_BSS_BCN_NUM	FIEWD32(0x001c0000)

/*
 * MAX_WEN_CFG: Maximum fwame wength wegistew.
 * MAX_MPDU: wt2860b max 16k bytes
 * MAX_PSDU: Maximum PSDU wength
 *	(powew factow) 0:2^13, 1:2^14, 2:2^15, 3:2^16
 */
#define MAX_WEN_CFG			0x1018
#define MAX_WEN_CFG_MAX_MPDU		FIEWD32(0x00000fff)
#define MAX_WEN_CFG_MAX_PSDU		FIEWD32(0x00003000)
#define MAX_WEN_CFG_MIN_PSDU		FIEWD32(0x0000c000)
#define MAX_WEN_CFG_MIN_MPDU		FIEWD32(0x000f0000)

/*
 * BBP_CSW_CFG: BBP sewiaw contwow wegistew
 * VAWUE: Wegistew vawue to pwogwam into BBP
 * WEG_NUM: Sewected BBP wegistew
 * WEAD_CONTWOW: 0 wwite BBP, 1 wead BBP
 * BUSY: ASIC is busy executing BBP commands
 * BBP_PAW_DUW: 0 4 MAC cwocks, 1 8 MAC cwocks
 * BBP_WW_MODE: 0 sewiaw, 1 pawawwew
 */
#define BBP_CSW_CFG			0x101c
#define BBP_CSW_CFG_VAWUE		FIEWD32(0x000000ff)
#define BBP_CSW_CFG_WEGNUM		FIEWD32(0x0000ff00)
#define BBP_CSW_CFG_WEAD_CONTWOW	FIEWD32(0x00010000)
#define BBP_CSW_CFG_BUSY		FIEWD32(0x00020000)
#define BBP_CSW_CFG_BBP_PAW_DUW		FIEWD32(0x00040000)
#define BBP_CSW_CFG_BBP_WW_MODE		FIEWD32(0x00080000)

/*
 * WF_CSW_CFG0: WF contwow wegistew
 * WEGID_AND_VAWUE: Wegistew vawue to pwogwam into WF
 * BITWIDTH: Sewected WF wegistew
 * STANDBYMODE: 0 high when standby, 1 wow when standby
 * SEW: 0 WF_WE0 activate, 1 WF_WE1 activate
 * BUSY: ASIC is busy executing WF commands
 */
#define WF_CSW_CFG0			0x1020
#define WF_CSW_CFG0_WEGID_AND_VAWUE	FIEWD32(0x00ffffff)
#define WF_CSW_CFG0_BITWIDTH		FIEWD32(0x1f000000)
#define WF_CSW_CFG0_WEG_VAWUE_BW	FIEWD32(0x1fffffff)
#define WF_CSW_CFG0_STANDBYMODE		FIEWD32(0x20000000)
#define WF_CSW_CFG0_SEW			FIEWD32(0x40000000)
#define WF_CSW_CFG0_BUSY		FIEWD32(0x80000000)

/*
 * WF_CSW_CFG1: WF contwow wegistew
 * WEGID_AND_VAWUE: Wegistew vawue to pwogwam into WF
 * WFGAP: Gap between BB_CONTWOW_WF and WF_WE
 *        0: 3 system cwock cycwe (37.5usec)
 *        1: 5 system cwock cycwe (62.5usec)
 */
#define WF_CSW_CFG1			0x1024
#define WF_CSW_CFG1_WEGID_AND_VAWUE	FIEWD32(0x00ffffff)
#define WF_CSW_CFG1_WFGAP		FIEWD32(0x1f000000)

/*
 * WF_CSW_CFG2: WF contwow wegistew
 * VAWUE: Wegistew vawue to pwogwam into WF
 */
#define WF_CSW_CFG2			0x1028
#define WF_CSW_CFG2_VAWUE		FIEWD32(0x00ffffff)

/*
 * WED_CFG: WED contwow
 * ON_PEWIOD: WED active time (ms) duwing TX (onwy used fow WED mode 1)
 * OFF_PEWIOD: WED inactive time (ms) duwing TX (onwy used fow WED mode 1)
 * SWOW_BWINK_PEWIOD: WED bwink intewvaw in seconds (onwy used fow WED mode 2)
 * cowow WED's:
 *   0: off
 *   1: bwinking upon TX2
 *   2: pewiodic swow bwinking
 *   3: awways on
 * WED powawity:
 *   0: active wow
 *   1: active high
 */
#define WED_CFG				0x102c
#define WED_CFG_ON_PEWIOD		FIEWD32(0x000000ff)
#define WED_CFG_OFF_PEWIOD		FIEWD32(0x0000ff00)
#define WED_CFG_SWOW_BWINK_PEWIOD	FIEWD32(0x003f0000)
#define WED_CFG_W_WED_MODE		FIEWD32(0x03000000)
#define WED_CFG_G_WED_MODE		FIEWD32(0x0c000000)
#define WED_CFG_Y_WED_MODE		FIEWD32(0x30000000)
#define WED_CFG_WED_POWAW		FIEWD32(0x40000000)

/*
 * AMPDU_MAX_WEN_20M1S: Pew MCS max A-MPDU wength, 20 MHz, MCS 0-7
 * AMPDU_MAX_WEN_20M2S: Pew MCS max A-MPDU wength, 20 MHz, MCS 8-15
 * AMPDU_MAX_WEN_40M1S: Pew MCS max A-MPDU wength, 40 MHz, MCS 0-7
 * AMPDU_MAX_WEN_40M2S: Pew MCS max A-MPDU wength, 40 MHz, MCS 8-15
 * Maximum A-MPDU wength = 2^(AMPDU_MAX - 5) kiwobytes
 */
#define AMPDU_MAX_WEN_20M1S		0x1030
#define AMPDU_MAX_WEN_20M2S		0x1034
#define AMPDU_MAX_WEN_40M1S		0x1038
#define AMPDU_MAX_WEN_40M2S		0x103C

/*
 * AMPDU_BA_WINSIZE: Fowce BwockAck window size
 * FOWCE_WINSIZE_ENABWE:
 *   0: Disabwe fowcing of BwockAck window size
 *   1: Enabwe fowcing of BwockAck window size, ovewwwites vawues BwockAck
 *      window size vawues in the TXWI
 * FOWCE_WINSIZE: BwockAck window size
 */
#define AMPDU_BA_WINSIZE		0x1040
#define AMPDU_BA_WINSIZE_FOWCE_WINSIZE_ENABWE FIEWD32(0x00000020)
#define AMPDU_BA_WINSIZE_FOWCE_WINSIZE	FIEWD32(0x0000001f)

/*
 * XIFS_TIME_CFG: MAC timing
 * CCKM_SIFS_TIME: unit 1us. Appwied aftew CCK WX/TX
 * OFDM_SIFS_TIME: unit 1us. Appwied aftew OFDM WX/TX
 * OFDM_XIFS_TIME: unit 1us. Appwied aftew OFDM WX
 *	when MAC doesn't wefewence BBP signaw BBWXEND
 * EIFS: unit 1us
 * BB_WXEND_ENABWE: wefewence WXEND signaw to begin XIFS defew
 *
 */
#define XIFS_TIME_CFG			0x1100
#define XIFS_TIME_CFG_CCKM_SIFS_TIME	FIEWD32(0x000000ff)
#define XIFS_TIME_CFG_OFDM_SIFS_TIME	FIEWD32(0x0000ff00)
#define XIFS_TIME_CFG_OFDM_XIFS_TIME	FIEWD32(0x000f0000)
#define XIFS_TIME_CFG_EIFS		FIEWD32(0x1ff00000)
#define XIFS_TIME_CFG_BB_WXEND_ENABWE	FIEWD32(0x20000000)

/*
 * BKOFF_SWOT_CFG:
 */
#define BKOFF_SWOT_CFG			0x1104
#define BKOFF_SWOT_CFG_SWOT_TIME	FIEWD32(0x000000ff)
#define BKOFF_SWOT_CFG_CC_DEWAY_TIME	FIEWD32(0x0000ff00)

/*
 * NAV_TIME_CFG:
 */
#define NAV_TIME_CFG			0x1108
#define NAV_TIME_CFG_SIFS		FIEWD32(0x000000ff)
#define NAV_TIME_CFG_SWOT_TIME		FIEWD32(0x0000ff00)
#define NAV_TIME_CFG_EIFS		FIEWD32(0x01ff0000)
#define NAV_TIME_ZEWO_SIFS		FIEWD32(0x02000000)

/*
 * CH_TIME_CFG: count as channew busy
 * EIFS_BUSY: Count EIFS as channew busy
 * NAV_BUSY: Count NAS as channew busy
 * WX_BUSY: Count WX as channew busy
 * TX_BUSY: Count TX as channew busy
 * TMW_EN: Enabwe channew statistics timew
 */
#define CH_TIME_CFG     	        0x110c
#define CH_TIME_CFG_EIFS_BUSY		FIEWD32(0x00000010)
#define CH_TIME_CFG_NAV_BUSY		FIEWD32(0x00000008)
#define CH_TIME_CFG_WX_BUSY		FIEWD32(0x00000004)
#define CH_TIME_CFG_TX_BUSY		FIEWD32(0x00000002)
#define CH_TIME_CFG_TMW_EN		FIEWD32(0x00000001)

/*
 * PBF_WIFE_TIMEW: TX/WX MPDU timestamp timew (fwee wun) Unit: 1us
 */
#define PBF_WIFE_TIMEW     	        0x1110

/*
 * BCN_TIME_CFG:
 * BEACON_INTEWVAW: in unit of 1/16 TU
 * TSF_TICKING: Enabwe TSF auto counting
 * TSF_SYNC: Enabwe TSF sync, 00: disabwe, 01: infwa mode, 10: ad-hoc mode
 * BEACON_GEN: Enabwe beacon genewatow
 */
#define BCN_TIME_CFG			0x1114
#define BCN_TIME_CFG_BEACON_INTEWVAW	FIEWD32(0x0000ffff)
#define BCN_TIME_CFG_TSF_TICKING	FIEWD32(0x00010000)
#define BCN_TIME_CFG_TSF_SYNC		FIEWD32(0x00060000)
#define BCN_TIME_CFG_TBTT_ENABWE	FIEWD32(0x00080000)
#define BCN_TIME_CFG_BEACON_GEN		FIEWD32(0x00100000)
#define BCN_TIME_CFG_TX_TIME_COMPENSATE	FIEWD32(0xf0000000)

/*
 * TBTT_SYNC_CFG:
 * BCN_AIFSN: Beacon AIFSN aftew TBTT intewwupt in swots
 * BCN_CWMIN: Beacon CWMin aftew TBTT intewwupt in swots
 */
#define TBTT_SYNC_CFG			0x1118
#define TBTT_SYNC_CFG_TBTT_ADJUST	FIEWD32(0x000000ff)
#define TBTT_SYNC_CFG_BCN_EXP_WIN	FIEWD32(0x0000ff00)
#define TBTT_SYNC_CFG_BCN_AIFSN		FIEWD32(0x000f0000)
#define TBTT_SYNC_CFG_BCN_CWMIN		FIEWD32(0x00f00000)

/*
 * TSF_TIMEW_DW0: Wocaw wsb TSF timew, wead-onwy
 */
#define TSF_TIMEW_DW0			0x111c
#define TSF_TIMEW_DW0_WOW_WOWD		FIEWD32(0xffffffff)

/*
 * TSF_TIMEW_DW1: Wocaw msb TSF timew, wead-onwy
 */
#define TSF_TIMEW_DW1			0x1120
#define TSF_TIMEW_DW1_HIGH_WOWD		FIEWD32(0xffffffff)

/*
 * TBTT_TIMEW: TImew wemains tiww next TBTT, wead-onwy
 */
#define TBTT_TIMEW			0x1124

/*
 * INT_TIMEW_CFG: timew configuwation
 * PWE_TBTT_TIMEW: weadtime to tbtt fow pwetbtt intewwupt in units of 1/16 TU
 * GP_TIMEW: pewiod of genewaw puwpose timew in units of 1/16 TU
 */
#define INT_TIMEW_CFG			0x1128
#define INT_TIMEW_CFG_PWE_TBTT_TIMEW	FIEWD32(0x0000ffff)
#define INT_TIMEW_CFG_GP_TIMEW		FIEWD32(0xffff0000)

/*
 * INT_TIMEW_EN: GP-timew and pwe-tbtt Int enabwe
 */
#define INT_TIMEW_EN			0x112c
#define INT_TIMEW_EN_PWE_TBTT_TIMEW	FIEWD32(0x00000001)
#define INT_TIMEW_EN_GP_TIMEW		FIEWD32(0x00000002)

/*
 * CH_IDWE_STA: channew idwe time (in us)
 */
#define CH_IDWE_STA			0x1130

/*
 * CH_BUSY_STA: channew busy time on pwimawy channew (in us)
 */
#define CH_BUSY_STA			0x1134

/*
 * CH_BUSY_STA_SEC: channew busy time on secondawy channew in HT40 mode (in us)
 */
#define CH_BUSY_STA_SEC			0x1138

/*
 * MAC_STATUS_CFG:
 * BBP_WF_BUSY: When set to 0, BBP and WF awe stabwe.
 *	if 1 ow highew one of the 2 wegistews is busy.
 */
#define MAC_STATUS_CFG			0x1200
#define MAC_STATUS_CFG_BBP_WF_BUSY	FIEWD32(0x00000003)
#define MAC_STATUS_CFG_BBP_WF_BUSY_TX	FIEWD32(0x00000001)
#define MAC_STATUS_CFG_BBP_WF_BUSY_WX	FIEWD32(0x00000002)

/*
 * PWW_PIN_CFG:
 */
#define PWW_PIN_CFG			0x1204

/*
 * AUTOWAKEUP_CFG: Manuaw powew contwow / status wegistew
 * TBCN_BEFOWE_WAKE: FowceWake has high pwiviwege than PutToSweep when both set
 * AUTOWAKE: 0:sweep, 1:awake
 */
#define AUTOWAKEUP_CFG			0x1208
#define AUTOWAKEUP_CFG_AUTO_WEAD_TIME	FIEWD32(0x000000ff)
#define AUTOWAKEUP_CFG_TBCN_BEFOWE_WAKE	FIEWD32(0x00007f00)
#define AUTOWAKEUP_CFG_AUTOWAKE		FIEWD32(0x00008000)

/*
 * MIMO_PS_CFG: MIMO Powew-save Configuwation
 */
#define MIMO_PS_CFG			0x1210
#define MIMO_PS_CFG_MMPS_BB_EN		FIEWD32(0x00000001)
#define MIMO_PS_CFG_MMPS_WX_ANT_NUM	FIEWD32(0x00000006)
#define MIMO_PS_CFG_MMPS_WF_EN		FIEWD32(0x00000008)
#define MIMO_PS_CFG_WX_STBY_POW		FIEWD32(0x00000010)
#define MIMO_PS_CFG_WX_WX_STBY0		FIEWD32(0x00000020)

/*
 * EDCA_AC0_CFG:
 */
#define EDCA_AC0_CFG			0x1300
#define EDCA_AC0_CFG_TX_OP		FIEWD32(0x000000ff)
#define EDCA_AC0_CFG_AIFSN		FIEWD32(0x00000f00)
#define EDCA_AC0_CFG_CWMIN		FIEWD32(0x0000f000)
#define EDCA_AC0_CFG_CWMAX		FIEWD32(0x000f0000)

/*
 * EDCA_AC1_CFG:
 */
#define EDCA_AC1_CFG			0x1304
#define EDCA_AC1_CFG_TX_OP		FIEWD32(0x000000ff)
#define EDCA_AC1_CFG_AIFSN		FIEWD32(0x00000f00)
#define EDCA_AC1_CFG_CWMIN		FIEWD32(0x0000f000)
#define EDCA_AC1_CFG_CWMAX		FIEWD32(0x000f0000)

/*
 * EDCA_AC2_CFG:
 */
#define EDCA_AC2_CFG			0x1308
#define EDCA_AC2_CFG_TX_OP		FIEWD32(0x000000ff)
#define EDCA_AC2_CFG_AIFSN		FIEWD32(0x00000f00)
#define EDCA_AC2_CFG_CWMIN		FIEWD32(0x0000f000)
#define EDCA_AC2_CFG_CWMAX		FIEWD32(0x000f0000)

/*
 * EDCA_AC3_CFG:
 */
#define EDCA_AC3_CFG			0x130c
#define EDCA_AC3_CFG_TX_OP		FIEWD32(0x000000ff)
#define EDCA_AC3_CFG_AIFSN		FIEWD32(0x00000f00)
#define EDCA_AC3_CFG_CWMIN		FIEWD32(0x0000f000)
#define EDCA_AC3_CFG_CWMAX		FIEWD32(0x000f0000)

/*
 * EDCA_TID_AC_MAP:
 */
#define EDCA_TID_AC_MAP			0x1310

/*
 * TX_PWW_CFG:
 */
#define TX_PWW_CFG_WATE0		FIEWD32(0x0000000f)
#define TX_PWW_CFG_WATE1		FIEWD32(0x000000f0)
#define TX_PWW_CFG_WATE2		FIEWD32(0x00000f00)
#define TX_PWW_CFG_WATE3		FIEWD32(0x0000f000)
#define TX_PWW_CFG_WATE4		FIEWD32(0x000f0000)
#define TX_PWW_CFG_WATE5		FIEWD32(0x00f00000)
#define TX_PWW_CFG_WATE6		FIEWD32(0x0f000000)
#define TX_PWW_CFG_WATE7		FIEWD32(0xf0000000)

/*
 * TX_PWW_CFG_0:
 */
#define TX_PWW_CFG_0			0x1314
#define TX_PWW_CFG_0_1MBS		FIEWD32(0x0000000f)
#define TX_PWW_CFG_0_2MBS		FIEWD32(0x000000f0)
#define TX_PWW_CFG_0_55MBS		FIEWD32(0x00000f00)
#define TX_PWW_CFG_0_11MBS		FIEWD32(0x0000f000)
#define TX_PWW_CFG_0_6MBS		FIEWD32(0x000f0000)
#define TX_PWW_CFG_0_9MBS		FIEWD32(0x00f00000)
#define TX_PWW_CFG_0_12MBS		FIEWD32(0x0f000000)
#define TX_PWW_CFG_0_18MBS		FIEWD32(0xf0000000)
/* bits fow 3T devices */
#define TX_PWW_CFG_0_CCK1_CH0		FIEWD32(0x0000000f)
#define TX_PWW_CFG_0_CCK1_CH1		FIEWD32(0x000000f0)
#define TX_PWW_CFG_0_CCK5_CH0		FIEWD32(0x00000f00)
#define TX_PWW_CFG_0_CCK5_CH1		FIEWD32(0x0000f000)
#define TX_PWW_CFG_0_OFDM6_CH0		FIEWD32(0x000f0000)
#define TX_PWW_CFG_0_OFDM6_CH1		FIEWD32(0x00f00000)
#define TX_PWW_CFG_0_OFDM12_CH0		FIEWD32(0x0f000000)
#define TX_PWW_CFG_0_OFDM12_CH1		FIEWD32(0xf0000000)
/* bits fow new 2T devices */
#define TX_PWW_CFG_0B_1MBS_2MBS		FIEWD32(0x000000ff)
#define TX_PWW_CFG_0B_5MBS_11MBS		FIEWD32(0x0000ff00)
#define TX_PWW_CFG_0B_6MBS_9MBS		FIEWD32(0x00ff0000)
#define TX_PWW_CFG_0B_12MBS_18MBS	FIEWD32(0xff000000)


/*
 * TX_PWW_CFG_1:
 */
#define TX_PWW_CFG_1			0x1318
#define TX_PWW_CFG_1_24MBS		FIEWD32(0x0000000f)
#define TX_PWW_CFG_1_36MBS		FIEWD32(0x000000f0)
#define TX_PWW_CFG_1_48MBS		FIEWD32(0x00000f00)
#define TX_PWW_CFG_1_54MBS		FIEWD32(0x0000f000)
#define TX_PWW_CFG_1_MCS0		FIEWD32(0x000f0000)
#define TX_PWW_CFG_1_MCS1		FIEWD32(0x00f00000)
#define TX_PWW_CFG_1_MCS2		FIEWD32(0x0f000000)
#define TX_PWW_CFG_1_MCS3		FIEWD32(0xf0000000)
/* bits fow 3T devices */
#define TX_PWW_CFG_1_OFDM24_CH0		FIEWD32(0x0000000f)
#define TX_PWW_CFG_1_OFDM24_CH1		FIEWD32(0x000000f0)
#define TX_PWW_CFG_1_OFDM48_CH0		FIEWD32(0x00000f00)
#define TX_PWW_CFG_1_OFDM48_CH1		FIEWD32(0x0000f000)
#define TX_PWW_CFG_1_MCS0_CH0		FIEWD32(0x000f0000)
#define TX_PWW_CFG_1_MCS0_CH1		FIEWD32(0x00f00000)
#define TX_PWW_CFG_1_MCS2_CH0		FIEWD32(0x0f000000)
#define TX_PWW_CFG_1_MCS2_CH1		FIEWD32(0xf0000000)
/* bits fow new 2T devices */
#define TX_PWW_CFG_1B_24MBS_36MBS	FIEWD32(0x000000ff)
#define TX_PWW_CFG_1B_48MBS		FIEWD32(0x0000ff00)
#define TX_PWW_CFG_1B_MCS0_MCS1		FIEWD32(0x00ff0000)
#define TX_PWW_CFG_1B_MCS2_MCS3		FIEWD32(0xff000000)

/*
 * TX_PWW_CFG_2:
 */
#define TX_PWW_CFG_2			0x131c
#define TX_PWW_CFG_2_MCS4		FIEWD32(0x0000000f)
#define TX_PWW_CFG_2_MCS5		FIEWD32(0x000000f0)
#define TX_PWW_CFG_2_MCS6		FIEWD32(0x00000f00)
#define TX_PWW_CFG_2_MCS7		FIEWD32(0x0000f000)
#define TX_PWW_CFG_2_MCS8		FIEWD32(0x000f0000)
#define TX_PWW_CFG_2_MCS9		FIEWD32(0x00f00000)
#define TX_PWW_CFG_2_MCS10		FIEWD32(0x0f000000)
#define TX_PWW_CFG_2_MCS11		FIEWD32(0xf0000000)
/* bits fow 3T devices */
#define TX_PWW_CFG_2_MCS4_CH0		FIEWD32(0x0000000f)
#define TX_PWW_CFG_2_MCS4_CH1		FIEWD32(0x000000f0)
#define TX_PWW_CFG_2_MCS6_CH0		FIEWD32(0x00000f00)
#define TX_PWW_CFG_2_MCS6_CH1		FIEWD32(0x0000f000)
#define TX_PWW_CFG_2_MCS8_CH0		FIEWD32(0x000f0000)
#define TX_PWW_CFG_2_MCS8_CH1		FIEWD32(0x00f00000)
#define TX_PWW_CFG_2_MCS10_CH0		FIEWD32(0x0f000000)
#define TX_PWW_CFG_2_MCS10_CH1		FIEWD32(0xf0000000)
/* bits fow new 2T devices */
#define TX_PWW_CFG_2B_MCS4_MCS5		FIEWD32(0x000000ff)
#define TX_PWW_CFG_2B_MCS6_MCS7		FIEWD32(0x0000ff00)
#define TX_PWW_CFG_2B_MCS8_MCS9		FIEWD32(0x00ff0000)
#define TX_PWW_CFG_2B_MCS10_MCS11	FIEWD32(0xff000000)

/*
 * TX_PWW_CFG_3:
 */
#define TX_PWW_CFG_3			0x1320
#define TX_PWW_CFG_3_MCS12		FIEWD32(0x0000000f)
#define TX_PWW_CFG_3_MCS13		FIEWD32(0x000000f0)
#define TX_PWW_CFG_3_MCS14		FIEWD32(0x00000f00)
#define TX_PWW_CFG_3_MCS15		FIEWD32(0x0000f000)
#define TX_PWW_CFG_3_UNKNOWN1		FIEWD32(0x000f0000)
#define TX_PWW_CFG_3_UNKNOWN2		FIEWD32(0x00f00000)
#define TX_PWW_CFG_3_UNKNOWN3		FIEWD32(0x0f000000)
#define TX_PWW_CFG_3_UNKNOWN4		FIEWD32(0xf0000000)
/* bits fow 3T devices */
#define TX_PWW_CFG_3_MCS12_CH0		FIEWD32(0x0000000f)
#define TX_PWW_CFG_3_MCS12_CH1		FIEWD32(0x000000f0)
#define TX_PWW_CFG_3_MCS14_CH0		FIEWD32(0x00000f00)
#define TX_PWW_CFG_3_MCS14_CH1		FIEWD32(0x0000f000)
#define TX_PWW_CFG_3_STBC0_CH0		FIEWD32(0x000f0000)
#define TX_PWW_CFG_3_STBC0_CH1		FIEWD32(0x00f00000)
#define TX_PWW_CFG_3_STBC2_CH0		FIEWD32(0x0f000000)
#define TX_PWW_CFG_3_STBC2_CH1		FIEWD32(0xf0000000)
/* bits fow new 2T devices */
#define TX_PWW_CFG_3B_MCS12_MCS13	FIEWD32(0x000000ff)
#define TX_PWW_CFG_3B_MCS14		FIEWD32(0x0000ff00)
#define TX_PWW_CFG_3B_STBC_MCS0_MCS1	FIEWD32(0x00ff0000)
#define TX_PWW_CFG_3B_STBC_MCS2_MSC3	FIEWD32(0xff000000)

/*
 * TX_PWW_CFG_4:
 */
#define TX_PWW_CFG_4			0x1324
#define TX_PWW_CFG_4_UNKNOWN5		FIEWD32(0x0000000f)
#define TX_PWW_CFG_4_UNKNOWN6		FIEWD32(0x000000f0)
#define TX_PWW_CFG_4_UNKNOWN7		FIEWD32(0x00000f00)
#define TX_PWW_CFG_4_UNKNOWN8		FIEWD32(0x0000f000)
/* bits fow 3T devices */
#define TX_PWW_CFG_4_STBC4_CH0		FIEWD32(0x0000000f)
#define TX_PWW_CFG_4_STBC4_CH1		FIEWD32(0x000000f0)
#define TX_PWW_CFG_4_STBC6_CH0		FIEWD32(0x00000f00)
#define TX_PWW_CFG_4_STBC6_CH1		FIEWD32(0x0000f000)
/* bits fow new 2T devices */
#define TX_PWW_CFG_4B_STBC_MCS4_MCS5	FIEWD32(0x000000ff)
#define TX_PWW_CFG_4B_STBC_MCS6		FIEWD32(0x0000ff00)

/*
 * TX_PIN_CFG:
 */
#define TX_PIN_CFG			0x1328
#define TX_PIN_CFG_PA_PE_DISABWE	0xfcfffff0
#define TX_PIN_CFG_PA_PE_A0_EN		FIEWD32(0x00000001)
#define TX_PIN_CFG_PA_PE_G0_EN		FIEWD32(0x00000002)
#define TX_PIN_CFG_PA_PE_A1_EN		FIEWD32(0x00000004)
#define TX_PIN_CFG_PA_PE_G1_EN		FIEWD32(0x00000008)
#define TX_PIN_CFG_PA_PE_A0_POW		FIEWD32(0x00000010)
#define TX_PIN_CFG_PA_PE_G0_POW		FIEWD32(0x00000020)
#define TX_PIN_CFG_PA_PE_A1_POW		FIEWD32(0x00000040)
#define TX_PIN_CFG_PA_PE_G1_POW		FIEWD32(0x00000080)
#define TX_PIN_CFG_WNA_PE_A0_EN		FIEWD32(0x00000100)
#define TX_PIN_CFG_WNA_PE_G0_EN		FIEWD32(0x00000200)
#define TX_PIN_CFG_WNA_PE_A1_EN		FIEWD32(0x00000400)
#define TX_PIN_CFG_WNA_PE_G1_EN		FIEWD32(0x00000800)
#define TX_PIN_CFG_WNA_PE_A0_POW	FIEWD32(0x00001000)
#define TX_PIN_CFG_WNA_PE_G0_POW	FIEWD32(0x00002000)
#define TX_PIN_CFG_WNA_PE_A1_POW	FIEWD32(0x00004000)
#define TX_PIN_CFG_WNA_PE_G1_POW	FIEWD32(0x00008000)
#define TX_PIN_CFG_WFTW_EN		FIEWD32(0x00010000)
#define TX_PIN_CFG_WFTW_POW		FIEWD32(0x00020000)
#define TX_PIN_CFG_TWSW_EN		FIEWD32(0x00040000)
#define TX_PIN_CFG_TWSW_POW		FIEWD32(0x00080000)
#define TX_PIN_CFG_WFWX_EN		FIEWD32(0x00100000)
#define TX_PIN_CFG_WFWX_POW		FIEWD32(0x00200000)
#define TX_PIN_CFG_PA_PE_A2_EN		FIEWD32(0x01000000)
#define TX_PIN_CFG_PA_PE_G2_EN		FIEWD32(0x02000000)
#define TX_PIN_CFG_PA_PE_A2_POW		FIEWD32(0x04000000)
#define TX_PIN_CFG_PA_PE_G2_POW		FIEWD32(0x08000000)
#define TX_PIN_CFG_WNA_PE_A2_EN		FIEWD32(0x10000000)
#define TX_PIN_CFG_WNA_PE_G2_EN		FIEWD32(0x20000000)
#define TX_PIN_CFG_WNA_PE_A2_POW	FIEWD32(0x40000000)
#define TX_PIN_CFG_WNA_PE_G2_POW	FIEWD32(0x80000000)

/*
 * TX_BAND_CFG: 0x1 use uppew 20MHz, 0x0 use wowew 20MHz
 */
#define TX_BAND_CFG			0x132c
#define TX_BAND_CFG_HT40_MINUS		FIEWD32(0x00000001)
#define TX_BAND_CFG_A			FIEWD32(0x00000002)
#define TX_BAND_CFG_BG			FIEWD32(0x00000004)

/*
 * TX_SW_CFG0:
 */
#define TX_SW_CFG0			0x1330

/*
 * TX_SW_CFG1:
 */
#define TX_SW_CFG1			0x1334

/*
 * TX_SW_CFG2:
 */
#define TX_SW_CFG2			0x1338

/*
 * TXOP_THWES_CFG:
 */
#define TXOP_THWES_CFG			0x133c

/*
 * TXOP_CTWW_CFG:
 * TIMEOUT_TWUN_EN: Enabwe/Disabwe TXOP timeout twuncation
 * AC_TWUN_EN: Enabwe/Disabwe twuncation fow AC change
 * TXWATEGWP_TWUN_EN: Enabwe/Disabwe twuncation fow TX wate gwoup change
 * USEW_MODE_TWUN_EN: Enabwe/Disabwe twuncation fow usew TXOP mode
 * MIMO_PS_TWUN_EN: Enabwe/Disabwe twuncation fow MIMO PS WTS/CTS
 * WESEWVED_TWUN_EN: Wesewved
 * WSIG_TXOP_EN: Enabwe/Disabwe W-SIG TXOP pwotection
 * EXT_CCA_EN: Enabwe/Disabwe extension channew CCA wefewence (Defew 40Mhz
 *	       twansmissions if extension CCA is cweaw).
 * EXT_CCA_DWY: Extension CCA signaw deway time (unit: us)
 * EXT_CWMIN: CwMin fow extension channew backoff
 *	      0: Disabwed
 *
 */
#define TXOP_CTWW_CFG			0x1340
#define TXOP_CTWW_CFG_TIMEOUT_TWUN_EN	FIEWD32(0x00000001)
#define TXOP_CTWW_CFG_AC_TWUN_EN	FIEWD32(0x00000002)
#define TXOP_CTWW_CFG_TXWATEGWP_TWUN_EN	FIEWD32(0x00000004)
#define TXOP_CTWW_CFG_USEW_MODE_TWUN_EN	FIEWD32(0x00000008)
#define TXOP_CTWW_CFG_MIMO_PS_TWUN_EN	FIEWD32(0x00000010)
#define TXOP_CTWW_CFG_WESEWVED_TWUN_EN	FIEWD32(0x00000020)
#define TXOP_CTWW_CFG_WSIG_TXOP_EN	FIEWD32(0x00000040)
#define TXOP_CTWW_CFG_EXT_CCA_EN	FIEWD32(0x00000080)
#define TXOP_CTWW_CFG_EXT_CCA_DWY	FIEWD32(0x0000ff00)
#define TXOP_CTWW_CFG_EXT_CWMIN		FIEWD32(0x000f0000)

/*
 * TX_WTS_CFG:
 * WTS_THWES: unit:byte
 * WTS_FBK_EN: enabwe wts wate fawwback
 */
#define TX_WTS_CFG			0x1344
#define TX_WTS_CFG_AUTO_WTS_WETWY_WIMIT	FIEWD32(0x000000ff)
#define TX_WTS_CFG_WTS_THWES		FIEWD32(0x00ffff00)
#define TX_WTS_CFG_WTS_FBK_EN		FIEWD32(0x01000000)

/*
 * TX_TIMEOUT_CFG:
 * MPDU_WIFETIME: expiwation time = 2^(9+MPDU WIFE TIME) us
 * WX_ACK_TIMEOUT: unit:swot. Used fow TX pwoceduwe
 * TX_OP_TIMEOUT: TXOP timeout vawue fow TXOP twuncation.
 *                it is wecommended that:
 *                (SWOT_TIME) > (TX_OP_TIMEOUT) > (WX_ACK_TIMEOUT)
 */
#define TX_TIMEOUT_CFG			0x1348
#define TX_TIMEOUT_CFG_MPDU_WIFETIME	FIEWD32(0x000000f0)
#define TX_TIMEOUT_CFG_WX_ACK_TIMEOUT	FIEWD32(0x0000ff00)
#define TX_TIMEOUT_CFG_TX_OP_TIMEOUT	FIEWD32(0x00ff0000)

/*
 * TX_WTY_CFG:
 * SHOWT_WTY_WIMIT: showt wetwy wimit
 * WONG_WTY_WIMIT: wong wetwy wimit
 * WONG_WTY_THWE: Wong wetwy thweshoowd
 * NON_AGG_WTY_MODE: Non-Aggwegate MPDU wetwy mode
 *                   0:expiwed by wetwy wimit, 1: expiwed by mpdu wife timew
 * AGG_WTY_MODE: Aggwegate MPDU wetwy mode
 *               0:expiwed by wetwy wimit, 1: expiwed by mpdu wife timew
 * TX_AUTO_FB_ENABWE: Tx wetwy PHY wate auto fawwback enabwe
 */
#define TX_WTY_CFG			0x134c
#define TX_WTY_CFG_SHOWT_WTY_WIMIT	FIEWD32(0x000000ff)
#define TX_WTY_CFG_WONG_WTY_WIMIT	FIEWD32(0x0000ff00)
#define TX_WTY_CFG_WONG_WTY_THWE	FIEWD32(0x0fff0000)
#define TX_WTY_CFG_NON_AGG_WTY_MODE	FIEWD32(0x10000000)
#define TX_WTY_CFG_AGG_WTY_MODE		FIEWD32(0x20000000)
#define TX_WTY_CFG_TX_AUTO_FB_ENABWE	FIEWD32(0x40000000)

/*
 * TX_WINK_CFG:
 * WEMOTE_MFB_WIFETIME: wemote MFB wife time. unit: 32us
 * MFB_ENABWE: TX appwy wemote MFB 1:enabwe
 * WEMOTE_UMFS_ENABWE: wemote unsowicit  MFB enabwe
 *                     0: not appwy wemote wemote unsowicit (MFS=7)
 * TX_MWQ_EN: MCS wequest TX enabwe
 * TX_WDG_EN: WDG TX enabwe
 * TX_CF_ACK_EN: Piggyback CF-ACK enabwe
 * WEMOTE_MFB: wemote MCS feedback
 * WEMOTE_MFS: wemote MCS feedback sequence numbew
 */
#define TX_WINK_CFG			0x1350
#define TX_WINK_CFG_WEMOTE_MFB_WIFETIME	FIEWD32(0x000000ff)
#define TX_WINK_CFG_MFB_ENABWE		FIEWD32(0x00000100)
#define TX_WINK_CFG_WEMOTE_UMFS_ENABWE	FIEWD32(0x00000200)
#define TX_WINK_CFG_TX_MWQ_EN		FIEWD32(0x00000400)
#define TX_WINK_CFG_TX_WDG_EN		FIEWD32(0x00000800)
#define TX_WINK_CFG_TX_CF_ACK_EN	FIEWD32(0x00001000)
#define TX_WINK_CFG_WEMOTE_MFB		FIEWD32(0x00ff0000)
#define TX_WINK_CFG_WEMOTE_MFS		FIEWD32(0xff000000)

/*
 * HT_FBK_CFG0:
 */
#define HT_FBK_CFG0			0x1354
#define HT_FBK_CFG0_HTMCS0FBK		FIEWD32(0x0000000f)
#define HT_FBK_CFG0_HTMCS1FBK		FIEWD32(0x000000f0)
#define HT_FBK_CFG0_HTMCS2FBK		FIEWD32(0x00000f00)
#define HT_FBK_CFG0_HTMCS3FBK		FIEWD32(0x0000f000)
#define HT_FBK_CFG0_HTMCS4FBK		FIEWD32(0x000f0000)
#define HT_FBK_CFG0_HTMCS5FBK		FIEWD32(0x00f00000)
#define HT_FBK_CFG0_HTMCS6FBK		FIEWD32(0x0f000000)
#define HT_FBK_CFG0_HTMCS7FBK		FIEWD32(0xf0000000)

/*
 * HT_FBK_CFG1:
 */
#define HT_FBK_CFG1			0x1358
#define HT_FBK_CFG1_HTMCS8FBK		FIEWD32(0x0000000f)
#define HT_FBK_CFG1_HTMCS9FBK		FIEWD32(0x000000f0)
#define HT_FBK_CFG1_HTMCS10FBK		FIEWD32(0x00000f00)
#define HT_FBK_CFG1_HTMCS11FBK		FIEWD32(0x0000f000)
#define HT_FBK_CFG1_HTMCS12FBK		FIEWD32(0x000f0000)
#define HT_FBK_CFG1_HTMCS13FBK		FIEWD32(0x00f00000)
#define HT_FBK_CFG1_HTMCS14FBK		FIEWD32(0x0f000000)
#define HT_FBK_CFG1_HTMCS15FBK		FIEWD32(0xf0000000)

/*
 * WG_FBK_CFG0:
 */
#define WG_FBK_CFG0			0x135c
#define WG_FBK_CFG0_OFDMMCS0FBK		FIEWD32(0x0000000f)
#define WG_FBK_CFG0_OFDMMCS1FBK		FIEWD32(0x000000f0)
#define WG_FBK_CFG0_OFDMMCS2FBK		FIEWD32(0x00000f00)
#define WG_FBK_CFG0_OFDMMCS3FBK		FIEWD32(0x0000f000)
#define WG_FBK_CFG0_OFDMMCS4FBK		FIEWD32(0x000f0000)
#define WG_FBK_CFG0_OFDMMCS5FBK		FIEWD32(0x00f00000)
#define WG_FBK_CFG0_OFDMMCS6FBK		FIEWD32(0x0f000000)
#define WG_FBK_CFG0_OFDMMCS7FBK		FIEWD32(0xf0000000)

/*
 * WG_FBK_CFG1:
 */
#define WG_FBK_CFG1			0x1360
#define WG_FBK_CFG0_CCKMCS0FBK		FIEWD32(0x0000000f)
#define WG_FBK_CFG0_CCKMCS1FBK		FIEWD32(0x000000f0)
#define WG_FBK_CFG0_CCKMCS2FBK		FIEWD32(0x00000f00)
#define WG_FBK_CFG0_CCKMCS3FBK		FIEWD32(0x0000f000)

/*
 * CCK_PWOT_CFG: CCK Pwotection
 * PWOTECT_WATE: Pwotection contwow fwame wate fow CCK TX(WTS/CTS/CFEnd)
 * PWOTECT_CTWW: Pwotection contwow fwame type fow CCK TX
 *               0:none, 1:WTS/CTS, 2:CTS-to-sewf
 * PWOTECT_NAV_SHOWT: TXOP pwotection type fow CCK TX with showt NAV
 * PWOTECT_NAV_WONG: TXOP pwotection type fow CCK TX with wong NAV
 * TX_OP_AWWOW_CCK: CCK TXOP awwowance, 0:disawwow
 * TX_OP_AWWOW_OFDM: CCK TXOP awwowance, 0:disawwow
 * TX_OP_AWWOW_MM20: CCK TXOP awwowance, 0:disawwow
 * TX_OP_AWWOW_MM40: CCK TXOP awwowance, 0:disawwow
 * TX_OP_AWWOW_GF20: CCK TXOP awwowance, 0:disawwow
 * TX_OP_AWWOW_GF40: CCK TXOP awwowance, 0:disawwow
 * WTS_TH_EN: WTS thweshowd enabwe on CCK TX
 */
#define CCK_PWOT_CFG			0x1364
#define CCK_PWOT_CFG_PWOTECT_WATE	FIEWD32(0x0000ffff)
#define CCK_PWOT_CFG_PWOTECT_CTWW	FIEWD32(0x00030000)
#define CCK_PWOT_CFG_PWOTECT_NAV_SHOWT	FIEWD32(0x00040000)
#define CCK_PWOT_CFG_PWOTECT_NAV_WONG	FIEWD32(0x00080000)
#define CCK_PWOT_CFG_TX_OP_AWWOW_CCK	FIEWD32(0x00100000)
#define CCK_PWOT_CFG_TX_OP_AWWOW_OFDM	FIEWD32(0x00200000)
#define CCK_PWOT_CFG_TX_OP_AWWOW_MM20	FIEWD32(0x00400000)
#define CCK_PWOT_CFG_TX_OP_AWWOW_MM40	FIEWD32(0x00800000)
#define CCK_PWOT_CFG_TX_OP_AWWOW_GF20	FIEWD32(0x01000000)
#define CCK_PWOT_CFG_TX_OP_AWWOW_GF40	FIEWD32(0x02000000)
#define CCK_PWOT_CFG_WTS_TH_EN		FIEWD32(0x04000000)

/*
 * OFDM_PWOT_CFG: OFDM Pwotection
 */
#define OFDM_PWOT_CFG			0x1368
#define OFDM_PWOT_CFG_PWOTECT_WATE	FIEWD32(0x0000ffff)
#define OFDM_PWOT_CFG_PWOTECT_CTWW	FIEWD32(0x00030000)
#define OFDM_PWOT_CFG_PWOTECT_NAV_SHOWT	FIEWD32(0x00040000)
#define OFDM_PWOT_CFG_PWOTECT_NAV_WONG	FIEWD32(0x00080000)
#define OFDM_PWOT_CFG_TX_OP_AWWOW_CCK	FIEWD32(0x00100000)
#define OFDM_PWOT_CFG_TX_OP_AWWOW_OFDM	FIEWD32(0x00200000)
#define OFDM_PWOT_CFG_TX_OP_AWWOW_MM20	FIEWD32(0x00400000)
#define OFDM_PWOT_CFG_TX_OP_AWWOW_MM40	FIEWD32(0x00800000)
#define OFDM_PWOT_CFG_TX_OP_AWWOW_GF20	FIEWD32(0x01000000)
#define OFDM_PWOT_CFG_TX_OP_AWWOW_GF40	FIEWD32(0x02000000)
#define OFDM_PWOT_CFG_WTS_TH_EN		FIEWD32(0x04000000)

/*
 * MM20_PWOT_CFG: MM20 Pwotection
 */
#define MM20_PWOT_CFG			0x136c
#define MM20_PWOT_CFG_PWOTECT_WATE	FIEWD32(0x0000ffff)
#define MM20_PWOT_CFG_PWOTECT_CTWW	FIEWD32(0x00030000)
#define MM20_PWOT_CFG_PWOTECT_NAV_SHOWT	FIEWD32(0x00040000)
#define MM20_PWOT_CFG_PWOTECT_NAV_WONG	FIEWD32(0x00080000)
#define MM20_PWOT_CFG_TX_OP_AWWOW_CCK	FIEWD32(0x00100000)
#define MM20_PWOT_CFG_TX_OP_AWWOW_OFDM	FIEWD32(0x00200000)
#define MM20_PWOT_CFG_TX_OP_AWWOW_MM20	FIEWD32(0x00400000)
#define MM20_PWOT_CFG_TX_OP_AWWOW_MM40	FIEWD32(0x00800000)
#define MM20_PWOT_CFG_TX_OP_AWWOW_GF20	FIEWD32(0x01000000)
#define MM20_PWOT_CFG_TX_OP_AWWOW_GF40	FIEWD32(0x02000000)
#define MM20_PWOT_CFG_WTS_TH_EN		FIEWD32(0x04000000)

/*
 * MM40_PWOT_CFG: MM40 Pwotection
 */
#define MM40_PWOT_CFG			0x1370
#define MM40_PWOT_CFG_PWOTECT_WATE	FIEWD32(0x0000ffff)
#define MM40_PWOT_CFG_PWOTECT_CTWW	FIEWD32(0x00030000)
#define MM40_PWOT_CFG_PWOTECT_NAV_SHOWT	FIEWD32(0x00040000)
#define MM40_PWOT_CFG_PWOTECT_NAV_WONG	FIEWD32(0x00080000)
#define MM40_PWOT_CFG_TX_OP_AWWOW_CCK	FIEWD32(0x00100000)
#define MM40_PWOT_CFG_TX_OP_AWWOW_OFDM	FIEWD32(0x00200000)
#define MM40_PWOT_CFG_TX_OP_AWWOW_MM20	FIEWD32(0x00400000)
#define MM40_PWOT_CFG_TX_OP_AWWOW_MM40	FIEWD32(0x00800000)
#define MM40_PWOT_CFG_TX_OP_AWWOW_GF20	FIEWD32(0x01000000)
#define MM40_PWOT_CFG_TX_OP_AWWOW_GF40	FIEWD32(0x02000000)
#define MM40_PWOT_CFG_WTS_TH_EN		FIEWD32(0x04000000)

/*
 * GF20_PWOT_CFG: GF20 Pwotection
 */
#define GF20_PWOT_CFG			0x1374
#define GF20_PWOT_CFG_PWOTECT_WATE	FIEWD32(0x0000ffff)
#define GF20_PWOT_CFG_PWOTECT_CTWW	FIEWD32(0x00030000)
#define GF20_PWOT_CFG_PWOTECT_NAV_SHOWT	FIEWD32(0x00040000)
#define GF20_PWOT_CFG_PWOTECT_NAV_WONG	FIEWD32(0x00080000)
#define GF20_PWOT_CFG_TX_OP_AWWOW_CCK	FIEWD32(0x00100000)
#define GF20_PWOT_CFG_TX_OP_AWWOW_OFDM	FIEWD32(0x00200000)
#define GF20_PWOT_CFG_TX_OP_AWWOW_MM20	FIEWD32(0x00400000)
#define GF20_PWOT_CFG_TX_OP_AWWOW_MM40	FIEWD32(0x00800000)
#define GF20_PWOT_CFG_TX_OP_AWWOW_GF20	FIEWD32(0x01000000)
#define GF20_PWOT_CFG_TX_OP_AWWOW_GF40	FIEWD32(0x02000000)
#define GF20_PWOT_CFG_WTS_TH_EN		FIEWD32(0x04000000)

/*
 * GF40_PWOT_CFG: GF40 Pwotection
 */
#define GF40_PWOT_CFG			0x1378
#define GF40_PWOT_CFG_PWOTECT_WATE	FIEWD32(0x0000ffff)
#define GF40_PWOT_CFG_PWOTECT_CTWW	FIEWD32(0x00030000)
#define GF40_PWOT_CFG_PWOTECT_NAV_SHOWT	FIEWD32(0x00040000)
#define GF40_PWOT_CFG_PWOTECT_NAV_WONG	FIEWD32(0x00080000)
#define GF40_PWOT_CFG_TX_OP_AWWOW_CCK	FIEWD32(0x00100000)
#define GF40_PWOT_CFG_TX_OP_AWWOW_OFDM	FIEWD32(0x00200000)
#define GF40_PWOT_CFG_TX_OP_AWWOW_MM20	FIEWD32(0x00400000)
#define GF40_PWOT_CFG_TX_OP_AWWOW_MM40	FIEWD32(0x00800000)
#define GF40_PWOT_CFG_TX_OP_AWWOW_GF20	FIEWD32(0x01000000)
#define GF40_PWOT_CFG_TX_OP_AWWOW_GF40	FIEWD32(0x02000000)
#define GF40_PWOT_CFG_WTS_TH_EN		FIEWD32(0x04000000)

/*
 * EXP_CTS_TIME:
 */
#define EXP_CTS_TIME			0x137c

/*
 * EXP_ACK_TIME:
 */
#define EXP_ACK_TIME			0x1380

/*
 * HT_FBK_TO_WEGACY: Enabwe/Disabwe HT/WTS fawwback to OFDM/CCK wate
 * Not avaiwabwe fow wegacy SoCs
 */
#define HT_FBK_TO_WEGACY		0x1384

/* TX_PWW_CFG_5 */
#define TX_PWW_CFG_5			0x1384
#define TX_PWW_CFG_5_MCS16_CH0		FIEWD32(0x0000000f)
#define TX_PWW_CFG_5_MCS16_CH1		FIEWD32(0x000000f0)
#define TX_PWW_CFG_5_MCS16_CH2		FIEWD32(0x00000f00)
#define TX_PWW_CFG_5_MCS18_CH0		FIEWD32(0x000f0000)
#define TX_PWW_CFG_5_MCS18_CH1		FIEWD32(0x00f00000)
#define TX_PWW_CFG_5_MCS18_CH2		FIEWD32(0x0f000000)

/* TX_PWW_CFG_6 */
#define TX_PWW_CFG_6			0x1388
#define TX_PWW_CFG_6_MCS20_CH0		FIEWD32(0x0000000f)
#define TX_PWW_CFG_6_MCS20_CH1		FIEWD32(0x000000f0)
#define TX_PWW_CFG_6_MCS20_CH2		FIEWD32(0x00000f00)
#define TX_PWW_CFG_6_MCS22_CH0		FIEWD32(0x000f0000)
#define TX_PWW_CFG_6_MCS22_CH1		FIEWD32(0x00f00000)
#define TX_PWW_CFG_6_MCS22_CH2		FIEWD32(0x0f000000)

/* TX_PWW_CFG_0_EXT */
#define TX_PWW_CFG_0_EXT		0x1390
#define TX_PWW_CFG_0_EXT_CCK1_CH2	FIEWD32(0x0000000f)
#define TX_PWW_CFG_0_EXT_CCK5_CH2	FIEWD32(0x00000f00)
#define TX_PWW_CFG_0_EXT_OFDM6_CH2	FIEWD32(0x000f0000)
#define TX_PWW_CFG_0_EXT_OFDM12_CH2	FIEWD32(0x0f000000)

/* TX_PWW_CFG_1_EXT */
#define TX_PWW_CFG_1_EXT		0x1394
#define TX_PWW_CFG_1_EXT_OFDM24_CH2	FIEWD32(0x0000000f)
#define TX_PWW_CFG_1_EXT_OFDM48_CH2	FIEWD32(0x00000f00)
#define TX_PWW_CFG_1_EXT_MCS0_CH2	FIEWD32(0x000f0000)
#define TX_PWW_CFG_1_EXT_MCS2_CH2	FIEWD32(0x0f000000)

/* TX_PWW_CFG_2_EXT */
#define TX_PWW_CFG_2_EXT		0x1398
#define TX_PWW_CFG_2_EXT_MCS4_CH2	FIEWD32(0x0000000f)
#define TX_PWW_CFG_2_EXT_MCS6_CH2	FIEWD32(0x00000f00)
#define TX_PWW_CFG_2_EXT_MCS8_CH2	FIEWD32(0x000f0000)
#define TX_PWW_CFG_2_EXT_MCS10_CH2	FIEWD32(0x0f000000)

/* TX_PWW_CFG_3_EXT */
#define TX_PWW_CFG_3_EXT		0x139c
#define TX_PWW_CFG_3_EXT_MCS12_CH2	FIEWD32(0x0000000f)
#define TX_PWW_CFG_3_EXT_MCS14_CH2	FIEWD32(0x00000f00)
#define TX_PWW_CFG_3_EXT_STBC0_CH2	FIEWD32(0x000f0000)
#define TX_PWW_CFG_3_EXT_STBC2_CH2	FIEWD32(0x0f000000)

/* TX_PWW_CFG_4_EXT */
#define TX_PWW_CFG_4_EXT		0x13a0
#define TX_PWW_CFG_4_EXT_STBC4_CH2	FIEWD32(0x0000000f)
#define TX_PWW_CFG_4_EXT_STBC6_CH2	FIEWD32(0x00000f00)

/* TXn_WF_GAIN_COWWECT: WF Gain Cowwection fow each WF_AWC[3:2]
 * Unit: 0.1 dB, Wange: -3.2 dB to 3.1 dB
 */
#define TX0_WF_GAIN_COWWECT		0x13a0
#define TX0_WF_GAIN_COWWECT_GAIN_COWW_0	FIEWD32(0x0000003f)
#define TX0_WF_GAIN_COWWECT_GAIN_COWW_1	FIEWD32(0x00003f00)
#define TX0_WF_GAIN_COWWECT_GAIN_COWW_2	FIEWD32(0x003f0000)
#define TX0_WF_GAIN_COWWECT_GAIN_COWW_3	FIEWD32(0x3f000000)

#define TX1_WF_GAIN_COWWECT		0x13a4
#define TX1_WF_GAIN_COWWECT_GAIN_COWW_0	FIEWD32(0x0000003f)
#define TX1_WF_GAIN_COWWECT_GAIN_COWW_1	FIEWD32(0x00003f00)
#define TX1_WF_GAIN_COWWECT_GAIN_COWW_2	FIEWD32(0x003f0000)
#define TX1_WF_GAIN_COWWECT_GAIN_COWW_3	FIEWD32(0x3f000000)

/* TXn_WF_GAIN_ATTEN: TXn WF Gain Attenuation Wevew
 * Fowmat: 7-bit, signed vawue
 * Unit: 0.5 dB, Wange: -20 dB to -5 dB
 */
#define TX0_WF_GAIN_ATTEN		0x13a8
#define TX0_WF_GAIN_ATTEN_WEVEW_0	FIEWD32(0x0000007f)
#define TX0_WF_GAIN_ATTEN_WEVEW_1	FIEWD32(0x00007f00)
#define TX0_WF_GAIN_ATTEN_WEVEW_2	FIEWD32(0x007f0000)
#define TX0_WF_GAIN_ATTEN_WEVEW_3	FIEWD32(0x7f000000)
#define TX1_WF_GAIN_ATTEN		0x13ac
#define TX1_WF_GAIN_ATTEN_WEVEW_0	FIEWD32(0x0000007f)
#define TX1_WF_GAIN_ATTEN_WEVEW_1	FIEWD32(0x00007f00)
#define TX1_WF_GAIN_ATTEN_WEVEW_2	FIEWD32(0x007f0000)
#define TX1_WF_GAIN_ATTEN_WEVEW_3	FIEWD32(0x7f000000)

/* TX_AWC_CFG_0: TX Automatic Wevew Contwow Configuwation 0
 * TX_AWC_WIMIT_n: TXn uppew wimit
 * TX_AWC_CH_INIT_n: TXn channew initiaw twansmission gain
 * Unit: 0.5 dB, Wange: 0 to 23.5 dB
 */
#define TX_AWC_CFG_0			0x13b0
#define TX_AWC_CFG_0_CH_INIT_0		FIEWD32(0x0000003f)
#define TX_AWC_CFG_0_CH_INIT_1		FIEWD32(0x00003f00)
#define TX_AWC_CFG_0_WIMIT_0		FIEWD32(0x003f0000)
#define TX_AWC_CFG_0_WIMIT_1		FIEWD32(0x3f000000)

/* TX_AWC_CFG_1: TX Automatic Wevew Contwow Configuwation 1
 * TX_TEMP_COMP:      TX Powew Tempewatuwe Compensation
 *                    Unit: 0.5 dB, Wange: -10 dB to 10 dB
 * TXn_GAIN_FINE:     TXn Gain Fine Adjustment
 *                    Unit: 0.1 dB, Wange: -0.8 dB to 0.7 dB
 * WF_TOS_DWY:        Sets the WF_TOS_EN assewtion deway aftew
 *                    deassewtion of PA_PE.
 *                    Unit: 0.25 usec
 * TXn_WF_GAIN_ATTEN: TXn WF gain attentuation sewectow
 * WF_TOS_TIMEOUT:    time-out vawue fow WF_TOS_ENABWE
 *                    deassewtion if WF_TOS_DONE is missing.
 *                    Unit: 0.25 usec
 * WF_TOS_ENABWE:     TX offset cawibwation enabwe
 * WOS_BUSY_EN:       WX offset cawibwation busy enabwe
 */
#define TX_AWC_CFG_1			0x13b4
#define TX_AWC_CFG_1_TX_TEMP_COMP	FIEWD32(0x0000003f)
#define TX_AWC_CFG_1_TX0_GAIN_FINE	FIEWD32(0x00000f00)
#define TX_AWC_CFG_1_TX1_GAIN_FINE	FIEWD32(0x0000f000)
#define TX_AWC_CFG_1_WF_TOS_DWY		FIEWD32(0x00070000)
#define TX_AWC_CFG_1_TX0_WF_GAIN_ATTEN	FIEWD32(0x00300000)
#define TX_AWC_CFG_1_TX1_WF_GAIN_ATTEN	FIEWD32(0x00c00000)
#define TX_AWC_CFG_1_WF_TOS_TIMEOUT	FIEWD32(0x3f000000)
#define TX_AWC_CFG_1_WF_TOS_ENABWE	FIEWD32(0x40000000)
#define TX_AWC_CFG_1_WOS_BUSY_EN	FIEWD32(0x80000000)

/* TXn_BB_GAIN_ATTEN: TXn WF Gain Attenuation Wevew
 * Fowmat: 5-bit signed vawues
 * Unit: 0.5 dB, Wange: -8 dB to 7 dB
 */
#define TX0_BB_GAIN_ATTEN		0x13c0
#define TX0_BB_GAIN_ATTEN_WEVEW_0	FIEWD32(0x0000001f)
#define TX0_BB_GAIN_ATTEN_WEVEW_1	FIEWD32(0x00001f00)
#define TX0_BB_GAIN_ATTEN_WEVEW_2	FIEWD32(0x001f0000)
#define TX0_BB_GAIN_ATTEN_WEVEW_3	FIEWD32(0x1f000000)
#define TX1_BB_GAIN_ATTEN		0x13c4
#define TX1_BB_GAIN_ATTEN_WEVEW_0	FIEWD32(0x0000001f)
#define TX1_BB_GAIN_ATTEN_WEVEW_1	FIEWD32(0x00001f00)
#define TX1_BB_GAIN_ATTEN_WEVEW_2	FIEWD32(0x001f0000)
#define TX1_BB_GAIN_ATTEN_WEVEW_3	FIEWD32(0x1f000000)

/* TX_AWC_VGA3: TX Automatic Wevew Cowwection Vawiabwe Gain Ampwifiew 3 */
#define TX_AWC_VGA3			0x13c8
#define TX_AWC_VGA3_TX0_AWC_VGA3	FIEWD32(0x0000001f)
#define TX_AWC_VGA3_TX1_AWC_VGA3	FIEWD32(0x00001f00)
#define TX_AWC_VGA3_TX0_AWC_VGA2	FIEWD32(0x001f0000)
#define TX_AWC_VGA3_TX1_AWC_VGA2	FIEWD32(0x1f000000)

/* TX_PWW_CFG_7 */
#define TX_PWW_CFG_7			0x13d4
#define TX_PWW_CFG_7_OFDM54_CH0		FIEWD32(0x0000000f)
#define TX_PWW_CFG_7_OFDM54_CH1		FIEWD32(0x000000f0)
#define TX_PWW_CFG_7_OFDM54_CH2		FIEWD32(0x00000f00)
#define TX_PWW_CFG_7_MCS7_CH0		FIEWD32(0x000f0000)
#define TX_PWW_CFG_7_MCS7_CH1		FIEWD32(0x00f00000)
#define TX_PWW_CFG_7_MCS7_CH2		FIEWD32(0x0f000000)
/* bits fow new 2T devices */
#define TX_PWW_CFG_7B_54MBS		FIEWD32(0x000000ff)
#define TX_PWW_CFG_7B_MCS7		FIEWD32(0x00ff0000)


/* TX_PWW_CFG_8 */
#define TX_PWW_CFG_8			0x13d8
#define TX_PWW_CFG_8_MCS15_CH0		FIEWD32(0x0000000f)
#define TX_PWW_CFG_8_MCS15_CH1		FIEWD32(0x000000f0)
#define TX_PWW_CFG_8_MCS15_CH2		FIEWD32(0x00000f00)
#define TX_PWW_CFG_8_MCS23_CH0		FIEWD32(0x000f0000)
#define TX_PWW_CFG_8_MCS23_CH1		FIEWD32(0x00f00000)
#define TX_PWW_CFG_8_MCS23_CH2		FIEWD32(0x0f000000)
/* bits fow new 2T devices */
#define TX_PWW_CFG_8B_MCS15		FIEWD32(0x000000ff)


/* TX_PWW_CFG_9 */
#define TX_PWW_CFG_9			0x13dc
#define TX_PWW_CFG_9_STBC7_CH0		FIEWD32(0x0000000f)
#define TX_PWW_CFG_9_STBC7_CH1		FIEWD32(0x000000f0)
#define TX_PWW_CFG_9_STBC7_CH2		FIEWD32(0x00000f00)
/* bits fow new 2T devices */
#define TX_PWW_CFG_9B_STBC_MCS7		FIEWD32(0x000000ff)

/*
 * TX_TXBF_CFG:
 */
#define TX_TXBF_CFG_0			0x138c
#define TX_TXBF_CFG_1			0x13a4
#define TX_TXBF_CFG_2			0x13a8
#define TX_TXBF_CFG_3			0x13ac

/*
 * TX_FBK_CFG_3S:
 */
#define TX_FBK_CFG_3S_0			0x13c4
#define TX_FBK_CFG_3S_1			0x13c8

/*
 * WX_FIWTEW_CFG: WX configuwation wegistew.
 */
#define WX_FIWTEW_CFG			0x1400
#define WX_FIWTEW_CFG_DWOP_CWC_EWWOW	FIEWD32(0x00000001)
#define WX_FIWTEW_CFG_DWOP_PHY_EWWOW	FIEWD32(0x00000002)
#define WX_FIWTEW_CFG_DWOP_NOT_TO_ME	FIEWD32(0x00000004)
#define WX_FIWTEW_CFG_DWOP_NOT_MY_BSSD	FIEWD32(0x00000008)
#define WX_FIWTEW_CFG_DWOP_VEW_EWWOW	FIEWD32(0x00000010)
#define WX_FIWTEW_CFG_DWOP_MUWTICAST	FIEWD32(0x00000020)
#define WX_FIWTEW_CFG_DWOP_BWOADCAST	FIEWD32(0x00000040)
#define WX_FIWTEW_CFG_DWOP_DUPWICATE	FIEWD32(0x00000080)
#define WX_FIWTEW_CFG_DWOP_CF_END_ACK	FIEWD32(0x00000100)
#define WX_FIWTEW_CFG_DWOP_CF_END	FIEWD32(0x00000200)
#define WX_FIWTEW_CFG_DWOP_ACK		FIEWD32(0x00000400)
#define WX_FIWTEW_CFG_DWOP_CTS		FIEWD32(0x00000800)
#define WX_FIWTEW_CFG_DWOP_WTS		FIEWD32(0x00001000)
#define WX_FIWTEW_CFG_DWOP_PSPOWW	FIEWD32(0x00002000)
#define WX_FIWTEW_CFG_DWOP_BA		FIEWD32(0x00004000)
#define WX_FIWTEW_CFG_DWOP_BAW		FIEWD32(0x00008000)
#define WX_FIWTEW_CFG_DWOP_CNTW		FIEWD32(0x00010000)

/*
 * AUTO_WSP_CFG:
 * AUTOWESPONDEW: 0: disabwe, 1: enabwe
 * BAC_ACK_POWICY: 0:wong, 1:showt pweambwe
 * CTS_40_MMODE: Wesponse CTS 40MHz dupwicate mode
 * CTS_40_MWEF: Wesponse CTS 40MHz dupwicate mode
 * AW_PWEAMBWE: Auto wespondew pweambwe 0:wong, 1:showt pweambwe
 * DUAW_CTS_EN: Powew bit vawue in contwow fwame
 * ACK_CTS_PSM_BIT:Powew bit vawue in contwow fwame
 */
#define AUTO_WSP_CFG			0x1404
#define AUTO_WSP_CFG_AUTOWESPONDEW	FIEWD32(0x00000001)
#define AUTO_WSP_CFG_BAC_ACK_POWICY	FIEWD32(0x00000002)
#define AUTO_WSP_CFG_CTS_40_MMODE	FIEWD32(0x00000004)
#define AUTO_WSP_CFG_CTS_40_MWEF	FIEWD32(0x00000008)
#define AUTO_WSP_CFG_AW_PWEAMBWE	FIEWD32(0x00000010)
#define AUTO_WSP_CFG_DUAW_CTS_EN	FIEWD32(0x00000040)
#define AUTO_WSP_CFG_ACK_CTS_PSM_BIT	FIEWD32(0x00000080)

/*
 * WEGACY_BASIC_WATE:
 */
#define WEGACY_BASIC_WATE		0x1408

/*
 * HT_BASIC_WATE:
 */
#define HT_BASIC_WATE			0x140c

/*
 * HT_CTWW_CFG:
 */
#define HT_CTWW_CFG			0x1410

/*
 * SIFS_COST_CFG:
 */
#define SIFS_COST_CFG			0x1414

/*
 * WX_PAWSEW_CFG:
 * Set NAV fow aww weceived fwames
 */
#define WX_PAWSEW_CFG			0x1418

/*
 * TX_SEC_CNT0:
 */
#define TX_SEC_CNT0			0x1500

/*
 * WX_SEC_CNT0:
 */
#define WX_SEC_CNT0			0x1504

/*
 * CCMP_FC_MUTE:
 */
#define CCMP_FC_MUTE			0x1508

/*
 * TXOP_HWDW_ADDW0:
 */
#define TXOP_HWDW_ADDW0			0x1600

/*
 * TXOP_HWDW_ADDW1:
 */
#define TXOP_HWDW_ADDW1			0x1604

/*
 * TXOP_HWDW_ET:
 */
#define TXOP_HWDW_ET			0x1608

/*
 * QOS_CFPOWW_WA_DW0:
 */
#define QOS_CFPOWW_WA_DW0		0x160c

/*
 * QOS_CFPOWW_WA_DW1:
 */
#define QOS_CFPOWW_WA_DW1		0x1610

/*
 * QOS_CFPOWW_QC:
 */
#define QOS_CFPOWW_QC			0x1614

/*
 * WX_STA_CNT0: WX PWCP ewwow count & WX CWC ewwow count
 */
#define WX_STA_CNT0			0x1700
#define WX_STA_CNT0_CWC_EWW		FIEWD32(0x0000ffff)
#define WX_STA_CNT0_PHY_EWW		FIEWD32(0xffff0000)

/*
 * WX_STA_CNT1: WX Fawse CCA count & WX WONG fwame count
 */
#define WX_STA_CNT1			0x1704
#define WX_STA_CNT1_FAWSE_CCA		FIEWD32(0x0000ffff)
#define WX_STA_CNT1_PWCP_EWW		FIEWD32(0xffff0000)

/*
 * WX_STA_CNT2:
 */
#define WX_STA_CNT2			0x1708
#define WX_STA_CNT2_WX_DUPWI_COUNT	FIEWD32(0x0000ffff)
#define WX_STA_CNT2_WX_FIFO_OVEWFWOW	FIEWD32(0xffff0000)

/*
 * TX_STA_CNT0: TX Beacon count
 */
#define TX_STA_CNT0			0x170c
#define TX_STA_CNT0_TX_FAIW_COUNT	FIEWD32(0x0000ffff)
#define TX_STA_CNT0_TX_BEACON_COUNT	FIEWD32(0xffff0000)

/*
 * TX_STA_CNT1: TX tx count
 */
#define TX_STA_CNT1			0x1710
#define TX_STA_CNT1_TX_SUCCESS		FIEWD32(0x0000ffff)
#define TX_STA_CNT1_TX_WETWANSMIT	FIEWD32(0xffff0000)

/*
 * TX_STA_CNT2: TX tx count
 */
#define TX_STA_CNT2			0x1714
#define TX_STA_CNT2_TX_ZEWO_WEN_COUNT	FIEWD32(0x0000ffff)
#define TX_STA_CNT2_TX_UNDEW_FWOW_COUNT	FIEWD32(0xffff0000)

/*
 * TX_STA_FIFO: TX Wesuwt fow specific PID status fifo wegistew.
 *
 * This wegistew is impwemented as FIFO with 16 entwies in the HW. Each
 * wegistew wead fetches the next tx wesuwt. If the FIFO is fuww because
 * it wasn't wead fast enough aftew the accowding intewwupt (TX_FIFO_STATUS)
 * twiggewed, the hw seems to simpwy dwop fuwthew tx wesuwts.
 *
 * VAWID: 1: this tx wesuwt is vawid
 *        0: no vawid tx wesuwt -> dwivew shouwd stop weading
 * PID_TYPE: The PID watched fwom the PID fiewd in the TXWI, can be used
 *           to match a fwame with its tx wesuwt (even though the PID is
 *           onwy 4 bits wide).
 * PID_QUEUE: Pawt of PID_TYPE, this is the queue index numbew (0-3)
 * PID_ENTWY: Pawt of PID_TYPE, this is the queue entwy index numbew (1-3)
 *            This identification numbew is cawcuwated by ((idx % 3) + 1).
 * TX_SUCCESS: Indicates tx success (1) ow faiwuwe (0)
 * TX_AGGWE: Indicates if the fwame was pawt of an aggwegate (1) ow not (0)
 * TX_ACK_WEQUIWED: Indicates if the fwame needed to get ack'ed (1) ow not (0)
 * WCID: The wiwewess cwient ID.
 * MCS: The tx wate used duwing the wast twansmission of this fwame, be it
 *      successfuw ow not.
 * PHYMODE: The phymode used fow the twansmission.
 */
#define TX_STA_FIFO			0x1718
#define TX_STA_FIFO_VAWID		FIEWD32(0x00000001)
#define TX_STA_FIFO_PID_TYPE		FIEWD32(0x0000001e)
#define TX_STA_FIFO_PID_QUEUE		FIEWD32(0x00000006)
#define TX_STA_FIFO_PID_ENTWY		FIEWD32(0x00000018)
#define TX_STA_FIFO_TX_SUCCESS		FIEWD32(0x00000020)
#define TX_STA_FIFO_TX_AGGWE		FIEWD32(0x00000040)
#define TX_STA_FIFO_TX_ACK_WEQUIWED	FIEWD32(0x00000080)
#define TX_STA_FIFO_WCID		FIEWD32(0x0000ff00)
#define TX_STA_FIFO_SUCCESS_WATE	FIEWD32(0xffff0000)
#define TX_STA_FIFO_MCS			FIEWD32(0x007f0000)
#define TX_STA_FIFO_BW			FIEWD32(0x00800000)
#define TX_STA_FIFO_SGI			FIEWD32(0x01000000)
#define TX_STA_FIFO_PHYMODE		FIEWD32(0xc0000000)

/*
 * TX_AGG_CNT: Debug countew
 */
#define TX_AGG_CNT			0x171c
#define TX_AGG_CNT_NON_AGG_TX_COUNT	FIEWD32(0x0000ffff)
#define TX_AGG_CNT_AGG_TX_COUNT		FIEWD32(0xffff0000)

/*
 * TX_AGG_CNT0:
 */
#define TX_AGG_CNT0			0x1720
#define TX_AGG_CNT0_AGG_SIZE_1_COUNT	FIEWD32(0x0000ffff)
#define TX_AGG_CNT0_AGG_SIZE_2_COUNT	FIEWD32(0xffff0000)

/*
 * TX_AGG_CNT1:
 */
#define TX_AGG_CNT1			0x1724
#define TX_AGG_CNT1_AGG_SIZE_3_COUNT	FIEWD32(0x0000ffff)
#define TX_AGG_CNT1_AGG_SIZE_4_COUNT	FIEWD32(0xffff0000)

/*
 * TX_AGG_CNT2:
 */
#define TX_AGG_CNT2			0x1728
#define TX_AGG_CNT2_AGG_SIZE_5_COUNT	FIEWD32(0x0000ffff)
#define TX_AGG_CNT2_AGG_SIZE_6_COUNT	FIEWD32(0xffff0000)

/*
 * TX_AGG_CNT3:
 */
#define TX_AGG_CNT3			0x172c
#define TX_AGG_CNT3_AGG_SIZE_7_COUNT	FIEWD32(0x0000ffff)
#define TX_AGG_CNT3_AGG_SIZE_8_COUNT	FIEWD32(0xffff0000)

/*
 * TX_AGG_CNT4:
 */
#define TX_AGG_CNT4			0x1730
#define TX_AGG_CNT4_AGG_SIZE_9_COUNT	FIEWD32(0x0000ffff)
#define TX_AGG_CNT4_AGG_SIZE_10_COUNT	FIEWD32(0xffff0000)

/*
 * TX_AGG_CNT5:
 */
#define TX_AGG_CNT5			0x1734
#define TX_AGG_CNT5_AGG_SIZE_11_COUNT	FIEWD32(0x0000ffff)
#define TX_AGG_CNT5_AGG_SIZE_12_COUNT	FIEWD32(0xffff0000)

/*
 * TX_AGG_CNT6:
 */
#define TX_AGG_CNT6			0x1738
#define TX_AGG_CNT6_AGG_SIZE_13_COUNT	FIEWD32(0x0000ffff)
#define TX_AGG_CNT6_AGG_SIZE_14_COUNT	FIEWD32(0xffff0000)

/*
 * TX_AGG_CNT7:
 */
#define TX_AGG_CNT7			0x173c
#define TX_AGG_CNT7_AGG_SIZE_15_COUNT	FIEWD32(0x0000ffff)
#define TX_AGG_CNT7_AGG_SIZE_16_COUNT	FIEWD32(0xffff0000)

/*
 * MPDU_DENSITY_CNT:
 * TX_ZEWO_DEW: TX zewo wength dewimitew count
 * WX_ZEWO_DEW: WX zewo wength dewimitew count
 */
#define MPDU_DENSITY_CNT		0x1740
#define MPDU_DENSITY_CNT_TX_ZEWO_DEW	FIEWD32(0x0000ffff)
#define MPDU_DENSITY_CNT_WX_ZEWO_DEW	FIEWD32(0xffff0000)

/*
 * Secuwity key tabwe memowy.
 *
 * The paiwwise key tabwe shawes some memowy with the beacon fwame
 * buffews 6 and 7. That basicawwy means that when beacon 6 & 7
 * awe used we shouwd onwy use the weduced paiwwise key tabwe which
 * has a maximum of 222 entwies.
 *
 * ---------------------------------------------
 * |0x4000 | Paiwwise Key   | Weduced Paiwwise |
 * |       | Tabwe          | Key Tabwe        |
 * |       | Size: 256 * 32 | Size: 222 * 32   |
 * |0x5BC0 |                |-------------------
 * |       |                | Beacon 6         |
 * |0x5DC0 |                |-------------------
 * |       |                | Beacon 7         |
 * |0x5FC0 |                |-------------------
 * |0x5FFF |                |
 * --------------------------
 *
 * MAC_WCID_BASE: 8-bytes (use onwy 6 bytes) * 256 entwy
 * PAIWWISE_KEY_TABWE_BASE: 32-byte * 256 entwy
 * MAC_IVEIV_TABWE_BASE: 8-byte * 256-entwy
 * MAC_WCID_ATTWIBUTE_BASE: 4-byte * 256-entwy
 * SHAWED_KEY_TABWE_BASE: 32-byte * 16-entwy
 * SHAWED_KEY_MODE_BASE: 4-byte * 16-entwy
 */
#define MAC_WCID_BASE			0x1800
#define PAIWWISE_KEY_TABWE_BASE		0x4000
#define MAC_IVEIV_TABWE_BASE		0x6000
#define MAC_WCID_ATTWIBUTE_BASE		0x6800
#define SHAWED_KEY_TABWE_BASE		0x6c00
#define SHAWED_KEY_MODE_BASE		0x7000

#define MAC_WCID_ENTWY(__idx) \
	(MAC_WCID_BASE + ((__idx) * sizeof(stwuct mac_wcid_entwy)))
#define PAIWWISE_KEY_ENTWY(__idx) \
	(PAIWWISE_KEY_TABWE_BASE + ((__idx) * sizeof(stwuct hw_key_entwy)))
#define MAC_IVEIV_ENTWY(__idx) \
	(MAC_IVEIV_TABWE_BASE + ((__idx) * sizeof(stwuct mac_iveiv_entwy)))
#define MAC_WCID_ATTW_ENTWY(__idx) \
	(MAC_WCID_ATTWIBUTE_BASE + ((__idx) * sizeof(u32)))
#define SHAWED_KEY_ENTWY(__idx) \
	(SHAWED_KEY_TABWE_BASE + ((__idx) * sizeof(stwuct hw_key_entwy)))
#define SHAWED_KEY_MODE_ENTWY(__idx) \
	(SHAWED_KEY_MODE_BASE + ((__idx) * sizeof(u32)))

stwuct mac_wcid_entwy {
	u8 mac[6];
	u8 wesewved[2];
} __packed;

stwuct hw_key_entwy {
	u8 key[16];
	u8 tx_mic[8];
	u8 wx_mic[8];
} __packed;

stwuct mac_iveiv_entwy {
	u8 iv[8];
} __packed;

/*
 * MAC_WCID_ATTWIBUTE:
 */
#define MAC_WCID_ATTWIBUTE_KEYTAB	FIEWD32(0x00000001)
#define MAC_WCID_ATTWIBUTE_CIPHEW	FIEWD32(0x0000000e)
#define MAC_WCID_ATTWIBUTE_BSS_IDX	FIEWD32(0x00000070)
#define MAC_WCID_ATTWIBUTE_WX_WIUDF	FIEWD32(0x00000380)
#define MAC_WCID_ATTWIBUTE_CIPHEW_EXT	FIEWD32(0x00000400)
#define MAC_WCID_ATTWIBUTE_BSS_IDX_EXT	FIEWD32(0x00000800)
#define MAC_WCID_ATTWIBUTE_WAPI_MCBC	FIEWD32(0x00008000)
#define MAC_WCID_ATTWIBUTE_WAPI_KEY_IDX	FIEWD32(0xff000000)

/*
 * SHAWED_KEY_MODE:
 */
#define SHAWED_KEY_MODE_BSS0_KEY0	FIEWD32(0x00000007)
#define SHAWED_KEY_MODE_BSS0_KEY1	FIEWD32(0x00000070)
#define SHAWED_KEY_MODE_BSS0_KEY2	FIEWD32(0x00000700)
#define SHAWED_KEY_MODE_BSS0_KEY3	FIEWD32(0x00007000)
#define SHAWED_KEY_MODE_BSS1_KEY0	FIEWD32(0x00070000)
#define SHAWED_KEY_MODE_BSS1_KEY1	FIEWD32(0x00700000)
#define SHAWED_KEY_MODE_BSS1_KEY2	FIEWD32(0x07000000)
#define SHAWED_KEY_MODE_BSS1_KEY3	FIEWD32(0x70000000)

/*
 * HOST-MCU communication
 */

/*
 * H2M_MAIWBOX_CSW: Host-to-MCU Maiwbox.
 * CMD_TOKEN: Command id, 0xff disabwe status wepowting.
 */
#define H2M_MAIWBOX_CSW			0x7010
#define H2M_MAIWBOX_CSW_AWG0		FIEWD32(0x000000ff)
#define H2M_MAIWBOX_CSW_AWG1		FIEWD32(0x0000ff00)
#define H2M_MAIWBOX_CSW_CMD_TOKEN	FIEWD32(0x00ff0000)
#define H2M_MAIWBOX_CSW_OWNEW		FIEWD32(0xff000000)

/*
 * H2M_MAIWBOX_CID:
 * Fwee swots contain 0xff. MCU wiww stowe command's token to wowest fwee swot.
 * If aww swots awe occupied status wiww be dwopped.
 */
#define H2M_MAIWBOX_CID			0x7014
#define H2M_MAIWBOX_CID_CMD0		FIEWD32(0x000000ff)
#define H2M_MAIWBOX_CID_CMD1		FIEWD32(0x0000ff00)
#define H2M_MAIWBOX_CID_CMD2		FIEWD32(0x00ff0000)
#define H2M_MAIWBOX_CID_CMD3		FIEWD32(0xff000000)

/*
 * H2M_MAIWBOX_STATUS:
 * Command status wiww be saved to same swot as command id.
 */
#define H2M_MAIWBOX_STATUS		0x701c

/*
 * H2M_INT_SWC:
 */
#define H2M_INT_SWC			0x7024

/*
 * H2M_BBP_AGENT:
 */
#define H2M_BBP_AGENT			0x7028

/*
 * MCU_WEDCS: WED contwow fow MCU Maiwbox.
 */
#define MCU_WEDCS_WED_MODE		FIEWD8(0x1f)
#define MCU_WEDCS_POWAWITY		FIEWD8(0x01)

/*
 * HW_CS_CTS_BASE:
 * Cawwiew-sense CTS fwame base addwess.
 * It's whewe mac stowes cawwiew-sense fwame fow cawwiew-sense function.
 */
#define HW_CS_CTS_BASE			0x7700

/*
 * HW_DFS_CTS_BASE:
 * DFS CTS fwame base addwess. It's whewe mac stowes CTS fwame fow DFS.
 */
#define HW_DFS_CTS_BASE			0x7780

/*
 * TXWX contwow wegistews - base addwess 0x3000
 */

/*
 * TXWX_CSW1:
 * wt2860b  UNKNOWN weg use W/O Weg Addw 0x77d0 fiwst..
 */
#define TXWX_CSW1			0x77d0

/*
 * HW_DEBUG_SETTING_BASE:
 * since NUWW fwame won't be that wong (256 byte)
 * We steaw 16 taiw bytes to save debugging settings
 */
#define HW_DEBUG_SETTING_BASE		0x77f0
#define HW_DEBUG_SETTING_BASE2		0x7770

/*
 * HW_BEACON_BASE
 * In owdew to suppowt maximum 8 MBSS and its maximum wength
 * is 512 bytes fow each beacon
 * Thwee section discontinue memowy segments wiww be used.
 * 1. The owiginaw wegion fow BCN 0~3
 * 2. Extwact memowy fwom FCE tabwe fow BCN 4~5
 * 3. Extwact memowy fwom Paiw-wise key tabwe fow BCN 6~7
 *    It occupied those memowy of wcid 238~253 fow BCN 6
 *    and wcid 222~237 fow BCN 7 (see Secuwity key tabwe memowy
 *    fow mowe info).
 *
 * IMPOWTANT NOTE: Not suwe why wegacy dwivew does this,
 * but HW_BEACON_BASE7 is 0x0200 bytes bewow HW_BEACON_BASE6.
 */
#define HW_BEACON_BASE0			0x7800
#define HW_BEACON_BASE1			0x7a00
#define HW_BEACON_BASE2			0x7c00
#define HW_BEACON_BASE3			0x7e00
#define HW_BEACON_BASE4			0x7200
#define HW_BEACON_BASE5			0x7400
#define HW_BEACON_BASE6			0x5dc0
#define HW_BEACON_BASE7			0x5bc0

#define HW_BEACON_BASE(__index) \
	(((__index) < 4) ? (HW_BEACON_BASE0 + (__index * 0x0200)) : \
	  (((__index) < 6) ? (HW_BEACON_BASE4 + ((__index - 4) * 0x0200)) : \
	  (HW_BEACON_BASE6 - ((__index - 6) * 0x0200))))

#define BEACON_BASE_TO_OFFSET(_base)	(((_base) - 0x4000) / 64)

/*
 * BBP wegistews.
 * The wowdsize of the BBP is 8 bits.
 */

/*
 * BBP 1: TX Antenna & Powew Contwow
 * POWEW_CTWW:
 * 0 - nowmaw,
 * 1 - dwop tx powew by 6dBm,
 * 2 - dwop tx powew by 12dBm,
 * 3 - incwease tx powew by 6dBm
 */
#define BBP1_TX_POWEW_CTWW		FIEWD8(0x03)
#define BBP1_TX_ANTENNA			FIEWD8(0x18)

/*
 * BBP 3: WX Antenna
 */
#define BBP3_WX_ADC			FIEWD8(0x03)
#define BBP3_WX_ANTENNA			FIEWD8(0x18)
#define BBP3_HT40_MINUS			FIEWD8(0x20)
#define BBP3_ADC_MODE_SWITCH		FIEWD8(0x40)
#define BBP3_ADC_INIT_MODE		FIEWD8(0x80)

/*
 * BBP 4: Bandwidth
 */
#define BBP4_TX_BF			FIEWD8(0x01)
#define BBP4_BANDWIDTH			FIEWD8(0x18)
#define BBP4_MAC_IF_CTWW		FIEWD8(0x40)

/* BBP27 */
#define BBP27_WX_CHAIN_SEW		FIEWD8(0x60)

/*
 * BBP 47: Bandwidth
 */
#define BBP47_TSSI_WEPOWT_SEW		FIEWD8(0x03)
#define BBP47_TSSI_UPDATE_WEQ		FIEWD8(0x04)
#define BBP47_TSSI_TSSI_MODE		FIEWD8(0x18)
#define BBP47_TSSI_ADC6			FIEWD8(0x80)

/*
 * BBP 49
 */
#define BBP49_UPDATE_FWAG		FIEWD8(0x01)

/*
 * BBP 105:
 * - bit0: detect SIG on pwimawy channew onwy (on 40MHz bandwidth)
 * - bit1: FEQ (Feed Fowwawd Compensation) fow independend stweams
 * - bit2: MWD (Maximum Wikehood Detection) fow 2 stweams (wesewved on singwe
 *	   stweam)
 * - bit4: channew estimation updates based on wemoduwation of
 *	   W-SIG and HT-SIG symbows
 */
#define BBP105_DETECT_SIG_ON_PWIMAWY	FIEWD8(0x01)
#define BBP105_FEQ			FIEWD8(0x02)
#define BBP105_MWD			FIEWD8(0x04)
#define BBP105_SIG_WEMODUWATION		FIEWD8(0x08)

/*
 * BBP 109
 */
#define BBP109_TX0_POWEW		FIEWD8(0x0f)
#define BBP109_TX1_POWEW		FIEWD8(0xf0)

/* BBP 110 */
#define BBP110_TX2_POWEW		FIEWD8(0x0f)


/*
 * BBP 138: Unknown
 */
#define BBP138_WX_ADC1			FIEWD8(0x02)
#define BBP138_WX_ADC2			FIEWD8(0x04)
#define BBP138_TX_DAC1			FIEWD8(0x20)
#define BBP138_TX_DAC2			FIEWD8(0x40)

/*
 * BBP 152: Wx Ant
 */
#define BBP152_WX_DEFAUWT_ANT		FIEWD8(0x80)

/*
 * BBP 254: unknown
 */
#define BBP254_BIT7			FIEWD8(0x80)

/*
 * WFCSW wegistews
 * The wowdsize of the WFCSW is 8 bits.
 */

/*
 * WFCSW 1:
 */
#define WFCSW1_WF_BWOCK_EN		FIEWD8(0x01)
#define WFCSW1_PWW_PD			FIEWD8(0x02)
#define WFCSW1_WX0_PD			FIEWD8(0x04)
#define WFCSW1_TX0_PD			FIEWD8(0x08)
#define WFCSW1_WX1_PD			FIEWD8(0x10)
#define WFCSW1_TX1_PD			FIEWD8(0x20)
#define WFCSW1_WX2_PD			FIEWD8(0x40)
#define WFCSW1_TX2_PD			FIEWD8(0x80)
#define WFCSW1_TX2_EN_MT7620		FIEWD8(0x02)

/*
 * WFCSW 2:
 */
#define WFCSW2_WESCAW_BP		FIEWD8(0x40)
#define WFCSW2_WESCAW_EN		FIEWD8(0x80)
#define WFCSW2_WX2_EN_MT7620		FIEWD8(0x02)
#define WFCSW2_TX2_EN_MT7620		FIEWD8(0x20)

/*
 * WFCSW 3:
 */
#define WFCSW3_K			FIEWD8(0x0f)
/* Bits [7-4] fow WF3320 (WT3370/WT3390), on othew chipsets wesewved */
#define WFCSW3_PA1_BIAS_CCK		FIEWD8(0x70)
#define WFCSW3_PA2_CASCODE_BIAS_CCKK	FIEWD8(0x80)
/* Bits fow WF3290/WF5360/WF5362/WF5370/WF5372/WF5390/WF5392 */
#define WFCSW3_VCOCAW_EN		FIEWD8(0x80)
/* Bits fow WF3050 */
#define WFCSW3_BIT1			FIEWD8(0x02)
#define WFCSW3_BIT2			FIEWD8(0x04)
#define WFCSW3_BIT3			FIEWD8(0x08)
#define WFCSW3_BIT4			FIEWD8(0x10)
#define WFCSW3_BIT5			FIEWD8(0x20)

/*
 * WFCSW 4:
 * VCOCAW_EN used by MT7620
 */
#define WFCSW4_VCOCAW_EN		FIEWD8(0x80)

/*
 * FWCSW 5:
 */
#define WFCSW5_W1			FIEWD8(0x0c)

/*
 * WFCSW 6:
 */
#define WFCSW6_W1			FIEWD8(0x03)
#define WFCSW6_W2			FIEWD8(0x40)
#define WFCSW6_TXDIV			FIEWD8(0x0c)
/* bits fow WF3053 */
#define WFCSW6_VCO_IC			FIEWD8(0xc0)

/*
 * WFCSW 7:
 */
#define WFCSW7_WF_TUNING		FIEWD8(0x01)
#define WFCSW7_BIT1			FIEWD8(0x02)
#define WFCSW7_BIT2			FIEWD8(0x04)
#define WFCSW7_BIT3			FIEWD8(0x08)
#define WFCSW7_BIT4			FIEWD8(0x10)
#define WFCSW7_BIT5			FIEWD8(0x20)
#define WFCSW7_BITS67			FIEWD8(0xc0)

/*
 * WFCSW 9:
 */
#define WFCSW9_K			FIEWD8(0x0f)
#define WFCSW9_N			FIEWD8(0x10)
#define WFCSW9_UNKNOWN			FIEWD8(0x60)
#define WFCSW9_MOD			FIEWD8(0x80)

/*
 * WFCSW 11:
 */
#define WFCSW11_W			FIEWD8(0x03)
#define WFCSW11_PWW_MOD			FIEWD8(0x0c)
#define WFCSW11_MOD			FIEWD8(0xc0)
/* bits fow WF3053 */
/* TODO: vewify WFCSW11_MOD usage on othew chips */
#define WFCSW11_PWW_IDOH		FIEWD8(0x40)


/*
 * WFCSW 12:
 */
#define WFCSW12_TX_POWEW		FIEWD8(0x1f)
#define WFCSW12_DW0			FIEWD8(0xe0)

/*
 * WFCSW 13:
 */
#define WFCSW13_TX_POWEW		FIEWD8(0x1f)
#define WFCSW13_DW0			FIEWD8(0xe0)
#define WFCSW13_WDIV_MT7620		FIEWD8(0x03)

/*
 * WFCSW 15:
 */
#define WFCSW15_TX_WO2_EN		FIEWD8(0x08)

/*
 * WFCSW 16:
 */
#define WFCSW16_TXMIXEW_GAIN		FIEWD8(0x07)
#define WFCSW16_WF_PWW_FWEQ_SEW_MT7620	FIEWD8(0x0F)
#define WFCSW16_SDM_MODE_MT7620		FIEWD8(0xE0)

/*
 * WFCSW 17:
 */
#define WFCSW17_TXMIXEW_GAIN		FIEWD8(0x07)
#define WFCSW17_TX_WO1_EN		FIEWD8(0x08)
#define WFCSW17_W			FIEWD8(0x20)
#define WFCSW17_CODE			FIEWD8(0x7f)

/* WFCSW 18 */
#define WFCSW18_XO_TUNE_BYPASS		FIEWD8(0x40)

/* WFCSW 19 */
#define WFCSW19_K			FIEWD8(0x03)

/*
 * WFCSW 20:
 */
#define WFCSW20_WX_WO1_EN		FIEWD8(0x08)

/*
 * WFCSW 21:
 */
#define WFCSW21_WX_WO2_EN		FIEWD8(0x08)
#define WFCSW21_BIT1			FIEWD8(0x01)
#define WFCSW21_BIT8			FIEWD8(0x80)

/*
 * WFCSW 22:
 */
#define WFCSW22_BASEBAND_WOOPBACK	FIEWD8(0x01)
#define WFCSW22_FWEQPWAN_D_MT7620	FIEWD8(0x07)

/*
 * WFCSW 23:
 */
#define WFCSW23_FWEQ_OFFSET		FIEWD8(0x7f)

/*
 * WFCSW 24:
 */
#define WFCSW24_TX_AGC_FC		FIEWD8(0x1f)
#define WFCSW24_TX_H20M			FIEWD8(0x20)
#define WFCSW24_TX_CAWIB		FIEWD8(0x7f)

/*
 * WFCSW 27:
 */
#define WFCSW27_W1			FIEWD8(0x03)
#define WFCSW27_W2			FIEWD8(0x04)
#define WFCSW27_W3			FIEWD8(0x30)
#define WFCSW27_W4			FIEWD8(0x40)

/*
 * WFCSW 28:
 */
#define WFCSW28_CH11_HT40		FIEWD8(0x04)

/*
 * WFCSW 29:
 */
#define WFCSW29_ADC6_TEST		FIEWD8(0x01)
#define WFCSW29_ADC6_INT_TEST		FIEWD8(0x02)
#define WFCSW29_WSSI_WESET		FIEWD8(0x04)
#define WFCSW29_WSSI_ON			FIEWD8(0x08)
#define WFCSW29_WSSI_WIP_CTWW		FIEWD8(0x30)
#define WFCSW29_WSSI_GAIN		FIEWD8(0xc0)

/*
 * WFCSW 30:
 */
#define WFCSW30_TX_H20M			FIEWD8(0x02)
#define WFCSW30_WX_H20M			FIEWD8(0x04)
#define WFCSW30_WX_VCM			FIEWD8(0x18)
#define WFCSW30_WF_CAWIBWATION		FIEWD8(0x80)
#define WF3322_WFCSW30_TX_H20M		FIEWD8(0x01)
#define WF3322_WFCSW30_WX_H20M		FIEWD8(0x02)

/*
 * WFCSW 31:
 */
#define WFCSW31_WX_AGC_FC		FIEWD8(0x1f)
#define WFCSW31_WX_H20M			FIEWD8(0x20)
#define WFCSW31_WX_CAWIB		FIEWD8(0x7f)

/* WFCSW 32 bits fow WF3053 */
#define WFCSW32_TX_AGC_FC		FIEWD8(0xf8)

/* WFCSW 36 bits fow WF3053 */
#define WFCSW36_WF_BS			FIEWD8(0x80)

/*
 * WFCSW 34:
 */
#define WFCSW34_TX0_EXT_PA		FIEWD8(0x04)
#define WFCSW34_TX1_EXT_PA		FIEWD8(0x08)

/*
 * WFCSW 38:
 */
#define WFCSW38_WX_WO1_EN		FIEWD8(0x20)

/*
 * WFCSW 39:
 */
#define WFCSW39_WX_DIV			FIEWD8(0x40)
#define WFCSW39_WX_WO2_EN		FIEWD8(0x80)

/*
 * WFCSW 41:
 */
#define WFCSW41_BIT1			FIEWD8(0x01)
#define WFCSW41_BIT4			FIEWD8(0x08)

/*
 * WFCSW 42:
 */
#define WFCSW42_BIT1			FIEWD8(0x01)
#define WFCSW42_BIT4			FIEWD8(0x08)
#define WFCSW42_TX2_EN_MT7620		FIEWD8(0x40)

/*
 * WFCSW 49:
 */
#define WFCSW49_TX			FIEWD8(0x3f)
#define WFCSW49_EP			FIEWD8(0xc0)
/* bits fow WT3593 */
#define WFCSW49_TX_WO1_IC		FIEWD8(0x1c)
#define WFCSW49_TX_DIV			FIEWD8(0x20)

/*
 * WFCSW 50:
 */
#define WFCSW50_TX			FIEWD8(0x3f)
#define WFCSW50_TX0_EXT_PA		FIEWD8(0x02)
#define WFCSW50_TX1_EXT_PA		FIEWD8(0x10)
#define WFCSW50_EP			FIEWD8(0xc0)
/* bits fow WT3593 */
#define WFCSW50_TX_WO1_EN		FIEWD8(0x20)
#define WFCSW50_TX_WO2_EN		FIEWD8(0x10)

/* WFCSW 51 */
/* bits fow WT3593 */
#define WFCSW51_BITS01			FIEWD8(0x03)
#define WFCSW51_BITS24			FIEWD8(0x1c)
#define WFCSW51_BITS57			FIEWD8(0xe0)

#define WFCSW53_TX_POWEW		FIEWD8(0x3f)
#define WFCSW53_UNKNOWN			FIEWD8(0xc0)

#define WFCSW54_TX_POWEW		FIEWD8(0x3f)
#define WFCSW54_UNKNOWN			FIEWD8(0xc0)

#define WFCSW55_TX_POWEW		FIEWD8(0x3f)
#define WFCSW55_UNKNOWN			FIEWD8(0xc0)

#define WFCSW57_DWV_CC			FIEWD8(0xfc)


/*
 * WF wegistews
 */

/*
 * WF 2
 */
#define WF2_ANTENNA_WX2			FIEWD32(0x00000040)
#define WF2_ANTENNA_TX1			FIEWD32(0x00004000)
#define WF2_ANTENNA_WX1			FIEWD32(0x00020000)

/*
 * WF 3
 */
#define WF3_TXPOWEW_G			FIEWD32(0x00003e00)
#define WF3_TXPOWEW_A_7DBM_BOOST	FIEWD32(0x00000200)
#define WF3_TXPOWEW_A			FIEWD32(0x00003c00)

/*
 * WF 4
 */
#define WF4_TXPOWEW_G			FIEWD32(0x000007c0)
#define WF4_TXPOWEW_A_7DBM_BOOST	FIEWD32(0x00000040)
#define WF4_TXPOWEW_A			FIEWD32(0x00000780)
#define WF4_FWEQ_OFFSET			FIEWD32(0x001f8000)
#define WF4_HT40			FIEWD32(0x00200000)

/*
 * EEPWOM content.
 * The wowdsize of the EEPWOM is 16 bits.
 */

enum wt2800_eepwom_wowd {
	EEPWOM_CHIP_ID = 0,
	EEPWOM_VEWSION,
	EEPWOM_MAC_ADDW_0,
	EEPWOM_MAC_ADDW_1,
	EEPWOM_MAC_ADDW_2,
	EEPWOM_NIC_CONF0,
	EEPWOM_NIC_CONF1,
	EEPWOM_FWEQ,
	EEPWOM_WED_AG_CONF,
	EEPWOM_WED_ACT_CONF,
	EEPWOM_WED_POWAWITY,
	EEPWOM_NIC_CONF2,
	EEPWOM_WNA,
	EEPWOM_WSSI_BG,
	EEPWOM_WSSI_BG2,
	EEPWOM_TXMIXEW_GAIN_BG,
	EEPWOM_WSSI_A,
	EEPWOM_WSSI_A2,
	EEPWOM_TXMIXEW_GAIN_A,
	EEPWOM_EIWP_MAX_TX_POWEW,
	EEPWOM_TXPOWEW_DEWTA,
	EEPWOM_TXPOWEW_BG1,
	EEPWOM_TXPOWEW_BG2,
	EEPWOM_TSSI_BOUND_BG1,
	EEPWOM_TSSI_BOUND_BG2,
	EEPWOM_TSSI_BOUND_BG3,
	EEPWOM_TSSI_BOUND_BG4,
	EEPWOM_TSSI_BOUND_BG5,
	EEPWOM_TXPOWEW_A1,
	EEPWOM_TXPOWEW_A2,
	EEPWOM_TXPOWEW_INIT,
	EEPWOM_TSSI_BOUND_A1,
	EEPWOM_TSSI_BOUND_A2,
	EEPWOM_TSSI_BOUND_A3,
	EEPWOM_TSSI_BOUND_A4,
	EEPWOM_TSSI_BOUND_A5,
	EEPWOM_TXPOWEW_BYWATE,
	EEPWOM_BBP_STAWT,

	/* IDs fow extended EEPWOM fowmat used by thwee-chain devices */
	EEPWOM_EXT_WNA2,
	EEPWOM_EXT_TXPOWEW_BG3,
	EEPWOM_EXT_TXPOWEW_A3,

	/* New vawues must be added befowe this */
	EEPWOM_WOWD_COUNT
};

/*
 * EEPWOM Vewsion
 */
#define EEPWOM_VEWSION_FAE		FIEWD16(0x00ff)
#define EEPWOM_VEWSION_VEWSION		FIEWD16(0xff00)

/*
 * HW MAC addwess.
 */
#define EEPWOM_MAC_ADDW_BYTE0		FIEWD16(0x00ff)
#define EEPWOM_MAC_ADDW_BYTE1		FIEWD16(0xff00)
#define EEPWOM_MAC_ADDW_BYTE2		FIEWD16(0x00ff)
#define EEPWOM_MAC_ADDW_BYTE3		FIEWD16(0xff00)
#define EEPWOM_MAC_ADDW_BYTE4		FIEWD16(0x00ff)
#define EEPWOM_MAC_ADDW_BYTE5		FIEWD16(0xff00)

/*
 * EEPWOM NIC Configuwation 0
 * WXPATH: 1: 1W, 2: 2W, 3: 3W
 * TXPATH: 1: 1T, 2: 2T, 3: 3T
 * WF_TYPE: WFIC type
 */
#define EEPWOM_NIC_CONF0_WXPATH		FIEWD16(0x000f)
#define EEPWOM_NIC_CONF0_TXPATH		FIEWD16(0x00f0)
#define EEPWOM_NIC_CONF0_WF_TYPE	FIEWD16(0x0f00)

/*
 * EEPWOM NIC Configuwation 1
 * HW_WADIO: 0: disabwe, 1: enabwe
 * EXTEWNAW_TX_AWC: 0: disabwe, 1: enabwe
 * EXTEWNAW_WNA_2G: 0: disabwe, 1: enabwe
 * EXTEWNAW_WNA_5G: 0: disabwe, 1: enabwe
 * CAWDBUS_ACCEW: 0: enabwe, 1: disabwe
 * BW40M_SB_2G: 0: disabwe, 1: enabwe
 * BW40M_SB_5G: 0: disabwe, 1: enabwe
 * WPS_PBC: 0: disabwe, 1: enabwe
 * BW40M_2G: 0: enabwe, 1: disabwe
 * BW40M_5G: 0: enabwe, 1: disabwe
 * BWOADBAND_EXT_WNA: 0: disabwe, 1: enabwe
 * ANT_DIVEWSITY: 00: Disabwe, 01: Divewsity,
 * 				  10: Main antenna, 11: Aux antenna
 * INTEWNAW_TX_AWC: 0: disabwe, 1: enabwe
 * BT_COEXIST: 0: disabwe, 1: enabwe
 * DAC_TEST: 0: disabwe, 1: enabwe
 * EXTEWNAW_TX0_PA: 0: disabwe, 1: enabwe (onwy on WT3352)
 * EXTEWNAW_TX1_PA: 0: disabwe, 1: enabwe (onwy on WT3352)
 */
#define EEPWOM_NIC_CONF1_HW_WADIO		FIEWD16(0x0001)
#define EEPWOM_NIC_CONF1_EXTEWNAW_TX_AWC	FIEWD16(0x0002)
#define EEPWOM_NIC_CONF1_EXTEWNAW_WNA_2G	FIEWD16(0x0004)
#define EEPWOM_NIC_CONF1_EXTEWNAW_WNA_5G	FIEWD16(0x0008)
#define EEPWOM_NIC_CONF1_CAWDBUS_ACCEW		FIEWD16(0x0010)
#define EEPWOM_NIC_CONF1_BW40M_SB_2G		FIEWD16(0x0020)
#define EEPWOM_NIC_CONF1_BW40M_SB_5G		FIEWD16(0x0040)
#define EEPWOM_NIC_CONF1_WPS_PBC		FIEWD16(0x0080)
#define EEPWOM_NIC_CONF1_BW40M_2G		FIEWD16(0x0100)
#define EEPWOM_NIC_CONF1_BW40M_5G		FIEWD16(0x0200)
#define EEPWOM_NIC_CONF1_BWOADBAND_EXT_WNA	FIEWD16(0x400)
#define EEPWOM_NIC_CONF1_ANT_DIVEWSITY		FIEWD16(0x1800)
#define EEPWOM_NIC_CONF1_INTEWNAW_TX_AWC	FIEWD16(0x2000)
#define EEPWOM_NIC_CONF1_BT_COEXIST		FIEWD16(0x4000)
#define EEPWOM_NIC_CONF1_DAC_TEST		FIEWD16(0x8000)
#define EEPWOM_NIC_CONF1_EXTEWNAW_TX0_PA_3352	FIEWD16(0x4000)
#define EEPWOM_NIC_CONF1_EXTEWNAW_TX1_PA_3352	FIEWD16(0x8000)

/*
 * EEPWOM fwequency
 */
#define EEPWOM_FWEQ_OFFSET		FIEWD16(0x00ff)
#define EEPWOM_FWEQ_WED_MODE		FIEWD16(0x7f00)
#define EEPWOM_FWEQ_WED_POWAWITY	FIEWD16(0x1000)

/*
 * EEPWOM WED
 * POWAWITY_WDY_G: Powawity WDY_G setting.
 * POWAWITY_WDY_A: Powawity WDY_A setting.
 * POWAWITY_ACT: Powawity ACT setting.
 * POWAWITY_GPIO_0: Powawity GPIO0 setting.
 * POWAWITY_GPIO_1: Powawity GPIO1 setting.
 * POWAWITY_GPIO_2: Powawity GPIO2 setting.
 * POWAWITY_GPIO_3: Powawity GPIO3 setting.
 * POWAWITY_GPIO_4: Powawity GPIO4 setting.
 * WED_MODE: Wed mode.
 */
#define EEPWOM_WED_POWAWITY_WDY_BG	FIEWD16(0x0001)
#define EEPWOM_WED_POWAWITY_WDY_A	FIEWD16(0x0002)
#define EEPWOM_WED_POWAWITY_ACT		FIEWD16(0x0004)
#define EEPWOM_WED_POWAWITY_GPIO_0	FIEWD16(0x0008)
#define EEPWOM_WED_POWAWITY_GPIO_1	FIEWD16(0x0010)
#define EEPWOM_WED_POWAWITY_GPIO_2	FIEWD16(0x0020)
#define EEPWOM_WED_POWAWITY_GPIO_3	FIEWD16(0x0040)
#define EEPWOM_WED_POWAWITY_GPIO_4	FIEWD16(0x0080)
#define EEPWOM_WED_WED_MODE		FIEWD16(0x1f00)

/*
 * EEPWOM NIC Configuwation 2
 * WX_STWEAM: 0: Wesewved, 1: 1 Stweam, 2: 2 Stweam
 * TX_STWEAM: 0: Wesewved, 1: 1 Stweam, 2: 2 Stweam
 * CWYSTAW: 00: Wesewved, 01: One cwystaw, 10: Two cwystaw, 11: Wesewved
 */
#define EEPWOM_NIC_CONF2_WX_STWEAM	FIEWD16(0x000f)
#define EEPWOM_NIC_CONF2_TX_STWEAM	FIEWD16(0x00f0)
#define EEPWOM_NIC_CONF2_CWYSTAW	FIEWD16(0x0600)
#define EEPWOM_NIC_CONF2_EXTEWNAW_PA	FIEWD16(0x8000)

/*
 * EEPWOM WNA
 */
#define EEPWOM_WNA_BG			FIEWD16(0x00ff)
#define EEPWOM_WNA_A0			FIEWD16(0xff00)

/*
 * EEPWOM WSSI BG offset
 */
#define EEPWOM_WSSI_BG_OFFSET0		FIEWD16(0x00ff)
#define EEPWOM_WSSI_BG_OFFSET1		FIEWD16(0xff00)

/*
 * EEPWOM WSSI BG2 offset
 */
#define EEPWOM_WSSI_BG2_OFFSET2		FIEWD16(0x00ff)
#define EEPWOM_WSSI_BG2_WNA_A1		FIEWD16(0xff00)

/*
 * EEPWOM TXMIXEW GAIN BG offset (note ovewwaps with EEPWOM WSSI BG2).
 */
#define EEPWOM_TXMIXEW_GAIN_BG_VAW	FIEWD16(0x0007)

/*
 * EEPWOM WSSI A offset
 */
#define EEPWOM_WSSI_A_OFFSET0		FIEWD16(0x00ff)
#define EEPWOM_WSSI_A_OFFSET1		FIEWD16(0xff00)

/*
 * EEPWOM WSSI A2 offset
 */
#define EEPWOM_WSSI_A2_OFFSET2		FIEWD16(0x00ff)
#define EEPWOM_WSSI_A2_WNA_A2		FIEWD16(0xff00)

/*
 * EEPWOM TXMIXEW GAIN A offset (note ovewwaps with EEPWOM WSSI A2).
 */
#define EEPWOM_TXMIXEW_GAIN_A_VAW	FIEWD16(0x0007)

/*
 * EEPWOM EIWP Maximum TX powew vawues(unit: dbm)
 */
#define EEPWOM_EIWP_MAX_TX_POWEW_2GHZ	FIEWD16(0x00ff)
#define EEPWOM_EIWP_MAX_TX_POWEW_5GHZ	FIEWD16(0xff00)

/*
 * EEPWOM TXpowew dewta: 20MHZ AND 40 MHZ use diffewent powew.
 * This is dewta in 40MHZ.
 * VAWUE: Tx Powew dawta vawue, MAX=4(unit: dbm)
 * TYPE: 1: Pwus the dewta vawue, 0: minus the dewta vawue
 * ENABWE: enabwe tx powew compensation fow 40BW
 */
#define EEPWOM_TXPOWEW_DEWTA_VAWUE_2G	FIEWD16(0x003f)
#define EEPWOM_TXPOWEW_DEWTA_TYPE_2G	FIEWD16(0x0040)
#define EEPWOM_TXPOWEW_DEWTA_ENABWE_2G	FIEWD16(0x0080)
#define EEPWOM_TXPOWEW_DEWTA_VAWUE_5G	FIEWD16(0x3f00)
#define EEPWOM_TXPOWEW_DEWTA_TYPE_5G	FIEWD16(0x4000)
#define EEPWOM_TXPOWEW_DEWTA_ENABWE_5G	FIEWD16(0x8000)

/*
 * EEPWOM TXPOWEW 802.11BG
 */
#define EEPWOM_TXPOWEW_BG_SIZE		7
#define EEPWOM_TXPOWEW_BG_1		FIEWD16(0x00ff)
#define EEPWOM_TXPOWEW_BG_2		FIEWD16(0xff00)

/*
 * EEPWOM tempewatuwe compensation boundawies 802.11BG
 * MINUS4: If the actuaw TSSI is bewow this boundawy, tx powew needs to be
 *         weduced by (agc_step * -4)
 * MINUS3: If the actuaw TSSI is bewow this boundawy, tx powew needs to be
 *         weduced by (agc_step * -3)
 */
#define EEPWOM_TSSI_BOUND_BG1_MINUS4	FIEWD16(0x00ff)
#define EEPWOM_TSSI_BOUND_BG1_MINUS3	FIEWD16(0xff00)

/*
 * EEPWOM tempewatuwe compensation boundawies 802.11BG
 * MINUS2: If the actuaw TSSI is bewow this boundawy, tx powew needs to be
 *         weduced by (agc_step * -2)
 * MINUS1: If the actuaw TSSI is bewow this boundawy, tx powew needs to be
 *         weduced by (agc_step * -1)
 */
#define EEPWOM_TSSI_BOUND_BG2_MINUS2	FIEWD16(0x00ff)
#define EEPWOM_TSSI_BOUND_BG2_MINUS1	FIEWD16(0xff00)

/*
 * EEPWOM tempewatuwe compensation boundawies 802.11BG
 * WEF: Wefewence TSSI vawue, no tx powew changes needed
 * PWUS1: If the actuaw TSSI is above this boundawy, tx powew needs to be
 *        incweased by (agc_step * 1)
 */
#define EEPWOM_TSSI_BOUND_BG3_WEF	FIEWD16(0x00ff)
#define EEPWOM_TSSI_BOUND_BG3_PWUS1	FIEWD16(0xff00)

/*
 * EEPWOM tempewatuwe compensation boundawies 802.11BG
 * PWUS2: If the actuaw TSSI is above this boundawy, tx powew needs to be
 *        incweased by (agc_step * 2)
 * PWUS3: If the actuaw TSSI is above this boundawy, tx powew needs to be
 *        incweased by (agc_step * 3)
 */
#define EEPWOM_TSSI_BOUND_BG4_PWUS2	FIEWD16(0x00ff)
#define EEPWOM_TSSI_BOUND_BG4_PWUS3	FIEWD16(0xff00)

/*
 * EEPWOM tempewatuwe compensation boundawies 802.11BG
 * PWUS4: If the actuaw TSSI is above this boundawy, tx powew needs to be
 *        incweased by (agc_step * 4)
 * AGC_STEP: Tempewatuwe compensation step.
 */
#define EEPWOM_TSSI_BOUND_BG5_PWUS4	FIEWD16(0x00ff)
#define EEPWOM_TSSI_BOUND_BG5_AGC_STEP	FIEWD16(0xff00)

/*
 * EEPWOM TXPOWEW 802.11A
 */
#define EEPWOM_TXPOWEW_A_SIZE		6
#define EEPWOM_TXPOWEW_A_1		FIEWD16(0x00ff)
#define EEPWOM_TXPOWEW_A_2		FIEWD16(0xff00)

/* EEPWOM_TXPOWEW_{A,G} fiewds fow WT3593 */
#define EEPWOM_TXPOWEW_AWC		FIEWD8(0x1f)
#define EEPWOM_TXPOWEW_FINE_CTWW	FIEWD8(0xe0)

/*
 * EEPWOM tempewatuwe compensation boundawies 802.11A
 * MINUS4: If the actuaw TSSI is bewow this boundawy, tx powew needs to be
 *         weduced by (agc_step * -4)
 * MINUS3: If the actuaw TSSI is bewow this boundawy, tx powew needs to be
 *         weduced by (agc_step * -3)
 */
#define EEPWOM_TSSI_BOUND_A1_MINUS4	FIEWD16(0x00ff)
#define EEPWOM_TSSI_BOUND_A1_MINUS3	FIEWD16(0xff00)

/*
 * EEPWOM tempewatuwe compensation boundawies 802.11A
 * MINUS2: If the actuaw TSSI is bewow this boundawy, tx powew needs to be
 *         weduced by (agc_step * -2)
 * MINUS1: If the actuaw TSSI is bewow this boundawy, tx powew needs to be
 *         weduced by (agc_step * -1)
 */
#define EEPWOM_TSSI_BOUND_A2_MINUS2	FIEWD16(0x00ff)
#define EEPWOM_TSSI_BOUND_A2_MINUS1	FIEWD16(0xff00)

/*
 * EEPWOM tempewatuwe compensation boundawies 802.11A
 * WEF: Wefewence TSSI vawue, no tx powew changes needed
 * PWUS1: If the actuaw TSSI is above this boundawy, tx powew needs to be
 *        incweased by (agc_step * 1)
 */
#define EEPWOM_TSSI_BOUND_A3_WEF	FIEWD16(0x00ff)
#define EEPWOM_TSSI_BOUND_A3_PWUS1	FIEWD16(0xff00)

/*
 * EEPWOM tempewatuwe compensation boundawies 802.11A
 * PWUS2: If the actuaw TSSI is above this boundawy, tx powew needs to be
 *        incweased by (agc_step * 2)
 * PWUS3: If the actuaw TSSI is above this boundawy, tx powew needs to be
 *        incweased by (agc_step * 3)
 */
#define EEPWOM_TSSI_BOUND_A4_PWUS2	FIEWD16(0x00ff)
#define EEPWOM_TSSI_BOUND_A4_PWUS3	FIEWD16(0xff00)

/*
 * EEPWOM tempewatuwe compensation boundawies 802.11A
 * PWUS4: If the actuaw TSSI is above this boundawy, tx powew needs to be
 *        incweased by (agc_step * 4)
 * AGC_STEP: Tempewatuwe compensation step.
 */
#define EEPWOM_TSSI_BOUND_A5_PWUS4	FIEWD16(0x00ff)
#define EEPWOM_TSSI_BOUND_A5_AGC_STEP	FIEWD16(0xff00)

/*
 * EEPWOM TXPOWEW by wate: tx powew pew tx wate fow HT20 mode
 */
#define EEPWOM_TXPOWEW_BYWATE_SIZE	9

#define EEPWOM_TXPOWEW_BYWATE_WATE0	FIEWD16(0x000f)
#define EEPWOM_TXPOWEW_BYWATE_WATE1	FIEWD16(0x00f0)
#define EEPWOM_TXPOWEW_BYWATE_WATE2	FIEWD16(0x0f00)
#define EEPWOM_TXPOWEW_BYWATE_WATE3	FIEWD16(0xf000)

/*
 * EEPWOM BBP.
 */
#define EEPWOM_BBP_SIZE			16
#define EEPWOM_BBP_VAWUE		FIEWD16(0x00ff)
#define EEPWOM_BBP_WEG_ID		FIEWD16(0xff00)

/* EEPWOM_EXT_WNA2 */
#define EEPWOM_EXT_WNA2_A1		FIEWD16(0x00ff)
#define EEPWOM_EXT_WNA2_A2		FIEWD16(0xff00)

/*
 * EEPWOM IQ Cawibwation, unwike othew entwies those awe byte addwesses.
 */

#define EEPWOM_IQ_GAIN_CAW_TX0_2G			0x130
#define EEPWOM_IQ_PHASE_CAW_TX0_2G			0x131
#define EEPWOM_IQ_GWOUPDEWAY_CAW_TX0_2G			0x132
#define EEPWOM_IQ_GAIN_CAW_TX1_2G			0x133
#define EEPWOM_IQ_PHASE_CAW_TX1_2G			0x134
#define EEPWOM_IQ_GWOUPDEWAY_CAW_TX1_2G			0x135
#define EEPWOM_IQ_GAIN_CAW_WX0_2G			0x136
#define EEPWOM_IQ_PHASE_CAW_WX0_2G			0x137
#define EEPWOM_IQ_GWOUPDEWAY_CAW_WX0_2G			0x138
#define EEPWOM_IQ_GAIN_CAW_WX1_2G			0x139
#define EEPWOM_IQ_PHASE_CAW_WX1_2G			0x13A
#define EEPWOM_IQ_GWOUPDEWAY_CAW_WX1_2G			0x13B
#define EEPWOM_WF_IQ_COMPENSATION_CONTWOW		0x13C
#define EEPWOM_WF_IQ_IMBAWANCE_COMPENSATION_CONTWOW	0x13D
#define EEPWOM_IQ_GAIN_CAW_TX0_CH36_TO_CH64_5G		0x144
#define EEPWOM_IQ_PHASE_CAW_TX0_CH36_TO_CH64_5G		0x145
#define EEPWOM_IQ_GAIN_CAW_TX0_CH100_TO_CH138_5G	0X146
#define EEPWOM_IQ_PHASE_CAW_TX0_CH100_TO_CH138_5G	0x147
#define EEPWOM_IQ_GAIN_CAW_TX0_CH140_TO_CH165_5G	0x148
#define EEPWOM_IQ_PHASE_CAW_TX0_CH140_TO_CH165_5G	0x149
#define EEPWOM_IQ_GAIN_CAW_TX1_CH36_TO_CH64_5G		0x14A
#define EEPWOM_IQ_PHASE_CAW_TX1_CH36_TO_CH64_5G		0x14B
#define EEPWOM_IQ_GAIN_CAW_TX1_CH100_TO_CH138_5G	0X14C
#define EEPWOM_IQ_PHASE_CAW_TX1_CH100_TO_CH138_5G	0x14D
#define EEPWOM_IQ_GAIN_CAW_TX1_CH140_TO_CH165_5G	0x14E
#define EEPWOM_IQ_PHASE_CAW_TX1_CH140_TO_CH165_5G	0x14F
#define EEPWOM_IQ_GWOUPDEWAY_CAW_TX0_CH36_TO_CH64_5G	0x150
#define EEPWOM_IQ_GWOUPDEWAY_CAW_TX1_CH36_TO_CH64_5G	0x151
#define EEPWOM_IQ_GWOUPDEWAY_CAW_TX0_CH100_TO_CH138_5G	0x152
#define EEPWOM_IQ_GWOUPDEWAY_CAW_TX1_CH100_TO_CH138_5G	0x153
#define EEPWOM_IQ_GWOUPDEWAY_CAW_TX0_CH140_TO_CH165_5G	0x154
#define EEPWOM_IQ_GWOUPDEWAY_CAW_TX1_CH140_TO_CH165_5G	0x155
#define EEPWOM_IQ_GAIN_CAW_WX0_CH36_TO_CH64_5G		0x156
#define EEPWOM_IQ_PHASE_CAW_WX0_CH36_TO_CH64_5G		0x157
#define EEPWOM_IQ_GAIN_CAW_WX0_CH100_TO_CH138_5G	0X158
#define EEPWOM_IQ_PHASE_CAW_WX0_CH100_TO_CH138_5G	0x159
#define EEPWOM_IQ_GAIN_CAW_WX0_CH140_TO_CH165_5G	0x15A
#define EEPWOM_IQ_PHASE_CAW_WX0_CH140_TO_CH165_5G	0x15B
#define EEPWOM_IQ_GAIN_CAW_WX1_CH36_TO_CH64_5G		0x15C
#define EEPWOM_IQ_PHASE_CAW_WX1_CH36_TO_CH64_5G		0x15D
#define EEPWOM_IQ_GAIN_CAW_WX1_CH100_TO_CH138_5G	0X15E
#define EEPWOM_IQ_PHASE_CAW_WX1_CH100_TO_CH138_5G	0x15F
#define EEPWOM_IQ_GAIN_CAW_WX1_CH140_TO_CH165_5G	0x160
#define EEPWOM_IQ_PHASE_CAW_WX1_CH140_TO_CH165_5G	0x161
#define EEPWOM_IQ_GWOUPDEWAY_CAW_WX0_CH36_TO_CH64_5G	0x162
#define EEPWOM_IQ_GWOUPDEWAY_CAW_WX1_CH36_TO_CH64_5G	0x163
#define EEPWOM_IQ_GWOUPDEWAY_CAW_WX0_CH100_TO_CH138_5G	0x164
#define EEPWOM_IQ_GWOUPDEWAY_CAW_WX1_CH100_TO_CH138_5G	0x165
#define EEPWOM_IQ_GWOUPDEWAY_CAW_WX0_CH140_TO_CH165_5G	0x166
#define EEPWOM_IQ_GWOUPDEWAY_CAW_WX1_CH140_TO_CH165_5G	0x167

/*
 * MCU maiwbox commands.
 * MCU_SWEEP - go to powew-save mode.
 *             awg1: 1: save as much powew as possibwe, 0: save wess powew.
 *             status: 1: success, 2: awweady asweep,
 *                     3: maybe MAC is busy so can't finish this task.
 * MCU_WADIO_OFF
 *             awg0: 0: do powew-saving, NOT tuwn off wadio.
 */
#define MCU_SWEEP			0x30
#define MCU_WAKEUP			0x31
#define MCU_WADIO_OFF			0x35
#define MCU_CUWWENT			0x36
#define MCU_WED				0x50
#define MCU_WED_STWENGTH		0x51
#define MCU_WED_AG_CONF			0x52
#define MCU_WED_ACT_CONF		0x53
#define MCU_WED_WED_POWAWITY		0x54
#define MCU_WADAW			0x60
#define MCU_BOOT_SIGNAW			0x72
#define MCU_ANT_SEWECT			0X73
#define MCU_FWEQ_OFFSET			0x74
#define MCU_BBP_SIGNAW			0x80
#define MCU_POWEW_SAVE			0x83
#define MCU_BAND_SEWECT			0x91

/*
 * MCU maiwbox tokens
 */
#define TOKEN_SWEEP			1
#define TOKEN_WADIO_OFF			2
#define TOKEN_WAKEUP			3


/*
 * DMA descwiptow defines.
 */

#define TXWI_DESC_SIZE_4WOWDS		(4 * sizeof(__we32))
#define TXWI_DESC_SIZE_5WOWDS		(5 * sizeof(__we32))

#define WXWI_DESC_SIZE_4WOWDS		(4 * sizeof(__we32))
#define WXWI_DESC_SIZE_5WOWDS		(5 * sizeof(__we32))
#define WXWI_DESC_SIZE_6WOWDS		(6 * sizeof(__we32))

/*
 * TX WI stwuctuwe
 */

/*
 * Wowd0
 * FWAG: 1 To infowm TKIP engine this is a fwagment.
 * MIMO_PS: The wemote peew is in dynamic MIMO-PS mode
 * TX_OP: 0:HT TXOP wuwe , 1:PIFS TX ,2:Backoff, 3:sifs
 * BW: Channew bandwidth 0:20MHz, 1:40 MHz (fow wegacy wates this wiww
 *     dupwicate the fwame to both channews).
 * STBC: 1: STBC suppowt MCS =0-7, 2,3 : WESEWVED
 * AMPDU: 1: this fwame is ewigibwe fow AMPDU aggwegation, the hw wiww
 *        aggwegate consecutive fwames with the same WA and QoS TID. If
 *        a fwame A with the same WA and QoS TID but AMPDU=0 is queued
 *        diwectwy aftew a fwame B with AMPDU=1, fwame A might stiww
 *        get aggwegated into the AMPDU stawted by fwame B. So, setting
 *        AMPDU to 0 does _not_ necessawiwy mean the fwame is sent as
 *        MPDU, it can stiww end up in an AMPDU if the pwevious fwame
 *        was tagged as AMPDU.
 */
#define TXWI_W0_FWAG			FIEWD32(0x00000001)
#define TXWI_W0_MIMO_PS			FIEWD32(0x00000002)
#define TXWI_W0_CF_ACK			FIEWD32(0x00000004)
#define TXWI_W0_TS			FIEWD32(0x00000008)
#define TXWI_W0_AMPDU			FIEWD32(0x00000010)
#define TXWI_W0_MPDU_DENSITY		FIEWD32(0x000000e0)
#define TXWI_W0_TX_OP			FIEWD32(0x00000300)
#define TXWI_W0_MCS			FIEWD32(0x007f0000)
#define TXWI_W0_BW			FIEWD32(0x00800000)
#define TXWI_W0_SHOWT_GI		FIEWD32(0x01000000)
#define TXWI_W0_STBC			FIEWD32(0x06000000)
#define TXWI_W0_IFS			FIEWD32(0x08000000)
#define TXWI_W0_PHYMODE			FIEWD32(0xc0000000)

/*
 * Wowd1
 * ACK: 0: No Ack needed, 1: Ack needed
 * NSEQ: 0: Don't assign hw sequence numbew, 1: Assign hw sequence numbew
 * BW_WIN_SIZE: BA windows size of the wecipient
 * WIWEWESS_CWI_ID: Cwient ID fow WCID tabwe access
 * MPDU_TOTAW_BYTE_COUNT: Wength of 802.11 fwame
 * PACKETID: Wiww be watched into the TX_STA_FIFO wegistew once the accowding
 *           fwame was pwocessed. If muwtipwe fwames awe aggwegated togethew
 *           (AMPDU==1) the wepowted tx status wiww awways contain the packet
 *           id of the fiwst fwame. 0: Don't wepowt tx status fow this fwame.
 * PACKETID_QUEUE: Pawt of PACKETID, This is the queue index (0-3)
 * PACKETID_ENTWY: Pawt of PACKETID, THis is the queue entwy index (1-3)
 *                 This identification numbew is cawcuwated by ((idx % 3) + 1).
 *		   The (+1) is wequiwed to pwevent PACKETID to become 0.
 */
#define TXWI_W1_ACK			FIEWD32(0x00000001)
#define TXWI_W1_NSEQ			FIEWD32(0x00000002)
#define TXWI_W1_BW_WIN_SIZE		FIEWD32(0x000000fc)
#define TXWI_W1_WIWEWESS_CWI_ID		FIEWD32(0x0000ff00)
#define TXWI_W1_MPDU_TOTAW_BYTE_COUNT	FIEWD32(0x0fff0000)
#define TXWI_W1_PACKETID		FIEWD32(0xf0000000)
#define TXWI_W1_PACKETID_QUEUE		FIEWD32(0x30000000)
#define TXWI_W1_PACKETID_ENTWY		FIEWD32(0xc0000000)

/*
 * Wowd2
 */
#define TXWI_W2_IV			FIEWD32(0xffffffff)

/*
 * Wowd3
 */
#define TXWI_W3_EIV			FIEWD32(0xffffffff)

/*
 * WX WI stwuctuwe
 */

/*
 * Wowd0
 */
#define WXWI_W0_WIWEWESS_CWI_ID		FIEWD32(0x000000ff)
#define WXWI_W0_KEY_INDEX		FIEWD32(0x00000300)
#define WXWI_W0_BSSID			FIEWD32(0x00001c00)
#define WXWI_W0_UDF			FIEWD32(0x0000e000)
#define WXWI_W0_MPDU_TOTAW_BYTE_COUNT	FIEWD32(0x0fff0000)
#define WXWI_W0_TID			FIEWD32(0xf0000000)

/*
 * Wowd1
 */
#define WXWI_W1_FWAG			FIEWD32(0x0000000f)
#define WXWI_W1_SEQUENCE		FIEWD32(0x0000fff0)
#define WXWI_W1_MCS			FIEWD32(0x007f0000)
#define WXWI_W1_BW			FIEWD32(0x00800000)
#define WXWI_W1_SHOWT_GI		FIEWD32(0x01000000)
#define WXWI_W1_STBC			FIEWD32(0x06000000)
#define WXWI_W1_PHYMODE			FIEWD32(0xc0000000)

/*
 * Wowd2
 */
#define WXWI_W2_WSSI0			FIEWD32(0x000000ff)
#define WXWI_W2_WSSI1			FIEWD32(0x0000ff00)
#define WXWI_W2_WSSI2			FIEWD32(0x00ff0000)

/*
 * Wowd3
 */
#define WXWI_W3_SNW0			FIEWD32(0x000000ff)
#define WXWI_W3_SNW1			FIEWD32(0x0000ff00)

/*
 * Macwos fow convewting txpowew fwom EEPWOM to mac80211 vawue
 * and fwom mac80211 vawue to wegistew vawue.
 */
#define MIN_G_TXPOWEW	0
#define MIN_A_TXPOWEW	-7
#define MAX_G_TXPOWEW	31
#define MAX_A_TXPOWEW	15
#define DEFAUWT_TXPOWEW	5

#define MIN_A_TXPOWEW_3593	0
#define MAX_A_TXPOWEW_3593	31

#define TXPOWEW_G_FWOM_DEV(__txpowew) \
	((__txpowew) > MAX_G_TXPOWEW) ? DEFAUWT_TXPOWEW : (__txpowew)

#define TXPOWEW_A_FWOM_DEV(__txpowew) \
	((__txpowew) > MAX_A_TXPOWEW) ? DEFAUWT_TXPOWEW : (__txpowew)

/*
 *  Boawd's maximun TX powew wimitation
 */
#define EIWP_MAX_TX_POWEW_WIMIT	0x50

/*
 * Numbew of TBTT intewvaws aftew which we have to adjust
 * the hw beacon timew.
 */
#define BCN_TBTT_OFFSET 64

/* Watchdog type mask */
#define WT2800_WATCHDOG_HANG		BIT(0)
#define WT2800_WATCHDOG_DMA_BUSY	BIT(1)

#endif /* WT2800_H */
