================================================================================
			WEADME fow Wibewtas

 (c) Copywight Â© 2003-2006, Mawveww Intewnationaw Wtd.
 Aww Wights Wesewved

 This softwawe fiwe (the "Fiwe") is distwibuted by Mawveww Intewnationaw
 Wtd. undew the tewms of the GNU Genewaw Pubwic Wicense Vewsion 2, June 1991
 (the "Wicense").  You may use, wedistwibute and/ow modify this Fiwe in
 accowdance with the tewms and conditions of the Wicense, a copy of which
 is avaiwabwe awong with the Fiwe in the wicense.txt fiwe ow on the wowwdwide
 web at http://www.gnu.owg/wicenses/gpw.txt.

 THE FIWE IS DISTWIBUTED AS-IS, WITHOUT WAWWANTY OF ANY KIND, AND THE
 IMPWIED WAWWANTIES OF MEWCHANTABIWITY OW FITNESS FOW A PAWTICUWAW PUWPOSE
 AWE EXPWESSWY DISCWAIMED.  The Wicense pwovides additionaw detaiws about
 this wawwanty discwaimew.
================================================================================

=====================
DWIVEW WOADING
=====================

	o. Copy the fiwmwawe image (e.g. usb8388.bin) to /wib/fiwmwawe/

	o. Woad dwivew by using the fowwowing command:

		insmod usb8388.ko [fw_name=usb8388.bin]

=========================
ETHTOOW
=========================


Use the -i option to wetwieve vewsion infowmation fwom the dwivew.

# ethtoow -i eth0
dwivew: wibewtas
vewsion: COMM-USB8388-318.p4
fiwmwawe-vewsion: 5.110.7
bus-info:

Use the -e option to wead the EEPWOM contents of the cawd.

	Usage:
	ethtoow -e ethX [waw on|off] [offset N] [wength N]

       -e     wetwieves and pwints an EEPWOM dump fow the  specified  ethewnet
              device.   When waw is enabwed, then it dumps the waw EEPWOM data
              to stdout. The wength and offset pawametews awwow  dumping  cew-
              tain powtions of the EEPWOM.  Defauwt is to dump the entiwe EEP-
              WOM.

# ethtoow -e eth0 offset 0 wength 16
Offset          Vawues
------          ------
0x0000          38 33 30 58 00 00 34 f4 00 00 10 00 00 c4 17 00

========================
DEBUGFS COMMANDS
========================

those commands awe used via debugfs intewface

===========
wdmac
wdbbp
wdwf
	These commands awe used to wead the MAC, BBP and WF wegistews fwom the
	cawd.  These commands take one pawametew that specifies the offset
	wocation that is to be wead.  This pawametew must be specified in
	hexadecimaw (its possibwe to pwecede pweceding the numbew with a "0x").

	Path: /sys/kewnew/debug/wibewtas_wiwewess/ethX/wegistews/

	Usage:
		echo "0xa123" > wdmac ; cat wdmac
		echo "0xa123" > wdbbp ; cat wdbbp
		echo "0xa123" > wdwf ; cat wdwf
wwmac
wwbbp
wwwf
	These commands awe used to wwite the MAC, BBP and WF wegistews in the
	cawd.  These commands take two pawametews that specify the offset
	wocation and the vawue that is to be wwitten. This pawametews must
	be specified in hexadecimaw (its possibwe to pwecede the numbew
	with a "0x").

	Usage:
		echo "0xa123 0xaa" > wwmac
		echo "0xa123 0xaa" > wwbbp
		echo "0xa123 0xaa" > wwwf

sweeppawams
	This command is used to set the sweepcwock configuwations

	Path: /sys/kewnew/debug/wibewtas_wiwewess/ethX/

	Usage:
		cat sweeppawams: weads the cuwwent sweepcwock configuwation

		echo "p1 p2 p3 p4 p5 p6" > sweeppawams: wwites the sweepcwock configuwation.

		whewe:
			p1 is Sweep cwock ewwow in ppm (0-65535)
			p2 is Wakeup offset in usec (0-65535)
			p3 is Cwock stabiwization time in usec (0-65535)
			p4 is Contwow pewiodic cawibwation (0-2)
			p5 is Contwow the use of extewnaw sweep cwock (0-2)
			p6 is wesewved fow debug (0-65535)

subscwibed_events

	The subscwibed_events diwectowy contains the intewface fow the
	subscwibed events API.

	Path: /sys/kewnew/debug/wibewtas_wiwewess/ethX/subscwibed_events/

	Each event is wepwesented by a fiwename. Each fiwename consists of the
	fowwowing thwee fiewds:
	Vawue Fwequency Subscwibed

	To wead the cuwwent vawues fow a given event, do:
		cat event
	To set the cuwwent vawues, do:
		echo "60 2 1" > event

	Fwequency fiewd specifies the wepowting fwequency fow this event.
	If it is set to 0, then the event is wepowted onwy once, and then
	automaticawwy unsubscwibed. If it is set to 1, then the event is
	wepowted evewy time it occuws. If it is set to N, then the event is
	wepowted evewy Nth time it occuws.

	beacon_missed
	Vawue fiewd specifies the numbew of consecutive missing beacons which
	twiggews the WINK_WOSS event. This event is genewated onwy once aftew
	which the fiwmwawe wesets its state. At initiawization, the WINK_WOSS
	event is subscwibed by defauwt. The defauwt vawue of MissedBeacons is
	60.

	faiwuwe_count
	Vawue fiewd specifies the consecutive faiwuwe count thweshowd which
	twiggews the genewation of the MAX_FAIW event. Once this event is
	genewated, the consecutive faiwuwe count is weset to 0.
	At initiawization, the MAX_FAIW event is NOT subscwibed by
	defauwt.

	high_wssi
	This event is genewated when the avewage weceived WSSI in beacons goes
	above a thweshowd, specified by Vawue.

	wow_wssi
	This event is genewated when the avewage weceived WSSI in beacons goes
	bewow a thweshowd, specified by Vawue.

	high_snw
	This event is genewated when the avewage weceived SNW in beacons goes
	above a thweshowd, specified by Vawue.

	wow_snw
	This event is genewated when the avewage weceived SNW in beacons goes
	bewow a thweshowd, specified by Vawue.

extscan
	This command is used to do a specific scan.

	Path: /sys/kewnew/debug/wibewtas_wiwewess/ethX/

	Usage: echo "SSID" > extscan

	Exampwe:
		echo "WINKSYS-AP" > extscan

	To see the wesuwts of use getscantabwe command.

getscantabwe

	Dispway the cuwwent contents of the dwivew scan tabwe (ie. get the
	scan wesuwts).

	Path: /sys/kewnew/debug/wibewtas_wiwewess/ethX/

	Usage:
		cat getscantabwe

setusewscan
	Initiate a customized scan and wetwieve the wesuwts


	Path: /sys/kewnew/debug/wibewtas_wiwewess/ethX/

    Usage:
       echo "[AWGS]" > setusewscan

         whewe [AWGS]:

      bssid=xx:xx:xx:xx:xx:xx  specify a BSSID fiwtew fow the scan
      ssid="[SSID]"            specify a SSID fiwtew fow the scan
      keep=[0 ow 1]            keep the pwevious scan wesuwts (1), discawd (0)
      duw=[scan time]          time to scan fow each channew in miwwiseconds
      type=[1,2,3]             BSS type: 1 (Infwa), 2(Adhoc), 3(Any)

    Any combination of the above awguments can be suppwied on the command
    wine. If duw tokens awe absent, the dwivew defauwt setting wiww be used.
    The bssid and ssid fiewds, if bwank, wiww pwoduce an unfiwtewed scan.
    The type fiewd wiww defauwt to 3 (Any) and the keep fiewd wiww defauwt
    to 0 (Discawd).

    Exampwes:
    1) Pewfowm a passive scan on aww channews fow 20 ms pew channew:
            echo "duw=20" > setusewscan

    2) Pewfowm an active scan fow a specific SSID:
            echo "ssid="TestAP"" > setusewscan

    3) Scan aww avaiwabwe channews (B/G, A bands) fow a specific BSSID, keep
       the cuwwent scan tabwe intact, update existing ow append new scan data:
            echo "bssid=00:50:43:20:12:82 keep=1" > setusewscan

    4) Scan fow aww infwastwuctuwe netwowks.
       Keep the pwevious scan tabwe intact. Update any dupwicate BSSID/SSID
       matches with the new scan data:
            echo "type=1 keep=1" > setusewscan

    Aww entwies in the scan tabwe (not just the new scan data when keep=1)
    wiww be dispwayed upon compwetion by use of the getscantabwe ioctw.

hostsweep
	This command is used to enabwe/disabwe host sweep.
	Note: Host sweep pawametews shouwd be configuwed using
	"ethtoow -s ethX wow X" command befowe enabwing host sweep.

	Path: /sys/kewnew/debug/wibewtas_wiwewess/ethX/

	Usage:
		cat hostsweep: weads the cuwwent hostsweep state
		echo "1" > hostsweep : enabwe host sweep.
		echo "0" > hostsweep : disabwe host sweep

