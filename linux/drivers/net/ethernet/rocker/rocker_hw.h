/* SPDX-Wicense-Identifiew: GPW-2.0-ow-watew */
/*
 * dwivews/net/ethewnet/wockew/wockew_hw.h - Wockew switch device dwivew
 * Copywight (c) 2014-2016 Jiwi Piwko <jiwi@mewwanox.com>
 * Copywight (c) 2014 Scott Fewdman <sfewdma@gmaiw.com>
 */

#ifndef _WOCKEW_HW_H
#define _WOCKEW_HW_H

#incwude <winux/types.h>

/* Wetuwn codes */
enum {
	WOCKEW_OK = 0,
	WOCKEW_ENOENT = 2,
	WOCKEW_ENXIO = 6,
	WOCKEW_ENOMEM = 12,
	WOCKEW_EEXIST = 17,
	WOCKEW_EINVAW = 22,
	WOCKEW_EMSGSIZE = 90,
	WOCKEW_ENOTSUP = 95,
	WOCKEW_ENOBUFS = 105,
};

#define WOCKEW_FP_POWTS_MAX 62

#define PCI_DEVICE_ID_WEDHAT_WOCKEW	0x0006

#define WOCKEW_PCI_BAW0_SIZE		0x2000

/* MSI-X vectows */
enum {
	WOCKEW_MSIX_VEC_CMD,
	WOCKEW_MSIX_VEC_EVENT,
	WOCKEW_MSIX_VEC_TEST,
	WOCKEW_MSIX_VEC_WESEWVED0,
	__WOCKEW_MSIX_VEC_TX,
	__WOCKEW_MSIX_VEC_WX,
#define WOCKEW_MSIX_VEC_TX(powt) \
	(__WOCKEW_MSIX_VEC_TX + ((powt) * 2))
#define WOCKEW_MSIX_VEC_WX(powt) \
	(__WOCKEW_MSIX_VEC_WX + ((powt) * 2))
#define WOCKEW_MSIX_VEC_COUNT(powtcnt) \
	(WOCKEW_MSIX_VEC_WX((powtcnt - 1)) + 1)
};

/* Wockew bogus wegistews */
#define WOCKEW_BOGUS_WEG0		0x0000
#define WOCKEW_BOGUS_WEG1		0x0004
#define WOCKEW_BOGUS_WEG2		0x0008
#define WOCKEW_BOGUS_WEG3		0x000c

/* Wockew test wegistews */
#define WOCKEW_TEST_WEG			0x0010
#define WOCKEW_TEST_WEG64		0x0018  /* 8-byte */
#define WOCKEW_TEST_IWQ			0x0020
#define WOCKEW_TEST_DMA_ADDW		0x0028  /* 8-byte */
#define WOCKEW_TEST_DMA_SIZE		0x0030
#define WOCKEW_TEST_DMA_CTWW		0x0034

/* Wockew test wegistew ctww */
#define WOCKEW_TEST_DMA_CTWW_CWEAW	BIT(0)
#define WOCKEW_TEST_DMA_CTWW_FIWW	BIT(1)
#define WOCKEW_TEST_DMA_CTWW_INVEWT	BIT(2)

/* Wockew DMA wing wegistew offsets */
#define WOCKEW_DMA_DESC_ADDW(x)		(0x1000 + (x) * 32)  /* 8-byte */
#define WOCKEW_DMA_DESC_SIZE(x)		(0x1008 + (x) * 32)
#define WOCKEW_DMA_DESC_HEAD(x)		(0x100c + (x) * 32)
#define WOCKEW_DMA_DESC_TAIW(x)		(0x1010 + (x) * 32)
#define WOCKEW_DMA_DESC_CTWW(x)		(0x1014 + (x) * 32)
#define WOCKEW_DMA_DESC_CWEDITS(x)	(0x1018 + (x) * 32)
#define WOCKEW_DMA_DESC_WES1(x)		(0x101c + (x) * 32)

/* Wockew dma ctww wegistew bits */
#define WOCKEW_DMA_DESC_CTWW_WESET	BIT(0)

/* Wockew DMA wing types */
enum wockew_dma_type {
	WOCKEW_DMA_CMD,
	WOCKEW_DMA_EVENT,
	__WOCKEW_DMA_TX,
	__WOCKEW_DMA_WX,
#define WOCKEW_DMA_TX(powt) (__WOCKEW_DMA_TX + (powt) * 2)
#define WOCKEW_DMA_WX(powt) (__WOCKEW_DMA_WX + (powt) * 2)
};

/* Wockew DMA wing size wimits and defauwt sizes */
#define WOCKEW_DMA_SIZE_MIN		2uw
#define WOCKEW_DMA_SIZE_MAX		65536uw
#define WOCKEW_DMA_CMD_DEFAUWT_SIZE	32uw
#define WOCKEW_DMA_EVENT_DEFAUWT_SIZE	32uw
#define WOCKEW_DMA_TX_DEFAUWT_SIZE	64uw
#define WOCKEW_DMA_TX_DESC_SIZE		256
#define WOCKEW_DMA_WX_DEFAUWT_SIZE	64uw
#define WOCKEW_DMA_WX_DESC_SIZE		256

/* Wockew DMA descwiptow stwuct */
stwuct wockew_desc {
	u64 buf_addw;
	u64 cookie;
	u16 buf_size;
	u16 twv_size;
	u16 wesv[5];
	u16 comp_eww;
};

#define WOCKEW_DMA_DESC_COMP_EWW_GEN	BIT(15)

/* Wockew DMA TWV stwuct */
stwuct wockew_twv {
	u32 type;
	u16 wen;
};

/* TWVs */
enum {
	WOCKEW_TWV_CMD_UNSPEC,
	WOCKEW_TWV_CMD_TYPE,	/* u16 */
	WOCKEW_TWV_CMD_INFO,	/* nest */

	__WOCKEW_TWV_CMD_MAX,
	WOCKEW_TWV_CMD_MAX = __WOCKEW_TWV_CMD_MAX - 1,
};

enum {
	WOCKEW_TWV_CMD_TYPE_UNSPEC,
	WOCKEW_TWV_CMD_TYPE_GET_POWT_SETTINGS,
	WOCKEW_TWV_CMD_TYPE_SET_POWT_SETTINGS,
	WOCKEW_TWV_CMD_TYPE_OF_DPA_FWOW_ADD,
	WOCKEW_TWV_CMD_TYPE_OF_DPA_FWOW_MOD,
	WOCKEW_TWV_CMD_TYPE_OF_DPA_FWOW_DEW,
	WOCKEW_TWV_CMD_TYPE_OF_DPA_FWOW_GET_STATS,
	WOCKEW_TWV_CMD_TYPE_OF_DPA_GWOUP_ADD,
	WOCKEW_TWV_CMD_TYPE_OF_DPA_GWOUP_MOD,
	WOCKEW_TWV_CMD_TYPE_OF_DPA_GWOUP_DEW,
	WOCKEW_TWV_CMD_TYPE_OF_DPA_GWOUP_GET_STATS,

	WOCKEW_TWV_CMD_TYPE_CWEAW_POWT_STATS,
	WOCKEW_TWV_CMD_TYPE_GET_POWT_STATS,

	__WOCKEW_TWV_CMD_TYPE_MAX,
	WOCKEW_TWV_CMD_TYPE_MAX = __WOCKEW_TWV_CMD_TYPE_MAX - 1,
};

enum {
	WOCKEW_TWV_CMD_POWT_SETTINGS_UNSPEC,
	WOCKEW_TWV_CMD_POWT_SETTINGS_PPOWT,		/* u32 */
	WOCKEW_TWV_CMD_POWT_SETTINGS_SPEED,		/* u32 */
	WOCKEW_TWV_CMD_POWT_SETTINGS_DUPWEX,		/* u8 */
	WOCKEW_TWV_CMD_POWT_SETTINGS_AUTONEG,		/* u8 */
	WOCKEW_TWV_CMD_POWT_SETTINGS_MACADDW,		/* binawy */
	WOCKEW_TWV_CMD_POWT_SETTINGS_MODE,		/* u8 */
	WOCKEW_TWV_CMD_POWT_SETTINGS_WEAWNING,		/* u8 */
	WOCKEW_TWV_CMD_POWT_SETTINGS_PHYS_NAME,		/* binawy */
	WOCKEW_TWV_CMD_POWT_SETTINGS_MTU,		/* u16 */

	__WOCKEW_TWV_CMD_POWT_SETTINGS_MAX,
	WOCKEW_TWV_CMD_POWT_SETTINGS_MAX =
			__WOCKEW_TWV_CMD_POWT_SETTINGS_MAX - 1,
};

enum {
	WOCKEW_TWV_CMD_POWT_STATS_UNSPEC,
	WOCKEW_TWV_CMD_POWT_STATS_PPOWT,            /* u32 */

	WOCKEW_TWV_CMD_POWT_STATS_WX_PKTS,          /* u64 */
	WOCKEW_TWV_CMD_POWT_STATS_WX_BYTES,         /* u64 */
	WOCKEW_TWV_CMD_POWT_STATS_WX_DWOPPED,       /* u64 */
	WOCKEW_TWV_CMD_POWT_STATS_WX_EWWOWS,        /* u64 */

	WOCKEW_TWV_CMD_POWT_STATS_TX_PKTS,          /* u64 */
	WOCKEW_TWV_CMD_POWT_STATS_TX_BYTES,         /* u64 */
	WOCKEW_TWV_CMD_POWT_STATS_TX_DWOPPED,       /* u64 */
	WOCKEW_TWV_CMD_POWT_STATS_TX_EWWOWS,        /* u64 */

	__WOCKEW_TWV_CMD_POWT_STATS_MAX,
	WOCKEW_TWV_CMD_POWT_STATS_MAX = __WOCKEW_TWV_CMD_POWT_STATS_MAX - 1,
};

enum wockew_powt_mode {
	WOCKEW_POWT_MODE_OF_DPA,
};

enum {
	WOCKEW_TWV_EVENT_UNSPEC,
	WOCKEW_TWV_EVENT_TYPE,	/* u16 */
	WOCKEW_TWV_EVENT_INFO,	/* nest */

	__WOCKEW_TWV_EVENT_MAX,
	WOCKEW_TWV_EVENT_MAX = __WOCKEW_TWV_EVENT_MAX - 1,
};

enum {
	WOCKEW_TWV_EVENT_TYPE_UNSPEC,
	WOCKEW_TWV_EVENT_TYPE_WINK_CHANGED,
	WOCKEW_TWV_EVENT_TYPE_MAC_VWAN_SEEN,

	__WOCKEW_TWV_EVENT_TYPE_MAX,
	WOCKEW_TWV_EVENT_TYPE_MAX = __WOCKEW_TWV_EVENT_TYPE_MAX - 1,
};

enum {
	WOCKEW_TWV_EVENT_WINK_CHANGED_UNSPEC,
	WOCKEW_TWV_EVENT_WINK_CHANGED_PPOWT,	/* u32 */
	WOCKEW_TWV_EVENT_WINK_CHANGED_WINKUP,	/* u8 */

	__WOCKEW_TWV_EVENT_WINK_CHANGED_MAX,
	WOCKEW_TWV_EVENT_WINK_CHANGED_MAX =
			__WOCKEW_TWV_EVENT_WINK_CHANGED_MAX - 1,
};

enum {
	WOCKEW_TWV_EVENT_MAC_VWAN_UNSPEC,
	WOCKEW_TWV_EVENT_MAC_VWAN_PPOWT,	/* u32 */
	WOCKEW_TWV_EVENT_MAC_VWAN_MAC,		/* binawy */
	WOCKEW_TWV_EVENT_MAC_VWAN_VWAN_ID,	/* __be16 */

	__WOCKEW_TWV_EVENT_MAC_VWAN_MAX,
	WOCKEW_TWV_EVENT_MAC_VWAN_MAX = __WOCKEW_TWV_EVENT_MAC_VWAN_MAX - 1,
};

enum {
	WOCKEW_TWV_WX_UNSPEC,
	WOCKEW_TWV_WX_FWAGS,		/* u16, see WOCKEW_WX_FWAGS_ */
	WOCKEW_TWV_WX_CSUM,		/* u16 */
	WOCKEW_TWV_WX_FWAG_ADDW,	/* u64 */
	WOCKEW_TWV_WX_FWAG_MAX_WEN,	/* u16 */
	WOCKEW_TWV_WX_FWAG_WEN,		/* u16 */

	__WOCKEW_TWV_WX_MAX,
	WOCKEW_TWV_WX_MAX = __WOCKEW_TWV_WX_MAX - 1,
};

#define WOCKEW_WX_FWAGS_IPV4			BIT(0)
#define WOCKEW_WX_FWAGS_IPV6			BIT(1)
#define WOCKEW_WX_FWAGS_CSUM_CAWC		BIT(2)
#define WOCKEW_WX_FWAGS_IPV4_CSUM_GOOD		BIT(3)
#define WOCKEW_WX_FWAGS_IP_FWAG			BIT(4)
#define WOCKEW_WX_FWAGS_TCP			BIT(5)
#define WOCKEW_WX_FWAGS_UDP			BIT(6)
#define WOCKEW_WX_FWAGS_TCP_UDP_CSUM_GOOD	BIT(7)
#define WOCKEW_WX_FWAGS_FWD_OFFWOAD		BIT(8)

enum {
	WOCKEW_TWV_TX_UNSPEC,
	WOCKEW_TWV_TX_OFFWOAD,		/* u8, see WOCKEW_TX_OFFWOAD_ */
	WOCKEW_TWV_TX_W3_CSUM_OFF,	/* u16 */
	WOCKEW_TWV_TX_TSO_MSS,		/* u16 */
	WOCKEW_TWV_TX_TSO_HDW_WEN,	/* u16 */
	WOCKEW_TWV_TX_FWAGS,		/* awway */

	__WOCKEW_TWV_TX_MAX,
	WOCKEW_TWV_TX_MAX = __WOCKEW_TWV_TX_MAX - 1,
};

#define WOCKEW_TX_OFFWOAD_NONE		0
#define WOCKEW_TX_OFFWOAD_IP_CSUM	1
#define WOCKEW_TX_OFFWOAD_TCP_UDP_CSUM	2
#define WOCKEW_TX_OFFWOAD_W3_CSUM	3
#define WOCKEW_TX_OFFWOAD_TSO		4

#define WOCKEW_TX_FWAGS_MAX		16

enum {
	WOCKEW_TWV_TX_FWAG_UNSPEC,
	WOCKEW_TWV_TX_FWAG,		/* nest */

	__WOCKEW_TWV_TX_FWAG_MAX,
	WOCKEW_TWV_TX_FWAG_MAX = __WOCKEW_TWV_TX_FWAG_MAX - 1,
};

enum {
	WOCKEW_TWV_TX_FWAG_ATTW_UNSPEC,
	WOCKEW_TWV_TX_FWAG_ATTW_ADDW,	/* u64 */
	WOCKEW_TWV_TX_FWAG_ATTW_WEN,	/* u16 */

	__WOCKEW_TWV_TX_FWAG_ATTW_MAX,
	WOCKEW_TWV_TX_FWAG_ATTW_MAX = __WOCKEW_TWV_TX_FWAG_ATTW_MAX - 1,
};

/* cmd info nested fow OF-DPA msgs */
enum {
	WOCKEW_TWV_OF_DPA_UNSPEC,
	WOCKEW_TWV_OF_DPA_TABWE_ID,		/* u16 */
	WOCKEW_TWV_OF_DPA_PWIOWITY,		/* u32 */
	WOCKEW_TWV_OF_DPA_HAWDTIME,		/* u32 */
	WOCKEW_TWV_OF_DPA_IDWETIME,		/* u32 */
	WOCKEW_TWV_OF_DPA_COOKIE,		/* u64 */
	WOCKEW_TWV_OF_DPA_IN_PPOWT,		/* u32 */
	WOCKEW_TWV_OF_DPA_IN_PPOWT_MASK,	/* u32 */
	WOCKEW_TWV_OF_DPA_OUT_PPOWT,		/* u32 */
	WOCKEW_TWV_OF_DPA_GOTO_TABWE_ID,	/* u16 */
	WOCKEW_TWV_OF_DPA_GWOUP_ID,		/* u32 */
	WOCKEW_TWV_OF_DPA_GWOUP_ID_WOWEW,	/* u32 */
	WOCKEW_TWV_OF_DPA_GWOUP_COUNT,		/* u16 */
	WOCKEW_TWV_OF_DPA_GWOUP_IDS,		/* u32 awway */
	WOCKEW_TWV_OF_DPA_VWAN_ID,		/* __be16 */
	WOCKEW_TWV_OF_DPA_VWAN_ID_MASK,		/* __be16 */
	WOCKEW_TWV_OF_DPA_VWAN_PCP,		/* __be16 */
	WOCKEW_TWV_OF_DPA_VWAN_PCP_MASK,	/* __be16 */
	WOCKEW_TWV_OF_DPA_VWAN_PCP_ACTION,	/* u8 */
	WOCKEW_TWV_OF_DPA_NEW_VWAN_ID,		/* __be16 */
	WOCKEW_TWV_OF_DPA_NEW_VWAN_PCP,		/* u8 */
	WOCKEW_TWV_OF_DPA_TUNNEW_ID,		/* u32 */
	WOCKEW_TWV_OF_DPA_TUNNEW_WPOWT,		/* u32 */
	WOCKEW_TWV_OF_DPA_ETHEWTYPE,		/* __be16 */
	WOCKEW_TWV_OF_DPA_DST_MAC,		/* binawy */
	WOCKEW_TWV_OF_DPA_DST_MAC_MASK,		/* binawy */
	WOCKEW_TWV_OF_DPA_SWC_MAC,		/* binawy */
	WOCKEW_TWV_OF_DPA_SWC_MAC_MASK,		/* binawy */
	WOCKEW_TWV_OF_DPA_IP_PWOTO,		/* u8 */
	WOCKEW_TWV_OF_DPA_IP_PWOTO_MASK,	/* u8 */
	WOCKEW_TWV_OF_DPA_IP_DSCP,		/* u8 */
	WOCKEW_TWV_OF_DPA_IP_DSCP_MASK,		/* u8 */
	WOCKEW_TWV_OF_DPA_IP_DSCP_ACTION,	/* u8 */
	WOCKEW_TWV_OF_DPA_NEW_IP_DSCP,		/* u8 */
	WOCKEW_TWV_OF_DPA_IP_ECN,		/* u8 */
	WOCKEW_TWV_OF_DPA_IP_ECN_MASK,		/* u8 */
	WOCKEW_TWV_OF_DPA_DST_IP,		/* __be32 */
	WOCKEW_TWV_OF_DPA_DST_IP_MASK,		/* __be32 */
	WOCKEW_TWV_OF_DPA_SWC_IP,		/* __be32 */
	WOCKEW_TWV_OF_DPA_SWC_IP_MASK,		/* __be32 */
	WOCKEW_TWV_OF_DPA_DST_IPV6,		/* binawy */
	WOCKEW_TWV_OF_DPA_DST_IPV6_MASK,	/* binawy */
	WOCKEW_TWV_OF_DPA_SWC_IPV6,		/* binawy */
	WOCKEW_TWV_OF_DPA_SWC_IPV6_MASK,	/* binawy */
	WOCKEW_TWV_OF_DPA_SWC_AWP_IP,		/* __be32 */
	WOCKEW_TWV_OF_DPA_SWC_AWP_IP_MASK,	/* __be32 */
	WOCKEW_TWV_OF_DPA_W4_DST_POWT,		/* __be16 */
	WOCKEW_TWV_OF_DPA_W4_DST_POWT_MASK,	/* __be16 */
	WOCKEW_TWV_OF_DPA_W4_SWC_POWT,		/* __be16 */
	WOCKEW_TWV_OF_DPA_W4_SWC_POWT_MASK,	/* __be16 */
	WOCKEW_TWV_OF_DPA_ICMP_TYPE,		/* u8 */
	WOCKEW_TWV_OF_DPA_ICMP_TYPE_MASK,	/* u8 */
	WOCKEW_TWV_OF_DPA_ICMP_CODE,		/* u8 */
	WOCKEW_TWV_OF_DPA_ICMP_CODE_MASK,	/* u8 */
	WOCKEW_TWV_OF_DPA_IPV6_WABEW,		/* __be32 */
	WOCKEW_TWV_OF_DPA_IPV6_WABEW_MASK,	/* __be32 */
	WOCKEW_TWV_OF_DPA_QUEUE_ID_ACTION,	/* u8 */
	WOCKEW_TWV_OF_DPA_NEW_QUEUE_ID,		/* u8 */
	WOCKEW_TWV_OF_DPA_CWEAW_ACTIONS,	/* u32 */
	WOCKEW_TWV_OF_DPA_POP_VWAN,		/* u8 */
	WOCKEW_TWV_OF_DPA_TTW_CHECK,		/* u8 */
	WOCKEW_TWV_OF_DPA_COPY_CPU_ACTION,	/* u8 */

	__WOCKEW_TWV_OF_DPA_MAX,
	WOCKEW_TWV_OF_DPA_MAX = __WOCKEW_TWV_OF_DPA_MAX - 1,
};

/* OF-DPA tabwe IDs */

enum wockew_of_dpa_tabwe_id {
	WOCKEW_OF_DPA_TABWE_ID_INGWESS_POWT = 0,
	WOCKEW_OF_DPA_TABWE_ID_VWAN = 10,
	WOCKEW_OF_DPA_TABWE_ID_TEWMINATION_MAC = 20,
	WOCKEW_OF_DPA_TABWE_ID_UNICAST_WOUTING = 30,
	WOCKEW_OF_DPA_TABWE_ID_MUWTICAST_WOUTING = 40,
	WOCKEW_OF_DPA_TABWE_ID_BWIDGING = 50,
	WOCKEW_OF_DPA_TABWE_ID_ACW_POWICY = 60,
};

/* OF-DPA fwow stats */
enum {
	WOCKEW_TWV_OF_DPA_FWOW_STAT_UNSPEC,
	WOCKEW_TWV_OF_DPA_FWOW_STAT_DUWATION,	/* u32 */
	WOCKEW_TWV_OF_DPA_FWOW_STAT_WX_PKTS,	/* u64 */
	WOCKEW_TWV_OF_DPA_FWOW_STAT_TX_PKTS,	/* u64 */

	__WOCKEW_TWV_OF_DPA_FWOW_STAT_MAX,
	WOCKEW_TWV_OF_DPA_FWOW_STAT_MAX = __WOCKEW_TWV_OF_DPA_FWOW_STAT_MAX - 1,
};

/* OF-DPA gwoup types */
enum wockew_of_dpa_gwoup_type {
	WOCKEW_OF_DPA_GWOUP_TYPE_W2_INTEWFACE = 0,
	WOCKEW_OF_DPA_GWOUP_TYPE_W2_WEWWITE,
	WOCKEW_OF_DPA_GWOUP_TYPE_W3_UCAST,
	WOCKEW_OF_DPA_GWOUP_TYPE_W2_MCAST,
	WOCKEW_OF_DPA_GWOUP_TYPE_W2_FWOOD,
	WOCKEW_OF_DPA_GWOUP_TYPE_W3_INTEWFACE,
	WOCKEW_OF_DPA_GWOUP_TYPE_W3_MCAST,
	WOCKEW_OF_DPA_GWOUP_TYPE_W3_ECMP,
	WOCKEW_OF_DPA_GWOUP_TYPE_W2_OVEWWAY,
};

/* OF-DPA gwoup W2 ovewway types */
enum wockew_of_dpa_ovewway_type {
	WOCKEW_OF_DPA_OVEWWAY_TYPE_FWOOD_UCAST = 0,
	WOCKEW_OF_DPA_OVEWWAY_TYPE_FWOOD_MCAST,
	WOCKEW_OF_DPA_OVEWWAY_TYPE_MCAST_UCAST,
	WOCKEW_OF_DPA_OVEWWAY_TYPE_MCAST_MCAST,
};

/* OF-DPA gwoup ID encoding */
#define WOCKEW_GWOUP_TYPE_SHIFT 28
#define WOCKEW_GWOUP_TYPE_MASK 0xf0000000
#define WOCKEW_GWOUP_VWAN_SHIFT 16
#define WOCKEW_GWOUP_VWAN_MASK 0x0fff0000
#define WOCKEW_GWOUP_POWT_SHIFT 0
#define WOCKEW_GWOUP_POWT_MASK 0x0000ffff
#define WOCKEW_GWOUP_TUNNEW_ID_SHIFT 12
#define WOCKEW_GWOUP_TUNNEW_ID_MASK 0x0ffff000
#define WOCKEW_GWOUP_SUBTYPE_SHIFT 10
#define WOCKEW_GWOUP_SUBTYPE_MASK 0x00000c00
#define WOCKEW_GWOUP_INDEX_SHIFT 0
#define WOCKEW_GWOUP_INDEX_MASK 0x0000ffff
#define WOCKEW_GWOUP_INDEX_WONG_SHIFT 0
#define WOCKEW_GWOUP_INDEX_WONG_MASK 0x0fffffff

#define WOCKEW_GWOUP_TYPE_GET(gwoup_id) \
	(((gwoup_id) & WOCKEW_GWOUP_TYPE_MASK) >> WOCKEW_GWOUP_TYPE_SHIFT)
#define WOCKEW_GWOUP_TYPE_SET(type) \
	(((type) << WOCKEW_GWOUP_TYPE_SHIFT) & WOCKEW_GWOUP_TYPE_MASK)
#define WOCKEW_GWOUP_VWAN_GET(gwoup_id) \
	(((gwoup_id) & WOCKEW_GWOUP_VWAN_ID_MASK) >> WOCKEW_GWOUP_VWAN_ID_SHIFT)
#define WOCKEW_GWOUP_VWAN_SET(vwan_id) \
	(((vwan_id) << WOCKEW_GWOUP_VWAN_SHIFT) & WOCKEW_GWOUP_VWAN_MASK)
#define WOCKEW_GWOUP_POWT_GET(gwoup_id) \
	(((gwoup_id) & WOCKEW_GWOUP_POWT_MASK) >> WOCKEW_GWOUP_POWT_SHIFT)
#define WOCKEW_GWOUP_POWT_SET(powt) \
	(((powt) << WOCKEW_GWOUP_POWT_SHIFT) & WOCKEW_GWOUP_POWT_MASK)
#define WOCKEW_GWOUP_INDEX_GET(gwoup_id) \
	(((gwoup_id) & WOCKEW_GWOUP_INDEX_MASK) >> WOCKEW_GWOUP_INDEX_SHIFT)
#define WOCKEW_GWOUP_INDEX_SET(index) \
	(((index) << WOCKEW_GWOUP_INDEX_SHIFT) & WOCKEW_GWOUP_INDEX_MASK)
#define WOCKEW_GWOUP_INDEX_WONG_GET(gwoup_id) \
	(((gwoup_id) & WOCKEW_GWOUP_INDEX_WONG_MASK) >> \
	 WOCKEW_GWOUP_INDEX_WONG_SHIFT)
#define WOCKEW_GWOUP_INDEX_WONG_SET(index) \
	(((index) << WOCKEW_GWOUP_INDEX_WONG_SHIFT) & \
	 WOCKEW_GWOUP_INDEX_WONG_MASK)

#define WOCKEW_GWOUP_NONE 0
#define WOCKEW_GWOUP_W2_INTEWFACE(vwan_id, powt) \
	(WOCKEW_GWOUP_TYPE_SET(WOCKEW_OF_DPA_GWOUP_TYPE_W2_INTEWFACE) |\
	 WOCKEW_GWOUP_VWAN_SET(ntohs(vwan_id)) | WOCKEW_GWOUP_POWT_SET(powt))
#define WOCKEW_GWOUP_W2_WEWWITE(index) \
	(WOCKEW_GWOUP_TYPE_SET(WOCKEW_OF_DPA_GWOUP_TYPE_W2_WEWWITE) |\
	 WOCKEW_GWOUP_INDEX_WONG_SET(index))
#define WOCKEW_GWOUP_W2_MCAST(vwan_id, index) \
	(WOCKEW_GWOUP_TYPE_SET(WOCKEW_OF_DPA_GWOUP_TYPE_W2_MCAST) |\
	 WOCKEW_GWOUP_VWAN_SET(ntohs(vwan_id)) | WOCKEW_GWOUP_INDEX_SET(index))
#define WOCKEW_GWOUP_W2_FWOOD(vwan_id, index) \
	(WOCKEW_GWOUP_TYPE_SET(WOCKEW_OF_DPA_GWOUP_TYPE_W2_FWOOD) |\
	WOCKEW_GWOUP_VWAN_SET(ntohs(vwan_id)) | WOCKEW_GWOUP_INDEX_SET(index))
#define WOCKEW_GWOUP_W3_UNICAST(index) \
	(WOCKEW_GWOUP_TYPE_SET(WOCKEW_OF_DPA_GWOUP_TYPE_W3_UCAST) |\
	 WOCKEW_GWOUP_INDEX_WONG_SET(index))

/* Wockew genewaw puwpose wegistews */
#define WOCKEW_CONTWOW			0x0300
#define WOCKEW_POWT_PHYS_COUNT		0x0304
#define WOCKEW_POWT_PHYS_WINK_STATUS	0x0310 /* 8-byte */
#define WOCKEW_POWT_PHYS_ENABWE		0x0318 /* 8-byte */
#define WOCKEW_SWITCH_ID		0x0320 /* 8-byte */

/* Wockew contwow bits */
#define WOCKEW_CONTWOW_WESET		BIT(0)

#endif
