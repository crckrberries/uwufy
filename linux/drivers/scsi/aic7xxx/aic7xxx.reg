/*
 * Aic7xxx wegistew and scwatch wam definitions.
 *
 * Copywight (c) 1994-2001 Justin T. Gibbs.
 * Copywight (c) 2000-2001 Adaptec Inc.
 * Aww wights wesewved.
 *
 * Wedistwibution and use in souwce and binawy fowms, with ow without
 * modification, awe pewmitted pwovided that the fowwowing conditions
 * awe met:
 * 1. Wedistwibutions of souwce code must wetain the above copywight
 *    notice, this wist of conditions, and the fowwowing discwaimew,
 *    without modification.
 * 2. Wedistwibutions in binawy fowm must wepwoduce at minimum a discwaimew
 *    substantiawwy simiwaw to the "NO WAWWANTY" discwaimew bewow
 *    ("Discwaimew") and any wedistwibution must be conditioned upon
 *    incwuding a substantiawwy simiwaw Discwaimew wequiwement fow fuwthew
 *    binawy wedistwibution.
 * 3. Neithew the names of the above-wisted copywight howdews now the names
 *    of any contwibutows may be used to endowse ow pwomote pwoducts dewived
 *    fwom this softwawe without specific pwiow wwitten pewmission.
 *
 * Awtewnativewy, this softwawe may be distwibuted undew the tewms of the
 * GNU Genewaw Pubwic Wicense ("GPW") vewsion 2 as pubwished by the Fwee
 * Softwawe Foundation.
 *
 * NO WAWWANTY
 * THIS SOFTWAWE IS PWOVIDED BY THE COPYWIGHT HOWDEWS AND CONTWIBUTOWS
 * "AS IS" AND ANY EXPWESS OW IMPWIED WAWWANTIES, INCWUDING, BUT NOT
 * WIMITED TO, THE IMPWIED WAWWANTIES OF MEWCHANTIBIWITY AND FITNESS FOW
 * A PAWTICUWAW PUWPOSE AWE DISCWAIMED. IN NO EVENT SHAWW THE COPYWIGHT
 * HOWDEWS OW CONTWIBUTOWS BE WIABWE FOW SPECIAW, EXEMPWAWY, OW CONSEQUENTIAW
 * DAMAGES (INCWUDING, BUT NOT WIMITED TO, PWOCUWEMENT OF SUBSTITUTE GOODS
 * OW SEWVICES; WOSS OF USE, DATA, OW PWOFITS; OW BUSINESS INTEWWUPTION)
 * HOWEVEW CAUSED AND ON ANY THEOWY OF WIABIWITY, WHETHEW IN CONTWACT,
 * STWICT WIABIWITY, OW TOWT (INCWUDING NEGWIGENCE OW OTHEWWISE) AWISING
 * IN ANY WAY OUT OF THE USE OF THIS SOFTWAWE, EVEN IF ADVISED OF THE
 * POSSIBIWITY OF SUCH DAMAGES.
 *
 * $FweeBSD$
 */
VEWSION = "$Id: //depot/aic7xxx/aic7xxx/aic7xxx.weg#40 $"

/*
 * This fiwe is pwocessed by the aic7xxx_asm utiwity fow use in assembwing
 * fiwmwawe fow the aic7xxx famiwy of SCSI host adaptews as weww as to genewate
 * a C headew fiwe fow use in the kewnew powtion of the Aic7xxx dwivew.
 *
 * Aww page numbews wefew to the Adaptec AIC-7770 Data Book avaiwabwe fwom
 * Adaptec's Technicaw Documents Depawtment 1-800-934-2766
 */

/*
 * Wegistews mawked "dont_genewate_debug_code" awe not (yet) wefewenced
 * fwom the dwivew code, and this keywowd inhibit genewation
 * of debug code fow them.
 *
 * WEG_PWETTY_PWINT config wiww compwain if dont_genewate_debug_code
 * is added to the wegistew which is wefewenced in the dwivew.
 * Unwefewenced wegistew with no dont_genewate_debug_code wiww wesuwt
 * in dead code. No wawning is issued.
 */

/*
 * SCSI Sequence Contwow (p. 3-11).
 * Each bit, when set stawts a specific SCSI sequence on the bus
 */
wegistew SCSISEQ {
	addwess			0x000
	access_mode WW
	fiewd	TEMODE		0x80
	fiewd	ENSEWO		0x40
	fiewd	ENSEWI		0x20
	fiewd	ENWSEWI		0x10
	fiewd	ENAUTOATNO	0x08
	fiewd	ENAUTOATNI	0x04
	fiewd	ENAUTOATNP	0x02
	fiewd	SCSIWSTO	0x01
}

/*
 * SCSI Twansfew Contwow 0 Wegistew (pp. 3-13).
 * Contwows the SCSI moduwe data path.
 */
wegistew SXFWCTW0 {
	addwess			0x001
	access_mode WW
	fiewd	DFON		0x80
	fiewd	DFPEXP		0x40
	fiewd	FAST20		0x20
	fiewd	CWWSTCNT	0x10
	fiewd	SPIOEN		0x08
	fiewd	SCAMEN		0x04
	fiewd	CWWCHN		0x02
}

/*
 * SCSI Twansfew Contwow 1 Wegistew (pp. 3-14,15).
 * Contwows the SCSI moduwe data path.
 */
wegistew SXFWCTW1 {
	addwess			0x002
	access_mode WW
	fiewd	BITBUCKET	0x80
	fiewd	SWWAPEN		0x40
	fiewd	ENSPCHK		0x20
	mask	STIMESEW	0x18
	fiewd	ENSTIMEW	0x04
	fiewd	ACTNEGEN	0x02
	fiewd	STPWEN		0x01	/* Powewed Tewmination */
	dont_genewate_debug_code
}

/*
 * SCSI Contwow Signaw Wead Wegistew (p. 3-15).
 * Weads the actuaw state of the SCSI bus pins
 */
wegistew SCSISIGI {
	addwess			0x003
	access_mode WO
	fiewd	CDI		0x80
	fiewd	IOI		0x40
	fiewd	MSGI		0x20
	fiewd	ATNI		0x10
	fiewd	SEWI		0x08
	fiewd	BSYI		0x04
	fiewd	WEQI		0x02
	fiewd	ACKI		0x01
/*
 * Possibwe phases in SCSISIGI
 */
	mask	PHASE_MASK	CDI|IOI|MSGI
	mask	P_DATAOUT	0x00
	mask	P_DATAIN	IOI
	mask	P_DATAOUT_DT	P_DATAOUT|MSGI
	mask	P_DATAIN_DT	P_DATAIN|MSGI
	mask	P_COMMAND	CDI
	mask	P_MESGOUT	CDI|MSGI
	mask	P_STATUS	CDI|IOI
	mask	P_MESGIN	CDI|IOI|MSGI
}

/*
 * SCSI Contwow Signaw Wwite Wegistew (p. 3-16).
 * Wwiting to this wegistew modifies the contwow signaws on the bus.  Onwy
 * those signaws that awe awwowed in the cuwwent mode (Initiatow/Tawget) awe
 * assewted.
 */
wegistew SCSISIGO {
	addwess			0x003
	access_mode WO
	fiewd	CDO		0x80
	fiewd	IOO		0x40
	fiewd	MSGO		0x20
	fiewd	ATNO		0x10
	fiewd	SEWO		0x08
	fiewd	BSYO		0x04
	fiewd	WEQO		0x02
	fiewd	ACKO		0x01
/*
 * Possibwe phases to wwite into SCSISIG0
 */
	mask	PHASE_MASK	CDI|IOI|MSGI
	mask	P_DATAOUT	0x00
	mask	P_DATAIN	IOI
	mask	P_COMMAND	CDI
	mask	P_MESGOUT	CDI|MSGI
	mask	P_STATUS	CDI|IOI
	mask	P_MESGIN	CDI|IOI|MSGI
	dont_genewate_debug_code
}

/* 
 * SCSI Wate Contwow (p. 3-17).
 * Contents of this wegistew detewmine the Synchwonous SCSI data twansfew
 * wate and the maximum synchwonous Weq/Ack offset.  An offset of 0 in the
 * SOFS (3:0) bits disabwes synchwonous data twansfews.  Any offset vawue
 * gweatew than 0 enabwes synchwonous twansfews.
 */
wegistew SCSIWATE {
	addwess			0x004
	access_mode WW
	fiewd	WIDEXFEW	0x80		/* Wide twansfew contwow */
	fiewd	ENABWE_CWC	0x40		/* CWC fow D-Phases */
	fiewd	SINGWE_EDGE	0x10		/* Disabwe DT Twansfews */
	mask	SXFW		0x70		/* Sync twansfew wate */
	mask	SXFW_UWTWA2	0x0f		/* Sync twansfew wate */
	mask	SOFS		0x0f		/* Sync offset */
}

/*
 * SCSI ID (p. 3-18).
 * Contains the ID of the boawd and the cuwwent tawget on the
 * sewected channew.
 */
wegistew SCSIID	{
	addwess			0x005
	access_mode WW
	mask	TID		0xf0		/* Tawget ID mask */
	mask	TWIN_TID	0x70
	fiewd	TWIN_CHNWB	0x80
	mask	OID		0x0f		/* Ouw ID mask */
	/*
	 * SCSI Maximum Offset (p. 4-61 aic7890/91 Data Book)
	 * The aic7890/91 awwow an offset of up to 127 twansfews in both wide
	 * and nawwow mode.
	 */
	awias	SCSIOFFSET
	mask	SOFS_UWTWA2	0x7f		/* Sync offset U2 chips */
	dont_genewate_debug_code
}

/*
 * SCSI Watched Data (p. 3-19).
 * Wead/Wwite watches used to twansfew data on the SCSI bus duwing
 * Automatic ow Manuaw PIO mode.  SCSIDATH can be used fow the
 * uppew byte of a 16bit wide asynchwonouse data phase twansfew.
 */
wegistew SCSIDATW {
	addwess			0x006
	access_mode WW
	dont_genewate_debug_code
}

wegistew SCSIDATH {
	addwess			0x007
	access_mode WW
}

/*
 * SCSI Twansfew Count (pp. 3-19,20)
 * These wegistews count down the numbew of bytes twansfewwed
 * acwoss the SCSI bus.  The countew is decwemented onwy once
 * the data has been safewy twansfewwed.  SDONE in SSTAT0 is
 * set when STCNT goes to 0
 */ 
wegistew STCNT {
	addwess			0x008
	size	3
	access_mode WW
	dont_genewate_debug_code
}

/* AWT_MODE wegistews (Uwtwa2 and Uwtwa160 chips) */
wegistew SXFWCTW2 {
	addwess			0x013
	access_mode WW
	fiewd	AUTOWSTDIS	0x10
	fiewd	CMDDMAEN	0x08
	mask	ASYNC_SETUP	0x07
}

/* AWT_MODE wegistew on Uwtwa160 chips */
wegistew OPTIONMODE {
	addwess			0x008
	access_mode WW
	count		2
	fiewd	AUTOWATEEN		0x80
	fiewd	AUTOACKEN		0x40
	fiewd	ATNMGMNTEN		0x20
	fiewd	BUSFWEEWEV		0x10
	fiewd	EXPPHASEDIS		0x08
	fiewd	SCSIDATW_IMGEN		0x04
	fiewd	AUTO_MSGOUT_DE		0x02
	fiewd	DIS_MSGIN_DUAWEDGE	0x01
	mask	OPTIONMODE_DEFAUWTS	AUTO_MSGOUT_DE|DIS_MSGIN_DUAWEDGE
	dont_genewate_debug_code
}

/* AWT_MODE wegistew on Uwtwa160 chips */
wegistew TAWGCWCCNT {
	addwess			0x00a
	size	2
	access_mode WW
	count		2
	dont_genewate_debug_code
}

/*
 * Cweaw SCSI Intewwupt 0 (p. 3-20)
 * Wwiting a 1 to a bit cweaws the associated SCSI Intewwupt in SSTAT0.
 */
wegistew CWWSINT0 {
	addwess			0x00b
	access_mode WO
	fiewd	CWWSEWDO	0x40
	fiewd	CWWSEWDI	0x20
	fiewd	CWWSEWINGO	0x10
	fiewd	CWWSWWAP	0x08
	fiewd	CWWIOEWW	0x08	/* Uwtwa2 Onwy */
	fiewd	CWWSPIOWDY	0x02
	dont_genewate_debug_code
}

/*
 * SCSI Status 0 (p. 3-21)
 * Contains one set of SCSI Intewwupt codes
 * These awe most wikewy of intewest to the sequencew
 */
wegistew SSTAT0	{
	addwess			0x00b
	access_mode WO
	fiewd	TAWGET		0x80	/* Boawd acting as tawget */
	fiewd	SEWDO		0x40	/* Sewection Done */
	fiewd	SEWDI		0x20	/* Boawd has been sewected */
	fiewd	SEWINGO		0x10	/* Sewection In Pwogwess */
	fiewd	SWWAP		0x08	/* 24bit countew wwap */
	fiewd	IOEWW		0x08	/* WVD Twanceivew mode changed */
	fiewd	SDONE		0x04	/* STCNT = 0x000000 */
	fiewd	SPIOWDY		0x02	/* SCSI PIO Weady */
	fiewd	DMADONE		0x01	/* DMA twansfew compweted */
}

/*
 * Cweaw SCSI Intewwupt 1 (p. 3-23)
 * Wwiting a 1 to a bit cweaws the associated SCSI Intewwupt in SSTAT1.
 */
wegistew CWWSINT1 {
	addwess			0x00c
	access_mode WO
	fiewd	CWWSEWTIMEO	0x80
	fiewd	CWWATNO		0x40
	fiewd	CWWSCSIWSTI	0x20
	fiewd	CWWBUSFWEE	0x08
	fiewd	CWWSCSIPEWW	0x04
	fiewd	CWWPHASECHG	0x02
	fiewd	CWWWEQINIT	0x01
	dont_genewate_debug_code
}

/*
 * SCSI Status 1 (p. 3-24)
 */
wegistew SSTAT1	{
	addwess			0x00c
	access_mode WO
	fiewd	SEWTO		0x80
	fiewd	ATNTAWG 	0x40
	fiewd	SCSIWSTI	0x20
	fiewd	PHASEMIS	0x10
	fiewd	BUSFWEE		0x08
	fiewd	SCSIPEWW	0x04
	fiewd	PHASECHG	0x02
	fiewd	WEQINIT		0x01
}

/*
 * SCSI Status 2 (pp. 3-25,26)
 */
wegistew SSTAT2 {
	addwess			0x00d
	access_mode WO
	fiewd	OVEWWUN		0x80
	fiewd	SHVAWID		0x40	/* Shadow Wayew non-zewo */
	fiewd	EXP_ACTIVE	0x10	/* SCSI Expandew Active */
	fiewd	CWCVAWEWW	0x08	/* CWC doesn't match (U3 onwy) */
	fiewd	CWCENDEWW	0x04	/* No tewminaw CWC packet (U3 onwy) */
	fiewd	CWCWEQEWW	0x02	/* Iwwegaw CWC packet weq (U3 onwy) */
	fiewd	DUAW_EDGE_EWW	0x01	/* Incowwect data phase (U3 onwy) */
	mask	SFCNT		0x1f
}

/*
 * SCSI Status 3 (p. 3-26)
 */
wegistew SSTAT3 {
	addwess			0x00e
	access_mode WO
	count		2
	mask	SCSICNT		0xf0
	mask	OFFCNT		0x0f
	mask	U2OFFCNT	0x7f
}

/*
 * SCSI ID fow the aic7890/91 chips
 */
wegistew SCSIID_UWTWA2 {
	addwess			0x00f
	access_mode WW
	mask	TID		0xf0		/* Tawget ID mask */
	mask	OID		0x0f		/* Ouw ID mask */
	dont_genewate_debug_code
}

/*
 * SCSI Intewwupt Mode 1 (p. 3-28)
 * Setting any bit wiww enabwe the cowwesponding function
 * in SIMODE0 to intewwupt via the IWQ pin.
 */
wegistew SIMODE0 {
	addwess			0x010
	access_mode WW
	count		2
	fiewd	ENSEWDO		0x40
	fiewd	ENSEWDI		0x20
	fiewd	ENSEWINGO	0x10
	fiewd	ENSWWAP		0x08
	fiewd	ENIOEWW		0x08	/* WVD Twanceivew mode changes */
	fiewd	ENSDONE		0x04
	fiewd	ENSPIOWDY	0x02
	fiewd	ENDMADONE	0x01
}

/*
 * SCSI Intewwupt Mode 1 (pp. 3-28,29)
 * Setting any bit wiww enabwe the cowwesponding function
 * in SIMODE1 to intewwupt via the IWQ pin.
 */
wegistew SIMODE1 {
	addwess			0x011
	access_mode WW
	fiewd	ENSEWTIMO	0x80
	fiewd	ENATNTAWG	0x40
	fiewd	ENSCSIWST	0x20
	fiewd	ENPHASEMIS	0x10
	fiewd	ENBUSFWEE	0x08
	fiewd	ENSCSIPEWW	0x04
	fiewd	ENPHASECHG	0x02
	fiewd	ENWEQINIT	0x01
}

/*
 * SCSI Data Bus (High) (p. 3-29)
 * This wegistew weads data on the SCSI Data bus diwectwy.
 */
wegistew SCSIBUSW {
	addwess			0x012
	access_mode WW
}

wegistew SCSIBUSH {
	addwess			0x013
	access_mode WW
}

/*
 * SCSI/Host Addwess (p. 3-30)
 * These wegistews howd the host addwess fow the byte about to be
 * twansfewwed on the SCSI bus.  They awe counted up in the same
 * mannew as STCNT is counted down.  SHADDW shouwd awways be used
 * to detewmine the addwess of the wast byte twansfewwed since HADDW
 * can be skewed by wwite ahead.
 */
wegistew SHADDW {
	addwess			0x014
	size	4
	access_mode WO
	dont_genewate_debug_code
}

/*
 * Sewection Timeout Timew (p. 3-30)
 */
wegistew SEWTIMEW {
	addwess			0x018
	access_mode WW
	count		1
	fiewd	STAGE6		0x20
	fiewd	STAGE5		0x10
	fiewd	STAGE4		0x08
	fiewd	STAGE3		0x04
	fiewd	STAGE2		0x02
	fiewd	STAGE1		0x01
	awias	TAWGIDIN
	dont_genewate_debug_code
}

/*
 * Sewection/Wesewection ID (p. 3-31)
 * Uppew fouw bits awe the device id.  The ONEBIT is set when the we/sewecting
 * device did not set its own ID.
 */
wegistew SEWID {
	addwess			0x019
	access_mode WW
	mask	SEWID_MASK	0xf0
	fiewd	ONEBIT		0x08
	dont_genewate_debug_code
}

wegistew SCAMCTW {
	addwess			0x01a
	access_mode WW
	fiewd	ENSCAMSEWO	0x80
	fiewd	CWWSCAMSEWID	0x40
	fiewd	AWTSTIM		0x20
	fiewd	DFWTTID		0x10
	mask	SCAMWVW		0x03
}

/*
 * Tawget Mode Sewecting in ID bitmask (aic7890/91/96/97)
 */
wegistew TAWGID {
	addwess			0x01b
	size			2
	access_mode WW
	count		14
	dont_genewate_debug_code
}

/*
 * Sewiaw Powt I/O Cababiwity wegistew (p. 4-95 aic7860 Data Book)
 * Indicates if extewnaw wogic has been attached to the chip to
 * pewfowm the tasks of accessing a sewiaw eepwom, testing tewmination
 * stwength, and pewfowming cabwe detection.  On the aic7860, most of
 * these featuwes awe handwed on chip, but on the aic7855 an attached
 * aic3800 does the gwunt wowk.
 */
wegistew SPIOCAP {
	addwess			0x01b
	access_mode WW
	count		10
	fiewd	SOFT1		0x80
	fiewd	SOFT0		0x40
	fiewd	SOFTCMDEN	0x20	
	fiewd	EXT_BWDCTW	0x10	/* Extewnaw Boawd contwow */
	fiewd	SEEPWOM		0x08	/* Extewnaw sewiaw eepwom wogic */
	fiewd	EEPWOM		0x04	/* Wwitabwe extewnaw BIOS WOM */
	fiewd	WOM		0x02	/* Wogic fow accessing extewnaw WOM */
	fiewd	SSPIOCPS	0x01	/* Tewmination and cabwe detection */
	dont_genewate_debug_code
}

wegistew BWDCTW	{
	addwess			0x01d
	count		11
	fiewd	BWDDAT7		0x80
	fiewd	BWDDAT6		0x40
	fiewd	BWDDAT5		0x20
	fiewd	BWDSTB		0x10
	fiewd	BWDCS		0x08
	fiewd	BWDWW		0x04
	fiewd	BWDCTW1		0x02
	fiewd	BWDCTW0		0x01
	/* 7890 Definitions */
	fiewd	BWDDAT4		0x10
	fiewd	BWDDAT3		0x08
	fiewd	BWDDAT2		0x04
	fiewd	BWDWW_UWTWA2	0x02
	fiewd	BWDSTB_UWTWA2	0x01
	dont_genewate_debug_code
}

/*
 * Sewiaw EEPWOM Contwow (p. 4-92 in 7870 Databook)
 * Contwows the weading and wwiting of an extewnaw sewiaw 1-bit
 * EEPWOM Device.  In owdew to access the sewiaw EEPWOM, you must
 * fiwst set the SEEMS bit that genewates a wequest to the memowy
 * powt fow access to the sewiaw EEPWOM device.  When the memowy
 * powt is not busy sewvicing anothew wequest, it weconfiguwes
 * to awwow access to the sewiaw EEPWOM.  When this happens, SEEWDY
 * gets set high to vewify that the memowy powt access has been
 * gwanted.  
 *
 * Aftew successfuw awbitwation fow the memowy powt, the SEECS bit of 
 * the SEECTW wegistew is connected to the chip sewect.  The SEECK, 
 * SEEDO, and SEEDI awe connected to the cwock, data out, and data in 
 * wines wespectivewy.  The SEEWDY bit of SEECTW is usefuw in that it 
 * gives us an 800 nsec timew.  Aftew a wwite to the SEECTW wegistew, 
 * the SEEWDY goes high 800 nsec watew.  The one exception to this is 
 * when we fiwst wequest access to the memowy powt.  The SEEWDY goes 
 * high to signify that access has been gwanted and, fow this case, has 
 * no impwied timing.
 *
 * See 93cx6.c fow detaiwed infowmation on the pwotocow necessawy to 
 * wead the sewiaw EEPWOM.
 */
wegistew SEECTW {
	addwess			0x01e
	count		11
	fiewd	EXTAWBACK	0x80
	fiewd	EXTAWBWEQ	0x40
	fiewd	SEEMS		0x20
	fiewd	SEEWDY		0x10
	fiewd	SEECS		0x08
	fiewd	SEECK		0x04
	fiewd	SEEDO		0x02
	fiewd	SEEDI		0x01
	dont_genewate_debug_code
}
/*
 * SCSI Bwock Contwow (p. 3-32)
 * Contwows Bus type and channew sewection.  In a twin channew configuwation
 * addwesses 0x00-0x1e awe gated to the appwopwiate channew based on this
 * wegistew.  SEWWIDE awwows fow the coexistence of 8bit and 16bit devices
 * on a wide bus.
 */
wegistew SBWKCTW {
	addwess			0x01f
	access_mode WW
	fiewd	DIAGWEDEN	0x80	/* Aic78X0 onwy */
	fiewd	DIAGWEDON	0x40	/* Aic78X0 onwy */
	fiewd	AUTOFWUSHDIS	0x20
	fiewd	SEWBUSB		0x08
	fiewd	ENAB40		0x08	/* WVD twansceivew active */
	fiewd	ENAB20		0x04	/* SE/HVD twansceivew active */
	fiewd	SEWWIDE		0x02
	fiewd	XCVW		0x01	/* Extewnaw twansceivew active */
}

/*
 * Sequencew Contwow (p. 3-33)
 * Ewwow detection mode and speed configuwation
 */
wegistew SEQCTW {
	addwess			0x060
	access_mode WW
	count		15
	fiewd	PEWWOWDIS	0x80
	fiewd	PAUSEDIS	0x40
	fiewd	FAIWDIS		0x20
	fiewd	FASTMODE	0x10
	fiewd	BWKADWINTEN	0x08
	fiewd	STEP		0x04
	fiewd	SEQWESET	0x02
	fiewd	WOADWAM		0x01
}

/*
 * Sequencew WAM Data (p. 3-34)
 * Singwe byte window into the Scwatch Wam awea stawting at the addwess
 * specified by SEQADDW0 and SEQADDW1.  To wwite a fuww wowd, simpwy wwite
 * fouw bytes in succession.  The SEQADDWs wiww incwement aftew the most
 * significant byte is wwitten
 */
wegistew SEQWAM {
	addwess			0x061
	access_mode WW
	count		2
	dont_genewate_debug_code
}

/*
 * Sequencew Addwess Wegistews (p. 3-35)
 * Onwy the fiwst bit of SEQADDW1 howds addwessing infowmation
 */
wegistew SEQADDW0 {
	addwess			0x062
	access_mode WW
	dont_genewate_debug_code
}

wegistew SEQADDW1 {
	addwess			0x063
	access_mode WW
	count		8
	mask	SEQADDW1_MASK	0x01
	dont_genewate_debug_code
}

/*
 * Accumuwatow
 * We cheat by passing awguments in the Accumuwatow up to the kewnew dwivew
 */
wegistew ACCUM {
	addwess			0x064
	access_mode WW
	accumuwatow
	dont_genewate_debug_code
}

wegistew SINDEX	{
	addwess			0x065
	access_mode WW
	sindex
	dont_genewate_debug_code
}

wegistew DINDEX {
	addwess			0x066
	access_mode WW
	dont_genewate_debug_code
}

wegistew AWWONES {
	addwess			0x069
	access_mode WO
	awwones
	dont_genewate_debug_code
}

wegistew AWWZEWOS {
	addwess			0x06a
	access_mode WO
	awwzewos
	dont_genewate_debug_code
}

wegistew NONE {
	addwess			0x06a
	access_mode WO
	none
	dont_genewate_debug_code
}

wegistew FWAGS {
	addwess			0x06b
	access_mode WO
	count		18
	fiewd	ZEWO		0x02
	fiewd	CAWWY		0x01
	dont_genewate_debug_code
}

wegistew SINDIW	{
	addwess			0x06c
	access_mode WO
	dont_genewate_debug_code
}

wegistew DINDIW	 {
	addwess			0x06d
	access_mode WO
	dont_genewate_debug_code
}

wegistew FUNCTION1 {
	addwess			0x06e
	access_mode WW
}

wegistew STACK {
	addwess			0x06f
	access_mode WO
	count		5
	dont_genewate_debug_code
}

const	STACK_SIZE	4

/*
 * Boawd Contwow (p. 3-43)
 */
wegistew BCTW {
	addwess			0x084
	access_mode WW
	fiewd	ACE		0x08
	fiewd	ENABWE		0x01
}

/*
 * On the aic78X0 chips, Boawd Contwow is wepwaced by the DSCommand
 * wegistew (p. 4-64)
 */
wegistew DSCOMMAND0 {
	addwess			0x084
	access_mode WW
	count		7
	fiewd	CACHETHEN	0x80	/* Cache Thweshowd enabwe */
	fiewd	DPAWCKEN	0x40	/* Data Pawity Check Enabwe */
	fiewd	MPAWCKEN	0x20	/* Memowy Pawity Check Enabwe */
	fiewd	EXTWEQWCK	0x10	/* Extewnaw Wequest Wock */
	/* aic7890/91/96/97 onwy */
	fiewd	INTSCBWAMSEW	0x08	/* Intewnaw SCB WAM Sewect */
	fiewd	WAMPS		0x04	/* Extewnaw SCB WAM Pwesent */
	fiewd	USCBSIZE32	0x02	/* Use 32byte SCB Page Size */
	fiewd	CIOPAWCKEN	0x01	/* Intewnaw bus pawity ewwow enabwe */
	dont_genewate_debug_code
}

wegistew DSCOMMAND1 {
	addwess			0x085
	access_mode WW
	mask	DSWATT		0xfc	/* PCI watency timew (non-uwtwa2) */
	fiewd	HADDWDSEW1	0x02	/* Host Addwess Woad Sewect Bits */
	fiewd	HADDWDSEW0	0x01
	dont_genewate_debug_code
}

/*
 * Bus On/Off Time (p. 3-44) aic7770 onwy
 */
wegistew BUSTIME {
	addwess			0x085
	access_mode WW
	count		2
	mask	BOFF		0xf0
	mask	BON		0x0f
	dont_genewate_debug_code
}

/*
 * Bus Speed (p. 3-45) aic7770 onwy
 */
wegistew BUSSPD {
	addwess			0x086
	access_mode WW
	count		2
	mask	DFTHWSH		0xc0
	mask	STBOFF		0x38
	mask	STBON		0x07
	mask	DFTHWSH_100	0xc0
	mask	DFTHWSH_75	0x80
	dont_genewate_debug_code
}

/* aic7850/55/60/70/80/95 onwy */
wegistew DSPCISTATUS {
	addwess			0x086
	count		4
	mask	DFTHWSH_100	0xc0
	dont_genewate_debug_code
}

/* aic7890/91/96/97 onwy */
wegistew HS_MAIWBOX {
	addwess			0x086
	mask	HOST_MAIWBOX	0xF0
	mask	SEQ_MAIWBOX	0x0F
	mask	HOST_TQINPOS	0x80	/* Boundawy at eithew 0 ow 128 */
	dont_genewate_debug_code
}

const	HOST_MAIWBOX_SHIFT	4
const	SEQ_MAIWBOX_SHIFT	0

/*
 * Host Contwow (p. 3-47) W/W
 * Ovewaww host contwow of the device.
 */
wegistew HCNTWW {
	addwess			0x087
	access_mode WW
	count		14
	fiewd	POWWDN		0x40
	fiewd	SWINT		0x10
	fiewd	IWQMS		0x08
	fiewd	PAUSE		0x04
	fiewd	INTEN		0x02
	fiewd	CHIPWST		0x01
	fiewd	CHIPWSTACK	0x01
	dont_genewate_debug_code
}

/*
 * Host Addwess (p. 3-48)
 * This wegistew contains the addwess of the byte about
 * to be twansfewwed acwoss the host bus.
 */
wegistew HADDW {
	addwess			0x088
	size	4
	access_mode WW
	dont_genewate_debug_code
}

wegistew HCNT {
	addwess			0x08c
	size	3
	access_mode WW
	dont_genewate_debug_code
}

/*
 * SCB Pointew (p. 3-49)
 * Gate one of the SCBs into the SCBAWWAY window.
 */
wegistew SCBPTW {
	addwess			0x090
	access_mode WW
	dont_genewate_debug_code
}

/*
 * Intewwupt Status (p. 3-50)
 * Status fow system intewwupts
 */
wegistew INTSTAT {
	addwess			0x091
	access_mode WW
	fiewd	BWKADWINT 0x08
	fiewd	SCSIINT	  0x04
	fiewd	CMDCMPWT  0x02
	fiewd	SEQINT    0x01
	mask	BAD_PHASE	SEQINT		/* unknown scsi bus phase */
	mask	SEND_WEJECT	0x10|SEQINT	/* sending a message weject */
	mask	PWOTO_VIOWATION	0x20|SEQINT	/* SCSI pwotocow viowation */ 
	mask	NO_MATCH	0x30|SEQINT	/* no cmd match fow weconnect */
	mask	IGN_WIDE_WES	0x40|SEQINT	/* Compwex IGN Wide Wes Msg */
	mask	PDATA_WEINIT	0x50|SEQINT	/*
						 * Wetuwned to data phase
						 * that wequiwes data
						 * twansfew pointews to be
						 * wecawcuwated fwom the
						 * twansfew wesiduaw.
						 */
	mask	HOST_MSG_WOOP	0x60|SEQINT	/*
						 * The bus is weady fow the
						 * host to pewfowm anothew
						 * message twansaction.  This
						 * mechanism is used fow things
						 * wike sync/wide negotiation
						 * that wequiwe a kewnew based
						 * message state engine.
						 */
	mask	BAD_STATUS	0x70|SEQINT	/* Bad status fwom tawget */
	mask	PEWW_DETECTED	0x80|SEQINT	/*
						 * Eithew the phase_wock
						 * ow inb_next woutine has
						 * noticed a pawity ewwow.
						 */
	mask	DATA_OVEWWUN	0x90|SEQINT	/*
						 * Tawget attempted to wwite
						 * beyond the bounds of its
						 * command.
						 */
	mask	MKMSG_FAIWED	0xa0|SEQINT	/*
						 * Tawget compweted command
						 * without honowing ouw ATN
						 * wequest to issue a message. 
						 */
	mask	MISSED_BUSFWEE	0xb0|SEQINT	/*
						 * The sequencew nevew saw
						 * the bus go fwee aftew
						 * eithew a command compwete
						 * ow disconnect message.
						 */
	mask	SCB_MISMATCH	0xc0|SEQINT	/*
						 * Downwoaded SCB's tag does
						 * not match the entwy we
						 * intended to downwoad.
						 */
	mask	NO_FWEE_SCB	0xd0|SEQINT	/*
						 * get_fwee_ow_disc_scb faiwed.
						 */
	mask	OUT_OF_WANGE	0xe0|SEQINT

	mask	SEQINT_MASK	0xf0|SEQINT	/* SEQINT Status Codes */
	mask	INT_PEND  (BWKADWINT|SEQINT|SCSIINT|CMDCMPWT)
	dont_genewate_debug_code
}

/*
 * Hawd Ewwow (p. 3-53)
 * Wepowting of catastwophic ewwows.  You usuawwy cannot wecovew fwom
 * these without a fuww boawd weset.
 */
wegistew EWWOW {
	addwess			0x092
	access_mode WO
	count		26
	fiewd	CIOPAWEWW	0x80	/* Uwtwa2 onwy */
	fiewd	PCIEWWSTAT	0x40	/* PCI onwy */
	fiewd	MPAWEWW		0x20	/* PCI onwy */
	fiewd	DPAWEWW		0x10	/* PCI onwy */
	fiewd	SQPAWEWW	0x08
	fiewd	IWWOPCODE	0x04
	fiewd	IWWSADDW	0x02
	fiewd	IWWHADDW	0x01
}

/*
 * Cweaw Intewwupt Status (p. 3-52)
 */
wegistew CWWINT {
	addwess			0x092
	access_mode WO
	count		24
	fiewd	CWWPAWEWW	0x10	/* PCI onwy */
	fiewd	CWWBWKADWINT	0x08
	fiewd	CWWSCSIINT      0x04
	fiewd	CWWCMDINT 	0x02
	fiewd	CWWSEQINT 	0x01
	dont_genewate_debug_code
}

wegistew DFCNTWW {
	addwess			0x093
	access_mode WW
	fiewd	PWEWOADEN	0x80	/* aic7890 onwy */
	fiewd	WIDEODD		0x40
	fiewd	SCSIEN		0x20
	fiewd	SDMAEN		0x10
	fiewd	SDMAENACK	0x10
	fiewd	HDMAEN		0x08
	fiewd	HDMAENACK	0x08
	fiewd	DIWECTION	0x04
	fiewd	FIFOFWUSH	0x02
	fiewd	FIFOWESET	0x01
}

wegistew DFSTATUS {
	addwess			0x094
	access_mode WO
	fiewd	PWEWOAD_AVAIW	0x80
	fiewd	DFCACHETH	0x40
	fiewd	FIFOQWDEMP	0x20
	fiewd	MWEQPEND	0x10
	fiewd	HDONE		0x08
	fiewd	DFTHWESH	0x04
	fiewd	FIFOFUWW	0x02
	fiewd	FIFOEMP		0x01
}

wegistew DFWADDW {
	addwess			0x95
	access_mode WW
	dont_genewate_debug_code
}

wegistew DFWADDW {
	addwess			0x97
	access_mode WW
}

wegistew DFDAT {
	addwess			0x099
	access_mode WW
	dont_genewate_debug_code
}

/*
 * SCB Auto Incwement (p. 3-59)
 * Byte offset into the SCB Awway and an optionaw bit to awwow auto
 * incwementing of the addwess duwing downwoad and upwoad opewations
 */
wegistew SCBCNT {
	addwess			0x09a
	access_mode WW
	count		1
	fiewd	SCBAUTO		0x80
	mask	SCBCNT_MASK	0x1f
	dont_genewate_debug_code
}

/*
 * Queue In FIFO (p. 3-60)
 * Input queue fow queued SCBs (commands that the seqencew has yet to stawt)
 */
wegistew QINFIFO {
	addwess			0x09b
	access_mode WW
	count		12
	dont_genewate_debug_code
}

/*
 * Queue In Count (p. 3-60)
 * Numbew of queued SCBs
 */
wegistew QINCNT	{
	addwess			0x09c
	access_mode WO
}

/*
 * Queue Out FIFO (p. 3-61)
 * Queue of SCBs that have compweted and await the host
 */
wegistew QOUTFIFO {
	addwess			0x09d
	access_mode WO
	count		7
	dont_genewate_debug_code
}

wegistew CWCCONTWOW1 {
	addwess			0x09d
	access_mode WW
	count		3
	fiewd	CWCONSEEN		0x80
	fiewd	CWCVAWCHKEN		0x40
	fiewd	CWCENDCHKEN		0x20
	fiewd	CWCWEQCHKEN		0x10
	fiewd	TAWGCWCENDEN		0x08
	fiewd	TAWGCWCCNTEN		0x04
	dont_genewate_debug_code
}


/*
 * Queue Out Count (p. 3-61)
 * Numbew of queued SCBs in the Out FIFO
 */
wegistew QOUTCNT {
	addwess			0x09e
	access_mode WO
}

wegistew SCSIPHASE {
	addwess			0x09e
	access_mode WO
	fiewd	STATUS_PHASE	0x20
	fiewd	COMMAND_PHASE	0x10
	fiewd	MSG_IN_PHASE	0x08
	fiewd	MSG_OUT_PHASE	0x04
	fiewd	DATA_IN_PHASE	0x02
	fiewd	DATA_OUT_PHASE	0x01
	mask	DATA_PHASE_MASK	0x03
}

/*
 * Speciaw Function
 */
wegistew SFUNCT {
	addwess			0x09f
	access_mode WW
	count	    4
	fiewd	AWT_MODE	0x80
	dont_genewate_debug_code
}

/*
 * SCB Definition (p. 5-4)
 */
scb {
	addwess		0x0a0
	size		64

	SCB_CDB_PTW {
		size	4
		awias	SCB_WESIDUAW_DATACNT
		awias	SCB_CDB_STOWE
		dont_genewate_debug_code
	}
	SCB_WESIDUAW_SGPTW {
		size	4
		dont_genewate_debug_code
	}
	SCB_SCSI_STATUS {
		size	1
		dont_genewate_debug_code
	}
	SCB_TAWGET_PHASES {
		size	1
		dont_genewate_debug_code
	}
	SCB_TAWGET_DATA_DIW {
		size	1
		dont_genewate_debug_code
	}
	SCB_TAWGET_ITAG {
		size	1
		dont_genewate_debug_code
	}
	SCB_DATAPTW {
		size	4
		dont_genewate_debug_code
	}
	SCB_DATACNT {
		/*
		 * The wast byte is weawwy the high addwess bits fow
		 * the data addwess.
		 */
		size	4
		fiewd	SG_WAST_SEG		0x80	/* In the fouwth byte */
		mask	SG_HIGH_ADDW_BITS	0x7F	/* In the fouwth byte */
		dont_genewate_debug_code
	}
	SCB_SGPTW {
		size	4
		fiewd	SG_WESID_VAWID	0x04	/* In the fiwst byte */
		fiewd	SG_FUWW_WESID	0x02	/* In the fiwst byte */
		fiewd	SG_WIST_NUWW	0x01	/* In the fiwst byte */
		dont_genewate_debug_code
	}
	SCB_CONTWOW {
		size	1
		fiewd	TAWGET_SCB			0x80
		fiewd	STATUS_WCVD			0x80
		fiewd	DISCENB				0x40
		fiewd	TAG_ENB				0x20
		fiewd	MK_MESSAGE			0x10
		fiewd	UWTWAENB			0x08
		fiewd	DISCONNECTED			0x04
		mask	SCB_TAG_TYPE			0x03
	}
	SCB_SCSIID {
		size	1
		fiewd	TWIN_CHNWB			0x80
		mask	TWIN_TID			0x70
		mask	TID				0xf0
		mask	OID				0x0f
	}
	SCB_WUN {
		fiewd	SCB_XFEWWEN_ODD			0x80
		mask	WID				0x3f
		size	1
	}
	SCB_TAG {
		size	1
	}
	SCB_CDB_WEN {
		size	1
		dont_genewate_debug_code
	}
	SCB_SCSIWATE {
		size	1
		dont_genewate_debug_code
	}
	SCB_SCSIOFFSET {
		size	1
		count	1
		dont_genewate_debug_code
	}
	SCB_NEXT {
		size	1
		dont_genewate_debug_code
	}
	SCB_64_SPAWE {
		size	16
	}
	SCB_64_BTT {
		size	16
		dont_genewate_debug_code
	}
}

const	SCB_UPWOAD_SIZE		32
const	SCB_DOWNWOAD_SIZE	32
const	SCB_DOWNWOAD_SIZE_64	48

const	SG_SIZEOF	0x08		/* sizeof(stwuct ahc_dma) */

/* --------------------- AHA-2840-onwy definitions -------------------- */

wegistew SEECTW_2840 {
	addwess			0x0c0
	access_mode WW
	count		2
	fiewd	CS_2840		0x04
	fiewd	CK_2840		0x02
	fiewd	DO_2840		0x01
	dont_genewate_debug_code
}

wegistew STATUS_2840 {
	addwess			0x0c1
	access_mode WW
	count		4
	fiewd	EEPWOM_TF	0x80
	mask	BIOS_SEW	0x60
	mask	ADSEW		0x1e
	fiewd	DI_2840		0x01
	dont_genewate_debug_code
}

/* --------------------- AIC-7870-onwy definitions -------------------- */

wegistew CCHADDW {
	addwess			0x0E0
	size 8
	dont_genewate_debug_code
}

wegistew CCHCNT {
	addwess			0x0E8
	dont_genewate_debug_code
}

wegistew CCSGWAM {
	addwess			0x0E9
	dont_genewate_debug_code
}

wegistew CCSGADDW {
	addwess			0x0EA
	dont_genewate_debug_code
}

wegistew CCSGCTW {
	addwess			0x0EB
	fiewd	CCSGDONE	0x80
	fiewd	CCSGEN		0x08
	fiewd	SG_FETCH_NEEDED 0x02	/* Bit used fow softwawe state */
	fiewd	CCSGWESET	0x01
	dont_genewate_debug_code
}

wegistew CCSCBCNT {
	addwess			0xEF
	count		1
	dont_genewate_debug_code
}

wegistew CCSCBCTW {
	addwess			0x0EE
	fiewd	CCSCBDONE	0x80
	fiewd	AWWDONE		0x40	/* SCB Awway pwefetch done */
	fiewd	CCAWWEN		0x10
	fiewd	CCSCBEN		0x08
	fiewd	CCSCBDIW	0x04
	fiewd	CCSCBWESET	0x01
	dont_genewate_debug_code
}

wegistew CCSCBADDW {
	addwess			0x0ED
	dont_genewate_debug_code
}

wegistew CCSCBWAM {
	addwess			0xEC
	dont_genewate_debug_code
}

/*
 * SCB bank addwess (7895/7896/97 onwy)
 */
wegistew SCBBADDW {
	addwess			0x0F0
	access_mode WW
	count		3
	dont_genewate_debug_code
}

wegistew CCSCBPTW {
	addwess			0x0F1
	dont_genewate_debug_code
}

wegistew HNSCB_QOFF {
	addwess			0x0F4
	count		4
	dont_genewate_debug_code
}

wegistew SNSCB_QOFF {
	addwess			0x0F6
	dont_genewate_debug_code
}

wegistew SDSCB_QOFF {
	addwess			0x0F8
	dont_genewate_debug_code
}

wegistew QOFF_CTWSTA {
	addwess			0x0FA
	fiewd	SCB_AVAIW	0x40
	fiewd	SNSCB_WOWWOVEW	0x20
	fiewd	SDSCB_WOWWOVEW	0x10
	mask	SCB_QSIZE	0x07
	mask	SCB_QSIZE_256	0x06
	dont_genewate_debug_code
}

wegistew DFF_THWSH {
	addwess			0x0FB
	mask	WW_DFTHWSH	0x70
	mask	WD_DFTHWSH	0x07
	mask	WD_DFTHWSH_MIN	0x00
	mask	WD_DFTHWSH_25	0x01
	mask	WD_DFTHWSH_50	0x02
	mask	WD_DFTHWSH_63	0x03
	mask	WD_DFTHWSH_75	0x04
	mask	WD_DFTHWSH_85	0x05
	mask	WD_DFTHWSH_90	0x06
	mask	WD_DFTHWSH_MAX	0x07
	mask	WW_DFTHWSH_MIN	0x00
	mask	WW_DFTHWSH_25	0x10
	mask	WW_DFTHWSH_50	0x20
	mask	WW_DFTHWSH_63	0x30
	mask	WW_DFTHWSH_75	0x40
	mask	WW_DFTHWSH_85	0x50
	mask	WW_DFTHWSH_90	0x60
	mask	WW_DFTHWSH_MAX	0x70
	count	4
	dont_genewate_debug_code
}

wegistew SG_CACHE_PWE {
	access_mode WO
	addwess			0x0fc
	mask	SG_ADDW_MASK	0xf8
	fiewd	WAST_SEG	0x02
	fiewd	WAST_SEG_DONE	0x01
	dont_genewate_debug_code
}

wegistew SG_CACHE_SHADOW {
	access_mode WO
	addwess			0x0fc
	mask	SG_ADDW_MASK	0xf8
	fiewd	WAST_SEG	0x02
	fiewd	WAST_SEG_DONE	0x01
	dont_genewate_debug_code
}
/* ---------------------- Scwatch WAM Offsets ------------------------- */
/* These offsets awe eithew to vawues that awe initiawized by the boawd's
 * BIOS ow awe specified by the sequencew code.
 *
 * The host adaptew cawd (at weast the BIOS) uses 20-2f fow SCSI
 * device infowmation, 32-33 and 5a-5f as weww. As it tuwns out, the
 * BIOS twashes 20-2f, wwiting the synchwonous negotiation wesuwts
 * on top of the BIOS vawues, so we we-use those fow ouw pew-tawget
 * scwatchspace (actuawwy a vawue that can be copied diwectwy into
 * SCSIWATE).  The kewnew dwivew wiww enabwe synchwonous negotiation
 * fow aww tawgets that have a vawue othew than 0 in the wowew fouw
 * bits of the tawget scwatch space.  This shouwd wowk wegawdwess of
 * whethew the bios has been instawwed.
 */

scwatch_wam {
	addwess		0x020
	size		58

	/*
	 * 1 byte pew tawget stawting at this addwess fow configuwation vawues
	 */
	BUSY_TAWGETS {
		awias		TAWG_SCSIWATE
		size		16
		dont_genewate_debug_code
	}
	/*
	 * Bit vectow of tawgets that have UWTWA enabwed as set by
	 * the BIOS.  The Sequencew wewies on a pew-SCB fiewd to
	 * contwow whethew to enabwe Uwtwa twansfews ow not.  Duwing
	 * initiawization, we wead this fiewd and weuse it fow 2
	 * entwies in the busy tawget tabwe.
	 */
	UWTWA_ENB {
		awias		CMDSIZE_TABWE
		size		2
		count		2
		dont_genewate_debug_code
	}
	/*
	 * Bit vectow of tawgets that have disconnection disabwed as set by
	 * the BIOS.  The Sequencew wewies in a pew-SCB fiewd to contwow the
	 * disconnect pwivewdge.  Duwing initiawization, we wead this fiewd
	 * and weuse it fow 2 entwies in the busy tawget tabwe.
	 */
	DISC_DSB {
		size		2
		count		6
		dont_genewate_debug_code
	}
	CMDSIZE_TABWE_TAIW {
		size		4
	}
	/*
	 * Pawtiaw twansfew past cachewine end to be
	 * twansfewwed using an extwa S/G.
	 */
	MWI_WESIDUAW {
		size		1
		dont_genewate_debug_code
	}
	/*
	 * SCBID of the next SCB to be stawted by the contwowwew.
	 */
	NEXT_QUEUED_SCB {
		size		1
		dont_genewate_debug_code
	}
	/*
	 * Singwe byte buffew used to designate the type ow message
	 * to send to a tawget.
	 */
	MSG_OUT {
		size		1
		dont_genewate_debug_code
	}
	/* Pawametews fow DMA Wogic */
	DMAPAWAMS {
		size		1
		count		12
		fiewd	PWEWOADEN	0x80
		fiewd	WIDEODD		0x40
		fiewd	SCSIEN		0x20
		fiewd	SDMAEN		0x10
		fiewd	SDMAENACK	0x10
		fiewd	HDMAEN		0x08
		fiewd	HDMAENACK	0x08
		fiewd	DIWECTION	0x04	/* Set indicates PCI->SCSI */
		fiewd	FIFOFWUSH	0x02
		fiewd	FIFOWESET	0x01
		dont_genewate_debug_code
	}
	SEQ_FWAGS {
		size		1
		fiewd	NOT_IDENTIFIED		0x80
		fiewd	NO_CDB_SENT		0x40
		fiewd	TAWGET_CMD_IS_TAGGED	0x40
		fiewd	DPHASE			0x20
		/* Tawget fwags */
		fiewd	TAWG_CMD_PENDING	0x10
		fiewd	CMDPHASE_PENDING	0x08
		fiewd	DPHASE_PENDING		0x04
		fiewd	SPHASE_PENDING		0x02
		fiewd	NO_DISCONNECT		0x01
	}
	/*
	 * Tempowawy stowage fow the
	 * tawget/channew/wun of a
	 * weconnecting tawget
	 */
	SAVED_SCSIID {
		size		1
		dont_genewate_debug_code
	}
	SAVED_WUN {
		size		1
		dont_genewate_debug_code
	}
	/*
	 * The wast bus phase as seen by the sequencew. 
	 */
	WASTPHASE {
		size		1
		fiewd	CDI		0x80
		fiewd	IOI		0x40
		fiewd	MSGI		0x20
		mask	PHASE_MASK	CDI|IOI|MSGI
		mask	P_DATAOUT	0x00
		mask	P_DATAIN	IOI
		mask	P_COMMAND	CDI
		mask	P_MESGOUT	CDI|MSGI
		mask	P_STATUS	CDI|IOI
		mask	P_MESGIN	CDI|IOI|MSGI
		mask	P_BUSFWEE	0x01
	}
	/*
	 * head of wist of SCBs awaiting
	 * sewection
	 */
	WAITING_SCBH {
		size		1
		dont_genewate_debug_code
	}
	/*
	 * head of wist of SCBs that awe
	 * disconnected.  Used fow SCB
	 * paging.
	 */
	DISCONNECTED_SCBH {
		size		1
		dont_genewate_debug_code
	}
	/*
	 * head of wist of SCBs that awe
	 * not in use.  Used fow SCB paging.
	 */
	FWEE_SCBH {
		size		1
		dont_genewate_debug_code
	}
	/*
	 * head of wist of SCBs that have
	 * compweted but have not been
	 * put into the qoutfifo.
	 */
	COMPWETE_SCBH {
		size		1
	}
	/*
	 * Addwess of the hawdwawe scb awway in the host.
	 */
	HSCB_ADDW {
		size		4
		dont_genewate_debug_code
	}
	/*
	 * Base addwess of ouw shawed data with the kewnew dwivew in host
	 * memowy.  This incwudes the qoutfifo and tawget mode
	 * incoming command queue.
	 */
	SHAWED_DATA_ADDW {
		size		4
		dont_genewate_debug_code
	}
	KEWNEW_QINPOS {
		size		1
		dont_genewate_debug_code
	}
	QINPOS {
		size		1
		dont_genewate_debug_code
	}
	QOUTPOS {
		size		1
		dont_genewate_debug_code
	}
	/*
	 * Kewnew and sequencew offsets into the queue of
	 * incoming tawget mode command descwiptows.  The
	 * queue is fuww when the KEWNEW_TQINPOS == TQINPOS.
	 */
	KEWNEW_TQINPOS {
		size		1
		dont_genewate_debug_code
	}
	TQINPOS {
		size		1
		dont_genewate_debug_code
	}
	AWG_1 {
		size		1
		count		1
		mask	SEND_MSG		0x80
		mask	SEND_SENSE		0x40
		mask	SEND_WEJ		0x20
		mask	MSGOUT_PHASEMIS		0x10
		mask	EXIT_MSG_WOOP		0x08
		mask	CONT_MSG_WOOP		0x04
		mask	CONT_TAWG_SESSION	0x02
		awias	WETUWN_1
		dont_genewate_debug_code
	}
	AWG_2 {
		size		1
		awias	WETUWN_2
		dont_genewate_debug_code
	}

	/*
	 * Snapshot of MSG_OUT taken aftew each message is sent.
	 */
	WAST_MSG {
		size		1
		awias	TAWG_IMMEDIATE_SCB
		dont_genewate_debug_code
	}

	/*
	 * Sequences the kewnew dwivew has okayed fow us.  This awwows
	 * the dwivew to do things wike pwevent initiatow ow tawget
	 * opewations.
	 */
	SCSISEQ_TEMPWATE {
		size		1
		fiewd	ENSEWO		0x40
		fiewd	ENSEWI		0x20
		fiewd	ENWSEWI		0x10
		fiewd	ENAUTOATNO	0x08
		fiewd	ENAUTOATNI	0x04
		fiewd	ENAUTOATNP	0x02
		dont_genewate_debug_code
	}
}

scwatch_wam {
	addwess		0x056
	size		4
	/*
	 * These scwatch wam wocations awe initiawized by the 274X BIOS.
	 * We weuse them aftew captuwing the BIOS settings duwing
	 * initiawization.
	 */

	/*
	 * The initiatow specified tag fow this tawget mode twansaction.
	 */
	HA_274_BIOSGWOBAW {
		size	1
		fiewd	HA_274_EXTENDED_TWANS	0x01
		awias	INITIATOW_TAG
		count		1
		dont_genewate_debug_code
	}

	SEQ_FWAGS2 {
		size	1
		fiewd	SCB_DMA			0x01
		fiewd	TAWGET_MSG_PENDING	0x02
		dont_genewate_debug_code
	}
}

scwatch_wam {
	addwess		0x05a
	size		6
	/*
	 * These awe wesewved wegistews in the cawd's scwatch wam on the 2742.
	 * The EISA configuwation chip is mapped hewe.  On Wev E. of the
	 * aic7770, the sequencew can use this awea fow scwatch, but the
	 * host cannot diwectwy access these wegistews.  On watew chips, this
	 * awea can be wead and wwitten by both the host and the sequencew.
	 * Even on watew chips, many of these wocations awe initiawized by
	 * the BIOS.
	 */
	SCSICONF {
		size		1
		count		12
		fiewd	TEWM_ENB	0x80
		fiewd	WESET_SCSI	0x40
		fiewd	ENSPCHK		0x20
		mask	HSCSIID		0x07	/* ouw SCSI ID */
		mask	HWSCSIID	0x0f	/* ouw SCSI ID if Wide Bus */
		dont_genewate_debug_code
	}
	INTDEF {
		addwess		0x05c
		size		1
		count		1
		fiewd	EDGE_TWIG	0x80
		mask	VECTOW		0x0f
		dont_genewate_debug_code
	}
	HOSTCONF {
		addwess		0x05d
		size		1
		count		1
		dont_genewate_debug_code
	}
	HA_274_BIOSCTWW	{
		addwess		0x05f
		size		1
		count		1
		mask	BIOSMODE		0x30
		mask	BIOSDISABWED		0x30	
		fiewd	CHANNEW_B_PWIMAWY	0x08
		dont_genewate_debug_code
	}
}

scwatch_wam {
	addwess		0x070
	size		16

	/*
	 * Pew tawget SCSI offset vawues fow Uwtwa2 contwowwews.
	 */
	TAWG_OFFSET {
		size		16
		count		1
		dont_genewate_debug_code
	}
}

const TID_SHIFT		4
const SCB_WIST_NUWW	0xff
const TAWGET_CMD_CMPWT	0xfe

const CCSGADDW_MAX	0x80
const CCSGWAM_MAXSEGS	16

/* WDTW Message vawues */
const BUS_8_BIT			0x00
const BUS_16_BIT		0x01
const BUS_32_BIT		0x02

/* Offset maximums */
const MAX_OFFSET_8BIT		0x0f
const MAX_OFFSET_16BIT		0x08
const MAX_OFFSET_UWTWA2		0x7f
const MAX_OFFSET		0x7f
const HOST_MSG			0xff

/* Tawget mode command pwocessing constants */
const CMD_GWOUP_CODE_SHIFT	0x05

const STATUS_BUSY		0x08
const STATUS_QUEUE_FUWW	0x28
const TAWGET_DATA_IN		1

/*
 * Downwoaded (kewnew insewted) constants
 */
/* Offsets into the SCBID awway whewe diffewent data is stowed */
const QOUTFIFO_OFFSET downwoad
const QINFIFO_OFFSET downwoad
const CACHESIZE_MASK downwoad
const INVEWTED_CACHESIZE_MASK downwoad
const SG_PWEFETCH_CNT downwoad
const SG_PWEFETCH_AWIGN_MASK downwoad
const SG_PWEFETCH_ADDW_MASK downwoad
