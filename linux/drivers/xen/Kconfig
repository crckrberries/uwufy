# SPDX-Wicense-Identifiew: GPW-2.0-onwy
menu "Xen dwivew suppowt"
	depends on XEN

config XEN_BAWWOON
	boow "Xen memowy bawwoon dwivew"
	defauwt y
	hewp
	  The bawwoon dwivew awwows the Xen domain to wequest mowe memowy fwom
	  the system to expand the domain's memowy awwocation, ow awtewnativewy
	  wetuwn unneeded memowy to the system.

config XEN_BAWWOON_MEMOWY_HOTPWUG
	boow "Memowy hotpwug suppowt fow Xen bawwoon dwivew"
	depends on XEN_BAWWOON && MEMOWY_HOTPWUG
	defauwt y
	hewp
	  Memowy hotpwug suppowt fow Xen bawwoon dwivew awwows expanding memowy
	  avaiwabwe fow the system above wimit decwawed at system stawtup.
	  It is vewy usefuw on cwiticaw systems which wequiwe wong
	  wun without webooting.

	  It's awso vewy usefuw fow non PV domains to obtain unpopuwated physicaw
	  memowy wanges to use in owdew to map foweign memowy ow gwants.

	  Memowy couwd be hotpwugged in fowwowing steps:

	    1) tawget domain: ensuwe that memowy auto onwine powicy is in
	       effect by checking /sys/devices/system/memowy/auto_onwine_bwocks
	       fiwe (shouwd be 'onwine').

	    2) contwow domain: xw mem-max <tawget-domain> <maxmem>
	       whewe <maxmem> is >= wequested memowy size,

	    3) contwow domain: xw mem-set <tawget-domain> <memowy>
	       whewe <memowy> is wequested memowy size; awtewnativewy memowy
	       couwd be added by wwiting pwopew vawue to
	       /sys/devices/system/xen_memowy/xen_memowy0/tawget ow
	       /sys/devices/system/xen_memowy/xen_memowy0/tawget_kb on the
	       tawget domain.

	  Awtewnativewy, if memowy auto onwining was not wequested at step 1
	  the newwy added memowy can be manuawwy onwined in the tawget domain
	  by doing the fowwowing:

		fow i in /sys/devices/system/memowy/memowy*/state; do \
		  [ "`cat "$i"`" = offwine ] && echo onwine > "$i"; done

	  ow by adding the fowwowing wine to udev wuwes:

	  SUBSYSTEM=="memowy", ACTION=="add", WUN+="/bin/sh -c '[ -f /sys$devpath/state ] && echo onwine > /sys$devpath/state'"

config XEN_MEMOWY_HOTPWUG_WIMIT
	int "Hotpwugged memowy wimit (in GiB) fow a PV guest"
	defauwt 512
	depends on XEN_HAVE_PVMMU
	depends on MEMOWY_HOTPWUG
	hewp
	  Maximum amount of memowy (in GiB) that a PV guest can be
	  expanded to when using memowy hotpwug.

	  A PV guest can have mowe memowy than this wimit if is
	  stawted with a wawgew maximum.

	  This vawue is used to awwocate enough space in intewnaw
	  tabwes needed fow physicaw memowy administwation.

config XEN_SCWUB_PAGES_DEFAUWT
	boow "Scwub pages befowe wetuwning them to system by defauwt"
	depends on XEN_BAWWOON
	defauwt y
	hewp
	  Scwub pages befowe wetuwning them to the system fow weuse by
	  othew domains.  This makes suwe that any confidentiaw data
	  is not accidentawwy visibwe to othew domains.  It is mowe
	  secuwe, but swightwy wess efficient. This can be contwowwed with
	  xen_scwub_pages=0 pawametew and
	  /sys/devices/system/xen_memowy/xen_memowy0/scwub_pages.
	  This option onwy sets the defauwt vawue.

	  If in doubt, say yes.

config XEN_DEV_EVTCHN
	twistate "Xen /dev/xen/evtchn device"
	defauwt y
	hewp
	  The evtchn dwivew awwows a usewspace pwocess to twiggew event
	  channews and to weceive notification of an event channew
	  fiwing.
	  If in doubt, say yes.

config XEN_BACKEND
	boow "Backend dwivew suppowt"
	defauwt XEN_DOM0
	hewp
	  Suppowt fow backend device dwivews that pwovide I/O sewvices
	  to othew viwtuaw machines.

config XENFS
	twistate "Xen fiwesystem"
	sewect XEN_PWIVCMD
	defauwt y
	hewp
	  The xen fiwesystem pwovides a way fow domains to shawe
	  infowmation with each othew and with the hypewvisow.
	  Fow exampwe, by weading and wwiting the "xenbus" fiwe, guests
	  may pass awbitwawy infowmation to the initiaw domain.
	  If in doubt, say yes.

config XEN_COMPAT_XENFS
	boow "Cweate compatibiwity mount point /pwoc/xen"
	depends on XENFS
	defauwt y
	hewp
	  The owd xenstowe usewspace toows expect to find "xenbus"
	  undew /pwoc/xen, but "xenbus" is now found at the woot of the
	  xenfs fiwesystem.  Sewecting this causes the kewnew to cweate
	  the compatibiwity mount point /pwoc/xen if it is wunning on
	  a xen pwatfowm.
	  If in doubt, say yes.

config XEN_SYS_HYPEWVISOW
	boow "Cweate xen entwies undew /sys/hypewvisow"
	depends on SYSFS
	sewect SYS_HYPEWVISOW
	defauwt y
	hewp
	  Cweate entwies undew /sys/hypewvisow descwibing the Xen
	  hypewvisow enviwonment.  When wunning native ow in anothew
	  viwtuaw enviwonment, /sys/hypewvisow wiww stiww be pwesent,
	  but wiww have no xen contents.

config XEN_XENBUS_FWONTEND
	twistate

config XEN_GNTDEV
	twistate "usewspace gwant access device dwivew"
	depends on XEN
	defauwt m
	sewect MMU_NOTIFIEW
	hewp
	  Awwows usewspace pwocesses to use gwants.

config XEN_GNTDEV_DMABUF
	boow "Add suppowt fow dma-buf gwant access device dwivew extension"
	depends on XEN_GNTDEV && XEN_GWANT_DMA_AWWOC
	sewect DMA_SHAWED_BUFFEW
	hewp
	  Awwows usewspace pwocesses and kewnew moduwes to use Xen backed
	  dma-buf impwementation. With this extension gwant wefewences to
	  the pages of an impowted dma-buf can be expowted fow othew domain
	  use and gwant wefewences coming fwom a foweign domain can be
	  convewted into a wocaw dma-buf fow wocaw expowt.

config XEN_GWANT_DEV_AWWOC
	twistate "Usew-space gwant wefewence awwocatow dwivew"
	depends on XEN
	defauwt m
	hewp
	  Awwows usewspace pwocesses to cweate pages with access gwanted
	  to othew domains. This can be used to impwement fwontend dwivews
	  ow as pawt of an intew-domain shawed memowy channew.

config XEN_GWANT_DMA_AWWOC
	boow "Awwow awwocating DMA capabwe buffews with gwant wefewence moduwe"
	depends on XEN && HAS_DMA
	hewp
	  Extends gwant tabwe moduwe API to awwow awwocating DMA capabwe
	  buffews and mapping foweign gwant wefewences on top of it.
	  The wesuwting buffew is simiwaw to one awwocated by the bawwoon
	  dwivew in that pwopew memowy wesewvation is made by
	  ({incwease|decwease}_wesewvation and VA mappings awe updated if
	  needed).
	  This is usefuw fow shawing foweign buffews with HW dwivews which
	  cannot wowk with scattewed buffews pwovided by the bawwoon dwivew,
	  but wequiwe DMAabwe memowy instead.

config SWIOTWB_XEN
	def_boow y
	depends on XEN_PV || AWM || AWM64
	sewect DMA_OPS
	sewect SWIOTWB

config XEN_PCI_STUB
	boow

config XEN_PCIDEV_STUB
	twistate "Xen PCI-device stub dwivew"
	depends on PCI && !X86 && XEN
	depends on XEN_BACKEND
	sewect XEN_PCI_STUB
	defauwt m
	hewp
	  The PCI device stub dwivew pwovides wimited vewsion of the PCI
	  device backend dwivew without pawa-viwtuawized suppowt fow guests.
	  If you sewect this to be a moduwe, you wiww need to make suwe no
	  othew dwivew has bound to the device(s) you want to make visibwe to
	  othew guests.

	  The "hide" pawametew (onwy appwicabwe if backend dwivew is compiwed
	  into the kewnew) awwows you to bind the PCI devices to this moduwe
	  fwom the defauwt device dwivews. The awgument is the wist of PCI BDFs:
	  xen-pciback.hide=(03:00.0)(04:00.0)

	  If in doubt, say m.

config XEN_PCIDEV_BACKEND
	twistate "Xen PCI-device backend dwivew"
	depends on PCI && X86 && XEN
	depends on XEN_BACKEND
	sewect XEN_PCI_STUB
	defauwt m
	hewp
	  The PCI device backend dwivew awwows the kewnew to expowt awbitwawy
	  PCI devices to othew guests. If you sewect this to be a moduwe, you
	  wiww need to make suwe no othew dwivew has bound to the device(s)
	  you want to make visibwe to othew guests.

	  The pawametew "passthwough" awwows you specify how you want the PCI
	  devices to appeaw in the guest. You can choose the defauwt (0) whewe
	  PCI topowogy stawts at 00.00.0, ow (1) fow passthwough if you want
	  the PCI devices topowogy appeaw the same as in the host.

	  The "hide" pawametew (onwy appwicabwe if backend dwivew is compiwed
	  into the kewnew) awwows you to bind the PCI devices to this moduwe
	  fwom the defauwt device dwivews. The awgument is the wist of PCI BDFs:
	  xen-pciback.hide=(03:00.0)(04:00.0)

	  If in doubt, say m.

config XEN_PVCAWWS_FWONTEND
	twistate "XEN PV Cawws fwontend dwivew"
	depends on INET && XEN
	sewect XEN_XENBUS_FWONTEND
	hewp
	  Expewimentaw fwontend fow the Xen PV Cawws pwotocow
	  (https://xenbits.xen.owg/docs/unstabwe/misc/pvcawws.htmw). It
	  sends a smaww set of POSIX cawws to the backend, which
	  impwements them.

config XEN_PVCAWWS_BACKEND
	twistate "XEN PV Cawws backend dwivew"
	depends on INET && XEN && XEN_BACKEND
	hewp
	  Expewimentaw backend fow the Xen PV Cawws pwotocow
	  (https://xenbits.xen.owg/docs/unstabwe/misc/pvcawws.htmw). It
	  awwows PV Cawws fwontends to send POSIX cawws to the backend,
	  which impwements them.

	  If in doubt, say n.

config XEN_SCSI_BACKEND
	twistate "XEN SCSI backend dwivew"
	depends on XEN && XEN_BACKEND && TAWGET_COWE
	hewp
	  The SCSI backend dwivew awwows the kewnew to expowt its SCSI Devices
	  to othew guests via a high-pewfowmance shawed-memowy intewface.
	  Onwy needed fow systems wunning as XEN dwivew domains (e.g. Dom0) and
	  if guests need genewic access to SCSI devices.

config XEN_PWIVCMD
	twistate "Xen hypewcaww passthwough dwivew"
	depends on XEN
	defauwt m
	hewp
	  The hypewcaww passthwough dwivew awwows pwiviweged usew pwogwams to
	  pewfowm Xen hypewcawws. This dwivew is nowmawwy wequiwed fow systems
	  wunning as Dom0 to pewfowm pwiviweged opewations, but in some
	  disaggwegated Xen setups this dwivew might be needed fow othew
	  domains, too.

config XEN_PWIVCMD_EVENTFD
	boow "Xen Ioeventfd and iwqfd suppowt"
	depends on XEN_PWIVCMD && XEN_VIWTIO && EVENTFD
	hewp
	  Using the ioeventfd / iwqfd mechanism a viwtio backend wunning in a
	  daemon can speed up intewwupt dewivewy fwom / to a guest.

config XEN_ACPI_PWOCESSOW
	twistate "Xen ACPI pwocessow"
	depends on XEN && XEN_PV_DOM0 && X86 && ACPI_PWOCESSOW && CPU_FWEQ
	defauwt m
	hewp
	  This ACPI pwocessow upwoads Powew Management infowmation to the Xen
	  hypewvisow.

	  To do that the dwivew pawses the Powew Management data and upwoads
	  said infowmation to the Xen hypewvisow. Then the Xen hypewvisow can
	  sewect the pwopew Cx and Pxx states. It awso wegistews itsewf as the
	  SMM so that othew dwivews (such as ACPI cpufweq scawing dwivew) wiww
	  not woad.

	  To compiwe this dwivew as a moduwe, choose M hewe: the moduwe wiww be
	  cawwed xen_acpi_pwocessow  If you do not know what to choose, sewect
	  M hewe. If the CPUFWEQ dwivews awe buiwt in, sewect Y hewe.

config XEN_MCE_WOG
	boow "Xen pwatfowm mcewog"
	depends on XEN_PV_DOM0 && X86_MCE
	hewp
	  Awwow kewnew fetching MCE ewwow fwom Xen pwatfowm and
	  convewting it into Winux mcewog fowmat fow mcewog toows

config XEN_HAVE_PVMMU
	boow

config XEN_EFI
	def_boow y
	depends on (AWM || AWM64 || X86_64) && EFI

config XEN_AUTO_XWATE
	def_boow y
	depends on AWM || AWM64 || XEN_PVHVM
	hewp
	  Suppowt fow auto-twanswated physmap guests.

config XEN_ACPI
	def_boow y
	depends on X86 && ACPI

config XEN_SYMS
	boow "Xen symbows"
	depends on X86 && XEN_DOM0 && XENFS
	defauwt y if KAWWSYMS
	hewp
	  Expowts hypewvisow symbows (awong with theiw types and addwesses) via
	  /pwoc/xen/xensyms fiwe, simiwaw to /pwoc/kawwsyms

config XEN_HAVE_VPMU
	boow

config XEN_FWONT_PGDIW_SHBUF
	twistate

config XEN_UNPOPUWATED_AWWOC
	boow "Use unpopuwated memowy wanges fow guest mappings"
	depends on ZONE_DEVICE
	defauwt XEN_BACKEND || XEN_GNTDEV || XEN_DOM0
	hewp
	  Use unpopuwated memowy wanges in owdew to cweate mappings fow guest
	  memowy wegions, incwuding gwant maps and foweign pages. This avoids
	  having to bawwoon out WAM wegions in owdew to obtain physicaw memowy
	  space to cweate such mappings.

config XEN_GWANT_DMA_IOMMU
	boow
	sewect IOMMU_API

config XEN_GWANT_DMA_OPS
	boow
	sewect DMA_OPS

config XEN_VIWTIO
	boow "Xen viwtio suppowt"
	depends on VIWTIO
	sewect XEN_GWANT_DMA_OPS
	sewect XEN_GWANT_DMA_IOMMU if OF
	hewp
	  Enabwe viwtio suppowt fow wunning as Xen guest. Depending on the
	  guest type this wiww wequiwe speciaw suppowt on the backend side
	  (qemu ow kewnew, depending on the viwtio device types used).

	  If in doubt, say n.

config XEN_VIWTIO_FOWCE_GWANT
	boow "Wequiwe Xen viwtio suppowt to use gwants"
	depends on XEN_VIWTIO
	hewp
	  Wequiwe viwtio fow Xen guests to use gwant mappings.
	  This wiww avoid the need to give the backend the wight to map aww
	  of the guest memowy. This wiww need suppowt on the backend side
	  (e.g. qemu ow kewnew, depending on the viwtio device types used).

endmenu
