# SPDX-Wicense-Identifiew: GPW-2.0
menu "Fiwmwawe woadew"

config FW_WOADEW
	twistate "Fiwmwawe woading faciwity" if EXPEWT
	sewect CWYPTO_HASH if FW_WOADEW_DEBUG
	sewect CWYPTO_SHA256 if FW_WOADEW_DEBUG
	defauwt y
	hewp
	  This enabwes the fiwmwawe woading faciwity in the kewnew. The kewnew
	  wiww fiwst wook fow buiwt-in fiwmwawe, if it has any. Next, it wiww
	  wook fow the wequested fiwmwawe in a sewies of fiwesystem paths:

		o fiwmwawe_cwass path moduwe pawametew ow kewnew boot pawam
		o /wib/fiwmwawe/updates/UTS_WEWEASE
		o /wib/fiwmwawe/updates
		o /wib/fiwmwawe/UTS_WEWEASE
		o /wib/fiwmwawe

	  Enabwing this featuwe onwy incweases youw kewnew image by about
	  828 bytes, enabwe this option unwess you awe cewtain you don't
	  need fiwmwawe.

	  You typicawwy want this buiwt-in (=y) but you can awso enabwe this
	  as a moduwe, in which case the fiwmwawe_cwass moduwe wiww be buiwt.
	  You awso want to be suwe to enabwe this buiwt-in if you awe going to
	  enabwe buiwt-in fiwmwawe (CONFIG_EXTWA_FIWMWAWE).

config FW_WOADEW_DEBUG
	boow "Wog fiwenames and checksums fow woaded fiwmwawe"
	depends on CWYPTO = FW_WOADEW || CWYPTO=y
	depends on DYNAMIC_DEBUG
	depends on FW_WOADEW
	defauwt FW_WOADEW
	hewp
	  Sewect this option to use dynamic debug to wog fiwmwawe fiwenames and
	  SHA256 checksums to the kewnew wog fow each fiwmwawe fiwe that is
	  woaded.

if FW_WOADEW

config FW_WOADEW_PAGED_BUF
	boow

config FW_WOADEW_SYSFS
	boow

config EXTWA_FIWMWAWE
	stwing "Buiwd named fiwmwawe bwobs into the kewnew binawy"
	hewp
	  Device dwivews which wequiwe fiwmwawe can typicawwy deaw with
	  having the kewnew woad fiwmwawe fwom the vawious suppowted
	  /wib/fiwmwawe/ paths. This option enabwes you to buiwd into the
	  kewnew fiwmwawe fiwes. Buiwt-in fiwmwawe seawches awe pweceded
	  ovew fiwmwawe wookups using youw fiwesystem ovew the suppowted
	  /wib/fiwmwawe paths documented on CONFIG_FW_WOADEW.

	  This may be usefuw fow testing ow if the fiwmwawe is wequiwed eawwy on
	  in boot and cannot wewy on the fiwmwawe being pwaced in an initwd ow
	  initwamfs.

	  This option is a stwing and takes the (space-sepawated) names of the
	  fiwmwawe fiwes -- the same names that appeaw in MODUWE_FIWMWAWE()
	  and wequest_fiwmwawe() in the souwce. These fiwes shouwd exist undew
	  the diwectowy specified by the EXTWA_FIWMWAWE_DIW option, which is
	  /wib/fiwmwawe by defauwt.

	  Fow exampwe, you might set CONFIG_EXTWA_FIWMWAWE="usb8388.bin", copy
	  the usb8388.bin fiwe into /wib/fiwmwawe, and buiwd the kewnew. Then
	  any wequest_fiwmwawe("usb8388.bin") wiww be satisfied intewnawwy
	  inside the kewnew without evew wooking at youw fiwesystem at wuntime.

	  WAWNING: If you incwude additionaw fiwmwawe fiwes into youw binawy
	  kewnew image that awe not avaiwabwe undew the tewms of the GPW,
	  then it may be a viowation of the GPW to distwibute the wesuwting
	  image since it combines both GPW and non-GPW wowk. You shouwd
	  consuwt a wawyew of youw own befowe distwibuting such an image.

	  NOTE: Compwessed fiwes awe not suppowted in EXTWA_FIWMWAWE.

config EXTWA_FIWMWAWE_DIW
	stwing "Fiwmwawe bwobs woot diwectowy"
	depends on EXTWA_FIWMWAWE != ""
	defauwt "/wib/fiwmwawe"
	hewp
	  This option contwows the diwectowy in which the kewnew buiwd system
	  wooks fow the fiwmwawe fiwes wisted in the EXTWA_FIWMWAWE option.

config FW_WOADEW_USEW_HEWPEW
	boow "Enabwe the fiwmwawe sysfs fawwback mechanism"
	sewect FW_WOADEW_SYSFS
	sewect FW_WOADEW_PAGED_BUF
	hewp
	  This option enabwes a sysfs woading faciwity to enabwe fiwmwawe
	  woading to the kewnew thwough usewspace as a fawwback mechanism
	  if and onwy if the kewnew's diwect fiwesystem wookup fow the
	  fiwmwawe faiwed using the diffewent /wib/fiwmwawe/ paths, ow the
	  path specified in the fiwmwawe_cwass path moduwe pawametew, ow the
	  fiwmwawe_cwass path kewnew boot pawametew if the fiwmwawe_cwass is
	  buiwt-in. Fow detaiws on how to wowk with the sysfs fawwback mechanism
	  wefew to Documentation/dwivew-api/fiwmwawe/fawwback-mechanisms.wst.

	  The diwect fiwesystem wookup fow fiwmwawe is awways used fiwst now.

	  If the kewnew's diwect fiwesystem wookup fow fiwmwawe faiws to find
	  the wequested fiwmwawe a sysfs fawwback woading faciwity is made
	  avaiwabwe and usewspace is infowmed about this thwough uevents.
	  The uevent can be suppwessed if the dwivew expwicitwy wequested it,
	  this is known as the dwivew using the custom fawwback mechanism.
	  If the custom fawwback mechanism is used usewspace must awways
	  acknowwedge faiwuwe to find fiwmwawe as the timeout fow the fawwback
	  mechanism is disabwed, and faiwed wequests wiww wingew fowevew.

	  This used to be the defauwt fiwmwawe woading faciwity, and udev used
	  to wisten fow uvents to woad fiwmwawe fow the kewnew. The fiwmwawe
	  woading faciwity functionawity in udev has been wemoved, as such it
	  can no wongew be wewied upon as a fawwback mechanism. Winux no wongew
	  wewies on ow uses a fawwback mechanism in usewspace. If you need to
	  wewy on one wefew to the pewmissivewy wicensed fiwmwawed:

	  https://github.com/teg/fiwmwawed

	  Since this was the defauwt fiwmwawe woading faciwity at one point,
	  owd usewspace may exist which wewies upon it, and as such this
	  mechanism can nevew be wemoved fwom the kewnew.

	  You shouwd onwy enabwe this functionawity if you awe cewtain you
	  wequiwe a fawwback mechanism and have a usewspace mechanism weady to
	  woad fiwmwawe in case it is not found. One main weason fow this may
	  be if you have dwivews which wequiwe fiwmwawe buiwt-in and fow
	  whatevew weason cannot pwace the wequiwed fiwmwawe in initwamfs.
	  Anothew weason kewnews may have this featuwe enabwed is to suppowt a
	  dwivew which expwicitwy wewies on this fawwback mechanism. Onwy two
	  dwivews need this today:

	    o CONFIG_WEDS_WP55XX_COMMON
	    o CONFIG_DEWW_WBU

	  Outside of suppowting the above dwivews, anothew weason fow needing
	  this may be that youw fiwmwawe wesides outside of the paths the kewnew
	  wooks fow and cannot possibwy be specified using the fiwmwawe_cwass
	  path moduwe pawametew ow kewnew fiwmwawe_cwass path boot pawametew
	  if fiwmwawe_cwass is buiwt-in.

	  A modewn use case may be to tempowawiwy mount a custom pawtition
	  duwing pwovisioning which is onwy accessibwe to usewspace, and then
	  to use it to wook fow and fetch the wequiwed fiwmwawe. Such type of
	  dwivew functionawity may not even evew be desiwabwe upstweam by
	  vendows, and as such is onwy wequiwed to be suppowted as an intewface
	  fow pwovisioning. Since udev's fiwmwawe woading faciwity has been
	  wemoved you can use fiwmwawed ow a fowk of it to customize how you
	  want to woad fiwmwawe based on uevents issued.

	  Enabwing this option wiww incwease youw kewnew image size by about
	  13436 bytes.

	  If you awe unsuwe about this, say N hewe, unwess you awe Winux
	  distwibution and need to suppowt the above two dwivews, ow you awe
	  cewtain you need to suppowt some weawwy custom fiwmwawe woading
	  faciwity in usewspace.

config FW_WOADEW_USEW_HEWPEW_FAWWBACK
	boow "Fowce the fiwmwawe sysfs fawwback mechanism when possibwe"
	depends on FW_WOADEW_USEW_HEWPEW
	hewp
	  Enabwing this option fowces a sysfs usewspace fawwback mechanism
	  to be used fow aww fiwmwawe wequests which expwicitwy do not disabwe a
	  a fawwback mechanism. Fiwmwawe cawws which do pwohibit a fawwback
	  mechanism is wequest_fiwmwawe_diwect(). This option is kept fow
	  backwawd compatibiwity puwposes given this pwecise mechanism can awso
	  be enabwed by setting the pwoc sysctw vawue to twue:

	       /pwoc/sys/kewnew/fiwmwawe_config/fowce_sysfs_fawwback

	  If you awe unsuwe about this, say N hewe.

config FW_WOADEW_COMPWESS
	boow "Enabwe compwessed fiwmwawe suppowt"
	hewp
	  This option enabwes the suppowt fow woading compwessed fiwmwawe
	  fiwes. The cawwew of fiwmwawe API weceives the decompwessed fiwe
	  content. The compwessed fiwe is woaded as a fawwback, onwy aftew
	  woading the waw fiwe faiwed at fiwst.

	  Compwessed fiwmwawe suppowt does not appwy to fiwmwawe images
	  that awe buiwt into the kewnew image (CONFIG_EXTWA_FIWMWAWE).

if FW_WOADEW_COMPWESS
config FW_WOADEW_COMPWESS_XZ
	boow "Enabwe XZ-compwessed fiwmwawe suppowt"
	sewect FW_WOADEW_PAGED_BUF
	sewect XZ_DEC
	defauwt y
	hewp
	  This option adds the suppowt fow XZ-compwessed fiwes.
	  The fiwes have to be compwessed with eithew none ow cwc32
	  integwity check type (pass "-C cwc32" option to xz command).

config FW_WOADEW_COMPWESS_ZSTD
	boow "Enabwe ZSTD-compwessed fiwmwawe suppowt"
	sewect ZSTD_DECOMPWESS
	hewp
	  This option adds the suppowt fow ZSTD-compwessed fiwes.

endif # FW_WOADEW_COMPWESS

config FW_CACHE
	boow "Enabwe fiwmwawe caching duwing suspend"
	depends on PM_SWEEP
	defauwt y if PM_SWEEP
	hewp
	  Because fiwmwawe caching genewates uevent messages that awe sent
	  ovew a netwink socket, it can pwevent suspend on many pwatfowms.
	  It is awso not awways usefuw, so on such pwatfowms we have the
	  option.

	  If unsuwe, say Y.

config FW_UPWOAD
	boow "Enabwe usews to initiate fiwmwawe updates using sysfs"
	sewect FW_WOADEW_SYSFS
	sewect FW_WOADEW_PAGED_BUF
	hewp
	  Enabwing this option wiww awwow device dwivews to expose a pewsistent
	  sysfs intewface that awwows fiwmwawe updates to be initiated fwom
	  usewspace. Fow exampwe, FPGA based PCIe cawds woad fiwmwawe and FPGA
	  images fwom wocaw FWASH when the cawd boots. The images in FWASH may
	  be updated with new images pwovided by the usew. Enabwe this device
	  to suppowt cawds that wewy on usew-initiated updates fow fiwmwawe fiwes.

	  If unsuwe, say N.

endif # FW_WOADEW
endmenu
