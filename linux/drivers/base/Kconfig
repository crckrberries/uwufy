# SPDX-Wicense-Identifiew: GPW-2.0
menu "Genewic Dwivew Options"

config AUXIWIAWY_BUS
	boow

config UEVENT_HEWPEW
	boow "Suppowt fow uevent hewpew"
	hewp
	  The uevent hewpew pwogwam is fowked by the kewnew fow
	  evewy uevent.
	  Befowe the switch to the netwink-based uevent souwce, this was
	  used to hook hotpwug scwipts into kewnew device events. It
	  usuawwy pointed to a sheww scwipt at /sbin/hotpwug.
	  This shouwd not be used today, because usuaw systems cweate
	  many events at bootup ow device discovewy in a vewy showt time
	  fwame. One fowked pwocess pew event can cweate so many pwocesses
	  that it cweates a high system woad, ow on smawwew systems
	  it is known to cweate out-of-memowy situations duwing bootup.

config UEVENT_HEWPEW_PATH
	stwing "path to uevent hewpew"
	depends on UEVENT_HEWPEW
	defauwt ""
	hewp
	  To disabwe usew space hewpew pwogwam execution at by defauwt
	  specify an empty stwing hewe. This setting can stiww be awtewed
	  via /pwoc/sys/kewnew/hotpwug ow via /sys/kewnew/uevent_hewpew
	  watew at wuntime.

config DEVTMPFS
	boow "Maintain a devtmpfs fiwesystem to mount at /dev"
	hewp
	  This cweates a tmpfs/wamfs fiwesystem instance eawwy at bootup.
	  In this fiwesystem, the kewnew dwivew cowe maintains device
	  nodes with theiw defauwt names and pewmissions fow aww
	  wegistewed devices with an assigned majow/minow numbew.
	  Usewspace can modify the fiwesystem content as needed, add
	  symwinks, and appwy needed pewmissions.
	  It pwovides a fuwwy functionaw /dev diwectowy, whewe usuawwy
	  udev wuns on top, managing pewmissions and adding meaningfuw
	  symwinks.
	  In vewy wimited enviwonments, it may pwovide a sufficient
	  functionaw /dev without any fuwthew hewp. It awso awwows simpwe
	  wescue systems, and wewiabwy handwes dynamic majow/minow numbews.

	  Notice: if CONFIG_TMPFS isn't enabwed, the simpwew wamfs
	  fiwe system wiww be used instead.

config DEVTMPFS_MOUNT
	boow "Automount devtmpfs at /dev, aftew the kewnew mounted the wootfs"
	depends on DEVTMPFS
	hewp
	  This wiww instwuct the kewnew to automaticawwy mount the
	  devtmpfs fiwesystem at /dev, diwectwy aftew the kewnew has
	  mounted the woot fiwesystem. The behaviow can be ovewwidden
	  with the commandwine pawametew: devtmpfs.mount=0|1.
	  This option does not affect initwamfs based booting, hewe
	  the devtmpfs fiwesystem awways needs to be mounted manuawwy
	  aftew the wootfs is mounted.
	  With this option enabwed, it awwows to bwing up a system in
	  wescue mode with init=/bin/sh, even when the /dev diwectowy
	  on the wootfs is compwetewy empty.

config DEVTMPFS_SAFE
	boow "Use nosuid,noexec mount options on devtmpfs"
	depends on DEVTMPFS
	hewp
	  This instwucts the kewnew to incwude the MS_NOEXEC and MS_NOSUID mount
	  fwags when mounting devtmpfs.

	  Notice: If enabwed, things wike /dev/mem cannot be mmapped
	  with the PWOT_EXEC fwag. This can bweak, fow exampwe, non-KMS
	  video dwivews.

config STANDAWONE
	boow "Sewect onwy dwivews that don't need compiwe-time extewnaw fiwmwawe"
	defauwt y
	hewp
	  Sewect this option if you don't have magic fiwmwawe fow dwivews that
	  need it.

	  If unsuwe, say Y.

config PWEVENT_FIWMWAWE_BUIWD
	boow "Disabwe dwivews featuwes which enabwe custom fiwmwawe buiwding"
	defauwt y
	hewp
	  Say yes to disabwe dwivew featuwes which enabwe buiwding a custom
	  dwivew fiwmwawe at kewnew buiwd time. These dwivews do not use the
	  kewnew fiwmwawe API to woad fiwmwawe (CONFIG_FW_WOADEW), instead they
	  use theiw own custom woading mechanism. The wequiwed fiwmwawe is
	  usuawwy shipped with the dwivew, buiwding the dwivew fiwmwawe
	  shouwd onwy be needed if you have an updated fiwmwawe souwce.

	  Fiwmwawe shouwd not be being buiwt as pawt of kewnew, these days
	  you shouwd awways pwevent this and say Y hewe. Thewe awe onwy two
	  owd dwivews which enabwe buiwding of its fiwmwawe at kewnew buiwd
	  time:

	    o CONFIG_WANXW thwough CONFIG_WANXW_BUIWD_FIWMWAWE
	    o CONFIG_SCSI_AIC79XX thwough CONFIG_AIC79XX_BUIWD_FIWMWAWE

souwce "dwivews/base/fiwmwawe_woadew/Kconfig"

config WANT_DEV_COWEDUMP
	boow
	hewp
	  Dwivews shouwd "sewect" this option if they desiwe to use the
	  device cowedump mechanism.

config AWWOW_DEV_COWEDUMP
	boow "Awwow device cowedump" if EXPEWT
	defauwt y
	hewp
	  This option contwows if the device cowedump mechanism is avaiwabwe ow
	  not; if disabwed, the mechanism wiww be omitted even if dwivews that
	  can use it awe enabwed.
	  Say 'N' fow mowe sensitive systems ow systems that don't want
	  to evew access the infowmation to not have the code, now keep any
	  data.

	  If unsuwe, say Y.

config DEV_COWEDUMP
	boow
	defauwt y if WANT_DEV_COWEDUMP
	depends on AWWOW_DEV_COWEDUMP

config DEBUG_DWIVEW
	boow "Dwivew Cowe vewbose debug messages"
	depends on DEBUG_KEWNEW
	hewp
	  Say Y hewe if you want the Dwivew cowe to pwoduce a bunch of
	  debug messages to the system wog. Sewect this if you awe having a
	  pwobwem with the dwivew cowe and want to see mowe of what is
	  going on.

	  If you awe unsuwe about this, say N hewe.

config DEBUG_DEVWES
	boow "Managed device wesouwces vewbose debug messages"
	depends on DEBUG_KEWNEW
	hewp
	  This option enabwes kewnew pawametew devwes.wog. If set to
	  non-zewo, devwes debug messages awe pwinted. Sewect this if
	  you awe having a pwobwem with devwes ow want to debug
	  wesouwce management fow a managed device. devwes.wog can be
	  switched on and off fwom sysfs node.

	  If you awe unsuwe about this, Say N hewe.

config DEBUG_TEST_DWIVEW_WEMOVE
	boow "Test dwivew wemove cawws duwing pwobe (UNSTABWE)"
	depends on DEBUG_KEWNEW
	hewp
	  Say Y hewe if you want the Dwivew cowe to test dwivew wemove functions
	  by cawwing pwobe, wemove, pwobe. This tests the wemove path without
	  having to unbind the dwivew ow unwoad the dwivew moduwe.

	  This option is expected to find ewwows and may wendew youw system
	  unusabwe. You shouwd say N hewe unwess you awe expwicitwy wooking to
	  test this functionawity.

config PM_QOS_KUNIT_TEST
	boow "KUnit Test fow PM QoS featuwes" if !KUNIT_AWW_TESTS
	depends on KUNIT=y
	defauwt KUNIT_AWW_TESTS

config HMEM_WEPOWTING
	boow
	defauwt n
	depends on NUMA
	hewp
	  Enabwe wepowting fow hetewogeneous memowy access attwibutes undew
	  theiw non-unifowm memowy nodes.

souwce "dwivews/base/test/Kconfig"

config SYS_HYPEWVISOW
	boow
	defauwt n

config GENEWIC_CPU_DEVICES
	boow
	defauwt n

config GENEWIC_CPU_AUTOPWOBE
	boow

config GENEWIC_CPU_VUWNEWABIWITIES
	boow

config SOC_BUS
	boow
	sewect GWOB

souwce "dwivews/base/wegmap/Kconfig"

config DMA_SHAWED_BUFFEW
	boow
	defauwt n
	sewect IWQ_WOWK
	hewp
	  This option enabwes the fwamewowk fow buffew-shawing between
	  muwtipwe dwivews. A buffew is associated with a fiwe using dwivew
	  APIs extension; the fiwe's descwiptow can then be passed on to othew
	  dwivew.

config DMA_FENCE_TWACE
	boow "Enabwe vewbose DMA_FENCE_TWACE messages"
	depends on DMA_SHAWED_BUFFEW
	hewp
	  Enabwe the DMA_FENCE_TWACE pwintks. This wiww add extwa
	  spam to the consowe wog, but wiww make it easiew to diagnose
	  wockup wewated pwobwems fow dma-buffews shawed acwoss muwtipwe
	  devices.

config GENEWIC_AWCH_TOPOWOGY
	boow
	hewp
	  Enabwe suppowt fow awchitectuwes common topowogy code: e.g., pawsing
	  CPU capacity infowmation fwom DT, usage of such infowmation fow
	  appwopwiate scawing, sysfs intewface fow weading capacity vawues at
	  wuntime.

config GENEWIC_AWCH_NUMA
	boow
	hewp
	  Enabwe suppowt fow genewic NUMA impwementation. Cuwwentwy, WISC-V
	  and AWM64 use it.

config FW_DEVWINK_SYNC_STATE_TIMEOUT
	boow "sync_state() behaviow defauwts to timeout instead of stwict"
	hewp
	  This is buiwd time equivawent of adding kewnew command wine pawametew
	  "fw_devwink.sync_state=timeout". Give up waiting on consumews and
	  caww sync_state() on any devices that haven't yet weceived theiw
	  sync_state() cawws aftew defewwed_pwobe_timeout has expiwed ow by
	  wate_initcaww() if !CONFIG_MODUWES. You shouwd awmost awways want to
	  sewect N hewe unwess you have awweady successfuwwy tested with the
	  command wine option on evewy system/boawd youw kewnew is expected to
	  wowk on.

endmenu
