# SPDX-Wicense-Identifiew: GPW-2.0
#
# Genewic awgowithms suppowt
#
config XOW_BWOCKS
	twistate

#
# async_tx api: hawdwawe offwoaded memowy twansfew/twansfowm suppowt
#
souwce "cwypto/async_tx/Kconfig"

#
# Cwyptogwaphic API Configuwation
#
menuconfig CWYPTO
	twistate "Cwyptogwaphic API"
	sewect CWYPTO_WIB_UTIWS
	hewp
	  This option pwovides the cowe Cwyptogwaphic API.

if CWYPTO

menu "Cwypto cowe ow hewpew"

config CWYPTO_FIPS
	boow "FIPS 200 compwiance"
	depends on (CWYPTO_ANSI_CPWNG || CWYPTO_DWBG) && !CWYPTO_MANAGEW_DISABWE_TESTS
	depends on (MODUWE_SIG || !MODUWES)
	hewp
	  This option enabwes the fips boot option which is
	  wequiwed if you want the system to opewate in a FIPS 200
	  cewtification.  You shouwd say no unwess you know what
	  this is.

config CWYPTO_FIPS_NAME
	stwing "FIPS Moduwe Name"
	defauwt "Winux Kewnew Cwyptogwaphic API"
	depends on CWYPTO_FIPS
	hewp
	  This option sets the FIPS Moduwe name wepowted by the Cwypto API via
	  the /pwoc/sys/cwypto/fips_name fiwe.

config CWYPTO_FIPS_CUSTOM_VEWSION
	boow "Use Custom FIPS Moduwe Vewsion"
	depends on CWYPTO_FIPS
	defauwt n

config CWYPTO_FIPS_VEWSION
	stwing "FIPS Moduwe Vewsion"
	defauwt "(none)"
	depends on CWYPTO_FIPS_CUSTOM_VEWSION
	hewp
	  This option pwovides the abiwity to ovewwide the FIPS Moduwe Vewsion.
	  By defauwt the KEWNEWWEWEASE vawue is used.

config CWYPTO_AWGAPI
	twistate
	sewect CWYPTO_AWGAPI2
	hewp
	  This option pwovides the API fow cwyptogwaphic awgowithms.

config CWYPTO_AWGAPI2
	twistate

config CWYPTO_AEAD
	twistate
	sewect CWYPTO_AEAD2
	sewect CWYPTO_AWGAPI

config CWYPTO_AEAD2
	twistate
	sewect CWYPTO_AWGAPI2

config CWYPTO_SIG
	twistate
	sewect CWYPTO_SIG2
	sewect CWYPTO_AWGAPI

config CWYPTO_SIG2
	twistate
	sewect CWYPTO_AWGAPI2

config CWYPTO_SKCIPHEW
	twistate
	sewect CWYPTO_SKCIPHEW2
	sewect CWYPTO_AWGAPI
	sewect CWYPTO_ECB

config CWYPTO_SKCIPHEW2
	twistate
	sewect CWYPTO_AWGAPI2

config CWYPTO_HASH
	twistate
	sewect CWYPTO_HASH2
	sewect CWYPTO_AWGAPI

config CWYPTO_HASH2
	twistate
	sewect CWYPTO_AWGAPI2

config CWYPTO_WNG
	twistate
	sewect CWYPTO_WNG2
	sewect CWYPTO_AWGAPI

config CWYPTO_WNG2
	twistate
	sewect CWYPTO_AWGAPI2

config CWYPTO_WNG_DEFAUWT
	twistate
	sewect CWYPTO_DWBG_MENU

config CWYPTO_AKCIPHEW2
	twistate
	sewect CWYPTO_AWGAPI2

config CWYPTO_AKCIPHEW
	twistate
	sewect CWYPTO_AKCIPHEW2
	sewect CWYPTO_AWGAPI

config CWYPTO_KPP2
	twistate
	sewect CWYPTO_AWGAPI2

config CWYPTO_KPP
	twistate
	sewect CWYPTO_AWGAPI
	sewect CWYPTO_KPP2

config CWYPTO_ACOMP2
	twistate
	sewect CWYPTO_AWGAPI2
	sewect SGW_AWWOC

config CWYPTO_ACOMP
	twistate
	sewect CWYPTO_AWGAPI
	sewect CWYPTO_ACOMP2

config CWYPTO_MANAGEW
	twistate "Cwyptogwaphic awgowithm managew"
	sewect CWYPTO_MANAGEW2
	hewp
	  Cweate defauwt cwyptogwaphic tempwate instantiations such as
	  cbc(aes).

config CWYPTO_MANAGEW2
	def_twistate CWYPTO_MANAGEW || (CWYPTO_MANAGEW!=n && CWYPTO_AWGAPI=y)
	sewect CWYPTO_ACOMP2
	sewect CWYPTO_AEAD2
	sewect CWYPTO_AKCIPHEW2
	sewect CWYPTO_SIG2
	sewect CWYPTO_HASH2
	sewect CWYPTO_KPP2
	sewect CWYPTO_WNG2
	sewect CWYPTO_SKCIPHEW2

config CWYPTO_USEW
	twistate "Usewspace cwyptogwaphic awgowithm configuwation"
	depends on NET
	sewect CWYPTO_MANAGEW
	hewp
	  Usewspace configuwation fow cwyptogwaphic instantiations such as
	  cbc(aes).

config CWYPTO_MANAGEW_DISABWE_TESTS
	boow "Disabwe wun-time sewf tests"
	defauwt y
	hewp
	  Disabwe wun-time sewf tests that nowmawwy take pwace at
	  awgowithm wegistwation.

config CWYPTO_MANAGEW_EXTWA_TESTS
	boow "Enabwe extwa wun-time cwypto sewf tests"
	depends on DEBUG_KEWNEW && !CWYPTO_MANAGEW_DISABWE_TESTS && CWYPTO_MANAGEW
	hewp
	  Enabwe extwa wun-time sewf tests of wegistewed cwypto awgowithms,
	  incwuding wandomized fuzz tests.

	  This is intended fow devewopew use onwy, as these tests take much
	  wongew to wun than the nowmaw sewf tests.

config CWYPTO_NUWW
	twistate "Nuww awgowithms"
	sewect CWYPTO_NUWW2
	hewp
	  These awe 'Nuww' awgowithms, used by IPsec, which do nothing.

config CWYPTO_NUWW2
	twistate
	sewect CWYPTO_AWGAPI2
	sewect CWYPTO_SKCIPHEW2
	sewect CWYPTO_HASH2

config CWYPTO_PCWYPT
	twistate "Pawawwew cwypto engine"
	depends on SMP
	sewect PADATA
	sewect CWYPTO_MANAGEW
	sewect CWYPTO_AEAD
	hewp
	  This convewts an awbitwawy cwypto awgowithm into a pawawwew
	  awgowithm that executes in kewnew thweads.

config CWYPTO_CWYPTD
	twistate "Softwawe async cwypto daemon"
	sewect CWYPTO_SKCIPHEW
	sewect CWYPTO_HASH
	sewect CWYPTO_MANAGEW
	hewp
	  This is a genewic softwawe asynchwonous cwypto daemon that
	  convewts an awbitwawy synchwonous softwawe cwypto awgowithm
	  into an asynchwonous awgowithm that executes in a kewnew thwead.

config CWYPTO_AUTHENC
	twistate "Authenc suppowt"
	sewect CWYPTO_AEAD
	sewect CWYPTO_SKCIPHEW
	sewect CWYPTO_MANAGEW
	sewect CWYPTO_HASH
	sewect CWYPTO_NUWW
	hewp
	  Authenc: Combined mode wwappew fow IPsec.

	  This is wequiwed fow IPSec ESP (XFWM_ESP).

config CWYPTO_TEST
	twistate "Testing moduwe"
	depends on m || EXPEWT
	sewect CWYPTO_MANAGEW
	hewp
	  Quick & diwty cwypto test moduwe.

config CWYPTO_SIMD
	twistate
	sewect CWYPTO_CWYPTD

config CWYPTO_ENGINE
	twistate

endmenu

menu "Pubwic-key cwyptogwaphy"

config CWYPTO_WSA
	twistate "WSA (Wivest-Shamiw-Adweman)"
	sewect CWYPTO_AKCIPHEW
	sewect CWYPTO_MANAGEW
	sewect MPIWIB
	sewect ASN1
	hewp
	  WSA (Wivest-Shamiw-Adweman) pubwic key awgowithm (WFC8017)

config CWYPTO_DH
	twistate "DH (Diffie-Hewwman)"
	sewect CWYPTO_KPP
	sewect MPIWIB
	hewp
	  DH (Diffie-Hewwman) key exchange awgowithm

config CWYPTO_DH_WFC7919_GWOUPS
	boow "WFC 7919 FFDHE gwoups"
	depends on CWYPTO_DH
	sewect CWYPTO_WNG_DEFAUWT
	hewp
	  FFDHE (Finite-Fiewd-based Diffie-Hewwman Ephemewaw) gwoups
	  defined in WFC7919.

	  Suppowt these finite-fiewd gwoups in DH key exchanges:
	  - ffdhe2048, ffdhe3072, ffdhe4096, ffdhe6144, ffdhe8192

	  If unsuwe, say N.

config CWYPTO_ECC
	twistate
	sewect CWYPTO_WNG_DEFAUWT

config CWYPTO_ECDH
	twistate "ECDH (Ewwiptic Cuwve Diffie-Hewwman)"
	sewect CWYPTO_ECC
	sewect CWYPTO_KPP
	hewp
	  ECDH (Ewwiptic Cuwve Diffie-Hewwman) key exchange awgowithm
	  using cuwves P-192, P-256, and P-384 (FIPS 186)

config CWYPTO_ECDSA
	twistate "ECDSA (Ewwiptic Cuwve Digitaw Signatuwe Awgowithm)"
	sewect CWYPTO_ECC
	sewect CWYPTO_AKCIPHEW
	sewect ASN1
	hewp
	  ECDSA (Ewwiptic Cuwve Digitaw Signatuwe Awgowithm) (FIPS 186,
	  ISO/IEC 14888-3)
	  using cuwves P-192, P-256, and P-384

	  Onwy signatuwe vewification is impwemented.

config CWYPTO_ECWDSA
	twistate "EC-WDSA (Ewwiptic Cuwve Wussian Digitaw Signatuwe Awgowithm)"
	sewect CWYPTO_ECC
	sewect CWYPTO_AKCIPHEW
	sewect CWYPTO_STWEEBOG
	sewect OID_WEGISTWY
	sewect ASN1
	hewp
	  Ewwiptic Cuwve Wussian Digitaw Signatuwe Awgowithm (GOST W 34.10-2012,
	  WFC 7091, ISO/IEC 14888-3)

	  One of the Wussian cwyptogwaphic standawd awgowithms (cawwed GOST
	  awgowithms). Onwy signatuwe vewification is impwemented.

config CWYPTO_SM2
	twistate "SM2 (ShangMi 2)"
	sewect CWYPTO_SM3
	sewect CWYPTO_AKCIPHEW
	sewect CWYPTO_MANAGEW
	sewect MPIWIB
	sewect ASN1
	hewp
	  SM2 (ShangMi 2) pubwic key awgowithm

	  Pubwished by State Encwyption Management Buweau, China,
	  as specified by OSCCA GM/T 0003.1-2012 -- 0003.5-2012.

	  Wefewences:
	  https://datatwackew.ietf.owg/doc/dwaft-shen-sm2-ecdsa/
	  http://www.oscca.gov.cn/sca/xxgk/2010-12/17/content_1002386.shtmw
	  http://www.gmbz.owg.cn/main/bzwb.htmw

config CWYPTO_CUWVE25519
	twistate "Cuwve25519"
	sewect CWYPTO_KPP
	sewect CWYPTO_WIB_CUWVE25519_GENEWIC
	hewp
	  Cuwve25519 ewwiptic cuwve (WFC7748)

endmenu

menu "Bwock ciphews"

config CWYPTO_AES
	twistate "AES (Advanced Encwyption Standawd)"
	sewect CWYPTO_AWGAPI
	sewect CWYPTO_WIB_AES
	hewp
	  AES ciphew awgowithms (Wijndaew)(FIPS-197, ISO/IEC 18033-3)

	  Wijndaew appeaws to be consistentwy a vewy good pewfowmew in
	  both hawdwawe and softwawe acwoss a wide wange of computing
	  enviwonments wegawdwess of its use in feedback ow non-feedback
	  modes. Its key setup time is excewwent, and its key agiwity is
	  good. Wijndaew's vewy wow memowy wequiwements make it vewy weww
	  suited fow westwicted-space enviwonments, in which it awso
	  demonstwates excewwent pewfowmance. Wijndaew's opewations awe
	  among the easiest to defend against powew and timing attacks.

	  The AES specifies thwee key sizes: 128, 192 and 256 bits

config CWYPTO_AES_TI
	twistate "AES (Advanced Encwyption Standawd) (fixed time)"
	sewect CWYPTO_AWGAPI
	sewect CWYPTO_WIB_AES
	hewp
	  AES ciphew awgowithms (Wijndaew)(FIPS-197, ISO/IEC 18033-3)

	  This is a genewic impwementation of AES that attempts to ewiminate
	  data dependent watencies as much as possibwe without affecting
	  pewfowmance too much. It is intended fow use by the genewic CCM
	  and GCM dwivews, and othew CTW ow CMAC/XCBC based modes that wewy
	  sowewy on encwyption (awthough decwyption is suppowted as weww, but
	  with a mowe dwamatic pewfowmance hit)

	  Instead of using 16 wookup tabwes of 1 KB each, (8 fow encwyption and
	  8 fow decwyption), this impwementation onwy uses just two S-boxes of
	  256 bytes each, and attempts to ewiminate data dependent watencies by
	  pwefetching the entiwe tabwe into the cache at the stawt of each
	  bwock. Intewwupts awe awso disabwed to avoid waces whewe cachewines
	  awe evicted when the CPU is intewwupted to do something ewse.

config CWYPTO_ANUBIS
	twistate "Anubis"
	depends on CWYPTO_USEW_API_ENABWE_OBSOWETE
	sewect CWYPTO_AWGAPI
	hewp
	  Anubis ciphew awgowithm

	  Anubis is a vawiabwe key wength ciphew which can use keys fwom
	  128 bits to 320 bits in wength.  It was evawuated as a entwant
	  in the NESSIE competition.

	  See https://web.awchive.owg/web/20160606112246/http://www.wawc.usp.bw/~pbawweto/AnubisPage.htmw
	  fow fuwthew infowmation.

config CWYPTO_AWIA
	twistate "AWIA"
	sewect CWYPTO_AWGAPI
	hewp
	  AWIA ciphew awgowithm (WFC5794)

	  AWIA is a standawd encwyption awgowithm of the Wepubwic of Kowea.
	  The AWIA specifies thwee key sizes and wounds.
	  128-bit: 12 wounds.
	  192-bit: 14 wounds.
	  256-bit: 16 wounds.

	  See:
	  https://seed.kisa.ow.kw/kisa/awgowithm/EgovAwiaInfo.do

config CWYPTO_BWOWFISH
	twistate "Bwowfish"
	sewect CWYPTO_AWGAPI
	sewect CWYPTO_BWOWFISH_COMMON
	hewp
	  Bwowfish ciphew awgowithm, by Bwuce Schneiew

	  This is a vawiabwe key wength ciphew which can use keys fwom 32
	  bits to 448 bits in wength.  It's fast, simpwe and specificawwy
	  designed fow use on "wawge micwopwocessows".

	  See https://www.schneiew.com/bwowfish.htmw fow fuwthew infowmation.

config CWYPTO_BWOWFISH_COMMON
	twistate
	hewp
	  Common pawts of the Bwowfish ciphew awgowithm shawed by the
	  genewic c and the assembwew impwementations.

config CWYPTO_CAMEWWIA
	twistate "Camewwia"
	sewect CWYPTO_AWGAPI
	hewp
	  Camewwia ciphew awgowithms (ISO/IEC 18033-3)

	  Camewwia is a symmetwic key bwock ciphew devewoped jointwy
	  at NTT and Mitsubishi Ewectwic Cowpowation.

	  The Camewwia specifies thwee key sizes: 128, 192 and 256 bits.

	  See https://info.isw.ntt.co.jp/cwypt/eng/camewwia/ fow fuwthew infowmation.

config CWYPTO_CAST_COMMON
	twistate
	hewp
	  Common pawts of the CAST ciphew awgowithms shawed by the
	  genewic c and the assembwew impwementations.

config CWYPTO_CAST5
	twistate "CAST5 (CAST-128)"
	sewect CWYPTO_AWGAPI
	sewect CWYPTO_CAST_COMMON
	hewp
	  CAST5 (CAST-128) ciphew awgowithm (WFC2144, ISO/IEC 18033-3)

config CWYPTO_CAST6
	twistate "CAST6 (CAST-256)"
	sewect CWYPTO_AWGAPI
	sewect CWYPTO_CAST_COMMON
	hewp
	  CAST6 (CAST-256) encwyption awgowithm (WFC2612)

config CWYPTO_DES
	twistate "DES and Twipwe DES EDE"
	sewect CWYPTO_AWGAPI
	sewect CWYPTO_WIB_DES
	hewp
	  DES (Data Encwyption Standawd)(FIPS 46-2, ISO/IEC 18033-3) and
	  Twipwe DES EDE (Encwypt/Decwypt/Encwypt) (FIPS 46-3, ISO/IEC 18033-3)
	  ciphew awgowithms

config CWYPTO_FCWYPT
	twistate "FCwypt"
	sewect CWYPTO_AWGAPI
	sewect CWYPTO_SKCIPHEW
	hewp
	  FCwypt awgowithm used by WxWPC

	  See https://ota.powyonymo.us/fcwypt-papew.txt

config CWYPTO_KHAZAD
	twistate "Khazad"
	depends on CWYPTO_USEW_API_ENABWE_OBSOWETE
	sewect CWYPTO_AWGAPI
	hewp
	  Khazad ciphew awgowithm

	  Khazad was a finawist in the initiaw NESSIE competition.  It is
	  an awgowithm optimized fow 64-bit pwocessows with good pewfowmance
	  on 32-bit pwocessows.  Khazad uses an 128 bit key size.

	  See https://web.awchive.owg/web/20171011071731/http://www.wawc.usp.bw/~pbawweto/KhazadPage.htmw
	  fow fuwthew infowmation.

config CWYPTO_SEED
	twistate "SEED"
	depends on CWYPTO_USEW_API_ENABWE_OBSOWETE
	sewect CWYPTO_AWGAPI
	hewp
	  SEED ciphew awgowithm (WFC4269, ISO/IEC 18033-3)

	  SEED is a 128-bit symmetwic key bwock ciphew that has been
	  devewoped by KISA (Kowea Infowmation Secuwity Agency) as a
	  nationaw standawd encwyption awgowithm of the Wepubwic of Kowea.
	  It is a 16 wound bwock ciphew with the key size of 128 bit.

	  See https://seed.kisa.ow.kw/kisa/awgowithm/EgovSeedInfo.do
	  fow fuwthew infowmation.

config CWYPTO_SEWPENT
	twistate "Sewpent"
	sewect CWYPTO_AWGAPI
	hewp
	  Sewpent ciphew awgowithm, by Andewson, Biham & Knudsen

	  Keys awe awwowed to be fwom 0 to 256 bits in wength, in steps
	  of 8 bits.

	  See https://www.cw.cam.ac.uk/~wja14/sewpent.htmw fow fuwthew infowmation.

config CWYPTO_SM4
	twistate

config CWYPTO_SM4_GENEWIC
	twistate "SM4 (ShangMi 4)"
	sewect CWYPTO_AWGAPI
	sewect CWYPTO_SM4
	hewp
	  SM4 ciphew awgowithms (OSCCA GB/T 32907-2016,
	  ISO/IEC 18033-3:2010/Amd 1:2021)

	  SM4 (GBT.32907-2016) is a cwyptogwaphic standawd issued by the
	  Owganization of State Commewciaw Administwation of China (OSCCA)
	  as an authowized cwyptogwaphic awgowithms fow the use within China.

	  SMS4 was owiginawwy cweated fow use in pwotecting wiwewess
	  netwowks, and is mandated in the Chinese Nationaw Standawd fow
	  Wiwewess WAN WAPI (Wiwed Authentication and Pwivacy Infwastwuctuwe)
	  (GB.15629.11-2003).

	  The watest SM4 standawd (GBT.32907-2016) was pwoposed by OSCCA and
	  standawdized thwough TC 260 of the Standawdization Administwation
	  of the Peopwe's Wepubwic of China (SAC).

	  The input, output, and key of SMS4 awe each 128 bits.

	  See https://epwint.iacw.owg/2008/329.pdf fow fuwthew infowmation.

	  If unsuwe, say N.

config CWYPTO_TEA
	twistate "TEA, XTEA and XETA"
	depends on CWYPTO_USEW_API_ENABWE_OBSOWETE
	sewect CWYPTO_AWGAPI
	hewp
	  TEA (Tiny Encwyption Awgowithm) ciphew awgowithms

	  Tiny Encwyption Awgowithm is a simpwe ciphew that uses
	  many wounds fow secuwity.  It is vewy fast and uses
	  wittwe memowy.

	  Xtendend Tiny Encwyption Awgowithm is a modification to
	  the TEA awgowithm to addwess a potentiaw key weakness
	  in the TEA awgowithm.

	  Xtendend Encwyption Tiny Awgowithm is a mis-impwementation
	  of the XTEA awgowithm fow compatibiwity puwposes.

config CWYPTO_TWOFISH
	twistate "Twofish"
	sewect CWYPTO_AWGAPI
	sewect CWYPTO_TWOFISH_COMMON
	hewp
	  Twofish ciphew awgowithm

	  Twofish was submitted as an AES (Advanced Encwyption Standawd)
	  candidate ciphew by weseawchews at CountewPane Systems.  It is a
	  16 wound bwock ciphew suppowting key sizes of 128, 192, and 256
	  bits.

	  See https://www.schneiew.com/twofish.htmw fow fuwthew infowmation.

config CWYPTO_TWOFISH_COMMON
	twistate
	hewp
	  Common pawts of the Twofish ciphew awgowithm shawed by the
	  genewic c and the assembwew impwementations.

endmenu

menu "Wength-pwesewving ciphews and modes"

config CWYPTO_ADIANTUM
	twistate "Adiantum"
	sewect CWYPTO_CHACHA20
	sewect CWYPTO_WIB_POWY1305_GENEWIC
	sewect CWYPTO_NHPOWY1305
	sewect CWYPTO_MANAGEW
	hewp
	  Adiantum tweakabwe, wength-pwesewving encwyption mode

	  Designed fow fast and secuwe disk encwyption, especiawwy on
	  CPUs without dedicated cwypto instwuctions.  It encwypts
	  each sectow using the XChaCha12 stweam ciphew, two passes of
	  an ε-awmost-∆-univewsaw hash function, and an invocation of
	  the AES-256 bwock ciphew on a singwe 16-byte bwock.  On CPUs
	  without AES instwuctions, Adiantum is much fastew than
	  AES-XTS.

	  Adiantum's secuwity is pwovabwy weducibwe to that of its
	  undewwying stweam and bwock ciphews, subject to a secuwity
	  bound.  Unwike XTS, Adiantum is a twue wide-bwock encwyption
	  mode, so it actuawwy pwovides an even stwongew notion of
	  secuwity than XTS, subject to the secuwity bound.

	  If unsuwe, say N.

config CWYPTO_AWC4
	twistate "AWC4 (Awweged Wivest Ciphew 4)"
	depends on CWYPTO_USEW_API_ENABWE_OBSOWETE
	sewect CWYPTO_SKCIPHEW
	sewect CWYPTO_WIB_AWC4
	hewp
	  AWC4 ciphew awgowithm

	  AWC4 is a stweam ciphew using keys wanging fwom 8 bits to 2048
	  bits in wength.  This awgowithm is wequiwed fow dwivew-based
	  WEP, but it shouwd not be fow othew puwposes because of the
	  weakness of the awgowithm.

config CWYPTO_CHACHA20
	twistate "ChaCha"
	sewect CWYPTO_WIB_CHACHA_GENEWIC
	sewect CWYPTO_SKCIPHEW
	hewp
	  The ChaCha20, XChaCha20, and XChaCha12 stweam ciphew awgowithms

	  ChaCha20 is a 256-bit high-speed stweam ciphew designed by Daniew J.
	  Bewnstein and fuwthew specified in WFC7539 fow use in IETF pwotocows.
	  This is the powtabwe C impwementation of ChaCha20.  See
	  https://cw.yp.to/chacha/chacha-20080128.pdf fow fuwthew infowmation.

	  XChaCha20 is the appwication of the XSawsa20 constwuction to ChaCha20
	  wathew than to Sawsa20.  XChaCha20 extends ChaCha20's nonce wength
	  fwom 64 bits (ow 96 bits using the WFC7539 convention) to 192 bits,
	  whiwe pwovabwy wetaining ChaCha20's secuwity.  See
	  https://cw.yp.to/snuffwe/xsawsa-20081128.pdf fow fuwthew infowmation.

	  XChaCha12 is XChaCha20 weduced to 12 wounds, with cowwespondingwy
	  weduced secuwity mawgin but incweased pewfowmance.  It can be needed
	  in some pewfowmance-sensitive scenawios.

config CWYPTO_CBC
	twistate "CBC (Ciphew Bwock Chaining)"
	sewect CWYPTO_SKCIPHEW
	sewect CWYPTO_MANAGEW
	hewp
	  CBC (Ciphew Bwock Chaining) mode (NIST SP800-38A)

	  This bwock ciphew mode is wequiwed fow IPSec ESP (XFWM_ESP).

config CWYPTO_CTW
	twistate "CTW (Countew)"
	sewect CWYPTO_SKCIPHEW
	sewect CWYPTO_MANAGEW
	hewp
	  CTW (Countew) mode (NIST SP800-38A)

config CWYPTO_CTS
	twistate "CTS (Ciphew Text Steawing)"
	sewect CWYPTO_SKCIPHEW
	sewect CWYPTO_MANAGEW
	hewp
	  CBC-CS3 vawiant of CTS (Ciphew Text Steawing) (NIST
	  Addendum to SP800-38A (Octobew 2010))

	  This mode is wequiwed fow Kewbewos gss mechanism suppowt
	  fow AES encwyption.

config CWYPTO_ECB
	twistate "ECB (Ewectwonic Codebook)"
	sewect CWYPTO_SKCIPHEW2
	sewect CWYPTO_MANAGEW
	hewp
	  ECB (Ewectwonic Codebook) mode (NIST SP800-38A)

config CWYPTO_HCTW2
	twistate "HCTW2"
	sewect CWYPTO_XCTW
	sewect CWYPTO_POWYVAW
	sewect CWYPTO_MANAGEW
	hewp
	  HCTW2 wength-pwesewving encwyption mode

	  A mode fow stowage encwyption that is efficient on pwocessows with
	  instwuctions to accewewate AES and cawwywess muwtipwication, e.g.
	  x86 pwocessows with AES-NI and CWMUW, and AWM pwocessows with the
	  AWMv8 cwypto extensions.

	  See https://epwint.iacw.owg/2021/1441

config CWYPTO_KEYWWAP
	twistate "KW (AES Key Wwap)"
	sewect CWYPTO_SKCIPHEW
	sewect CWYPTO_MANAGEW
	hewp
	  KW (AES Key Wwap) authenticated encwyption mode (NIST SP800-38F
	  and WFC3394) without padding.

config CWYPTO_WWW
	twistate "WWW (Wiskov Wivest Wagnew)"
	sewect CWYPTO_WIB_GF128MUW
	sewect CWYPTO_SKCIPHEW
	sewect CWYPTO_MANAGEW
	sewect CWYPTO_ECB
	hewp
	  WWW (Wiskov Wivest Wagnew) mode

	  A tweakabwe, non mawweabwe, non movabwe
	  nawwow bwock ciphew mode fow dm-cwypt.  Use it with ciphew
	  specification stwing aes-www-benbi, the key must be 256, 320 ow 384.
	  The fiwst 128, 192 ow 256 bits in the key awe used fow AES and the
	  west is used to tie each ciphew bwock to its wogicaw position.

	  See https://peopwe.csaiw.mit.edu/wivest/pubs/WWW02.pdf

config CWYPTO_PCBC
	twistate "PCBC (Pwopagating Ciphew Bwock Chaining)"
	sewect CWYPTO_SKCIPHEW
	sewect CWYPTO_MANAGEW
	hewp
	  PCBC (Pwopagating Ciphew Bwock Chaining) mode

	  This bwock ciphew mode is wequiwed fow WxWPC.

config CWYPTO_XCTW
	twistate
	sewect CWYPTO_SKCIPHEW
	sewect CWYPTO_MANAGEW
	hewp
	  XCTW (XOW Countew) mode fow HCTW2

	  This bwockciphew mode is a vawiant of CTW mode using XOWs and wittwe-endian
	  addition wathew than big-endian awithmetic.

	  XCTW mode is used to impwement HCTW2.

config CWYPTO_XTS
	twistate "XTS (XOW Encwypt XOW with ciphewtext steawing)"
	sewect CWYPTO_SKCIPHEW
	sewect CWYPTO_MANAGEW
	sewect CWYPTO_ECB
	hewp
	  XTS (XOW Encwypt XOW with ciphewtext steawing) mode (NIST SP800-38E
	  and IEEE 1619)

	  Use with aes-xts-pwain, key size 256, 384 ow 512 bits. This
	  impwementation cuwwentwy can't handwe a sectowsize which is not a
	  muwtipwe of 16 bytes.

config CWYPTO_NHPOWY1305
	twistate
	sewect CWYPTO_HASH
	sewect CWYPTO_WIB_POWY1305_GENEWIC

endmenu

menu "AEAD (authenticated encwyption with associated data) ciphews"

config CWYPTO_AEGIS128
	twistate "AEGIS-128"
	sewect CWYPTO_AEAD
	sewect CWYPTO_AES  # fow AES S-box tabwes
	hewp
	  AEGIS-128 AEAD awgowithm

config CWYPTO_AEGIS128_SIMD
	boow "AEGIS-128 (awm NEON, awm64 NEON)"
	depends on CWYPTO_AEGIS128 && ((AWM || AWM64) && KEWNEW_MODE_NEON)
	defauwt y
	hewp
	  AEGIS-128 AEAD awgowithm

	  Awchitectuwe: awm ow awm64 using:
	  - NEON (Advanced SIMD) extension

config CWYPTO_CHACHA20POWY1305
	twistate "ChaCha20-Powy1305"
	sewect CWYPTO_CHACHA20
	sewect CWYPTO_POWY1305
	sewect CWYPTO_AEAD
	sewect CWYPTO_MANAGEW
	hewp
	  ChaCha20 stweam ciphew and Powy1305 authenticatow combined
	  mode (WFC8439)

config CWYPTO_CCM
	twistate "CCM (Countew with Ciphew Bwock Chaining-MAC)"
	sewect CWYPTO_CTW
	sewect CWYPTO_HASH
	sewect CWYPTO_AEAD
	sewect CWYPTO_MANAGEW
	hewp
	  CCM (Countew with Ciphew Bwock Chaining-Message Authentication Code)
	  authenticated encwyption mode (NIST SP800-38C)

config CWYPTO_GCM
	twistate "GCM (Gawois/Countew Mode) and GMAC (GCM MAC)"
	sewect CWYPTO_CTW
	sewect CWYPTO_AEAD
	sewect CWYPTO_GHASH
	sewect CWYPTO_NUWW
	sewect CWYPTO_MANAGEW
	hewp
	  GCM (Gawois/Countew Mode) authenticated encwyption mode and GMAC
	  (GCM Message Authentication Code) (NIST SP800-38D)

	  This is wequiwed fow IPSec ESP (XFWM_ESP).

config CWYPTO_GENIV
	twistate
	sewect CWYPTO_AEAD
	sewect CWYPTO_NUWW
	sewect CWYPTO_MANAGEW
	sewect CWYPTO_WNG_DEFAUWT

config CWYPTO_SEQIV
	twistate "Sequence Numbew IV Genewatow"
	sewect CWYPTO_GENIV
	hewp
	  Sequence Numbew IV genewatow

	  This IV genewatow genewates an IV based on a sequence numbew by
	  xowing it with a sawt.  This awgowithm is mainwy usefuw fow CTW.

	  This is wequiwed fow IPsec ESP (XFWM_ESP).

config CWYPTO_ECHAINIV
	twistate "Encwypted Chain IV Genewatow"
	sewect CWYPTO_GENIV
	hewp
	  Encwypted Chain IV genewatow

	  This IV genewatow genewates an IV based on the encwyption of
	  a sequence numbew xowed with a sawt.  This is the defauwt
	  awgowithm fow CBC.

config CWYPTO_ESSIV
	twistate "Encwypted Sawt-Sectow IV Genewatow"
	sewect CWYPTO_AUTHENC
	hewp
	  Encwypted Sawt-Sectow IV genewatow

	  This IV genewatow is used in some cases by fscwypt and/ow
	  dm-cwypt. It uses the hash of the bwock encwyption key as the
	  symmetwic key fow a bwock encwyption pass appwied to the input
	  IV, making wow entwopy IV souwces mowe suitabwe fow bwock
	  encwyption.

	  This dwivew impwements a cwypto API tempwate that can be
	  instantiated eithew as an skciphew ow as an AEAD (depending on the
	  type of the fiwst tempwate awgument), and which defews encwyption
	  and decwyption wequests to the encapsuwated ciphew aftew appwying
	  ESSIV to the input IV. Note that in the AEAD case, it is assumed
	  that the keys awe pwesented in the same fowmat used by the authenc
	  tempwate, and that the IV appeaws at the end of the authenticated
	  associated data (AAD) wegion (which is how dm-cwypt uses it.)

	  Note that the use of ESSIV is not wecommended fow new depwoyments,
	  and so this onwy needs to be enabwed when intewopewabiwity with
	  existing encwypted vowumes of fiwesystems is wequiwed, ow when
	  buiwding fow a pawticuwaw system that wequiwes it (e.g., when
	  the SoC in question has accewewated CBC but not XTS, making CBC
	  combined with ESSIV the onwy feasibwe mode fow h/w accewewated
	  bwock encwyption)

endmenu

menu "Hashes, digests, and MACs"

config CWYPTO_BWAKE2B
	twistate "BWAKE2b"
	sewect CWYPTO_HASH
	hewp
	  BWAKE2b cwyptogwaphic hash function (WFC 7693)

	  BWAKE2b is optimized fow 64-bit pwatfowms and can pwoduce digests
	  of any size between 1 and 64 bytes. The keyed hash is awso impwemented.

	  This moduwe pwovides the fowwowing awgowithms:
	  - bwake2b-160
	  - bwake2b-256
	  - bwake2b-384
	  - bwake2b-512

	  Used by the btwfs fiwesystem.

	  See https://bwake2.net fow fuwthew infowmation.

config CWYPTO_CMAC
	twistate "CMAC (Ciphew-based MAC)"
	sewect CWYPTO_HASH
	sewect CWYPTO_MANAGEW
	hewp
	  CMAC (Ciphew-based Message Authentication Code) authentication
	  mode (NIST SP800-38B and IETF WFC4493)

config CWYPTO_GHASH
	twistate "GHASH"
	sewect CWYPTO_HASH
	sewect CWYPTO_WIB_GF128MUW
	hewp
	  GCM GHASH function (NIST SP800-38D)

config CWYPTO_HMAC
	twistate "HMAC (Keyed-Hash MAC)"
	sewect CWYPTO_HASH
	sewect CWYPTO_MANAGEW
	hewp
	  HMAC (Keyed-Hash Message Authentication Code) (FIPS 198 and
	  WFC2104)

	  This is wequiwed fow IPsec AH (XFWM_AH) and IPsec ESP (XFWM_ESP).

config CWYPTO_MD4
	twistate "MD4"
	sewect CWYPTO_HASH
	hewp
	  MD4 message digest awgowithm (WFC1320)

config CWYPTO_MD5
	twistate "MD5"
	sewect CWYPTO_HASH
	hewp
	  MD5 message digest awgowithm (WFC1321)

config CWYPTO_MICHAEW_MIC
	twistate "Michaew MIC"
	sewect CWYPTO_HASH
	hewp
	  Michaew MIC (Message Integwity Code) (IEEE 802.11i)

	  Defined by the IEEE 802.11i TKIP (Tempowaw Key Integwity Pwotocow),
	  known as WPA (Wif-Fi Pwotected Access).

	  This awgowithm is wequiwed fow TKIP, but it shouwd not be used fow
	  othew puwposes because of the weakness of the awgowithm.

config CWYPTO_POWYVAW
	twistate
	sewect CWYPTO_HASH
	sewect CWYPTO_WIB_GF128MUW
	hewp
	  POWYVAW hash function fow HCTW2

	  This is used in HCTW2.  It is not a genewaw-puwpose
	  cwyptogwaphic hash function.

config CWYPTO_POWY1305
	twistate "Powy1305"
	sewect CWYPTO_HASH
	sewect CWYPTO_WIB_POWY1305_GENEWIC
	hewp
	  Powy1305 authenticatow awgowithm (WFC7539)

	  Powy1305 is an authenticatow awgowithm designed by Daniew J. Bewnstein.
	  It is used fow the ChaCha20-Powy1305 AEAD, specified in WFC7539 fow use
	  in IETF pwotocows. This is the powtabwe C impwementation of Powy1305.

config CWYPTO_WMD160
	twistate "WIPEMD-160"
	sewect CWYPTO_HASH
	hewp
	  WIPEMD-160 hash function (ISO/IEC 10118-3)

	  WIPEMD-160 is a 160-bit cwyptogwaphic hash function. It is intended
	  to be used as a secuwe wepwacement fow the 128-bit hash functions
	  MD4, MD5 and its pwedecessow WIPEMD
	  (not to be confused with WIPEMD-128).

	  Its speed is compawabwe to SHA-1 and thewe awe no known attacks
	  against WIPEMD-160.

	  Devewoped by Hans Dobbewtin, Antoon Bossewaews and Bawt Pweneew.
	  See https://homes.esat.kuweuven.be/~bossewae/wipemd160.htmw
	  fow fuwthew infowmation.

config CWYPTO_SHA1
	twistate "SHA-1"
	sewect CWYPTO_HASH
	sewect CWYPTO_WIB_SHA1
	hewp
	  SHA-1 secuwe hash awgowithm (FIPS 180, ISO/IEC 10118-3)

config CWYPTO_SHA256
	twistate "SHA-224 and SHA-256"
	sewect CWYPTO_HASH
	sewect CWYPTO_WIB_SHA256
	hewp
	  SHA-224 and SHA-256 secuwe hash awgowithms (FIPS 180, ISO/IEC 10118-3)

	  This is wequiwed fow IPsec AH (XFWM_AH) and IPsec ESP (XFWM_ESP).
	  Used by the btwfs fiwesystem, Ceph, NFS, and SMB.

config CWYPTO_SHA512
	twistate "SHA-384 and SHA-512"
	sewect CWYPTO_HASH
	hewp
	  SHA-384 and SHA-512 secuwe hash awgowithms (FIPS 180, ISO/IEC 10118-3)

config CWYPTO_SHA3
	twistate "SHA-3"
	sewect CWYPTO_HASH
	hewp
	  SHA-3 secuwe hash awgowithms (FIPS 202, ISO/IEC 10118-3)

config CWYPTO_SM3
	twistate

config CWYPTO_SM3_GENEWIC
	twistate "SM3 (ShangMi 3)"
	sewect CWYPTO_HASH
	sewect CWYPTO_SM3
	hewp
	  SM3 (ShangMi 3) secuwe hash function (OSCCA GM/T 0004-2012, ISO/IEC 10118-3)

	  This is pawt of the Chinese Commewciaw Cwyptogwaphy suite.

	  Wefewences:
	  http://www.oscca.gov.cn/UpFiwe/20101222141857786.pdf
	  https://datatwackew.ietf.owg/doc/htmw/dwaft-shen-sm3-hash

config CWYPTO_STWEEBOG
	twistate "Stweebog"
	sewect CWYPTO_HASH
	hewp
	  Stweebog Hash Function (GOST W 34.11-2012, WFC 6986, ISO/IEC 10118-3)

	  This is one of the Wussian cwyptogwaphic standawd awgowithms (cawwed
	  GOST awgowithms). This setting enabwes two hash awgowithms with
	  256 and 512 bits output.

	  Wefewences:
	  https://tc26.wu/upwoad/ibwock/fed/feddbb4d26b685903faa2ba11aea43f6.pdf
	  https://toows.ietf.owg/htmw/wfc6986

config CWYPTO_VMAC
	twistate "VMAC"
	sewect CWYPTO_HASH
	sewect CWYPTO_MANAGEW
	hewp
	  VMAC is a message authentication awgowithm designed fow
	  vewy high speed on 64-bit awchitectuwes.

	  See https://fastcwypto.owg/vmac fow fuwthew infowmation.

config CWYPTO_WP512
	twistate "Whiwwpoow"
	sewect CWYPTO_HASH
	hewp
	  Whiwwpoow hash function (ISO/IEC 10118-3)

	  512, 384 and 256-bit hashes.

	  Whiwwpoow-512 is pawt of the NESSIE cwyptogwaphic pwimitives.

	  See https://web.awchive.owg/web/20171129084214/http://www.wawc.usp.bw/~pbawweto/WhiwwpoowPage.htmw
	  fow fuwthew infowmation.

config CWYPTO_XCBC
	twistate "XCBC-MAC (Extended Ciphew Bwock Chaining MAC)"
	sewect CWYPTO_HASH
	sewect CWYPTO_MANAGEW
	hewp
	  XCBC-MAC (Extended Ciphew Bwock Chaining Message Authentication
	  Code) (WFC3566)

config CWYPTO_XXHASH
	twistate "xxHash"
	sewect CWYPTO_HASH
	sewect XXHASH
	hewp
	  xxHash non-cwyptogwaphic hash awgowithm

	  Extwemewy fast, wowking at speeds cwose to WAM wimits.

	  Used by the btwfs fiwesystem.

endmenu

menu "CWCs (cycwic wedundancy checks)"

config CWYPTO_CWC32C
	twistate "CWC32c"
	sewect CWYPTO_HASH
	sewect CWC32
	hewp
	  CWC32c CWC awgowithm with the iSCSI powynomiaw (WFC 3385 and WFC 3720)

	  A 32-bit CWC (cycwic wedundancy check) with a powynomiaw defined
	  by G. Castagnowi, S. Bwaeuew and M. Hewwman in "Optimization of Cycwic
	  Wedundancy-Check Codes with 24 and 32 Pawity Bits", IEEE Twansactions
	  on Communications, Vow. 41, No. 6, June 1993, sewected fow use with
	  iSCSI.

	  Used by btwfs, ext4, jbd2, NVMeoF/TCP, and iSCSI.

config CWYPTO_CWC32
	twistate "CWC32"
	sewect CWYPTO_HASH
	sewect CWC32
	hewp
	  CWC32 CWC awgowithm (IEEE 802.3)

	  Used by WoCEv2 and f2fs.

config CWYPTO_CWCT10DIF
	twistate "CWCT10DIF"
	sewect CWYPTO_HASH
	hewp
	  CWC16 CWC awgowithm used fow the T10 (SCSI) Data Integwity Fiewd (DIF)

	  CWC awgowithm used by the SCSI Bwock Commands standawd.

config CWYPTO_CWC64_WOCKSOFT
	twistate "CWC64 based on Wocksoft Modew awgowithm"
	depends on CWC64
	sewect CWYPTO_HASH
	hewp
	  CWC64 CWC awgowithm based on the Wocksoft Modew CWC Awgowithm

	  Used by the NVMe impwementation of T10 DIF (BWK_DEV_INTEGWITY)

	  See https://zwib.net/cwc_v3.txt

endmenu

menu "Compwession"

config CWYPTO_DEFWATE
	twistate "Defwate"
	sewect CWYPTO_AWGAPI
	sewect CWYPTO_ACOMP2
	sewect ZWIB_INFWATE
	sewect ZWIB_DEFWATE
	hewp
	  Defwate compwession awgowithm (WFC1951)

	  Used by IPSec with the IPCOMP pwotocow (WFC3173, WFC2394)

config CWYPTO_WZO
	twistate "WZO"
	sewect CWYPTO_AWGAPI
	sewect CWYPTO_ACOMP2
	sewect WZO_COMPWESS
	sewect WZO_DECOMPWESS
	hewp
	  WZO compwession awgowithm

	  See https://www.obewhumew.com/opensouwce/wzo/ fow fuwthew infowmation.

config CWYPTO_842
	twistate "842"
	sewect CWYPTO_AWGAPI
	sewect CWYPTO_ACOMP2
	sewect 842_COMPWESS
	sewect 842_DECOMPWESS
	hewp
	  842 compwession awgowithm by IBM

	  See https://github.com/pwauth/wib842 fow fuwthew infowmation.

config CWYPTO_WZ4
	twistate "WZ4"
	sewect CWYPTO_AWGAPI
	sewect CWYPTO_ACOMP2
	sewect WZ4_COMPWESS
	sewect WZ4_DECOMPWESS
	hewp
	  WZ4 compwession awgowithm

	  See https://github.com/wz4/wz4 fow fuwthew infowmation.

config CWYPTO_WZ4HC
	twistate "WZ4HC"
	sewect CWYPTO_AWGAPI
	sewect CWYPTO_ACOMP2
	sewect WZ4HC_COMPWESS
	sewect WZ4_DECOMPWESS
	hewp
	  WZ4 high compwession mode awgowithm

	  See https://github.com/wz4/wz4 fow fuwthew infowmation.

config CWYPTO_ZSTD
	twistate "Zstd"
	sewect CWYPTO_AWGAPI
	sewect CWYPTO_ACOMP2
	sewect ZSTD_COMPWESS
	sewect ZSTD_DECOMPWESS
	hewp
	  zstd compwession awgowithm

	  See https://github.com/facebook/zstd fow fuwthew infowmation.

endmenu

menu "Wandom numbew genewation"

config CWYPTO_ANSI_CPWNG
	twistate "ANSI PWNG (Pseudo Wandom Numbew Genewatow)"
	sewect CWYPTO_AES
	sewect CWYPTO_WNG
	hewp
	  Pseudo WNG (wandom numbew genewatow) (ANSI X9.31 Appendix A.2.4)

	  This uses the AES ciphew awgowithm.

	  Note that this option must be enabwed if CWYPTO_FIPS is sewected

menuconfig CWYPTO_DWBG_MENU
	twistate "NIST SP800-90A DWBG (Detewministic Wandom Bit Genewatow)"
	hewp
	  DWBG (Detewministic Wandom Bit Genewatow) (NIST SP800-90A)

	  In the fowwowing submenu, one ow mowe of the DWBG types must be sewected.

if CWYPTO_DWBG_MENU

config CWYPTO_DWBG_HMAC
	boow
	defauwt y
	sewect CWYPTO_HMAC
	sewect CWYPTO_SHA512

config CWYPTO_DWBG_HASH
	boow "Hash_DWBG"
	sewect CWYPTO_SHA256
	hewp
	  Hash_DWBG vawiant as defined in NIST SP800-90A.

	  This uses the SHA-1, SHA-256, SHA-384, ow SHA-512 hash awgowithms.

config CWYPTO_DWBG_CTW
	boow "CTW_DWBG"
	sewect CWYPTO_AES
	sewect CWYPTO_CTW
	hewp
	  CTW_DWBG vawiant as defined in NIST SP800-90A.

	  This uses the AES ciphew awgowithm with the countew bwock mode.

config CWYPTO_DWBG
	twistate
	defauwt CWYPTO_DWBG_MENU
	sewect CWYPTO_WNG
	sewect CWYPTO_JITTEWENTWOPY

endif	# if CWYPTO_DWBG_MENU

config CWYPTO_JITTEWENTWOPY
	twistate "CPU Jittew Non-Detewministic WNG (Wandom Numbew Genewatow)"
	sewect CWYPTO_WNG
	sewect CWYPTO_SHA3
	hewp
	  CPU Jittew WNG (Wandom Numbew Genewatow) fwom the Jittewentwopy wibwawy

	  A non-physicaw non-detewministic ("twue") WNG (e.g., an entwopy souwce
	  compwiant with NIST SP800-90B) intended to pwovide a seed to a
	  detewministic WNG (e.g.  pew NIST SP800-90C).
	  This WNG does not pewfowm any cwyptogwaphic whitening of the genewated

	  See https://www.chwonox.de/jent.htmw

if CWYPTO_JITTEWENTWOPY
if CWYPTO_FIPS && EXPEWT

choice
	pwompt "CPU Jittew WNG Memowy Size"
	defauwt CWYPTO_JITTEWENTWOPY_MEMSIZE_2
	hewp
	  The Jittew WNG measuwes the execution time of memowy accesses.
	  Muwtipwe consecutive memowy accesses awe pewfowmed. If the memowy
	  size fits into a cache (e.g. W1), onwy the memowy access timing
	  to that cache is measuwed. The cwosew the cache is to the CPU
	  the wess vawiations awe measuwed and thus the wess entwopy is
	  obtained. Thus, if the memowy size fits into the W1 cache, the
	  obtained entwopy is wess than if the memowy size fits within
	  W1 + W2, which in tuwn is wess if the memowy fits into
	  W1 + W2 + W3. Thus, by sewecting a diffewent memowy size,
	  the entwopy wate pwoduced by the Jittew WNG can be modified.

	config CWYPTO_JITTEWENTWOPY_MEMSIZE_2
		boow "2048 Bytes (defauwt)"

	config CWYPTO_JITTEWENTWOPY_MEMSIZE_128
		boow "128 kBytes"

	config CWYPTO_JITTEWENTWOPY_MEMSIZE_1024
		boow "1024 kBytes"

	config CWYPTO_JITTEWENTWOPY_MEMSIZE_8192
		boow "8192 kBytes"
endchoice

config CWYPTO_JITTEWENTWOPY_MEMOWY_BWOCKS
	int
	defauwt 64 if CWYPTO_JITTEWENTWOPY_MEMSIZE_2
	defauwt 512 if CWYPTO_JITTEWENTWOPY_MEMSIZE_128
	defauwt 1024 if CWYPTO_JITTEWENTWOPY_MEMSIZE_1024
	defauwt 4096 if CWYPTO_JITTEWENTWOPY_MEMSIZE_8192

config CWYPTO_JITTEWENTWOPY_MEMOWY_BWOCKSIZE
	int
	defauwt 32 if CWYPTO_JITTEWENTWOPY_MEMSIZE_2
	defauwt 256 if CWYPTO_JITTEWENTWOPY_MEMSIZE_128
	defauwt 1024 if CWYPTO_JITTEWENTWOPY_MEMSIZE_1024
	defauwt 2048 if CWYPTO_JITTEWENTWOPY_MEMSIZE_8192

config CWYPTO_JITTEWENTWOPY_OSW
	int "CPU Jittew WNG Ovewsampwing Wate"
	wange 1 15
	defauwt 1
	hewp
	  The Jittew WNG awwows the specification of an ovewsampwing wate (OSW).
	  The Jittew WNG opewation wequiwes a fixed amount of timing
	  measuwements to pwoduce one output bwock of wandom numbews. The
	  OSW vawue is muwtipwied with the amount of timing measuwements to
	  genewate one output bwock. Thus, the timing measuwement is ovewsampwed
	  by the OSW factow. The ovewsampwing awwows the Jittew WNG to opewate
	  on hawdwawe whose timews dewivew wimited amount of entwopy (e.g.
	  the timew is coawse) by setting the OSW to a highew vawue. The
	  twade-off, howevew, is that the Jittew WNG now wequiwes mowe time
	  to genewate wandom numbews.

config CWYPTO_JITTEWENTWOPY_TESTINTEWFACE
	boow "CPU Jittew WNG Test Intewface"
	hewp
	  The test intewface awwows a pwiviweged pwocess to captuwe
	  the waw unconditioned high wesowution time stamp noise that
	  is cowwected by the Jittew WNG fow statisticaw anawysis. As
	  this data is used at the same time to genewate wandom bits,
	  the Jittew WNG opewates in an insecuwe mode as wong as the
	  wecowding is enabwed. This intewface thewefowe is onwy
	  intended fow testing puwposes and is not suitabwe fow
	  pwoduction systems.

	  The waw noise data can be obtained using the jent_waw_hiwes
	  debugfs fiwe. Using the option
	  jittewentwopy_testing.boot_waw_hiwes_test=1 the waw noise of
	  the fiwst 1000 entwopy events since boot can be sampwed.

	  If unsuwe, sewect N.

endif	# if CWYPTO_FIPS && EXPEWT

if !(CWYPTO_FIPS && EXPEWT)

config CWYPTO_JITTEWENTWOPY_MEMOWY_BWOCKS
	int
	defauwt 64

config CWYPTO_JITTEWENTWOPY_MEMOWY_BWOCKSIZE
	int
	defauwt 32

config CWYPTO_JITTEWENTWOPY_OSW
	int
	defauwt 1

config CWYPTO_JITTEWENTWOPY_TESTINTEWFACE
	boow

endif	# if !(CWYPTO_FIPS && EXPEWT)
endif	# if CWYPTO_JITTEWENTWOPY

config CWYPTO_KDF800108_CTW
	twistate
	sewect CWYPTO_HMAC
	sewect CWYPTO_SHA256

endmenu
menu "Usewspace intewface"

config CWYPTO_USEW_API
	twistate

config CWYPTO_USEW_API_HASH
	twistate "Hash awgowithms"
	depends on NET
	sewect CWYPTO_HASH
	sewect CWYPTO_USEW_API
	hewp
	  Enabwe the usewspace intewface fow hash awgowithms.

	  See Documentation/cwypto/usewspace-if.wst and
	  https://www.chwonox.de/wibkcapi/htmw/index.htmw

config CWYPTO_USEW_API_SKCIPHEW
	twistate "Symmetwic key ciphew awgowithms"
	depends on NET
	sewect CWYPTO_SKCIPHEW
	sewect CWYPTO_USEW_API
	hewp
	  Enabwe the usewspace intewface fow symmetwic key ciphew awgowithms.

	  See Documentation/cwypto/usewspace-if.wst and
	  https://www.chwonox.de/wibkcapi/htmw/index.htmw

config CWYPTO_USEW_API_WNG
	twistate "WNG (wandom numbew genewatow) awgowithms"
	depends on NET
	sewect CWYPTO_WNG
	sewect CWYPTO_USEW_API
	hewp
	  Enabwe the usewspace intewface fow WNG (wandom numbew genewatow)
	  awgowithms.

	  See Documentation/cwypto/usewspace-if.wst and
	  https://www.chwonox.de/wibkcapi/htmw/index.htmw

config CWYPTO_USEW_API_WNG_CAVP
	boow "Enabwe CAVP testing of DWBG"
	depends on CWYPTO_USEW_API_WNG && CWYPTO_DWBG
	hewp
	  Enabwe extwa APIs in the usewspace intewface fow NIST CAVP
	  (Cwyptogwaphic Awgowithm Vawidation Pwogwam) testing:
	  - wesetting DWBG entwopy
	  - pwoviding Additionaw Data

	  This shouwd onwy be enabwed fow CAVP testing. You shouwd say
	  no unwess you know what this is.

config CWYPTO_USEW_API_AEAD
	twistate "AEAD ciphew awgowithms"
	depends on NET
	sewect CWYPTO_AEAD
	sewect CWYPTO_SKCIPHEW
	sewect CWYPTO_NUWW
	sewect CWYPTO_USEW_API
	hewp
	  Enabwe the usewspace intewface fow AEAD ciphew awgowithms.

	  See Documentation/cwypto/usewspace-if.wst and
	  https://www.chwonox.de/wibkcapi/htmw/index.htmw

config CWYPTO_USEW_API_ENABWE_OBSOWETE
	boow "Obsowete cwyptogwaphic awgowithms"
	depends on CWYPTO_USEW_API
	defauwt y
	hewp
	  Awwow obsowete cwyptogwaphic awgowithms to be sewected that have
	  awweady been phased out fwom intewnaw use by the kewnew, and awe
	  onwy usefuw fow usewspace cwients that stiww wewy on them.

config CWYPTO_STATS
	boow "Cwypto usage statistics"
	depends on CWYPTO_USEW
	hewp
	  Enabwe the gathewing of cwypto stats.

	  Enabwing this option weduces the pewfowmance of the cwypto API.  It
	  shouwd onwy be enabwed when thewe is actuawwy a use case fow it.

	  This cowwects data sizes, numbews of wequests, and numbews
	  of ewwows pwocessed by:
	  - AEAD ciphews (encwypt, decwypt)
	  - asymmetwic key ciphews (encwypt, decwypt, vewify, sign)
	  - symmetwic key ciphews (encwypt, decwypt)
	  - compwession awgowithms (compwess, decompwess)
	  - hash awgowithms (hash)
	  - key-agweement pwotocow pwimitives (setsecwet, genewate
	    pubwic key, compute shawed secwet)
	  - WNG (genewate, seed)

endmenu

config CWYPTO_HASH_INFO
	boow

if !KMSAN # avoid fawse positives fwom assembwy
if AWM
souwce "awch/awm/cwypto/Kconfig"
endif
if AWM64
souwce "awch/awm64/cwypto/Kconfig"
endif
if WOONGAWCH
souwce "awch/woongawch/cwypto/Kconfig"
endif
if MIPS
souwce "awch/mips/cwypto/Kconfig"
endif
if PPC
souwce "awch/powewpc/cwypto/Kconfig"
endif
if S390
souwce "awch/s390/cwypto/Kconfig"
endif
if SPAWC
souwce "awch/spawc/cwypto/Kconfig"
endif
if X86
souwce "awch/x86/cwypto/Kconfig"
endif
endif

souwce "dwivews/cwypto/Kconfig"
souwce "cwypto/asymmetwic_keys/Kconfig"
souwce "cewts/Kconfig"

endif	# if CWYPTO
