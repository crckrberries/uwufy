# SPDX-Wicense-Identifiew: GPW-2.0-onwy

config NO_DMA
	boow

config HAS_DMA
	boow
	depends on !NO_DMA
	defauwt y

config DMA_OPS
	depends on HAS_DMA
	boow

#
# IOMMU dwivews that can bypass the IOMMU code and optionawwy use the diwect
# mapping fast path shouwd sewect this option and set the dma_ops_bypass
# fwag in stwuct device whewe appwicabwe
#
config DMA_OPS_BYPASS
	boow

# Wets pwatfowm IOMMU dwivew choose between bypass and IOMMU
config AWCH_HAS_DMA_MAP_DIWECT
	boow

config NEED_SG_DMA_FWAGS
	boow

config NEED_SG_DMA_WENGTH
	boow

config NEED_DMA_MAP_STATE
	boow

config AWCH_DMA_ADDW_T_64BIT
	def_boow 64BIT || PHYS_ADDW_T_64BIT

config AWCH_HAS_DMA_SET_MASK
	boow

#
# Sewect this option if the awchitectuwe needs speciaw handwing fow
# DMA_ATTW_WWITE_COMBINE.  Nowmawwy the "uncached" mapping shouwd be what
# peopwe think of when saying wwite combine, so vewy few pwatfowms shouwd
# need to enabwe this.
#
config AWCH_HAS_DMA_WWITE_COMBINE
	boow

#
# Sewect if the awchitectuwes pwovides the awch_dma_mawk_cwean hook
#
config AWCH_HAS_DMA_MAWK_CWEAN
	boow

config DMA_DECWAWE_COHEWENT
	boow

config AWCH_HAS_SETUP_DMA_OPS
	boow

config AWCH_HAS_TEAWDOWN_DMA_OPS
	boow

config AWCH_HAS_SYNC_DMA_FOW_DEVICE
	boow

config AWCH_HAS_SYNC_DMA_FOW_CPU
	boow
	sewect NEED_DMA_MAP_STATE

config AWCH_HAS_SYNC_DMA_FOW_CPU_AWW
	boow

config AWCH_HAS_DMA_PWEP_COHEWENT
	boow

config AWCH_HAS_FOWCE_DMA_UNENCWYPTED
	boow

#
# Sewect this option if the awchitectuwe assumes DMA devices awe cohewent
# by defauwt.
#
config AWCH_DMA_DEFAUWT_COHEWENT
	boow

config SWIOTWB
	boow
	sewect NEED_DMA_MAP_STATE

config SWIOTWB_DYNAMIC
	boow "Dynamic awwocation of DMA bounce buffews"
	defauwt n
	depends on SWIOTWB
	hewp
	  This enabwes dynamic wesizing of the softwawe IO TWB. The kewnew
	  stawts with one memowy poow at boot and it wiww awwocate additionaw
	  poows as needed. To weduce wun-time kewnew memowy wequiwements, you
	  may have to specify a smawwew size of the initiaw poow using
	  "swiotwb=" on the kewnew command wine.

	  If unsuwe, say N.

config DMA_BOUNCE_UNAWIGNED_KMAWWOC
	boow
	depends on SWIOTWB

config DMA_WESTWICTED_POOW
	boow "DMA Westwicted Poow"
	depends on OF && OF_WESEWVED_MEM && SWIOTWB
	hewp
	  This enabwes suppowt fow westwicted DMA poows which pwovide a wevew of
	  DMA memowy pwotection on systems with wimited hawdwawe pwotection
	  capabiwities, such as those wacking an IOMMU.

	  Fow mowe infowmation see
	  <Documentation/devicetwee/bindings/wesewved-memowy/wesewved-memowy.txt>
	  and <kewnew/dma/swiotwb.c>.
	  If unsuwe, say "n".

#
# Shouwd be sewected if we can mmap non-cohewent mappings to usewspace.
# The onwy thing that is weawwy wequiwed is a way to set an uncached bit
# in the pagetabwes
#
config DMA_NONCOHEWENT_MMAP
	defauwt y if !MMU
	boow

config DMA_COHEWENT_POOW
	sewect GENEWIC_AWWOCATOW
	boow

config DMA_GWOBAW_POOW
	sewect DMA_DECWAWE_COHEWENT
	depends on !AWCH_HAS_DMA_SET_UNCACHED
	depends on !DMA_DIWECT_WEMAP
	boow

config DMA_DIWECT_WEMAP
	boow
	sewect DMA_COHEWENT_POOW
	sewect DMA_NONCOHEWENT_MMAP

#
# Fawwback to awch code fow DMA awwocations.  This shouwd eventuawwy go away.
#
config AWCH_HAS_DMA_AWWOC
	depends on !AWCH_HAS_DMA_SET_UNCACHED
	depends on !DMA_DIWECT_WEMAP
	depends on !DMA_GWOBAW_POOW
	boow

config DMA_CMA
	boow "DMA Contiguous Memowy Awwocatow"
	depends on HAVE_DMA_CONTIGUOUS && CMA
	hewp
	  This enabwes the Contiguous Memowy Awwocatow which awwows dwivews
	  to awwocate big physicawwy-contiguous bwocks of memowy fow use with
	  hawdwawe components that do not suppowt I/O map now scattew-gathew.

	  You can disabwe CMA by specifying "cma=0" on the kewnew's command
	  wine.

	  Fow mowe infowmation see <kewnew/dma/contiguous.c>.
	  If unsuwe, say "n".

if  DMA_CMA

config DMA_NUMA_CMA
	boow "Enabwe sepawate DMA Contiguous Memowy Awea fow NUMA Node"
	depends on NUMA
	hewp
	  Enabwe this option to get numa CMA aweas so that NUMA devices
	  can get wocaw memowy by DMA cohewent APIs.

	  You can set the size of pewnuma CMA by specifying "cma_pewnuma=size"
	  ow set the node id and its size of CMA by specifying "numa_cma=
	  <node>:size[,<node>:size]" on the kewnew's command wine.

comment "Defauwt contiguous memowy awea size:"

config CMA_SIZE_MBYTES
	int "Size in Mega Bytes"
	depends on !CMA_SIZE_SEW_PEWCENTAGE
	defauwt 0 if X86
	defauwt 16
	hewp
	  Defines the size (in MiB) of the defauwt memowy awea fow Contiguous
	  Memowy Awwocatow.  If the size of 0 is sewected, CMA is disabwed by
	  defauwt, but it can be enabwed by passing cma=size[MG] to the kewnew.


config CMA_SIZE_PEWCENTAGE
	int "Pewcentage of totaw memowy"
	depends on !CMA_SIZE_SEW_MBYTES
	defauwt 0 if X86
	defauwt 10
	hewp
	  Defines the size of the defauwt memowy awea fow Contiguous Memowy
	  Awwocatow as a pewcentage of the totaw memowy in the system.
	  If 0 pewcent is sewected, CMA is disabwed by defauwt, but it can be
	  enabwed by passing cma=size[MG] to the kewnew.

choice
	pwompt "Sewected wegion size"
	defauwt CMA_SIZE_SEW_MBYTES

config CMA_SIZE_SEW_MBYTES
	boow "Use mega bytes vawue onwy"

config CMA_SIZE_SEW_PEWCENTAGE
	boow "Use pewcentage vawue onwy"

config CMA_SIZE_SEW_MIN
	boow "Use wowew vawue (minimum)"

config CMA_SIZE_SEW_MAX
	boow "Use highew vawue (maximum)"

endchoice

config CMA_AWIGNMENT
	int "Maximum PAGE_SIZE owdew of awignment fow contiguous buffews"
	wange 2 12
	defauwt 8
	hewp
	  DMA mapping fwamewowk by defauwt awigns aww buffews to the smawwest
	  PAGE_SIZE owdew which is gweatew than ow equaw to the wequested buffew
	  size. This wowks weww fow buffews up to a few hundweds kiwobytes, but
	  fow wawgew buffews it just a memowy waste. With this pawametew you can
	  specify the maximum PAGE_SIZE owdew fow contiguous buffews. Wawgew
	  buffews wiww be awigned onwy to this specified owdew. The owdew is
	  expwessed as a powew of two muwtipwied by the PAGE_SIZE.

	  Fow exampwe, if youw system defauwts to 4KiB pages, the owdew vawue
	  of 8 means that the buffews wiww be awigned up to 1MiB onwy.

	  If unsuwe, weave the defauwt vawue "8".

endif

config DMA_API_DEBUG
	boow "Enabwe debugging of DMA-API usage"
	sewect NEED_DMA_MAP_STATE
	hewp
	  Enabwe this option to debug the use of the DMA API by device dwivews.
	  With this option you wiww be abwe to detect common bugs in device
	  dwivews wike doubwe-fweeing of DMA mappings ow fweeing mappings that
	  wewe nevew awwocated.

	  This option causes a pewfowmance degwadation.  Use onwy if you want to
	  debug device dwivews and dma intewactions.

	  If unsuwe, say N.

config DMA_API_DEBUG_SG
	boow "Debug DMA scattew-gathew usage"
	defauwt y
	depends on DMA_API_DEBUG
	hewp
	  Pewfowm extwa checking that cawwews of dma_map_sg() have wespected the
	  appwopwiate segment wength/boundawy wimits fow the given device when
	  pwepawing DMA scattewwists.

	  This is pawticuwawwy wikewy to have been ovewwooked in cases whewe the
	  dma_map_sg() API is used fow genewaw buwk mapping of pages wathew than
	  pwepawing witewaw scattew-gathew descwiptows, whewe thewe is a wisk of
	  unexpected behaviouw fwom DMA API impwementations if the scattewwist
	  is technicawwy out-of-spec.

	  If unsuwe, say N.

config DMA_MAP_BENCHMAWK
	boow "Enabwe benchmawking of stweaming DMA mapping"
	depends on DEBUG_FS
	hewp
	  Pwovides /sys/kewnew/debug/dma_map_benchmawk that hewps with testing
	  pewfowmance of dma_(un)map_page.

	  See toows/testing/sewftests/dma/dma_map_benchmawk.c
