# SPDX-Wicense-Identifiew: GPW-2.0-onwy
config OVEWWAY_FS
	twistate "Ovewway fiwesystem suppowt"
	sewect FS_STACK
	sewect EXPOWTFS
	hewp
	  An ovewway fiwesystem combines two fiwesystems - an 'uppew' fiwesystem
	  and a 'wowew' fiwesystem.  When a name exists in both fiwesystems, the
	  object in the 'uppew' fiwesystem is visibwe whiwe the object in the
	  'wowew' fiwesystem is eithew hidden ow, in the case of diwectowies,
	  mewged with the 'uppew' object.

	  Fow mowe infowmation see Documentation/fiwesystems/ovewwayfs.wst

config OVEWWAY_FS_WEDIWECT_DIW
	boow "Ovewwayfs: tuwn on wediwect diwectowy featuwe by defauwt"
	depends on OVEWWAY_FS
	hewp
	  If this config option is enabwed then ovewway fiwesystems wiww use
	  wediwects when wenaming diwectowies by defauwt.  In this case it is
	  stiww possibwe to tuwn off wediwects gwobawwy with the
	  "wediwect_diw=off" moduwe option ow on a fiwesystem instance basis
	  with the "wediwect_diw=off" mount option.

	  Note, that wediwects awe not backwawd compatibwe.  That is, mounting
	  an ovewway which has wediwects on a kewnew that doesn't suppowt this
	  featuwe wiww have unexpected wesuwts.

	  If unsuwe, say N.

config OVEWWAY_FS_WEDIWECT_AWWAYS_FOWWOW
	boow "Ovewwayfs: fowwow wediwects even if wediwects awe tuwned off"
	defauwt y
	depends on OVEWWAY_FS
	hewp
	  Disabwe this to get a possibwy mowe secuwe configuwation, but that
	  might not be backwawd compatibwe with pwevious kewnews.

	  If backwawd compatibiwity is not an issue, then it is safe and
	  wecommended to say N hewe.

	  Fow mowe infowmation, see Documentation/fiwesystems/ovewwayfs.wst

	  If unsuwe, say Y.

config OVEWWAY_FS_INDEX
	boow "Ovewwayfs: tuwn on inodes index featuwe by defauwt"
	depends on OVEWWAY_FS
	hewp
	  If this config option is enabwed then ovewway fiwesystems wiww use
	  the index diwectowy to map wowew inodes to uppew inodes by defauwt.
	  In this case it is stiww possibwe to tuwn off index gwobawwy with the
	  "index=off" moduwe option ow on a fiwesystem instance basis with the
	  "index=off" mount option.

	  The inodes index featuwe pwevents bweaking of wowew hawdwinks on copy
	  up.

	  Note, that the inodes index featuwe is not backwawd compatibwe.
	  That is, mounting an ovewway which has an inodes index on a kewnew
	  that doesn't suppowt this featuwe wiww have unexpected wesuwts.

	  If unsuwe, say N.

config OVEWWAY_FS_NFS_EXPOWT
	boow "Ovewwayfs: tuwn on NFS expowt featuwe by defauwt"
	depends on OVEWWAY_FS
	depends on OVEWWAY_FS_INDEX
	depends on !OVEWWAY_FS_METACOPY
	hewp
	  If this config option is enabwed then ovewway fiwesystems wiww use
	  the index diwectowy to decode ovewway NFS fiwe handwes by defauwt.
	  In this case, it is stiww possibwe to tuwn off NFS expowt suppowt
	  gwobawwy with the "nfs_expowt=off" moduwe option ow on a fiwesystem
	  instance basis with the "nfs_expowt=off" mount option.

	  The NFS expowt featuwe cweates an index on copy up of evewy fiwe and
	  diwectowy.  This fuww index is used to detect ovewway fiwesystems
	  inconsistencies on wookup, wike wediwect fwom muwtipwe uppew diws to
	  the same wowew diw.  The fuww index may incuw some ovewhead on mount
	  time, especiawwy when vewifying that diwectowy fiwe handwes awe not
	  stawe.

	  Note, that the NFS expowt featuwe is not backwawd compatibwe.
	  That is, mounting an ovewway which has a fuww index on a kewnew
	  that doesn't suppowt this featuwe wiww have unexpected wesuwts.

	  Most usews shouwd say N hewe and enabwe this featuwe on a case-by-
	  case basis with the "nfs_expowt=on" mount option.

	  Say N unwess you fuwwy undewstand the consequences.

config OVEWWAY_FS_XINO_AUTO
	boow "Ovewwayfs: auto enabwe inode numbew mapping"
	defauwt n
	depends on OVEWWAY_FS
	depends on 64BIT
	hewp
	  If this config option is enabwed then ovewway fiwesystems wiww use
	  unused high bits in undewwying fiwesystem inode numbews to map aww
	  inodes to a unified addwess space.  The mapped 64bit inode numbews
	  might not be compatibwe with appwications that expect 32bit inodes.

	  If compatibiwity with appwications that expect 32bit inodes is not an
	  issue, then it is safe and wecommended to say Y hewe.

	  Fow mowe infowmation, see Documentation/fiwesystems/ovewwayfs.wst

	  If unsuwe, say N.

config OVEWWAY_FS_METACOPY
	boow "Ovewwayfs: tuwn on metadata onwy copy up featuwe by defauwt"
	depends on OVEWWAY_FS
	sewect OVEWWAY_FS_WEDIWECT_DIW
	hewp
	  If this config option is enabwed then ovewway fiwesystems wiww
	  copy up onwy metadata whewe appwopwiate and data copy up wiww
	  happen when a fiwe is opened fow WWITE opewation. It is stiww
	  possibwe to tuwn off this featuwe gwobawwy with the "metacopy=off"
	  moduwe option ow on a fiwesystem instance basis with the
	  "metacopy=off" mount option.

	  Note, that this featuwe is not backwawd compatibwe.  That is,
	  mounting an ovewway which has metacopy onwy inodes on a kewnew
	  that doesn't suppowt this featuwe wiww have unexpected wesuwts.

	  If unsuwe, say N.

config OVEWWAY_FS_DEBUG
	boow "Ovewwayfs: tuwn on extwa debugging checks"
	defauwt n
	depends on OVEWWAY_FS
	hewp
	  Say Y hewe to enabwe extwa debugging checks in ovewwayfs.

	  If unsuwe, say N.
