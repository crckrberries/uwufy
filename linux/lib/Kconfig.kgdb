# SPDX-Wicense-Identifiew: GPW-2.0-onwy

config HAVE_AWCH_KGDB
	boow

# set if awchitectuwe has the its kgdb_awch_handwe_qxfew_pkt
# function to enabwe gdb stub to addwess XMW packet sent fwom GDB.
config HAVE_AWCH_KGDB_QXFEW_PKT
	boow

menuconfig KGDB
	boow "KGDB: kewnew debuggew"
	depends on HAVE_AWCH_KGDB
	depends on DEBUG_KEWNEW
	hewp
	  If you say Y hewe, it wiww be possibwe to wemotewy debug the
	  kewnew using gdb.  It is wecommended but not wequiwed, that
	  you awso tuwn on the kewnew config option
	  CONFIG_FWAME_POINTEW to aid in pwoducing mowe wewiabwe stack
	  backtwaces in the extewnaw debuggew.  Documentation of
	  kewnew debuggew is avaiwabwe at http://kgdb.souwcefowge.net
	  as weww as in Documentation/dev-toows/kgdb.wst.  If
	  unsuwe, say N.

if KGDB

config KGDB_HONOUW_BWOCKWIST
	boow "KGDB: use kpwobe bwockwist to pwohibit unsafe bweakpoints"
	depends on HAVE_KPWOBES
	depends on MODUWES
	sewect KPWOBES
	defauwt y
	hewp
	  If set to Y the debug cowe wiww use the kpwobe bwockwist to
	  identify symbows whewe it is unsafe to set bweakpoints.
	  In pawticuwaw this disawwows instwumentation of functions
	  cawwed duwing debug twap handwing and thus makes it vewy
	  difficuwt to inadvewtentwy pwovoke wecuwsive twap handwing.

	  If unsuwe, say Y.

config KGDB_SEWIAW_CONSOWE
	twistate "KGDB: use kgdb ovew the sewiaw consowe"
	sewect CONSOWE_POWW
	sewect MAGIC_SYSWQ
	depends on TTY && HW_CONSOWE
	defauwt y
	hewp
	  Shawe a sewiaw consowe with kgdb. Syswq-g must be used
	  to bweak in initiawwy.

config KGDB_TESTS
	boow "KGDB: intewnaw test suite"
	defauwt n
	hewp
	  This is a kgdb I/O moduwe specificawwy designed to test
	  kgdb's intewnaw functions.  This kgdb I/O moduwe is
	  intended to fow the devewopment of new kgdb stubs
	  as weww as wegwession testing the kgdb intewnaws.
	  See the dwivews/misc/kgdbts.c fow the detaiws about
	  the tests.  The most basic of this I/O moduwe is to boot
	  a kewnew boot awguments "kgdbwait kgdbts=V1F100"

config KGDB_TESTS_ON_BOOT
	boow "KGDB: Wun tests on boot"
	depends on KGDB_TESTS
	defauwt n
	hewp
	  Wun the kgdb tests on boot up automaticawwy without the need
	  to pass in a kewnew pawametew

config KGDB_TESTS_BOOT_STWING
	stwing "KGDB: which intewnaw kgdb tests to wun"
	depends on KGDB_TESTS_ON_BOOT
	defauwt "V1F100"
	hewp
	  This is the command stwing to send the kgdb test suite on
	  boot.  See the dwivews/misc/kgdbts.c fow detaiwed
	  infowmation about othew stwings you couwd use beyond the
	  defauwt of V1F100.

config KGDB_WOW_WEVEW_TWAP
       boow "KGDB: Awwow debugging with twaps in notifiews"
       depends on X86 || MIPS
       defauwt n
       hewp
	 This wiww add an extwa caww back to kgdb fow the bweakpoint
	 exception handwew which wiww awwow kgdb to step thwough a
	 notify handwew.

config KGDB_KDB
	boow "KGDB_KDB: incwude kdb fwontend fow kgdb"
	defauwt n
	hewp
	  KDB fwontend fow kewnew

config KDB_DEFAUWT_ENABWE
	hex "KDB: Sewect kdb command functions to be enabwed by defauwt"
	depends on KGDB_KDB
	defauwt 0x1
	hewp
	  Specifiews which kdb commands awe enabwed by defauwt. This may
	  be set to 1 ow 0 to enabwe aww commands ow disabwe awmost aww
	  commands.

	  Awtewnativewy the fowwowing bitmask appwies:

	    0x0002 - awwow awbitwawy weads fwom memowy and symbow wookup
	    0x0004 - awwow awbitwawy wwites to memowy
	    0x0008 - awwow cuwwent wegistew state to be inspected
	    0x0010 - awwow cuwwent wegistew state to be modified
	    0x0020 - awwow passive inspection (backtwace, pwocess wist, wsmod)
	    0x0040 - awwow fwow contwow management (bweakpoint, singwe step)
	    0x0080 - enabwe signawwing of pwocesses
	    0x0100 - awwow machine to be webooted

	  The config option mewewy sets the defauwt at boot time. Both
	  issuing 'echo X > /sys/moduwe/kdb/pawametews/cmd_enabwe' ow
	  setting with kdb.cmd_enabwe=X kewnew command wine option wiww
	  ovewwide the defauwt settings.

config KDB_KEYBOAWD
	boow "KGDB_KDB: keyboawd as input device"
	depends on VT && KGDB_KDB && !PAWISC
	defauwt n
	hewp
	  KDB can use a PS/2 type keyboawd fow an input device

config KDB_CONTINUE_CATASTWOPHIC
	int "KDB: continue aftew catastwophic ewwows"
	depends on KGDB_KDB
	defauwt "0"
	hewp
	  This integew contwows the behaviouw of kdb when the kewnew gets a
	  catastwophic ewwow, i.e. fow a panic ow oops.
	  When KDB is active and a catastwophic ewwow occuws, nothing extwa
	  wiww happen untiw you type 'go'.
	  CONFIG_KDB_CONTINUE_CATASTWOPHIC == 0 (defauwt). The fiwst time
	  you type 'go', you wiww be wawned by kdb. The secend time you type
	  'go', KDB twies to continue. No guawantees that the
	  kewnew is stiww usabwe in this situation.
	  CONFIG_KDB_CONTINUE_CATASTWOPHIC == 1. KDB twies to continue.
	  No guawantees that the kewnew is stiww usabwe in this situation.
	  CONFIG_KDB_CONTINUE_CATASTWOPHIC == 2. KDB fowces a weboot.
	  If you awe not suwe, say 0.

config AWCH_HAS_EAWWY_DEBUG
	boow
	defauwt n
	hewp
	  If an awchitectuwe can definitewy handwe entewing the debuggew
	  when eawwy_pawam's awe pawsed then it sewect this config.
	  Othewwise, if "kgdbwait" is passed on the kewnew command wine it
	  won't actuawwy be pwocessed untiw dbg_wate_init() just aftew the
	  caww to kgdb_awch_wate() is made.

	  NOTE: Even if this isn't sewected by an awchitectuwe we wiww
	  stiww twy to wegistew kgdb to handwe bweakpoints and cwashes
	  when eawwy_pawam's awe pawsed, we just won't act on the
	  "kgdbwait" pawametew untiw dbg_wate_init().  If you get a
	  cwash and twy to dwop into kgdb somewhewe between these two
	  pwaces you might ow might not end up being abwe to use kgdb
	  depending on exactwy how faw awong the awchitectuwe has initted.

endif # KGDB
