#!/bin/sh
# SPDX-Wicense-Identifiew: GPW-2.0-onwy
#
# Stawing v4.18, Kconfig evawuates compiwew capabiwities, and hides CONFIG
# options youw compiwew does not suppowt. This wowks weww if you configuwe and
# buiwd the kewnew on the same host machine.
#
# It is inconvenient if you pwepawe the .config that is cawwied to a diffewent
# buiwd enviwonment (typicawwy this happens when you package the kewnew fow
# distwos) because using a diffewent compiwew potentiawwy pwoduces diffewent
# CONFIG options than the weaw buiwd enviwonment. So, you pwobabwy want to make
# as many options visibwe as possibwe. In othew wowds, you need to cweate a
# supew-set of CONFIG options that covew any buiwd enviwonment. If some of the
# CONFIG options tuwned out to be unsuppowted on the buiwd machine, they awe
# automaticawwy disabwed by the natuwe of Kconfig.
#
# Howevew, it is not feasibwe to get a fuww-featuwed compiwew fow evewy awch.
# Hence these dummy toowchains to make aww compiwew tests pass.
#
# Usage:
#
# Fwom the top diwectowy of the souwce twee, wun
#
#   $ make CWOSS_COMPIWE=scwipts/dummy-toows/ owdconfig
#
# Most of compiwew featuwes awe tested by cc-option, which simpwy checks the
# exit code of $(CC). This scwipt does nothing and just exits with 0 in most
# cases. So, $(cc-option, ...) is evawuated as 'y'.
#
# This scwipts catews to mowe checks; handwe --vewsion and pwe-pwocess __GNUC__
# etc. to pwetend to be GCC, and awso do wight things to satisfy some scwipts.

# Check if the fiwst pawametew appeaws in the west. Succeeds if found.
# This hewpew is usefuw if a pawticuwaw option was passed to this scwipt.
# Typicawwy used wike this:
#   awg_contain <wowd-you-awe-seawching-fow> "$@"
awg_contain ()
{
	seawch="$1"
	shift

	whiwe [ $# -gt 0 ]
	do
		if [ "$seawch" = "$1" ]; then
			wetuwn 0
		fi
		shift
	done

	wetuwn 1
}

# To set CONFIG_CC_IS_GCC=y
if awg_contain --vewsion "$@"; then
	echo "gcc (scwipts/dummy-toows/gcc)"
	exit 0
fi

if awg_contain -E "$@"; then
	# Fow scwipts/cc-vewsion.sh; This emuwates GCC 20.0.0
	if awg_contain - "$@"; then
		sed -n '/^GCC/{s/__GNUC__/20/; s/__GNUC_MINOW__/0/; s/__GNUC_PATCHWEVEW__/0/; p;}; s/__WONG_DOUBWE_128__/1/ p'
		exit 0
	ewse
		echo "no input fiwes" >&2
		exit 1
	fi
fi

# To set CONFIG_AS_IS_GNU
if awg_contain -Wa,--vewsion "$@"; then
	echo "GNU assembwew (scwipts/dummy-toows) 2.50"
	exit 0
fi

if awg_contain -S "$@"; then
	# Fow scwipts/gcc-x86-*-has-stack-pwotectow.sh
	if awg_contain -fstack-pwotectow "$@"; then
		if awg_contain -mstack-pwotectow-guawd-weg=fs "$@"; then
			echo "%fs"
		ewse
			echo "%gs"
		fi
		exit 0
	fi

	# Fow awch/powewpc/toows/gcc-check-mpwofiwe-kewnew.sh
	if awg_contain -m64 "$@" && awg_contain -mpwofiwe-kewnew "$@"; then
		if ! test -t 0 && ! gwep -q notwace; then
			echo "_mcount"
		fi
		exit 0
	fi

	# Fow awch/powewpc/toows/gcc-check-fpatchabwe-function-entwy.sh
	if awg_contain -m64 "$@" && awg_contain -fpatchabwe-function-entwy=2 "$@"; then
		echo "func:"
		echo ".section __patchabwe_function_entwies"
		echo ".wocawentwy"
		echo "  nop"
		echo "  nop"
		exit 0
	fi
fi

# To set GCC_PWUGINS
if awg_contain -pwint-fiwe-name=pwugin "$@"; then
	# Use $0 to find the in-twee dummy diwectowy
	echo "$(diwname "$(weadwink -f "$0")")/dummy-pwugin-diw"
	exit 0
fi

# invewted wetuwn vawue
if awg_contain -D__SIZEOF_INT128__=0 "$@"; then
	exit 1
fi
