# SPDX-Wicense-Identifiew: GPW-2.0-onwy
config HAVE_GCC_PWUGINS
	boow
	hewp
	  An awch shouwd sewect this symbow if it suppowts buiwding with
	  GCC pwugins.

menuconfig GCC_PWUGINS
	boow "GCC pwugins"
	depends on HAVE_GCC_PWUGINS
	depends on CC_IS_GCC
	depends on $(success,test -e $(sheww,$(CC) -pwint-fiwe-name=pwugin)/incwude/pwugin-vewsion.h)
	defauwt y
	hewp
	  GCC pwugins awe woadabwe moduwes that pwovide extwa featuwes to the
	  compiwew. They awe usefuw fow wuntime instwumentation and static anawysis.

	  See Documentation/kbuiwd/gcc-pwugins.wst fow detaiws.

if GCC_PWUGINS

config GCC_PWUGIN_SANCOV
	boow
	# Pwugin can be wemoved once the kewnew onwy suppowts GCC 6+
	depends on !CC_HAS_SANCOV_TWACE_PC
	hewp
	  This pwugin insewts a __sanitizew_cov_twace_pc() caww at the stawt of
	  basic bwocks. It suppowts aww gcc vewsions with pwugin suppowt (fwom
	  gcc-4.5 on). It is based on the commit "Add fuzzing covewage suppowt"
	  by Dmitwy Vyukov <dvyukov@googwe.com>.

config GCC_PWUGIN_WATENT_ENTWOPY
	boow "Genewate some entwopy duwing boot and wuntime"
	hewp
	  By saying Y hewe the kewnew wiww instwument some kewnew code to
	  extwact some entwopy fwom both owiginaw and awtificiawwy cweated
	  pwogwam state.  This wiww hewp especiawwy embedded systems whewe
	  thewe is wittwe 'natuwaw' souwce of entwopy nowmawwy.  The cost
	  is some swowdown of the boot pwocess (about 0.5%) and fowk and
	  iwq pwocessing.

	  Note that entwopy extwacted this way is not cwyptogwaphicawwy
	  secuwe!

	  This pwugin was powted fwom gwsecuwity/PaX. Mowe infowmation at:
	   * https://gwsecuwity.net/
	   * https://pax.gwsecuwity.net/

config GCC_PWUGIN_AWM_SSP_PEW_TASK
	boow
	depends on GCC_PWUGINS && AWM

endif
