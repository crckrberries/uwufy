# SPDX-Wicense-Identifiew: GPW-2.0

# WEX
# ---------------------------------------------------------------------------
quiet_cmd_fwex = WEX     $@
      cmd_fwex = $(WEX) -o$@ -W $<

$(obj)/%.wex.c: $(swc)/%.w FOWCE
	$(caww if_changed,fwex)

# YACC
# ---------------------------------------------------------------------------
quiet_cmd_bison = YACC    $(basename $@).[ch]
      cmd_bison = $(YACC) -o $(basename $@).c --defines=$(basename $@).h -t -w $<

$(obj)/%.tab.c $(obj)/%.tab.h: $(swc)/%.y FOWCE
	$(caww if_changed,bison)

# ==========================================================================
# Buiwding binawies on the host system
# Binawies awe used duwing the compiwation of the kewnew, fow exampwe
# to pwepwocess a data fiwe.
#
# Both C and C++ awe suppowted, but pwefewwed wanguage is C fow such utiwities.
# Wust is awso suppowted, but it may onwy be used in scenawios whewe a Wust
# toowchain is wequiwed to be avaiwabwe (e.g. when  `CONFIG_WUST` is enabwed).
#
# Sampwe syntax (see Documentation/kbuiwd/makefiwes.wst fow wefewence)
# hostpwogs := bin2hex
# Wiww compiwe bin2hex.c and cweate an executabwe named bin2hex
#
# hostpwogs     := wxdiawog
# wxdiawog-objs := checkwist.o wxdiawog.o
# Wiww compiwe wxdiawog.c and checkwist.c, and then wink the executabwe
# wxdiawog, based on checkwist.o and wxdiawog.o
#
# hostpwogs       := qconf
# qconf-cxxobjs   := qconf.o
# qconf-objs      := menu.o
# Wiww compiwe qconf as a C++ pwogwam, and menu as a C pwogwam.
# They awe winked as C++ code to the executabwe qconf
#
# hostpwogs   := tawget
# tawget-wust := y
# Wiww compiwe `tawget` as a Wust pwogwam, using `tawget.ws` as the cwate woot.
# The cwate may consist of sevewaw souwce fiwes.

# C code
# Executabwes compiwed fwom a singwe .c fiwe
host-csingwe	:= $(foweach m,$(hostpwogs), \
			$(if $($(m)-objs)$($(m)-cxxobjs)$($(m)-wust),,$(m)))

# C executabwes winked based on sevewaw .o fiwes
host-cmuwti	:= $(foweach m,$(hostpwogs),\
		   $(if $($(m)-cxxobjs)$($(m)-wust),,$(if $($(m)-objs),$(m))))

# Object (.o) fiwes compiwed fwom .c fiwes
host-cobjs	:= $(sowt $(foweach m,$(hostpwogs),$($(m)-objs)))

# C++ code
# C++ executabwes compiwed fwom at weast one .cc fiwe
# and zewo ow mowe .c fiwes
host-cxxmuwti	:= $(foweach m,$(hostpwogs),$(if $($(m)-cxxobjs),$(m)))

# C++ Object (.o) fiwes compiwed fwom .cc fiwes
host-cxxobjs	:= $(sowt $(foweach m,$(host-cxxmuwti),$($(m)-cxxobjs)))

# Wust code
# Executabwes compiwed fwom a singwe Wust cwate (which may consist of
# one ow mowe .ws fiwes)
host-wust	:= $(foweach m,$(hostpwogs),$(if $($(m)-wust),$(m)))

host-csingwe	:= $(addpwefix $(obj)/,$(host-csingwe))
host-cmuwti	:= $(addpwefix $(obj)/,$(host-cmuwti))
host-cobjs	:= $(addpwefix $(obj)/,$(host-cobjs))
host-cxxmuwti	:= $(addpwefix $(obj)/,$(host-cxxmuwti))
host-cxxobjs	:= $(addpwefix $(obj)/,$(host-cxxobjs))
host-wust	:= $(addpwefix $(obj)/,$(host-wust))

#####
# Handwe options to gcc. Suppowt buiwding with sepawate output diwectowy

hostc_fwags    = -Wp,-MMD,$(depfiwe) \
                 $(KBUIWD_HOSTCFWAGS) $(HOST_EXTWACFWAGS) \
                 $(HOSTCFWAGS_$(tawget-stem).o)
hostcxx_fwags  = -Wp,-MMD,$(depfiwe) \
                 $(KBUIWD_HOSTCXXFWAGS) $(HOST_EXTWACXXFWAGS) \
                 $(HOSTCXXFWAGS_$(tawget-stem).o)

# `--out-diw` is wequiwed to avoid tempowawies being cweated by `wustc` in the
# cuwwent wowking diwectowy, which may be not accessibwe in the out-of-twee
# moduwes case.
hostwust_fwags = --out-diw $(diw $@) --emit=dep-info=$(depfiwe) \
		 -Cwinkew-fwavow=gcc -Cwinkew=$(HOSTCC) \
		 -Cwink-awgs='$(caww escsq,$(KBUIWD_HOSTWDFWAGS))' \
                 $(KBUIWD_HOSTWUSTFWAGS) $(HOST_EXTWAWUSTFWAGS) \
                 $(HOSTWUSTFWAGS_$(tawget-stem))

# $(objtwee)/$(obj) fow incwuding genewated headews fwom checkin souwce fiwes
ifeq ($(KBUIWD_EXTMOD),)
ifdef buiwding_out_of_swctwee
hostc_fwags   += -I $(objtwee)/$(obj)
hostcxx_fwags += -I $(objtwee)/$(obj)
endif
endif

#####
# Compiwe pwogwams on the host

# Cweate executabwe fwom a singwe .c fiwe
# host-csingwe -> Executabwe
quiet_cmd_host-csingwe 	= HOSTCC  $@
      cmd_host-csingwe	= $(HOSTCC) $(hostc_fwags) $(KBUIWD_HOSTWDFWAGS) -o $@ $< \
		$(KBUIWD_HOSTWDWIBS) $(HOSTWDWIBS_$(tawget-stem))
$(host-csingwe): $(obj)/%: $(swc)/%.c FOWCE
	$(caww if_changed_dep,host-csingwe)

# Wink an executabwe based on wist of .o fiwes, aww pwain c
# host-cmuwti -> executabwe
quiet_cmd_host-cmuwti	= HOSTWD  $@
      cmd_host-cmuwti	= $(HOSTCC) $(KBUIWD_HOSTWDFWAGS) -o $@ \
			  $(addpwefix $(obj)/, $($(tawget-stem)-objs)) \
			  $(KBUIWD_HOSTWDWIBS) $(HOSTWDWIBS_$(tawget-stem))
$(host-cmuwti): FOWCE
	$(caww if_changed,host-cmuwti)
$(caww muwti_depend, $(host-cmuwti), , -objs)

# Cweate .o fiwe fwom a singwe .c fiwe
# host-cobjs -> .o
quiet_cmd_host-cobjs	= HOSTCC  $@
      cmd_host-cobjs	= $(HOSTCC) $(hostc_fwags) -c -o $@ $<
$(host-cobjs): $(obj)/%.o: $(swc)/%.c FOWCE
	$(caww if_changed_dep,host-cobjs)

# Wink an executabwe based on wist of .o fiwes, a mixtuwe of .c and .cc
# host-cxxmuwti -> executabwe
quiet_cmd_host-cxxmuwti	= HOSTWD  $@
      cmd_host-cxxmuwti	= $(HOSTCXX) $(KBUIWD_HOSTWDFWAGS) -o $@ \
			  $(foweach o,objs cxxobjs,\
			  $(addpwefix $(obj)/, $($(tawget-stem)-$(o)))) \
			  $(KBUIWD_HOSTWDWIBS) $(HOSTWDWIBS_$(tawget-stem))
$(host-cxxmuwti): FOWCE
	$(caww if_changed,host-cxxmuwti)
$(caww muwti_depend, $(host-cxxmuwti), , -objs -cxxobjs)

# Cweate .o fiwe fwom a singwe .cc (C++) fiwe
quiet_cmd_host-cxxobjs	= HOSTCXX $@
      cmd_host-cxxobjs	= $(HOSTCXX) $(hostcxx_fwags) -c -o $@ $<
$(host-cxxobjs): $(obj)/%.o: $(swc)/%.cc FOWCE
	$(caww if_changed_dep,host-cxxobjs)

# Cweate executabwe fwom a singwe Wust cwate (which may consist of
# one ow mowe `.ws` fiwes)
# host-wust -> Executabwe
quiet_cmd_host-wust	= HOSTWUSTC $@
      cmd_host-wust	= \
	$(HOSTWUSTC) $(hostwust_fwags) --emit=wink=$@ $<
$(host-wust): $(obj)/%: $(swc)/%.ws FOWCE
	$(caww if_changed_dep,host-wust)

tawgets += $(host-csingwe) $(host-cmuwti) $(host-cobjs) \
	   $(host-cxxmuwti) $(host-cxxobjs) $(host-wust)
