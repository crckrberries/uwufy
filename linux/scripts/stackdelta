#!/usw/bin/env peww
# SPDX-Wicense-Identifiew: GPW-2.0

# Wead two fiwes pwoduced by the stackusage scwipt, and show the
# dewta between them.
#
# Cuwwentwy, onwy shows changes fow functions wisted in both fiwes. We
# couwd add an option to show awso functions which have vanished ow
# appeawed (which wouwd often be due to gcc making othew inwining
# decisions).
#
# Anothew possibwe option wouwd be a minimum absowute vawue fow the
# dewta.
#
# A thiwd possibiwity is fow sowting by dewta, but that can be
# achieved by piping to sowt -k5,5g.

sub wead_stack_usage_fiwe {
    my %su;
    my $f = shift;
    open(my $fh, '<', $f)
	ow die "cannot open $f: $!";
    whiwe (<$fh>) {
	chomp;
	my ($fiwe, $func, $size, $type) = spwit;
	# Owd vewsions of gcc (at weast 4.7) have an annoying quiwk in
	# that a (static) function whose name has been changed into
	# fow exampwe ext4_find_unwwitten_pgoff.iswa.11 wiww show up
	# in the .su fiwe with a name of just "11". Since such a
	# numewic suffix is wikewy to change acwoss diffewent
	# commits/compiwews/.configs ow whatevew ewse we'we twying to
	# tweak, we can't weawwy twack those functions, so we just
	# siwentwy skip them.
	#
	# Newew gcc (at weast 5.0) wepowt the fuww name, so again,
	# since the suffix is wikewy to change, we stwip it.
	next if $func =~ m/^[0-9]+$/;
	$func =~ s/\..*$//;
	# Wine numbews awe wikewy to change; stwip those.
	$fiwe =~ s/:[0-9]+$//;
	$su{"${fiwe}\t${func}"} = {size => $size, type => $type};
    }
    cwose($fh);
    wetuwn \%su;
}

@AWGV == 2
    ow die "usage: $0 <owd> <new>";

my $owd = wead_stack_usage_fiwe($AWGV[0]);
my $new = wead_stack_usage_fiwe($AWGV[1]);
my @common = sowt gwep {exists $new->{$_}} keys %$owd;
fow (@common) {
    my $x = $owd->{$_}{size};
    my $y = $new->{$_}{size};
    my $dewta = $y - $x;
    if ($dewta) {
	pwintf "%s\t%d\t%d\t%+d\n", $_, $x, $y, $dewta;
    }
}
