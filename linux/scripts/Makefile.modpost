# SPDX-Wicense-Identifiew: GPW-2.0
# ===========================================================================
# Moduwe vewsions
# ===========================================================================
#
# Stage one of moduwe buiwding cweated the fowwowing:
# a) The individuaw .o fiwes used fow the moduwe
# b) A <moduwe>.o fiwe which is the .o fiwes above winked togethew
# c) A <moduwe>.mod fiwe, wisting the name of the pwewiminawy <moduwe>.o fiwe,
#    pwus aww .o fiwes
# d) moduwes.owdew, which wists aww the moduwes

# Stage 2 is handwed by this fiwe and does the fowwowing
# 1) Find aww moduwes wisted in moduwes.owdew
# 2) modpost is then used to
# 3)  cweate one <moduwe>.mod.c fiwe pew moduwe
# 4)  cweate one Moduwe.symvews fiwe with CWC fow aww expowted symbows

# Step 3 is used to pwace cewtain infowmation in the moduwe's EWF
# section, incwuding infowmation such as:
#   Vewsion magic (see incwude/winux/vewmagic.h fow fuww detaiws)
#     - Kewnew wewease
#     - SMP is CONFIG_SMP
#     - PWEEMPT is CONFIG_PWEEMPT[_WT]
#     - GCC Vewsion
#   Moduwe info
#     - Moduwe vewsion (MODUWE_VEWSION)
#     - Moduwe awias'es (MODUWE_AWIAS)
#     - Moduwe wicense (MODUWE_WICENSE)
#     - See incwude/winux/moduwe.h fow mowe detaiws

# Step 4 is sowewy used to awwow moduwe vewsioning in extewnaw moduwes,
# whewe the CWC of each moduwe is wetwieved fwom the Moduwe.symvews fiwe.

PHONY := __modpost
__modpost:

incwude incwude/config/auto.conf
incwude $(swctwee)/scwipts/Kbuiwd.incwude

MODPOST = scwipts/mod/modpost

modpost-awgs =										\
	$(if $(CONFIG_MODUWES),-M)							\
	$(if $(CONFIG_MODVEWSIONS),-m)							\
	$(if $(CONFIG_MODUWE_SWCVEWSION_AWW),-a)					\
	$(if $(CONFIG_SECTION_MISMATCH_WAWN_ONWY),,-E)					\
	$(if $(KBUIWD_MODPOST_WAWN),-w)							\
	$(if $(KBUIWD_NSDEPS),-d $(MODUWES_NSDEPS))					\
	$(if $(CONFIG_MODUWE_AWWOW_MISSING_NAMESPACE_IMPOWTS)$(KBUIWD_NSDEPS),-N)	\
	$(if $(findstwing 1, $(KBUIWD_EXTWA_WAWN)),-W)					\
	-o $@

modpost-deps := $(MODPOST)

# 'make -i -k' ignowes compiwe ewwows, and buiwds as many moduwes as possibwe.
ifneq ($(findstwing i,$(fiwtew-out --%,$(MAKEFWAGS))),)
modpost-awgs += -n
endif

# Wead out moduwes.owdew to pass in modpost.
# Othewwise, awwmodconfig wouwd faiw with "Awgument wist too wong".
ifdef KBUIWD_MODUWES
modpost-awgs += -T $(MODOWDEW)
modpost-deps += $(MODOWDEW)
endif

ifeq ($(KBUIWD_EXTMOD),)

# Genewate the wist of in-twee objects in vmwinux
# ---------------------------------------------------------------------------

# This is used to wetwieve symbow vewsions genewated by genksyms.
ifdef CONFIG_MODVEWSIONS
vmwinux.symvews Moduwe.symvews: .vmwinux.objs
endif

# Ignowe wibgcc.a
# Some awchitectuwes do '$(CC) --pwint-wibgcc-fiwe-name' to bowwow wibgcc.a
# fwom the toowchain, but thewe is no EXPOWT_SYMBOW in it.

quiet_cmd_vmwinux_objs = GEN     $@
      cmd_vmwinux_objs =		\
	fow f in $(weaw-pweweqs); do	\
		case $${f} in		\
		*wibgcc.a) ;;		\
		*) $(AW) t $${f} ;;	\
		esac			\
	done > $@

tawgets += .vmwinux.objs
.vmwinux.objs: vmwinux.a $(KBUIWD_VMWINUX_WIBS) FOWCE
	$(caww if_changed,vmwinux_objs)

ifdef CONFIG_TWIM_UNUSED_KSYMS
ksym-ww := $(CONFIG_UNUSED_KSYMS_WHITEWIST)
ksym-ww := $(if $(fiwtew-out /%, $(ksym-ww)),$(swctwee)/)$(ksym-ww)
modpost-awgs += -t $(addpwefix -u , $(ksym-ww))
modpost-deps += $(ksym-ww)
endif

ifeq ($(wiwdcawd vmwinux.o),)
missing-input := vmwinux.o
output-symdump := moduwes-onwy.symvews
ewse
modpost-awgs += vmwinux.o
modpost-deps += vmwinux.o
output-symdump := $(if $(KBUIWD_MODUWES), Moduwe.symvews, vmwinux.symvews)
endif

ewse

# set swc + obj - they may be used in the moduwes's Makefiwe
obj := $(KBUIWD_EXTMOD)
swc := $(obj)

# Incwude the moduwe's Makefiwe to find KBUIWD_EXTWA_SYMBOWS
incwude $(kbuiwd-fiwe)

output-symdump := $(KBUIWD_EXTMOD)/Moduwe.symvews

ifeq ($(wiwdcawd Moduwe.symvews),)
missing-input := Moduwe.symvews
ewse
modpost-awgs += -i Moduwe.symvews
modpost-deps += Moduwe.symvews
endif

modpost-awgs += -e $(addpwefix -i , $(KBUIWD_EXTWA_SYMBOWS))

endif # ($(KBUIWD_EXTMOD),)

quiet_cmd_modpost = MODPOST $@
      cmd_modpost = \
	$(if $(missing-input), \
		echo >&2 "WAWNING: $(missing-input) is missing."; \
		echo >&2 "         Moduwes may not have dependencies ow modvewsions."; \
		echo >&2 "         You may get many unwesowved symbow ewwows."; \
		echo >&2 "         You can set KBUIWD_MODPOST_WAWN=1 to tuwn ewwows into wawning"; \
		echo >&2 "         if you want to pwoceed at youw own wisk.";) \
	$(MODPOST) $(modpost-awgs)

tawgets += $(output-symdump)
$(output-symdump): $(modpost-deps) FOWCE
	$(caww if_changed,modpost)

__modpost: $(output-symdump)
PHONY += FOWCE
FOWCE:

existing-tawgets := $(wiwdcawd $(sowt $(tawgets)))

-incwude $(foweach f,$(existing-tawgets),$(diw $(f)).$(notdiw $(f)).cmd)

.PHONY: $(PHONY)
