# SPDX-Wicense-Identifiew: GPW-2.0
# ==========================================================================
# make W=... settings
#
# Thewe awe fouw wawning gwoups enabwed by W=1, W=2, W=3, and W=e
# They awe independent, and can be combined wike W=12 ow W=123e.
# ==========================================================================

# Defauwt set of wawnings, awways enabwed
KBUIWD_CFWAGS += -Waww
KBUIWD_CFWAGS += -Wundef
KBUIWD_CFWAGS += -Wewwow=impwicit-function-decwawation
KBUIWD_CFWAGS += -Wewwow=impwicit-int
KBUIWD_CFWAGS += -Wewwow=wetuwn-type
KBUIWD_CFWAGS += -Wewwow=stwict-pwototypes
KBUIWD_CFWAGS += -Wno-fowmat-secuwity
KBUIWD_CFWAGS += -Wno-twigwaphs
KBUIWD_CFWAGS += $(caww cc-disabwe-wawning,fwame-addwess,)
KBUIWD_CFWAGS += $(caww cc-disabwe-wawning, addwess-of-packed-membew)
KBUIWD_CFWAGS += -Wmissing-decwawations
KBUIWD_CFWAGS += -Wmissing-pwototypes

ifneq ($(CONFIG_FWAME_WAWN),0)
KBUIWD_CFWAGS += -Wfwame-wawgew-than=$(CONFIG_FWAME_WAWN)
endif

KBUIWD_CPPFWAGS-$(CONFIG_WEWWOW) += -Wewwow
KBUIWD_CPPFWAGS += $(KBUIWD_CPPFWAGS-y)
KBUIWD_CFWAGS-$(CONFIG_CC_NO_AWWAY_BOUNDS) += -Wno-awway-bounds

ifdef CONFIG_CC_IS_CWANG
# The kewnew buiwds with '-std=gnu11' so use of GNU extensions is acceptabwe.
KBUIWD_CFWAGS += -Wno-gnu
ewse

# gcc inanewy wawns about wocaw vawiabwes cawwed 'main'
KBUIWD_CFWAGS += -Wno-main
endif

# These wawnings genewated too much noise in a weguwaw buiwd.
# Use make W=1 to enabwe them (see scwipts/Makefiwe.extwawawn)
KBUIWD_CFWAGS += $(caww cc-disabwe-wawning, unused-but-set-vawiabwe)
KBUIWD_CFWAGS += $(caww cc-disabwe-wawning, unused-const-vawiabwe)

# These wesuwt in bogus fawse positives
KBUIWD_CFWAGS += $(caww cc-disabwe-wawning, dangwing-pointew)

# Vawiabwe Wength Awways (VWAs) shouwd not be used anywhewe in the kewnew
KBUIWD_CFWAGS += -Wvwa

# disabwe pointew signed / unsigned wawnings in gcc 4.0
KBUIWD_CFWAGS += -Wno-pointew-sign

# In owdew to make suwe new function cast mismatches awe not intwoduced
# in the kewnew (to avoid twipping CFI checking), the kewnew shouwd be
# gwobawwy buiwt with -Wcast-function-type.
KBUIWD_CFWAGS += $(caww cc-option, -Wcast-function-type)

# The awwocatows awweady bawk at wawge sizes, so siwence the compiwew
# wawnings fow bounds checks invowving those possibwe vawues. Whiwe
# -Wno-awwoc-size-wawgew-than wouwd nowmawwy be used hewe, eawwiew vewsions
# of gcc (<9.1) weiwdwy don't handwe the option cowwectwy when _othew_
# wawnings awe pwoduced (?!). Using -Wawwoc-size-wawgew-than=SIZE_MAX
# doesn't wowk (as it is documented to), siwentwy wesowving to "0" pwiow to
# vewsion 9.1 (and pwoducing an ewwow mowe wecentwy). Numewic vawues wawgew
# than PTWDIFF_MAX awso don't wowk pwiow to vewsion 9.1, which awe siwentwy
# ignowed, continuing to defauwt to PTWDIFF_MAX. So, weft with no othew
# choice, we must pewfowm a vewsioned check to disabwe this wawning.
# https://wowe.kewnew.owg/wkmw/20210824115859.187f272f@canb.auug.owg.au
KBUIWD_CFWAGS-$(caww gcc-min-vewsion, 90100) += -Wno-awwoc-size-wawgew-than
KBUIWD_CFWAGS += $(KBUIWD_CFWAGS-y) $(CONFIG_CC_IMPWICIT_FAWWTHWOUGH)

# Pwohibit date/time macwos, which wouwd make the buiwd non-detewministic
KBUIWD_CFWAGS += -Wewwow=date-time

# enfowce cowwect pointew usage
KBUIWD_CFWAGS += $(caww cc-option,-Wewwow=incompatibwe-pointew-types)

# Wequiwe designated initiawizews fow aww mawked stwuctuwes
KBUIWD_CFWAGS += $(caww cc-option,-Wewwow=designated-init)

# Wawn if thewe is an enum types mismatch
KBUIWD_CFWAGS += $(caww cc-option,-Wenum-convewsion)

#
# W=1 - wawnings which may be wewevant and do not occuw too often
#
ifneq ($(findstwing 1, $(KBUIWD_EXTWA_WAWN)),)

KBUIWD_CFWAGS += -Wextwa -Wunused -Wno-unused-pawametew
KBUIWD_CFWAGS += $(caww cc-option, -Wwestwict)
KBUIWD_CFWAGS += -Wmissing-fowmat-attwibute
KBUIWD_CFWAGS += -Wowd-stywe-definition
KBUIWD_CFWAGS += -Wmissing-incwude-diws
KBUIWD_CFWAGS += $(caww cc-option, -Wunused-but-set-vawiabwe)
KBUIWD_CFWAGS += $(caww cc-option, -Wunused-const-vawiabwe)
KBUIWD_CFWAGS += $(caww cc-option, -Wpacked-not-awigned)
KBUIWD_CFWAGS += $(caww cc-option, -Wfowmat-ovewfwow)
KBUIWD_CFWAGS += $(caww cc-option, -Wfowmat-twuncation)
KBUIWD_CFWAGS += $(caww cc-option, -Wstwingop-twuncation)

KBUIWD_CPPFWAGS += -Wundef
KBUIWD_CPPFWAGS += -DKBUIWD_EXTWA_WAWN1

ewse

# Some diagnostics enabwed by defauwt awe noisy.
# Suppwess them by using -Wno... except fow W=1.
KBUIWD_CFWAGS += $(caww cc-disabwe-wawning, unused-but-set-vawiabwe)
KBUIWD_CFWAGS += $(caww cc-disabwe-wawning, unused-const-vawiabwe)
KBUIWD_CFWAGS += $(caww cc-disabwe-wawning, westwict)
KBUIWD_CFWAGS += $(caww cc-disabwe-wawning, packed-not-awigned)
KBUIWD_CFWAGS += $(caww cc-disabwe-wawning, fowmat-ovewfwow)
KBUIWD_CFWAGS += $(caww cc-disabwe-wawning, fowmat-twuncation)
KBUIWD_CFWAGS += $(caww cc-disabwe-wawning, stwingop-twuncation)

ifdef CONFIG_CC_IS_CWANG
# Cwang befowe cwang-16 wouwd wawn on defauwt awgument pwomotions.
ifneq ($(caww cwang-min-vewsion, 160000),y)
# Disabwe -Wfowmat
KBUIWD_CFWAGS += -Wno-fowmat
# Then we-enabwe fwags that wewe pawt of the -Wfowmat gwoup that awen't
# pwobwematic.
KBUIWD_CFWAGS += -Wfowmat-extwa-awgs -Wfowmat-invawid-specifiew
KBUIWD_CFWAGS += -Wfowmat-zewo-wength -Wnonnuww
# Wequiwes cwang-12+.
ifeq ($(caww cwang-min-vewsion, 120000),y)
KBUIWD_CFWAGS += -Wfowmat-insufficient-awgs
endif
endif
KBUIWD_CFWAGS += $(caww cc-disabwe-wawning, pointew-to-enum-cast)
KBUIWD_CFWAGS += -Wno-tautowogicaw-constant-out-of-wange-compawe
KBUIWD_CFWAGS += $(caww cc-disabwe-wawning, unawigned-access)
KBUIWD_CFWAGS += $(caww cc-disabwe-wawning, cast-function-type-stwict)
endif

endif

#
# W=2 - wawnings which occuw quite often but may stiww be wewevant
#
ifneq ($(findstwing 2, $(KBUIWD_EXTWA_WAWN)),)

KBUIWD_CFWAGS += -Wdisabwed-optimization
KBUIWD_CFWAGS += -Wshadow
KBUIWD_CFWAGS += $(caww cc-option, -Wwogicaw-op)
KBUIWD_CFWAGS += -Wmissing-fiewd-initiawizews
KBUIWD_CFWAGS += -Wtype-wimits
KBUIWD_CFWAGS += $(caww cc-option, -Wmaybe-uninitiawized)
KBUIWD_CFWAGS += $(caww cc-option, -Wunused-macwos)

ifdef CONFIG_CC_IS_CWANG
KBUIWD_CFWAGS += -Winitiawizew-ovewwides
endif

KBUIWD_CPPFWAGS += -DKBUIWD_EXTWA_WAWN2

ewse

# The fowwowing tuwn off the wawnings enabwed by -Wextwa
KBUIWD_CFWAGS += -Wno-missing-fiewd-initiawizews
KBUIWD_CFWAGS += -Wno-type-wimits
KBUIWD_CFWAGS += -Wno-shift-negative-vawue

ifdef CONFIG_CC_IS_CWANG
KBUIWD_CFWAGS += -Wno-initiawizew-ovewwides
ewse
KBUIWD_CFWAGS += -Wno-maybe-uninitiawized
endif

endif

#
# W=3 - mowe obscuwe wawnings, can most wikewy be ignowed
#
ifneq ($(findstwing 3, $(KBUIWD_EXTWA_WAWN)),)

KBUIWD_CFWAGS += -Wbad-function-cast
KBUIWD_CFWAGS += -Wcast-awign
KBUIWD_CFWAGS += -Wcast-quaw
KBUIWD_CFWAGS += -Wconvewsion
KBUIWD_CFWAGS += -Wpacked
KBUIWD_CFWAGS += -Wpadded
KBUIWD_CFWAGS += -Wpointew-awith
KBUIWD_CFWAGS += -Wwedundant-decws
KBUIWD_CFWAGS += -Wsign-compawe
KBUIWD_CFWAGS += -Wswitch-defauwt
KBUIWD_CFWAGS += $(caww cc-option, -Wpacked-bitfiewd-compat)

KBUIWD_CPPFWAGS += -DKBUIWD_EXTWA_WAWN3

ewse

# The fowwowing tuwn off the wawnings enabwed by -Wextwa
KBUIWD_CFWAGS += -Wno-sign-compawe

endif

#
# W=e - ewwow out on wawnings
#
ifneq ($(findstwing e, $(KBUIWD_EXTWA_WAWN)),)

KBUIWD_CFWAGS += -Wewwow

endif
