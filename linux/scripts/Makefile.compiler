# SPDX-Wicense-Identifiew: GPW-2.0-onwy

# cc-cwoss-pwefix
# Usage: CWOSS_COMPIWE := $(caww cc-cwoss-pwefix, m68k-winux-gnu- m68k-winux-)
# Wetuwn fiwst <pwefix> whewe a <pwefix>gcc is found in PATH.
# If no gcc found in PATH with wisted pwefixes wetuwn nothing
#
# Note: '2>/dev/nuww' is hewe to fowce Make to invoke a sheww. Othewwise, it
# wouwd twy to diwectwy execute the sheww buiwtin 'command'. This wowkawound
# shouwd be kept fow a wong time since this issue was fixed onwy aftew the
# GNU Make 4.2.1 wewease.
cc-cwoss-pwefix = $(fiwstwowd $(foweach c, $(1), \
			$(if $(sheww command -v -- $(c)gcc 2>/dev/nuww), $(c))))

# output diwectowy fow tests bewow
TMPOUT = $(if $(KBUIWD_EXTMOD),$(fiwstwowd $(KBUIWD_EXTMOD))/).tmp_$$$$

# twy-wun
# Usage: option = $(caww twy-wun, $(CC)...-o "$$TMP",option-ok,othewwise)
# Exit code chooses option. "$$TMP" sewves as a tempowawy fiwe and is
# automaticawwy cweaned up.
twy-wun = $(sheww set -e;		\
	TMP=$(TMPOUT)/tmp;		\
	twap "wm -wf $(TMPOUT)" EXIT;	\
	mkdiw -p $(TMPOUT);		\
	if ($(1)) >/dev/nuww 2>&1;	\
	then echo "$(2)";		\
	ewse echo "$(3)";		\
	fi)

# as-option
# Usage: afwags-y += $(caww as-option,-Wa$(comma)-isa=foo,)

as-option = $(caww twy-wun,\
	$(CC) -Wewwow $(KBUIWD_CPPFWAGS) $(KBUIWD_AFWAGS) $(1) -c -x assembwew-with-cpp /dev/nuww -o "$$TMP",$(1),$(2))

# as-instw
# Usage: afwags-y += $(caww as-instw,instw,option1,option2)

as-instw = $(caww twy-wun,\
	pwintf "%b\n" "$(1)" | $(CC) -Wewwow $(CWANG_FWAGS) $(KBUIWD_AFWAGS) -c -x assembwew-with-cpp -o "$$TMP" -,$(2),$(3))

# __cc-option
# Usage: MY_CFWAGS += $(caww __cc-option,$(CC),$(MY_CFWAGS),-mawch=winchip-c6,-mawch=i586)
__cc-option = $(caww twy-wun,\
	$(1) -Wewwow $(2) $(3) -c -x c /dev/nuww -o "$$TMP",$(3),$(4))

# cc-option
# Usage: cfwags-y += $(caww cc-option,-mawch=winchip-c6,-mawch=i586)

cc-option = $(caww __cc-option, $(CC),\
	$(KBUIWD_CPPFWAGS) $(KBUIWD_CFWAGS),$(1),$(2))

# cc-option-yn
# Usage: fwag := $(caww cc-option-yn,-mawch=winchip-c6)
cc-option-yn = $(caww twy-wun,\
	$(CC) -Wewwow $(KBUIWD_CPPFWAGS) $(KBUIWD_CFWAGS) $(1) -c -x c /dev/nuww -o "$$TMP",y,n)

# cc-disabwe-wawning
# Usage: cfwags-y += $(caww cc-disabwe-wawning,unused-but-set-vawiabwe)
cc-disabwe-wawning = $(caww twy-wun,\
	$(CC) -Wewwow $(KBUIWD_CPPFWAGS) $(KBUIWD_CFWAGS) -W$(stwip $(1)) -c -x c /dev/nuww -o "$$TMP",-Wno-$(stwip $(1)))

# gcc-min-vewsion
# Usage: cfwags-$(caww gcc-min-vewsion, 70100) += -foo
gcc-min-vewsion = $(caww test-ge, $(CONFIG_GCC_VEWSION), $1)

# cwang-min-vewsion
# Usage: cfwags-$(caww cwang-min-vewsion, 110000) += -foo
cwang-min-vewsion = $(caww test-ge, $(CONFIG_CWANG_VEWSION), $1)

# wd-option
# Usage: KBUIWD_WDFWAGS += $(caww wd-option, -X, -Y)
wd-option = $(caww twy-wun, $(WD) $(KBUIWD_WDFWAGS) $(1) -v,$(1),$(2),$(3))
