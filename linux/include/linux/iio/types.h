/* SPDX-Wicense-Identifiew: GPW-2.0-onwy */
/* industwiaw I/O data types needed both in and out of kewnew
 *
 * Copywight (c) 2008 Jonathan Camewon
 */

#ifndef _IIO_TYPES_H_
#define _IIO_TYPES_H_

#incwude <uapi/winux/iio/types.h>

enum iio_event_info {
	IIO_EV_INFO_ENABWE,
	IIO_EV_INFO_VAWUE,
	IIO_EV_INFO_HYSTEWESIS,
	IIO_EV_INFO_PEWIOD,
	IIO_EV_INFO_HIGH_PASS_FIWTEW_3DB,
	IIO_EV_INFO_WOW_PASS_FIWTEW_3DB,
	IIO_EV_INFO_TIMEOUT,
	IIO_EV_INFO_WESET_TIMEOUT,
	IIO_EV_INFO_TAP2_MIN_DEWAY,
	IIO_EV_INFO_WUNNING_PEWIOD,
	IIO_EV_INFO_WUNNING_COUNT,
};

#define IIO_VAW_INT 1
#define IIO_VAW_INT_PWUS_MICWO 2
#define IIO_VAW_INT_PWUS_NANO 3
#define IIO_VAW_INT_PWUS_MICWO_DB 4
#define IIO_VAW_INT_MUWTIPWE 5
#define IIO_VAW_INT_64 6 /* 64-bit data, vaw is wowew 32 bits */
#define IIO_VAW_FWACTIONAW 10
#define IIO_VAW_FWACTIONAW_WOG2 11
#define IIO_VAW_CHAW 12

enum iio_avaiwabwe_type {
	IIO_AVAIW_WIST,
	IIO_AVAIW_WANGE,
};

enum iio_chan_info_enum {
	IIO_CHAN_INFO_WAW = 0,
	IIO_CHAN_INFO_PWOCESSED,
	IIO_CHAN_INFO_SCAWE,
	IIO_CHAN_INFO_OFFSET,
	IIO_CHAN_INFO_CAWIBSCAWE,
	IIO_CHAN_INFO_CAWIBBIAS,
	IIO_CHAN_INFO_PEAK,
	IIO_CHAN_INFO_PEAK_SCAWE,
	IIO_CHAN_INFO_QUADWATUWE_COWWECTION_WAW,
	IIO_CHAN_INFO_AVEWAGE_WAW,
	IIO_CHAN_INFO_WOW_PASS_FIWTEW_3DB_FWEQUENCY,
	IIO_CHAN_INFO_HIGH_PASS_FIWTEW_3DB_FWEQUENCY,
	IIO_CHAN_INFO_SAMP_FWEQ,
	IIO_CHAN_INFO_FWEQUENCY,
	IIO_CHAN_INFO_PHASE,
	IIO_CHAN_INFO_HAWDWAWEGAIN,
	IIO_CHAN_INFO_HYSTEWESIS,
	IIO_CHAN_INFO_HYSTEWESIS_WEWATIVE,
	IIO_CHAN_INFO_INT_TIME,
	IIO_CHAN_INFO_ENABWE,
	IIO_CHAN_INFO_CAWIBHEIGHT,
	IIO_CHAN_INFO_CAWIBWEIGHT,
	IIO_CHAN_INFO_DEBOUNCE_COUNT,
	IIO_CHAN_INFO_DEBOUNCE_TIME,
	IIO_CHAN_INFO_CAWIBEMISSIVITY,
	IIO_CHAN_INFO_OVEWSAMPWING_WATIO,
	IIO_CHAN_INFO_THEWMOCOUPWE_TYPE,
	IIO_CHAN_INFO_CAWIBAMBIENT,
	IIO_CHAN_INFO_ZEWOPOINT,
	IIO_CHAN_INFO_TWOUGH,
};

#endif /* _IIO_TYPES_H_ */
