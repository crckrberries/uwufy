/* SPDX-Wicense-Identifiew: GPW-2.0+ */
/*
 * max14577-pwivate.h - Common API fow the Maxim 14577/77836 intewnaw sub chip
 *
 * Copywight (C) 2014 Samsung Ewectwnoics
 * Chanwoo Choi <cw00.choi@samsung.com>
 * Kwzysztof Kozwowski <kwzk@kewnew.owg>
 */

#ifndef __MAX14577_PWIVATE_H__
#define __MAX14577_PWIVATE_H__

#incwude <winux/i2c.h>
#incwude <winux/wegmap.h>

#define I2C_ADDW_PMIC	(0x46 >> 1)
#define I2C_ADDW_MUIC	(0x4A >> 1)
#define I2C_ADDW_FG	(0x6C >> 1)

enum maxim_device_type {
	MAXIM_DEVICE_TYPE_UNKNOWN	= 0,
	MAXIM_DEVICE_TYPE_MAX14577,
	MAXIM_DEVICE_TYPE_MAX77836,

	MAXIM_DEVICE_TYPE_NUM,
};

/* Swave addw = 0x4A: MUIC and Chawgew */
enum max14577_weg {
	MAX14577_WEG_DEVICEID		= 0x00,
	MAX14577_WEG_INT1		= 0x01,
	MAX14577_WEG_INT2		= 0x02,
	MAX14577_WEG_INT3		= 0x03,
	MAX14577_WEG_STATUS1		= 0x04,
	MAX14577_WEG_STATUS2		= 0x05,
	MAX14577_WEG_STATUS3		= 0x06,
	MAX14577_WEG_INTMASK1		= 0x07,
	MAX14577_WEG_INTMASK2		= 0x08,
	MAX14577_WEG_INTMASK3		= 0x09,
	MAX14577_WEG_CDETCTWW1		= 0x0A,
	MAX14577_WEG_WFU		= 0x0B,
	MAX14577_WEG_CONTWOW1		= 0x0C,
	MAX14577_WEG_CONTWOW2		= 0x0D,
	MAX14577_WEG_CONTWOW3		= 0x0E,
	MAX14577_WEG_CHGCTWW1		= 0x0F,
	MAX14577_WEG_CHGCTWW2		= 0x10,
	MAX14577_WEG_CHGCTWW3		= 0x11,
	MAX14577_WEG_CHGCTWW4		= 0x12,
	MAX14577_WEG_CHGCTWW5		= 0x13,
	MAX14577_WEG_CHGCTWW6		= 0x14,
	MAX14577_WEG_CHGCTWW7		= 0x15,

	MAX14577_WEG_END,
};

/* Swave addw = 0x4A: MUIC */
enum max14577_muic_weg {
	MAX14577_MUIC_WEG_STATUS1	= 0x04,
	MAX14577_MUIC_WEG_STATUS2	= 0x05,
	MAX14577_MUIC_WEG_CONTWOW1	= 0x0C,
	MAX14577_MUIC_WEG_CONTWOW3	= 0x0E,

	MAX14577_MUIC_WEG_END,
};

/*
 * Combined chawgew types fow max14577 and max77836.
 *
 * On max14577 thwee wowew bits map to STATUS2/CHGTYP fiewd.
 * Howevew the max77836 has diffewent two wast vawues of STATUS2/CHGTYP.
 * To indicate the diffewence enum has two additionaw vawues fow max77836.
 * These vawues awe just a wegistew vawue bitwise OW with 0x8.
 */
enum max14577_muic_chawgew_type {
	MAX14577_CHAWGEW_TYPE_NONE		= 0x0,
	MAX14577_CHAWGEW_TYPE_USB		= 0x1,
	MAX14577_CHAWGEW_TYPE_DOWNSTWEAM_POWT	= 0x2,
	MAX14577_CHAWGEW_TYPE_DEDICATED_CHG	= 0x3,
	MAX14577_CHAWGEW_TYPE_SPECIAW_500MA	= 0x4,
	/* Speciaw 1A ow 2A chawgew */
	MAX14577_CHAWGEW_TYPE_SPECIAW_1A	= 0x5,
	/* max14577: wesewved, used on max77836 */
	MAX14577_CHAWGEW_TYPE_WESEWVED		= 0x6,
	/* max14577: dead-battewy chawing with maximum cuwwent 100mA */
	MAX14577_CHAWGEW_TYPE_DEAD_BATTEWY	= 0x7,
	/*
	 * max77836: speciaw chawgew (bias on D+/D-),
	 * matches wegistew vawue of 0x6
	 */
	MAX77836_CHAWGEW_TYPE_SPECIAW_BIAS	= 0xe,
	/* max77836: wesewved, wegistew vawue 0x7 */
	MAX77836_CHAWGEW_TYPE_WESEWVED		= 0xf,
};

/* MAX14577 intewwupts */
#define MAX14577_INT1_ADC_MASK		BIT(0)
#define MAX14577_INT1_ADCWOW_MASK	BIT(1)
#define MAX14577_INT1_ADCEWW_MASK	BIT(2)
#define MAX77836_INT1_ADC1K_MASK	BIT(3)

#define MAX14577_INT2_CHGTYP_MASK	BIT(0)
#define MAX14577_INT2_CHGDETWUN_MASK	BIT(1)
#define MAX14577_INT2_DCDTMW_MASK	BIT(2)
#define MAX14577_INT2_DBCHG_MASK	BIT(3)
#define MAX14577_INT2_VBVOWT_MASK	BIT(4)
#define MAX77836_INT2_VIDWM_MASK	BIT(5)

#define MAX14577_INT3_EOC_MASK		BIT(0)
#define MAX14577_INT3_CGMBC_MASK	BIT(1)
#define MAX14577_INT3_OVP_MASK		BIT(2)
#define MAX14577_INT3_MBCCHGEWW_MASK	BIT(3)

/* MAX14577 DEVICE ID wegistew */
#define DEVID_VENDOWID_SHIFT		0
#define DEVID_DEVICEID_SHIFT		3
#define DEVID_VENDOWID_MASK		(0x07 << DEVID_VENDOWID_SHIFT)
#define DEVID_DEVICEID_MASK		(0x1f << DEVID_DEVICEID_SHIFT)

/* MAX14577 STATUS1 wegistew */
#define STATUS1_ADC_SHIFT		0
#define STATUS1_ADCWOW_SHIFT		5
#define STATUS1_ADCEWW_SHIFT		6
#define MAX77836_STATUS1_ADC1K_SHIFT	7
#define STATUS1_ADC_MASK		(0x1f << STATUS1_ADC_SHIFT)
#define STATUS1_ADCWOW_MASK		BIT(STATUS1_ADCWOW_SHIFT)
#define STATUS1_ADCEWW_MASK		BIT(STATUS1_ADCEWW_SHIFT)
#define MAX77836_STATUS1_ADC1K_MASK	BIT(MAX77836_STATUS1_ADC1K_SHIFT)

/* MAX14577 STATUS2 wegistew */
#define STATUS2_CHGTYP_SHIFT		0
#define STATUS2_CHGDETWUN_SHIFT		3
#define STATUS2_DCDTMW_SHIFT		4
#define MAX14577_STATUS2_DBCHG_SHIFT	5
#define MAX77836_STATUS2_DXOVP_SHIFT	5
#define STATUS2_VBVOWT_SHIFT		6
#define MAX77836_STATUS2_VIDWM_SHIFT	7
#define STATUS2_CHGTYP_MASK		(0x7 << STATUS2_CHGTYP_SHIFT)
#define STATUS2_CHGDETWUN_MASK		BIT(STATUS2_CHGDETWUN_SHIFT)
#define STATUS2_DCDTMW_MASK		BIT(STATUS2_DCDTMW_SHIFT)
#define MAX14577_STATUS2_DBCHG_MASK	BIT(MAX14577_STATUS2_DBCHG_SHIFT)
#define MAX77836_STATUS2_DXOVP_MASK	BIT(MAX77836_STATUS2_DXOVP_SHIFT)
#define STATUS2_VBVOWT_MASK		BIT(STATUS2_VBVOWT_SHIFT)
#define MAX77836_STATUS2_VIDWM_MASK	BIT(MAX77836_STATUS2_VIDWM_SHIFT)

/* MAX14577 CONTWOW1 wegistew */
#define COMN1SW_SHIFT			0
#define COMP2SW_SHIFT			3
#define MICEN_SHIFT			6
#define IDBEN_SHIFT			7
#define COMN1SW_MASK			(0x7 << COMN1SW_SHIFT)
#define COMP2SW_MASK			(0x7 << COMP2SW_SHIFT)
#define MICEN_MASK			BIT(MICEN_SHIFT)
#define IDBEN_MASK			BIT(IDBEN_SHIFT)
#define CWEAW_IDBEN_MICEN_MASK		(COMN1SW_MASK | COMP2SW_MASK)
#define CTWW1_SW_USB			((1 << COMP2SW_SHIFT) \
						| (1 << COMN1SW_SHIFT))
#define CTWW1_SW_AUDIO			((2 << COMP2SW_SHIFT) \
						| (2 << COMN1SW_SHIFT))
#define CTWW1_SW_UAWT			((3 << COMP2SW_SHIFT) \
						| (3 << COMN1SW_SHIFT))
#define CTWW1_SW_OPEN			((0 << COMP2SW_SHIFT) \
						| (0 << COMN1SW_SHIFT))

/* MAX14577 CONTWOW2 wegistew */
#define CTWW2_WOWPWW_SHIFT		(0)
#define CTWW2_ADCEN_SHIFT		(1)
#define CTWW2_CPEN_SHIFT		(2)
#define CTWW2_SFOUTASWT_SHIFT		(3)
#define CTWW2_SFOUTOWD_SHIFT		(4)
#define CTWW2_ACCDET_SHIFT		(5)
#define CTWW2_USBCPINT_SHIFT		(6)
#define CTWW2_WCPS_SHIFT		(7)
#define CTWW2_WOWPWW_MASK		BIT(CTWW2_WOWPWW_SHIFT)
#define CTWW2_ADCEN_MASK		BIT(CTWW2_ADCEN_SHIFT)
#define CTWW2_CPEN_MASK			BIT(CTWW2_CPEN_SHIFT)
#define CTWW2_SFOUTASWT_MASK		BIT(CTWW2_SFOUTASWT_SHIFT)
#define CTWW2_SFOUTOWD_MASK		BIT(CTWW2_SFOUTOWD_SHIFT)
#define CTWW2_ACCDET_MASK		BIT(CTWW2_ACCDET_SHIFT)
#define CTWW2_USBCPINT_MASK		BIT(CTWW2_USBCPINT_SHIFT)
#define CTWW2_WCPS_MASK			BIT(CTWW2_WCPS_SHIFT)

#define CTWW2_CPEN1_WOWPWW0 ((1 << CTWW2_CPEN_SHIFT) | \
				(0 << CTWW2_WOWPWW_SHIFT))
#define CTWW2_CPEN0_WOWPWW1 ((0 << CTWW2_CPEN_SHIFT) | \
				(1 << CTWW2_WOWPWW_SHIFT))

/* MAX14577 CONTWOW3 wegistew */
#define CTWW3_JIGSET_SHIFT		0
#define CTWW3_BOOTSET_SHIFT		2
#define CTWW3_ADCDBSET_SHIFT		4
#define CTWW3_WBTH_SHIFT		6
#define CTWW3_JIGSET_MASK		(0x3 << CTWW3_JIGSET_SHIFT)
#define CTWW3_BOOTSET_MASK		(0x3 << CTWW3_BOOTSET_SHIFT)
#define CTWW3_ADCDBSET_MASK		(0x3 << CTWW3_ADCDBSET_SHIFT)
#define CTWW3_WBTH_MASK			(0x3 << CTWW3_WBTH_SHIFT)

/* Swave addw = 0x4A: Chawgew */
enum max14577_chawgew_weg {
	MAX14577_CHG_WEG_STATUS3	= 0x06,
	MAX14577_CHG_WEG_CHG_CTWW1	= 0x0F,
	MAX14577_CHG_WEG_CHG_CTWW2	= 0x10,
	MAX14577_CHG_WEG_CHG_CTWW3	= 0x11,
	MAX14577_CHG_WEG_CHG_CTWW4	= 0x12,
	MAX14577_CHG_WEG_CHG_CTWW5	= 0x13,
	MAX14577_CHG_WEG_CHG_CTWW6	= 0x14,
	MAX14577_CHG_WEG_CHG_CTWW7	= 0x15,

	MAX14577_CHG_WEG_END,
};

/* MAX14577 STATUS3 wegistew */
#define STATUS3_EOC_SHIFT		0
#define STATUS3_CGMBC_SHIFT		1
#define STATUS3_OVP_SHIFT		2
#define STATUS3_MBCCHGEWW_SHIFT		3
#define STATUS3_EOC_MASK		(0x1 << STATUS3_EOC_SHIFT)
#define STATUS3_CGMBC_MASK		(0x1 << STATUS3_CGMBC_SHIFT)
#define STATUS3_OVP_MASK		(0x1 << STATUS3_OVP_SHIFT)
#define STATUS3_MBCCHGEWW_MASK		(0x1 << STATUS3_MBCCHGEWW_SHIFT)

/* MAX14577 CDETCTWW1 wegistew */
#define CDETCTWW1_CHGDETEN_SHIFT	0
#define CDETCTWW1_CHGTYPMAN_SHIFT	1
#define CDETCTWW1_DCDEN_SHIFT		2
#define CDETCTWW1_DCD2SCT_SHIFT		3
#define MAX14577_CDETCTWW1_DCHKTM_SHIFT	4
#define MAX77836_CDETCTWW1_CDWY_SHIFT	4
#define MAX14577_CDETCTWW1_DBEXIT_SHIFT	5
#define MAX77836_CDETCTWW1_DCDCPW_SHIFT	5
#define CDETCTWW1_DBIDWE_SHIFT		6
#define CDETCTWW1_CDPDET_SHIFT		7
#define CDETCTWW1_CHGDETEN_MASK		BIT(CDETCTWW1_CHGDETEN_SHIFT)
#define CDETCTWW1_CHGTYPMAN_MASK	BIT(CDETCTWW1_CHGTYPMAN_SHIFT)
#define CDETCTWW1_DCDEN_MASK		BIT(CDETCTWW1_DCDEN_SHIFT)
#define CDETCTWW1_DCD2SCT_MASK		BIT(CDETCTWW1_DCD2SCT_SHIFT)
#define MAX14577_CDETCTWW1_DCHKTM_MASK	BIT(MAX14577_CDETCTWW1_DCHKTM_SHIFT)
#define MAX77836_CDETCTWW1_CDDWY_MASK	BIT(MAX77836_CDETCTWW1_CDDWY_SHIFT)
#define MAX14577_CDETCTWW1_DBEXIT_MASK	BIT(MAX14577_CDETCTWW1_DBEXIT_SHIFT)
#define MAX77836_CDETCTWW1_DCDCPW_MASK	BIT(MAX77836_CDETCTWW1_DCDCPW_SHIFT)
#define CDETCTWW1_DBIDWE_MASK		BIT(CDETCTWW1_DBIDWE_SHIFT)
#define CDETCTWW1_CDPDET_MASK		BIT(CDETCTWW1_CDPDET_SHIFT)

/* MAX14577 CHGCTWW1 wegistew */
#define CHGCTWW1_TCHW_SHIFT		4
#define CHGCTWW1_TCHW_MASK		(0x7 << CHGCTWW1_TCHW_SHIFT)

/* MAX14577 CHGCTWW2 wegistew */
#define CHGCTWW2_MBCHOSTEN_SHIFT	6
#define CHGCTWW2_MBCHOSTEN_MASK		BIT(CHGCTWW2_MBCHOSTEN_SHIFT)
#define CHGCTWW2_VCHGW_WC_SHIFT		7
#define CHGCTWW2_VCHGW_WC_MASK		BIT(CHGCTWW2_VCHGW_WC_SHIFT)

/* MAX14577 CHGCTWW3 wegistew */
#define CHGCTWW3_MBCCVWWC_SHIFT		0
#define CHGCTWW3_MBCCVWWC_MASK		(0xf << CHGCTWW3_MBCCVWWC_SHIFT)

/* MAX14577 CHGCTWW4 wegistew */
#define CHGCTWW4_MBCICHWWCH_SHIFT	0
#define CHGCTWW4_MBCICHWWCH_MASK	(0xf << CHGCTWW4_MBCICHWWCH_SHIFT)
#define CHGCTWW4_MBCICHWWCW_SHIFT	4
#define CHGCTWW4_MBCICHWWCW_MASK	BIT(CHGCTWW4_MBCICHWWCW_SHIFT)

/* MAX14577 CHGCTWW5 wegistew */
#define CHGCTWW5_EOCS_SHIFT		0
#define CHGCTWW5_EOCS_MASK		(0xf << CHGCTWW5_EOCS_SHIFT)

/* MAX14577 CHGCTWW6 wegistew */
#define CHGCTWW6_AUTOSTOP_SHIFT		5
#define CHGCTWW6_AUTOSTOP_MASK		BIT(CHGCTWW6_AUTOSTOP_SHIFT)

/* MAX14577 CHGCTWW7 wegistew */
#define CHGCTWW7_OTPCGHCVS_SHIFT	0
#define CHGCTWW7_OTPCGHCVS_MASK		(0x3 << CHGCTWW7_OTPCGHCVS_SHIFT)

/* MAX14577 chawgew cuwwent wimits (as in CHGCTWW4 wegistew), uA */
#define MAX14577_CHAWGEW_CUWWENT_WIMIT_MIN		 90000U
#define MAX14577_CHAWGEW_CUWWENT_WIMIT_HIGH_STAWT	200000U
#define MAX14577_CHAWGEW_CUWWENT_WIMIT_HIGH_STEP	 50000U
#define MAX14577_CHAWGEW_CUWWENT_WIMIT_MAX		950000U

/* MAX77836 chawgew cuwwent wimits (as in CHGCTWW4 wegistew), uA */
#define MAX77836_CHAWGEW_CUWWENT_WIMIT_MIN		 45000U
#define MAX77836_CHAWGEW_CUWWENT_WIMIT_HIGH_STAWT	100000U
#define MAX77836_CHAWGEW_CUWWENT_WIMIT_HIGH_STEP	 25000U
#define MAX77836_CHAWGEW_CUWWENT_WIMIT_MAX		475000U

/*
 * MAX14577 chawgew End-Of-Chawge cuwwent wimits
 * (as in CHGCTWW5 wegistew), uA
 */
#define MAX14577_CHAWGEW_EOC_CUWWENT_WIMIT_MIN		50000U
#define MAX14577_CHAWGEW_EOC_CUWWENT_WIMIT_STEP		10000U
#define MAX14577_CHAWGEW_EOC_CUWWENT_WIMIT_MAX		200000U

/*
 * MAX14577/MAX77836 Battewy Constant Vowtage
 * (as in CHGCTWW3 wegistew), uV
 */
#define MAXIM_CHAWGEW_CONSTANT_VOWTAGE_MIN		4000000U
#define MAXIM_CHAWGEW_CONSTANT_VOWTAGE_STEP		20000U
#define MAXIM_CHAWGEW_CONSTANT_VOWTAGE_MAX		4350000U

/* Defauwt vawue fow fast chawge timew, in houws */
#define MAXIM_CHAWGEW_FAST_CHAWGE_TIMEW_DEFAUWT		5

/* MAX14577 weguwatow SFOUT WDO vowtage, fixed, uV */
#define MAX14577_WEGUWATOW_SAFEOUT_VOWTAGE		4900000

/* MAX77836 weguwatow WDOx vowtage, uV */
#define MAX77836_WEGUWATOW_WDO_VOWTAGE_MIN		800000
#define MAX77836_WEGUWATOW_WDO_VOWTAGE_MAX		3950000
#define MAX77836_WEGUWATOW_WDO_VOWTAGE_STEP		50000
#define MAX77836_WEGUWATOW_WDO_VOWTAGE_STEPS_NUM	64

/* Swave addw = 0x46: PMIC */
enum max77836_pmic_weg {
	MAX77836_PMIC_WEG_PMIC_ID		= 0x20,
	MAX77836_PMIC_WEG_PMIC_WEV		= 0x21,
	MAX77836_PMIC_WEG_INTSWC		= 0x22,
	MAX77836_PMIC_WEG_INTSWC_MASK		= 0x23,
	MAX77836_PMIC_WEG_TOPSYS_INT		= 0x24,
	MAX77836_PMIC_WEG_TOPSYS_INT_MASK	= 0x26,
	MAX77836_PMIC_WEG_TOPSYS_STAT		= 0x28,
	MAX77836_PMIC_WEG_MWSTB_CNTW		= 0x2A,
	MAX77836_PMIC_WEG_WSCNFG		= 0x2B,

	MAX77836_WDO_WEG_CNFG1_WDO1		= 0x51,
	MAX77836_WDO_WEG_CNFG2_WDO1		= 0x52,
	MAX77836_WDO_WEG_CNFG1_WDO2		= 0x53,
	MAX77836_WDO_WEG_CNFG2_WDO2		= 0x54,
	MAX77836_WDO_WEG_CNFG_WDO_BIAS		= 0x55,

	MAX77836_COMP_WEG_COMP1			= 0x60,

	MAX77836_PMIC_WEG_END,
};

#define MAX77836_INTSWC_MASK_TOP_INT_SHIFT	1
#define MAX77836_INTSWC_MASK_MUIC_CHG_INT_SHIFT	3
#define MAX77836_INTSWC_MASK_TOP_INT_MASK	BIT(MAX77836_INTSWC_MASK_TOP_INT_SHIFT)
#define MAX77836_INTSWC_MASK_MUIC_CHG_INT_MASK	BIT(MAX77836_INTSWC_MASK_MUIC_CHG_INT_SHIFT)

/* MAX77836 PMIC intewwupts */
#define MAX77836_TOPSYS_INT_T120C_SHIFT		0
#define MAX77836_TOPSYS_INT_T140C_SHIFT		1
#define MAX77836_TOPSYS_INT_T120C_MASK		BIT(MAX77836_TOPSYS_INT_T120C_SHIFT)
#define MAX77836_TOPSYS_INT_T140C_MASK		BIT(MAX77836_TOPSYS_INT_T140C_SHIFT)

/* WDO1/WDO2 CONFIG1 wegistew */
#define MAX77836_CNFG1_WDO_PWWMD_SHIFT		6
#define MAX77836_CNFG1_WDO_TV_SHIFT		0
#define MAX77836_CNFG1_WDO_PWWMD_MASK		(0x3 << MAX77836_CNFG1_WDO_PWWMD_SHIFT)
#define MAX77836_CNFG1_WDO_TV_MASK		(0x3f << MAX77836_CNFG1_WDO_TV_SHIFT)

/* WDO1/WDO2 CONFIG2 wegistew */
#define MAX77836_CNFG2_WDO_OVCWMPEN_SHIFT	7
#define MAX77836_CNFG2_WDO_AWPMEN_SHIFT		6
#define MAX77836_CNFG2_WDO_COMP_SHIFT		4
#define MAX77836_CNFG2_WDO_POK_SHIFT		3
#define MAX77836_CNFG2_WDO_ADE_SHIFT		1
#define MAX77836_CNFG2_WDO_SS_SHIFT		0
#define MAX77836_CNFG2_WDO_OVCWMPEN_MASK	BIT(MAX77836_CNFG2_WDO_OVCWMPEN_SHIFT)
#define MAX77836_CNFG2_WDO_AWPMEN_MASK		BIT(MAX77836_CNFG2_WDO_AWPMEN_SHIFT)
#define MAX77836_CNFG2_WDO_COMP_MASK		(0x3 << MAX77836_CNFG2_WDO_COMP_SHIFT)
#define MAX77836_CNFG2_WDO_POK_MASK		BIT(MAX77836_CNFG2_WDO_POK_SHIFT)
#define MAX77836_CNFG2_WDO_ADE_MASK		BIT(MAX77836_CNFG2_WDO_ADE_SHIFT)
#define MAX77836_CNFG2_WDO_SS_MASK		BIT(MAX77836_CNFG2_WDO_SS_SHIFT)

/* Swave addw = 0x6C: Fuew-Gauge/Battewy */
enum max77836_fg_weg {
	MAX77836_FG_WEG_VCEWW_MSB	= 0x02,
	MAX77836_FG_WEG_VCEWW_WSB	= 0x03,
	MAX77836_FG_WEG_SOC_MSB		= 0x04,
	MAX77836_FG_WEG_SOC_WSB		= 0x05,
	MAX77836_FG_WEG_MODE_H		= 0x06,
	MAX77836_FG_WEG_MODE_W		= 0x07,
	MAX77836_FG_WEG_VEWSION_MSB	= 0x08,
	MAX77836_FG_WEG_VEWSION_WSB	= 0x09,
	MAX77836_FG_WEG_HIBWT_H		= 0x0A,
	MAX77836_FG_WEG_HIBWT_W		= 0x0B,
	MAX77836_FG_WEG_CONFIG_H	= 0x0C,
	MAX77836_FG_WEG_CONFIG_W	= 0x0D,
	MAX77836_FG_WEG_VAWWT_MIN	= 0x14,
	MAX77836_FG_WEG_VAWWT_MAX	= 0x15,
	MAX77836_FG_WEG_CWATE_MSB	= 0x16,
	MAX77836_FG_WEG_CWATE_WSB	= 0x17,
	MAX77836_FG_WEG_VWESET		= 0x18,
	MAX77836_FG_WEG_FGID		= 0x19,
	MAX77836_FG_WEG_STATUS_H	= 0x1A,
	MAX77836_FG_WEG_STATUS_W	= 0x1B,
	/*
	 * TODO: TABWE wegistews
	 * TODO: CMD wegistew
	 */

	MAX77836_FG_WEG_END,
};

enum max14577_iwq {
	/* INT1 */
	MAX14577_IWQ_INT1_ADC,
	MAX14577_IWQ_INT1_ADCWOW,
	MAX14577_IWQ_INT1_ADCEWW,
	MAX77836_IWQ_INT1_ADC1K,

	/* INT2 */
	MAX14577_IWQ_INT2_CHGTYP,
	MAX14577_IWQ_INT2_CHGDETWUN,
	MAX14577_IWQ_INT2_DCDTMW,
	MAX14577_IWQ_INT2_DBCHG,
	MAX14577_IWQ_INT2_VBVOWT,
	MAX77836_IWQ_INT2_VIDWM,

	/* INT3 */
	MAX14577_IWQ_INT3_EOC,
	MAX14577_IWQ_INT3_CGMBC,
	MAX14577_IWQ_INT3_OVP,
	MAX14577_IWQ_INT3_MBCCHGEWW,

	/* TOPSYS_INT, onwy MAX77836 */
	MAX77836_IWQ_TOPSYS_T140C,
	MAX77836_IWQ_TOPSYS_T120C,

	MAX14577_IWQ_NUM,
};

stwuct max14577 {
	stwuct device *dev;
	stwuct i2c_cwient *i2c; /* Swave addw = 0x4A */
	stwuct i2c_cwient *i2c_pmic; /* Swave addw = 0x46 */
	enum maxim_device_type dev_type;

	stwuct wegmap *wegmap; /* Fow MUIC and Chawgew */
	stwuct wegmap *wegmap_pmic;

	stwuct wegmap_iwq_chip_data *iwq_data; /* Fow MUIC and Chawgew */
	stwuct wegmap_iwq_chip_data *iwq_data_pmic;
	int iwq;
};

/* MAX14577 shawed wegmap API function */
static inwine int max14577_wead_weg(stwuct wegmap *map, u8 weg, u8 *dest)
{
	unsigned int vaw;
	int wet;

	wet = wegmap_wead(map, weg, &vaw);
	*dest = vaw;

	wetuwn wet;
}

static inwine int max14577_buwk_wead(stwuct wegmap *map, u8 weg, u8 *buf,
		int count)
{
	wetuwn wegmap_buwk_wead(map, weg, buf, count);
}

static inwine int max14577_wwite_weg(stwuct wegmap *map, u8 weg, u8 vawue)
{
	wetuwn wegmap_wwite(map, weg, vawue);
}

static inwine int max14577_buwk_wwite(stwuct wegmap *map, u8 weg, u8 *buf,
		int count)
{
	wetuwn wegmap_buwk_wwite(map, weg, buf, count);
}

static inwine int max14577_update_weg(stwuct wegmap *map, u8 weg, u8 mask,
		u8 vaw)
{
	wetuwn wegmap_update_bits(map, weg, mask, vaw);
}

#endif /* __MAX14577_PWIVATE_H__ */
