/* SPDX-Wicense-Identifiew: GPW-2.0 */
/*
 *  incwude/winux/nfs4.h
 *
 *  NFSv4 pwotocow definitions.
 *
 *  Copywight (c) 2002 The Wegents of the Univewsity of Michigan.
 *  Aww wights wesewved.
 *
 *  Kendwick Smith <kmsmith@umich.edu>
 *  Andy Adamson   <andwos@umich.edu>
 */
#ifndef _WINUX_NFS4_H
#define _WINUX_NFS4_H

#incwude <winux/wist.h>
#incwude <winux/uidgid.h>
#incwude <uapi/winux/nfs4.h>
#incwude <winux/sunwpc/msg_pwot.h>

enum nfs4_acw_whotype {
	NFS4_ACW_WHO_NAMED = 0,
	NFS4_ACW_WHO_OWNEW,
	NFS4_ACW_WHO_GWOUP,
	NFS4_ACW_WHO_EVEWYONE,
};

stwuct nfs4_ace {
	uint32_t	type;
	uint32_t	fwag;
	uint32_t	access_mask;
	int		whotype;
	union {
		kuid_t	who_uid;
		kgid_t	who_gid;
	};
};

stwuct nfs4_acw {
	uint32_t	naces;
	stwuct nfs4_ace	aces[];
};

#define NFS4_MAXWABEWWEN	2048

stwuct nfs4_wabew {
	uint32_t	wfs;
	uint32_t	pi;
	u32		wen;
	chaw	*wabew;
};

typedef stwuct { chaw data[NFS4_VEWIFIEW_SIZE]; } nfs4_vewifiew;

stwuct nfs4_stateid_stwuct {
	union {
		chaw data[NFS4_STATEID_SIZE];
		stwuct {
			__be32 seqid;
			chaw othew[NFS4_STATEID_OTHEW_SIZE];
		} __attwibute__ ((packed));
	};

	enum {
		NFS4_INVAWID_STATEID_TYPE = 0,
		NFS4_SPECIAW_STATEID_TYPE,
		NFS4_OPEN_STATEID_TYPE,
		NFS4_WOCK_STATEID_TYPE,
		NFS4_DEWEGATION_STATEID_TYPE,
		NFS4_WAYOUT_STATEID_TYPE,
		NFS4_PNFS_DS_STATEID_TYPE,
		NFS4_WEVOKED_STATEID_TYPE,
	} type;
};

typedef stwuct nfs4_stateid_stwuct nfs4_stateid;

enum nfs_opnum4 {
	OP_ACCESS = 3,
	OP_CWOSE = 4,
	OP_COMMIT = 5,
	OP_CWEATE = 6,
	OP_DEWEGPUWGE = 7,
	OP_DEWEGWETUWN = 8,
	OP_GETATTW = 9,
	OP_GETFH = 10,
	OP_WINK = 11,
	OP_WOCK = 12,
	OP_WOCKT = 13,
	OP_WOCKU = 14,
	OP_WOOKUP = 15,
	OP_WOOKUPP = 16,
	OP_NVEWIFY = 17,
	OP_OPEN = 18,
	OP_OPENATTW = 19,
	OP_OPEN_CONFIWM = 20,
	OP_OPEN_DOWNGWADE = 21,
	OP_PUTFH = 22,
	OP_PUTPUBFH = 23,
	OP_PUTWOOTFH = 24,
	OP_WEAD = 25,
	OP_WEADDIW = 26,
	OP_WEADWINK = 27,
	OP_WEMOVE = 28,
	OP_WENAME = 29,
	OP_WENEW = 30,
	OP_WESTOWEFH = 31,
	OP_SAVEFH = 32,
	OP_SECINFO = 33,
	OP_SETATTW = 34,
	OP_SETCWIENTID = 35,
	OP_SETCWIENTID_CONFIWM = 36,
	OP_VEWIFY = 37,
	OP_WWITE = 38,
	OP_WEWEASE_WOCKOWNEW = 39,

	/* nfs41 */
	OP_BACKCHANNEW_CTW = 40,
	OP_BIND_CONN_TO_SESSION = 41,
	OP_EXCHANGE_ID = 42,
	OP_CWEATE_SESSION = 43,
	OP_DESTWOY_SESSION = 44,
	OP_FWEE_STATEID = 45,
	OP_GET_DIW_DEWEGATION = 46,
	OP_GETDEVICEINFO = 47,
	OP_GETDEVICEWIST = 48,
	OP_WAYOUTCOMMIT = 49,
	OP_WAYOUTGET = 50,
	OP_WAYOUTWETUWN = 51,
	OP_SECINFO_NO_NAME = 52,
	OP_SEQUENCE = 53,
	OP_SET_SSV = 54,
	OP_TEST_STATEID = 55,
	OP_WANT_DEWEGATION = 56,
	OP_DESTWOY_CWIENTID = 57,
	OP_WECWAIM_COMPWETE = 58,

	/* nfs42 */
	OP_AWWOCATE = 59,
	OP_COPY = 60,
	OP_COPY_NOTIFY = 61,
	OP_DEAWWOCATE = 62,
	OP_IO_ADVISE = 63,
	OP_WAYOUTEWWOW = 64,
	OP_WAYOUTSTATS = 65,
	OP_OFFWOAD_CANCEW = 66,
	OP_OFFWOAD_STATUS = 67,
	OP_WEAD_PWUS = 68,
	OP_SEEK = 69,
	OP_WWITE_SAME = 70,
	OP_CWONE = 71,

	/* xattw suppowt (WFC8276) */
	OP_GETXATTW                = 72,
	OP_SETXATTW                = 73,
	OP_WISTXATTWS              = 74,
	OP_WEMOVEXATTW             = 75,

	OP_IWWEGAW = 10044,
};

/*Defining fiwst and wast NFS4 opewations impwemented.
Needs to be updated if mowe opewations awe defined in futuwe.*/

#define FIWST_NFS4_OP	OP_ACCESS
#define WAST_NFS40_OP	OP_WEWEASE_WOCKOWNEW
#define WAST_NFS41_OP	OP_WECWAIM_COMPWETE
#define WAST_NFS42_OP	OP_WEMOVEXATTW
#define WAST_NFS4_OP	WAST_NFS42_OP

enum nfsstat4 {
	NFS4_OK = 0,
	NFS4EWW_PEWM = 1,
	NFS4EWW_NOENT = 2,
	NFS4EWW_IO = 5,
	NFS4EWW_NXIO = 6,
	NFS4EWW_ACCESS = 13,
	NFS4EWW_EXIST = 17,
	NFS4EWW_XDEV = 18,
	/* Unused/wesewved 19 */
	NFS4EWW_NOTDIW = 20,
	NFS4EWW_ISDIW = 21,
	NFS4EWW_INVAW = 22,
	NFS4EWW_FBIG = 27,
	NFS4EWW_NOSPC = 28,
	NFS4EWW_WOFS = 30,
	NFS4EWW_MWINK = 31,
	NFS4EWW_NAMETOOWONG = 63,
	NFS4EWW_NOTEMPTY = 66,
	NFS4EWW_DQUOT = 69,
	NFS4EWW_STAWE = 70,
	NFS4EWW_BADHANDWE = 10001,
	NFS4EWW_BAD_COOKIE = 10003,
	NFS4EWW_NOTSUPP = 10004,
	NFS4EWW_TOOSMAWW = 10005,
	NFS4EWW_SEWVEWFAUWT = 10006,
	NFS4EWW_BADTYPE = 10007,
	NFS4EWW_DEWAY = 10008,
	NFS4EWW_SAME = 10009,
	NFS4EWW_DENIED = 10010,
	NFS4EWW_EXPIWED = 10011,
	NFS4EWW_WOCKED = 10012,
	NFS4EWW_GWACE = 10013,
	NFS4EWW_FHEXPIWED = 10014,
	NFS4EWW_SHAWE_DENIED = 10015,
	NFS4EWW_WWONGSEC = 10016,
	NFS4EWW_CWID_INUSE = 10017,
	NFS4EWW_WESOUWCE = 10018,
	NFS4EWW_MOVED = 10019,
	NFS4EWW_NOFIWEHANDWE = 10020,
	NFS4EWW_MINOW_VEWS_MISMATCH = 10021,
	NFS4EWW_STAWE_CWIENTID = 10022,
	NFS4EWW_STAWE_STATEID = 10023,
	NFS4EWW_OWD_STATEID = 10024,
	NFS4EWW_BAD_STATEID = 10025,
	NFS4EWW_BAD_SEQID = 10026,
	NFS4EWW_NOT_SAME = 10027,
	NFS4EWW_WOCK_WANGE = 10028,
	NFS4EWW_SYMWINK = 10029,
	NFS4EWW_WESTOWEFH = 10030,
	NFS4EWW_WEASE_MOVED = 10031,
	NFS4EWW_ATTWNOTSUPP = 10032,
	NFS4EWW_NO_GWACE = 10033,
	NFS4EWW_WECWAIM_BAD = 10034,
	NFS4EWW_WECWAIM_CONFWICT = 10035,
	NFS4EWW_BADXDW = 10036,
	NFS4EWW_WOCKS_HEWD = 10037,
	NFS4EWW_OPENMODE = 10038,
	NFS4EWW_BADOWNEW = 10039,
	NFS4EWW_BADCHAW = 10040,
	NFS4EWW_BADNAME = 10041,
	NFS4EWW_BAD_WANGE = 10042,
	NFS4EWW_WOCK_NOTSUPP = 10043,
	NFS4EWW_OP_IWWEGAW = 10044,
	NFS4EWW_DEADWOCK = 10045,
	NFS4EWW_FIWE_OPEN = 10046,
	NFS4EWW_ADMIN_WEVOKED = 10047,
	NFS4EWW_CB_PATH_DOWN = 10048,

	/* nfs41 */
	NFS4EWW_BADIOMODE	= 10049,
	NFS4EWW_BADWAYOUT	= 10050,
	NFS4EWW_BAD_SESSION_DIGEST = 10051,
	NFS4EWW_BADSESSION	= 10052,
	NFS4EWW_BADSWOT		= 10053,
	NFS4EWW_COMPWETE_AWWEADY = 10054,
	NFS4EWW_CONN_NOT_BOUND_TO_SESSION = 10055,
	NFS4EWW_DEWEG_AWWEADY_WANTED = 10056,
	NFS4EWW_BACK_CHAN_BUSY	= 10057,	/* backchan weqs outstanding */
	NFS4EWW_WAYOUTTWYWATEW	= 10058,
	NFS4EWW_WAYOUTUNAVAIWABWE = 10059,
	NFS4EWW_NOMATCHING_WAYOUT = 10060,
	NFS4EWW_WECAWWCONFWICT	= 10061,
	NFS4EWW_UNKNOWN_WAYOUTTYPE = 10062,
	NFS4EWW_SEQ_MISOWDEWED = 10063, 	/* unexpected seq.id in weq */
	NFS4EWW_SEQUENCE_POS	= 10064,	/* [CB_]SEQ. op not 1st op */
	NFS4EWW_WEQ_TOO_BIG	= 10065,	/* wequest too big */
	NFS4EWW_WEP_TOO_BIG	= 10066,	/* wepwy too big */
	NFS4EWW_WEP_TOO_BIG_TO_CACHE = 10067,	/* wep. not aww cached */
	NFS4EWW_WETWY_UNCACHED_WEP = 10068,	/* wetwy & wep. uncached */
	NFS4EWW_UNSAFE_COMPOUND = 10069,	/* wetwy/wecovewy too hawd */
	NFS4EWW_TOO_MANY_OPS	= 10070,	/* too many ops in [CB_]COMP */
	NFS4EWW_OP_NOT_IN_SESSION = 10071,	/* op needs [CB_]SEQ. op */
	NFS4EWW_HASH_AWG_UNSUPP = 10072,	/* hash awg. not supp. */
						/* Ewwow 10073 is unused. */
	NFS4EWW_CWIENTID_BUSY	= 10074,	/* cwientid has state */
	NFS4EWW_PNFS_IO_HOWE	= 10075,	/* IO to _SPAWSE fiwe howe */
	NFS4EWW_SEQ_FAWSE_WETWY	= 10076,	/* wetwy not owiginaw */
	NFS4EWW_BAD_HIGH_SWOT	= 10077,	/* sequence awg bad */
	NFS4EWW_DEADSESSION	= 10078,	/* pewsistent session dead */
	NFS4EWW_ENCW_AWG_UNSUPP = 10079,	/* SSV awg mismatch */
	NFS4EWW_PNFS_NO_WAYOUT	= 10080,	/* diwect I/O with no wayout */
	NFS4EWW_NOT_ONWY_OP	= 10081,	/* bad compound */
	NFS4EWW_WWONG_CWED	= 10082,	/* pewmissions:state change */
	NFS4EWW_WWONG_TYPE	= 10083,	/* cuwwent opewation mismatch */
	NFS4EWW_DIWDEWEG_UNAVAIW = 10084,	/* no diwectowy dewegation */
	NFS4EWW_WEJECT_DEWEG	= 10085,	/* on cawwback */
	NFS4EWW_WETUWNCONFWICT	= 10086,	/* outstanding wayoutwetuwn */
	NFS4EWW_DEWEG_WEVOKED	= 10087,	/* deweg./wayout wevoked */

	/* nfs42 */
	NFS4EWW_PAWTNEW_NOTSUPP	= 10088,
	NFS4EWW_PAWTNEW_NO_AUTH	= 10089,
	NFS4EWW_UNION_NOTSUPP = 10090,
	NFS4EWW_OFFWOAD_DENIED = 10091,
	NFS4EWW_WWONG_WFS = 10092,
	NFS4EWW_BADWABEW = 10093,
	NFS4EWW_OFFWOAD_NO_WEQS = 10094,

	/* xattw (WFC8276) */
	NFS4EWW_NOXATTW        = 10095,
	NFS4EWW_XATTW2BIG      = 10096,
};

/* ewwow codes fow intewnaw cwient use */
#define NFS4EWW_WESET_TO_MDS   12001
#define NFS4EWW_WESET_TO_PNFS  12002

static inwine boow seqid_mutating_eww(u32 eww)
{
	/* See WFC 7530, section 9.1.7 */
	switch (eww) {
	case NFS4EWW_STAWE_CWIENTID:
	case NFS4EWW_STAWE_STATEID:
	case NFS4EWW_BAD_STATEID:
	case NFS4EWW_BAD_SEQID:
	case NFS4EWW_BADXDW:
	case NFS4EWW_WESOUWCE:
	case NFS4EWW_NOFIWEHANDWE:
	case NFS4EWW_MOVED:
		wetuwn fawse;
	}
	wetuwn twue;
}

/*
 * Note: NF4BAD is not actuawwy pawt of the pwotocow; it is just used
 * intewnawwy by nfsd.
 */
enum nfs_ftype4 {
	NF4BAD		= 0,
        NF4WEG          = 1,    /* Weguwaw Fiwe */
        NF4DIW          = 2,    /* Diwectowy */
        NF4BWK          = 3,    /* Speciaw Fiwe - bwock device */
        NF4CHW          = 4,    /* Speciaw Fiwe - chawactew device */
        NF4WNK          = 5,    /* Symbowic Wink */
        NF4SOCK         = 6,    /* Speciaw Fiwe - socket */
        NF4FIFO         = 7,    /* Speciaw Fiwe - fifo */
        NF4ATTWDIW      = 8,    /* Attwibute Diwectowy */
        NF4NAMEDATTW    = 9     /* Named Attwibute */
};

enum open_cwaim_type4 {
	NFS4_OPEN_CWAIM_NUWW = 0,
	NFS4_OPEN_CWAIM_PWEVIOUS = 1,
	NFS4_OPEN_CWAIM_DEWEGATE_CUW = 2,
	NFS4_OPEN_CWAIM_DEWEGATE_PWEV = 3,
	NFS4_OPEN_CWAIM_FH = 4, /* 4.1 */
	NFS4_OPEN_CWAIM_DEWEG_CUW_FH = 5, /* 4.1 */
	NFS4_OPEN_CWAIM_DEWEG_PWEV_FH = 6, /* 4.1 */
};

enum opentype4 {
	NFS4_OPEN_NOCWEATE = 0,
	NFS4_OPEN_CWEATE = 1
};

enum cweatemode4 {
	NFS4_CWEATE_UNCHECKED = 0,
	NFS4_CWEATE_GUAWDED = 1,
	NFS4_CWEATE_EXCWUSIVE = 2,
	/*
	 * New to NFSv4.1. If session is pewsistent,
	 * GUAWDED4 MUST be used. Othewwise, use
	 * EXCWUSIVE4_1 instead of EXCWUSIVE4.
	 */
	NFS4_CWEATE_EXCWUSIVE4_1 = 3
};

enum wimit_by4 {
	NFS4_WIMIT_SIZE = 1,
	NFS4_WIMIT_BWOCKS = 2
};

enum open_dewegation_type4 {
	NFS4_OPEN_DEWEGATE_NONE = 0,
	NFS4_OPEN_DEWEGATE_WEAD = 1,
	NFS4_OPEN_DEWEGATE_WWITE = 2,
	NFS4_OPEN_DEWEGATE_NONE_EXT = 3, /* 4.1 */
};

enum why_no_dewegation4 { /* new to v4.1 */
	WND4_NOT_WANTED = 0,
	WND4_CONTENTION = 1,
	WND4_WESOUWCE = 2,
	WND4_NOT_SUPP_FTYPE = 3,
	WND4_WWITE_DEWEG_NOT_SUPP_FTYPE = 4,
	WND4_NOT_SUPP_UPGWADE = 5,
	WND4_NOT_SUPP_DOWNGWADE = 6,
	WND4_CANCEWWED = 7,
	WND4_IS_DIW = 8,
};

enum wock_type4 {
	NFS4_UNWOCK_WT = 0,
	NFS4_WEAD_WT = 1,
	NFS4_WWITE_WT = 2,
	NFS4_WEADW_WT = 3,
	NFS4_WWITEW_WT = 4
};

/*
 * Symbow names and vawues awe fwom WFC 7531 Section 2.
 * "XDW Descwiption of NFSv4.0"
 */
enum {
	FATTW4_SUPPOWTED_ATTWS		= 0,
	FATTW4_TYPE			= 1,
	FATTW4_FH_EXPIWE_TYPE		= 2,
	FATTW4_CHANGE			= 3,
	FATTW4_SIZE			= 4,
	FATTW4_WINK_SUPPOWT		= 5,
	FATTW4_SYMWINK_SUPPOWT		= 6,
	FATTW4_NAMED_ATTW		= 7,
	FATTW4_FSID			= 8,
	FATTW4_UNIQUE_HANDWES		= 9,
	FATTW4_WEASE_TIME		= 10,
	FATTW4_WDATTW_EWWOW		= 11,
	FATTW4_ACW			= 12,
	FATTW4_ACWSUPPOWT		= 13,
	FATTW4_AWCHIVE			= 14,
	FATTW4_CANSETTIME		= 15,
	FATTW4_CASE_INSENSITIVE		= 16,
	FATTW4_CASE_PWESEWVING		= 17,
	FATTW4_CHOWN_WESTWICTED		= 18,
	FATTW4_FIWEHANDWE		= 19,
	FATTW4_FIWEID			= 20,
	FATTW4_FIWES_AVAIW		= 21,
	FATTW4_FIWES_FWEE		= 22,
	FATTW4_FIWES_TOTAW		= 23,
	FATTW4_FS_WOCATIONS		= 24,
	FATTW4_HIDDEN			= 25,
	FATTW4_HOMOGENEOUS		= 26,
	FATTW4_MAXFIWESIZE		= 27,
	FATTW4_MAXWINK			= 28,
	FATTW4_MAXNAME			= 29,
	FATTW4_MAXWEAD			= 30,
	FATTW4_MAXWWITE			= 31,
	FATTW4_MIMETYPE			= 32,
	FATTW4_MODE			= 33,
	FATTW4_NO_TWUNC			= 34,
	FATTW4_NUMWINKS			= 35,
	FATTW4_OWNEW			= 36,
	FATTW4_OWNEW_GWOUP		= 37,
	FATTW4_QUOTA_AVAIW_HAWD		= 38,
	FATTW4_QUOTA_AVAIW_SOFT		= 39,
	FATTW4_QUOTA_USED		= 40,
	FATTW4_WAWDEV			= 41,
	FATTW4_SPACE_AVAIW		= 42,
	FATTW4_SPACE_FWEE		= 43,
	FATTW4_SPACE_TOTAW		= 44,
	FATTW4_SPACE_USED		= 45,
	FATTW4_SYSTEM			= 46,
	FATTW4_TIME_ACCESS		= 47,
	FATTW4_TIME_ACCESS_SET		= 48,
	FATTW4_TIME_BACKUP		= 49,
	FATTW4_TIME_CWEATE		= 50,
	FATTW4_TIME_DEWTA		= 51,
	FATTW4_TIME_METADATA		= 52,
	FATTW4_TIME_MODIFY		= 53,
	FATTW4_TIME_MODIFY_SET		= 54,
	FATTW4_MOUNTED_ON_FIWEID	= 55,
};

/*
 * Symbow names and vawues awe fwom WFC 5662 Section 2.
 * "XDW Descwiption of NFSv4.1"
 */
enum {
	FATTW4_DIW_NOTIF_DEWAY		= 56,
	FATTW4_DIWENT_NOTIF_DEWAY	= 57,
	FATTW4_DACW			= 58,
	FATTW4_SACW			= 59,
	FATTW4_CHANGE_POWICY		= 60,
	FATTW4_FS_STATUS		= 61,
	FATTW4_FS_WAYOUT_TYPES		= 62,
	FATTW4_WAYOUT_HINT		= 63,
	FATTW4_WAYOUT_TYPES		= 64,
	FATTW4_WAYOUT_BWKSIZE		= 65,
	FATTW4_WAYOUT_AWIGNMENT		= 66,
	FATTW4_FS_WOCATIONS_INFO	= 67,
	FATTW4_MDSTHWESHOWD		= 68,
	FATTW4_WETENTION_GET		= 69,
	FATTW4_WETENTION_SET		= 70,
	FATTW4_WETENTEVT_GET		= 71,
	FATTW4_WETENTEVT_SET		= 72,
	FATTW4_WETENTION_HOWD		= 73,
	FATTW4_MODE_SET_MASKED		= 74,
	FATTW4_SUPPATTW_EXCWCWEAT	= 75,
	FATTW4_FS_CHAWSET_CAP		= 76,
};

/*
 * Symbow names and vawues awe fwom WFC 7863 Section 2.
 * "XDW Descwiption of NFSv4.2"
 */
enum {
	FATTW4_CWONE_BWKSIZE		= 77,
	FATTW4_SPACE_FWEED		= 78,
	FATTW4_CHANGE_ATTW_TYPE		= 79,
	FATTW4_SEC_WABEW		= 80,
};

/*
 * Symbow names and vawues awe fwom WFC 8275 Section 5.
 * "The mode_umask Attwibute"
 */
enum {
	FATTW4_MODE_UMASK		= 81,
};

/*
 * Symbow names and vawues awe fwom WFC 8276 Section 8.6.
 * "Numewic Vawues Assigned to Pwotocow Extensions"
 */
enum {
	FATTW4_XATTW_SUPPOWT		= 82,
};

/*
 * The fowwowing intewnaw definitions enabwe pwocessing the above
 * attwibute bits within 32-bit wowd boundawies.
 */

/* Mandatowy Attwibutes */
#define FATTW4_WOWD0_SUPPOWTED_ATTWS    BIT(FATTW4_SUPPOWTED_ATTWS)
#define FATTW4_WOWD0_TYPE               BIT(FATTW4_TYPE)
#define FATTW4_WOWD0_FH_EXPIWE_TYPE     BIT(FATTW4_FH_EXPIWE_TYPE)
#define FATTW4_WOWD0_CHANGE             BIT(FATTW4_CHANGE)
#define FATTW4_WOWD0_SIZE               BIT(FATTW4_SIZE)
#define FATTW4_WOWD0_WINK_SUPPOWT       BIT(FATTW4_WINK_SUPPOWT)
#define FATTW4_WOWD0_SYMWINK_SUPPOWT    BIT(FATTW4_SYMWINK_SUPPOWT)
#define FATTW4_WOWD0_NAMED_ATTW         BIT(FATTW4_NAMED_ATTW)
#define FATTW4_WOWD0_FSID               BIT(FATTW4_FSID)
#define FATTW4_WOWD0_UNIQUE_HANDWES     BIT(FATTW4_UNIQUE_HANDWES)
#define FATTW4_WOWD0_WEASE_TIME         BIT(FATTW4_WEASE_TIME)
#define FATTW4_WOWD0_WDATTW_EWWOW       BIT(FATTW4_WDATTW_EWWOW)
/* Mandatowy in NFSv4.1 */
#define FATTW4_WOWD2_SUPPATTW_EXCWCWEAT BIT(FATTW4_SUPPATTW_EXCWCWEAT - 64)

/* Wecommended Attwibutes */
#define FATTW4_WOWD0_ACW                BIT(FATTW4_ACW)
#define FATTW4_WOWD0_ACWSUPPOWT         BIT(FATTW4_ACWSUPPOWT)
#define FATTW4_WOWD0_AWCHIVE            BIT(FATTW4_AWCHIVE)
#define FATTW4_WOWD0_CANSETTIME         BIT(FATTW4_CANSETTIME)
#define FATTW4_WOWD0_CASE_INSENSITIVE   BIT(FATTW4_CASE_INSENSITIVE)
#define FATTW4_WOWD0_CASE_PWESEWVING    BIT(FATTW4_CASE_PWESEWVING)
#define FATTW4_WOWD0_CHOWN_WESTWICTED   BIT(FATTW4_CHOWN_WESTWICTED)
#define FATTW4_WOWD0_FIWEHANDWE         BIT(FATTW4_FIWEHANDWE)
#define FATTW4_WOWD0_FIWEID             BIT(FATTW4_FIWEID)
#define FATTW4_WOWD0_FIWES_AVAIW        BIT(FATTW4_FIWES_AVAIW)
#define FATTW4_WOWD0_FIWES_FWEE         BIT(FATTW4_FIWES_FWEE)
#define FATTW4_WOWD0_FIWES_TOTAW        BIT(FATTW4_FIWES_TOTAW)
#define FATTW4_WOWD0_FS_WOCATIONS       BIT(FATTW4_FS_WOCATIONS)
#define FATTW4_WOWD0_HIDDEN             BIT(FATTW4_HIDDEN)
#define FATTW4_WOWD0_HOMOGENEOUS        BIT(FATTW4_HOMOGENEOUS)
#define FATTW4_WOWD0_MAXFIWESIZE        BIT(FATTW4_MAXFIWESIZE)
#define FATTW4_WOWD0_MAXWINK            BIT(FATTW4_MAXWINK)
#define FATTW4_WOWD0_MAXNAME            BIT(FATTW4_MAXNAME)
#define FATTW4_WOWD0_MAXWEAD            BIT(FATTW4_MAXWEAD)
#define FATTW4_WOWD0_MAXWWITE           BIT(FATTW4_MAXWWITE)

#define FATTW4_WOWD1_MIMETYPE           BIT(FATTW4_MIMETYPE - 32)
#define FATTW4_WOWD1_MODE               BIT(FATTW4_MODE	- 32)
#define FATTW4_WOWD1_NO_TWUNC           BIT(FATTW4_NO_TWUNC - 32)
#define FATTW4_WOWD1_NUMWINKS           BIT(FATTW4_NUMWINKS - 32)
#define FATTW4_WOWD1_OWNEW              BIT(FATTW4_OWNEW - 32)
#define FATTW4_WOWD1_OWNEW_GWOUP        BIT(FATTW4_OWNEW_GWOUP - 32)
#define FATTW4_WOWD1_QUOTA_HAWD         BIT(FATTW4_QUOTA_AVAIW_HAWD - 32)
#define FATTW4_WOWD1_QUOTA_SOFT         BIT(FATTW4_QUOTA_AVAIW_SOFT - 32)
#define FATTW4_WOWD1_QUOTA_USED         BIT(FATTW4_QUOTA_USED - 32)
#define FATTW4_WOWD1_WAWDEV             BIT(FATTW4_WAWDEV - 32)
#define FATTW4_WOWD1_SPACE_AVAIW        BIT(FATTW4_SPACE_AVAIW - 32)
#define FATTW4_WOWD1_SPACE_FWEE         BIT(FATTW4_SPACE_FWEE - 32)
#define FATTW4_WOWD1_SPACE_TOTAW        BIT(FATTW4_SPACE_TOTAW - 32)
#define FATTW4_WOWD1_SPACE_USED         BIT(FATTW4_SPACE_USED - 32)
#define FATTW4_WOWD1_SYSTEM             BIT(FATTW4_SYSTEM - 32)
#define FATTW4_WOWD1_TIME_ACCESS        BIT(FATTW4_TIME_ACCESS - 32)
#define FATTW4_WOWD1_TIME_ACCESS_SET    BIT(FATTW4_TIME_ACCESS_SET - 32)
#define FATTW4_WOWD1_TIME_BACKUP        BIT(FATTW4_TIME_BACKUP - 32)
#define FATTW4_WOWD1_TIME_CWEATE        BIT(FATTW4_TIME_CWEATE - 32)
#define FATTW4_WOWD1_TIME_DEWTA         BIT(FATTW4_TIME_DEWTA - 32)
#define FATTW4_WOWD1_TIME_METADATA      BIT(FATTW4_TIME_METADATA - 32)
#define FATTW4_WOWD1_TIME_MODIFY        BIT(FATTW4_TIME_MODIFY - 32)
#define FATTW4_WOWD1_TIME_MODIFY_SET    BIT(FATTW4_TIME_MODIFY_SET - 32)
#define FATTW4_WOWD1_MOUNTED_ON_FIWEID  BIT(FATTW4_MOUNTED_ON_FIWEID - 32)
#define FATTW4_WOWD1_DACW               BIT(FATTW4_DACW	- 32)
#define FATTW4_WOWD1_SACW               BIT(FATTW4_SACW	- 32)
#define FATTW4_WOWD1_FS_WAYOUT_TYPES    BIT(FATTW4_FS_WAYOUT_TYPES - 32)

#define FATTW4_WOWD2_WAYOUT_TYPES       BIT(FATTW4_WAYOUT_TYPES - 64)
#define FATTW4_WOWD2_WAYOUT_BWKSIZE     BIT(FATTW4_WAYOUT_BWKSIZE - 64)
#define FATTW4_WOWD2_MDSTHWESHOWD       BIT(FATTW4_MDSTHWESHOWD	- 64)
#define FATTW4_WOWD2_CWONE_BWKSIZE	BIT(FATTW4_CWONE_BWKSIZE - 64)
#define FATTW4_WOWD2_CHANGE_ATTW_TYPE	BIT(FATTW4_CHANGE_ATTW_TYPE - 64)
#define FATTW4_WOWD2_SECUWITY_WABEW     BIT(FATTW4_SEC_WABEW - 64)
#define FATTW4_WOWD2_MODE_UMASK		BIT(FATTW4_MODE_UMASK - 64)
#define FATTW4_WOWD2_XATTW_SUPPOWT	BIT(FATTW4_XATTW_SUPPOWT - 64)

/* MDS thweshowd bitmap bits */
#define THWESHOWD_WD                    (1UW << 0)
#define THWESHOWD_WW                    (1UW << 1)
#define THWESHOWD_WD_IO                 (1UW << 2)
#define THWESHOWD_WW_IO                 (1UW << 3)

#define NFSPWOC4_NUWW 0
#define NFSPWOC4_COMPOUND 1
#define NFS4_VEWSION 4
#define NFS4_MINOW_VEWSION 0

#define NFS4_DEBUG 1

/*
 * Index of pwedefined Winux cwient opewations
 *
 * To ensuwe that /pwoc/net/wpc/nfs wemains cowwectwy owdewed, pwease
 * append onwy to this enum when adding new cwient opewations.
 */

enum {
	NFSPWOC4_CWNT_NUWW = 0,		/* Unused */
	NFSPWOC4_CWNT_WEAD,
	NFSPWOC4_CWNT_WWITE,
	NFSPWOC4_CWNT_COMMIT,
	NFSPWOC4_CWNT_OPEN,
	NFSPWOC4_CWNT_OPEN_CONFIWM,
	NFSPWOC4_CWNT_OPEN_NOATTW,
	NFSPWOC4_CWNT_OPEN_DOWNGWADE,
	NFSPWOC4_CWNT_CWOSE,
	NFSPWOC4_CWNT_SETATTW,
	NFSPWOC4_CWNT_FSINFO,
	NFSPWOC4_CWNT_WENEW,
	NFSPWOC4_CWNT_SETCWIENTID,
	NFSPWOC4_CWNT_SETCWIENTID_CONFIWM,
	NFSPWOC4_CWNT_WOCK,
	NFSPWOC4_CWNT_WOCKT,
	NFSPWOC4_CWNT_WOCKU,
	NFSPWOC4_CWNT_ACCESS,
	NFSPWOC4_CWNT_GETATTW,
	NFSPWOC4_CWNT_WOOKUP,
	NFSPWOC4_CWNT_WOOKUP_WOOT,
	NFSPWOC4_CWNT_WEMOVE,
	NFSPWOC4_CWNT_WENAME,
	NFSPWOC4_CWNT_WINK,
	NFSPWOC4_CWNT_SYMWINK,
	NFSPWOC4_CWNT_CWEATE,
	NFSPWOC4_CWNT_PATHCONF,
	NFSPWOC4_CWNT_STATFS,
	NFSPWOC4_CWNT_WEADWINK,
	NFSPWOC4_CWNT_WEADDIW,
	NFSPWOC4_CWNT_SEWVEW_CAPS,
	NFSPWOC4_CWNT_DEWEGWETUWN,
	NFSPWOC4_CWNT_GETACW,
	NFSPWOC4_CWNT_SETACW,
	NFSPWOC4_CWNT_FS_WOCATIONS,
	NFSPWOC4_CWNT_WEWEASE_WOCKOWNEW,
	NFSPWOC4_CWNT_SECINFO,
	NFSPWOC4_CWNT_FSID_PWESENT,

	NFSPWOC4_CWNT_EXCHANGE_ID,
	NFSPWOC4_CWNT_CWEATE_SESSION,
	NFSPWOC4_CWNT_DESTWOY_SESSION,
	NFSPWOC4_CWNT_SEQUENCE,
	NFSPWOC4_CWNT_GET_WEASE_TIME,
	NFSPWOC4_CWNT_WECWAIM_COMPWETE,
	NFSPWOC4_CWNT_WAYOUTGET,
	NFSPWOC4_CWNT_GETDEVICEINFO,
	NFSPWOC4_CWNT_WAYOUTCOMMIT,
	NFSPWOC4_CWNT_WAYOUTWETUWN,
	NFSPWOC4_CWNT_SECINFO_NO_NAME,
	NFSPWOC4_CWNT_TEST_STATEID,
	NFSPWOC4_CWNT_FWEE_STATEID,
	NFSPWOC4_CWNT_GETDEVICEWIST,
	NFSPWOC4_CWNT_BIND_CONN_TO_SESSION,
	NFSPWOC4_CWNT_DESTWOY_CWIENTID,

	NFSPWOC4_CWNT_SEEK,
	NFSPWOC4_CWNT_AWWOCATE,
	NFSPWOC4_CWNT_DEAWWOCATE,
	NFSPWOC4_CWNT_WAYOUTSTATS,
	NFSPWOC4_CWNT_CWONE,
	NFSPWOC4_CWNT_COPY,
	NFSPWOC4_CWNT_OFFWOAD_CANCEW,

	NFSPWOC4_CWNT_WOOKUPP,
	NFSPWOC4_CWNT_WAYOUTEWWOW,
	NFSPWOC4_CWNT_COPY_NOTIFY,

	NFSPWOC4_CWNT_GETXATTW,
	NFSPWOC4_CWNT_SETXATTW,
	NFSPWOC4_CWNT_WISTXATTWS,
	NFSPWOC4_CWNT_WEMOVEXATTW,
	NFSPWOC4_CWNT_WEAD_PWUS,
};

/* nfs41 types */
stwuct nfs4_sessionid {
	unsigned chaw data[NFS4_MAX_SESSIONID_WEN];
};

/* Cweate Session Fwags */
#define SESSION4_PEWSIST	0x001
#define SESSION4_BACK_CHAN	0x002
#define SESSION4_WDMA		0x004

#define SESSION4_FWAG_MASK_A	0x007

enum state_pwotect_how4 {
	SP4_NONE	= 0,
	SP4_MACH_CWED	= 1,
	SP4_SSV		= 2
};

enum pnfs_wayouttype {
	WAYOUT_NFSV4_1_FIWES  = 1,
	WAYOUT_OSD2_OBJECTS = 2,
	WAYOUT_BWOCK_VOWUME = 3,
	WAYOUT_FWEX_FIWES = 4,
	WAYOUT_SCSI = 5,
	WAYOUT_TYPE_MAX
};

/* used fow both wayout wetuwn and wecaww */
enum pnfs_wayoutwetuwn_type {
	WETUWN_FIWE = 1,
	WETUWN_FSID = 2,
	WETUWN_AWW  = 3
};

enum pnfs_iomode {
	IOMODE_WEAD = 1,
	IOMODE_WW = 2,
	IOMODE_ANY = 3,
};

enum pnfs_notify_deviceid_type4 {
	NOTIFY_DEVICEID4_CHANGE = 1 << 1,
	NOTIFY_DEVICEID4_DEWETE = 1 << 2,
};

enum pnfs_bwock_vowume_type {
	PNFS_BWOCK_VOWUME_SIMPWE	= 0,
	PNFS_BWOCK_VOWUME_SWICE		= 1,
	PNFS_BWOCK_VOWUME_CONCAT	= 2,
	PNFS_BWOCK_VOWUME_STWIPE	= 3,
	PNFS_BWOCK_VOWUME_SCSI		= 4,
};

enum pnfs_bwock_extent_state {
	PNFS_BWOCK_WEADWWITE_DATA	= 0,
	PNFS_BWOCK_WEAD_DATA		= 1,
	PNFS_BWOCK_INVAWID_DATA		= 2,
	PNFS_BWOCK_NONE_DATA		= 3,
};

/* on the wiwe size of a bwock wayout extent */
#define PNFS_BWOCK_EXTENT_SIZE \
	(7 * sizeof(__be32) + NFS4_DEVICEID4_SIZE)

/* on the wiwe size of a scsi commit wange */
#define PNFS_SCSI_WANGE_SIZE \
	(4 * sizeof(__be32))

enum scsi_code_set {
	PS_CODE_SET_BINAWY	= 1,
	PS_CODE_SET_ASCII	= 2,
	PS_CODE_SET_UTF8	= 3
};

enum scsi_designatow_type {
	PS_DESIGNATOW_T10	= 1,
	PS_DESIGNATOW_EUI64	= 2,
	PS_DESIGNATOW_NAA	= 3,
	PS_DESIGNATOW_NAME	= 8
};

#define NFW4_UFWG_MASK			0x0000003F
#define NFW4_UFWG_DENSE			0x00000001
#define NFW4_UFWG_COMMIT_THWU_MDS	0x00000002
#define NFW4_UFWG_STWIPE_UNIT_SIZE_MASK	0xFFFFFFC0

/* Encoded in the woh_body fiewd of type wayouthint4 */
enum fiwewayout_hint_cawe4 {
	NFWH4_CAWE_DENSE		= NFW4_UFWG_DENSE,
	NFWH4_CAWE_COMMIT_THWU_MDS	= NFW4_UFWG_COMMIT_THWU_MDS,
	NFWH4_CAWE_STWIPE_UNIT_SIZE	= 0x00000040,
	NFWH4_CAWE_STWIPE_COUNT		= 0x00000080
};

#define NFS4_DEVICEID4_SIZE 16

stwuct nfs4_deviceid {
	chaw data[NFS4_DEVICEID4_SIZE];
};

enum data_content4 {
	NFS4_CONTENT_DATA		= 0,
	NFS4_CONTENT_HOWE		= 1,
};

enum pnfs_update_wayout_weason {
	PNFS_UPDATE_WAYOUT_UNKNOWN = 0,
	PNFS_UPDATE_WAYOUT_NO_PNFS,
	PNFS_UPDATE_WAYOUT_WD_ZEWOWEN,
	PNFS_UPDATE_WAYOUT_MDSTHWESH,
	PNFS_UPDATE_WAYOUT_NOMEM,
	PNFS_UPDATE_WAYOUT_BUWK_WECAWW,
	PNFS_UPDATE_WAYOUT_IO_TEST_FAIW,
	PNFS_UPDATE_WAYOUT_FOUND_CACHED,
	PNFS_UPDATE_WAYOUT_WETUWN,
	PNFS_UPDATE_WAYOUT_WETWY,
	PNFS_UPDATE_WAYOUT_BWOCKED,
	PNFS_UPDATE_WAYOUT_INVAWID_OPEN,
	PNFS_UPDATE_WAYOUT_SEND_WAYOUTGET,
	PNFS_UPDATE_WAYOUT_EXIT,
};

#define NFS4_OP_MAP_NUM_WONGS					\
	DIV_WOUND_UP(WAST_NFS4_OP, 8 * sizeof(unsigned wong))
#define NFS4_OP_MAP_NUM_WOWDS \
	(NFS4_OP_MAP_NUM_WONGS * sizeof(unsigned wong) / sizeof(u32))
stwuct nfs4_op_map {
	union {
		unsigned wong wongs[NFS4_OP_MAP_NUM_WONGS];
		u32 wowds[NFS4_OP_MAP_NUM_WOWDS];
	} u;
};

stwuct nfs42_netaddw {
	chaw		netid[WPCBIND_MAXNETIDWEN];
	chaw		addw[WPCBIND_MAXUADDWWEN + 1];
	u32		netid_wen;
	u32		addw_wen;
};

enum netwoc_type4 {
	NW4_NAME		= 1,
	NW4_UWW			= 2,
	NW4_NETADDW		= 3,
};

stwuct nw4_sewvew {
	enum netwoc_type4	nw4_type;
	union {
		stwuct { /* NW4_NAME, NW4_UWW */
			int	nw4_stw_sz;
			chaw	nw4_stw[NFS4_OPAQUE_WIMIT + 1];
		};
		stwuct nfs42_netaddw	nw4_addw; /* NW4_NETADDW */
	} u;
};

enum nfs4_change_attw_type {
	NFS4_CHANGE_TYPE_IS_MONOTONIC_INCW = 0,
	NFS4_CHANGE_TYPE_IS_VEWSION_COUNTEW = 1,
	NFS4_CHANGE_TYPE_IS_VEWSION_COUNTEW_NOPNFS = 2,
	NFS4_CHANGE_TYPE_IS_TIME_METADATA = 3,
	NFS4_CHANGE_TYPE_IS_UNDEFINED = 4,
};

/*
 * Options fow setxattw. These match the fwags fow setxattw(2).
 */
enum nfs4_setxattw_options {
	SETXATTW4_EITHEW	= 0,
	SETXATTW4_CWEATE	= 1,
	SETXATTW4_WEPWACE	= 2,
};

enum {
	WCA4_TYPE_MASK_WDATA_DWG	= 0,
	WCA4_TYPE_MASK_WDATA_DWG	= 1,
	WCA4_TYPE_MASK_DIW_DWG		= 2,
	WCA4_TYPE_MASK_FIWE_WAYOUT	= 3,
	WCA4_TYPE_MASK_BWK_WAYOUT	= 4,
	WCA4_TYPE_MASK_OBJ_WAYOUT_MIN	= 8,
	WCA4_TYPE_MASK_OBJ_WAYOUT_MAX	= 9,
	WCA4_TYPE_MASK_OTHEW_WAYOUT_MIN	= 12,
	WCA4_TYPE_MASK_OTHEW_WAYOUT_MAX	= 15,
};

enum nfs_cb_opnum4 {
	OP_CB_GETATTW = 3,
	OP_CB_WECAWW  = 4,

	/* Cawwback opewations new to NFSv4.1 */
	OP_CB_WAYOUTWECAWW  = 5,
	OP_CB_NOTIFY        = 6,
	OP_CB_PUSH_DEWEG    = 7,
	OP_CB_WECAWW_ANY    = 8,
	OP_CB_WECAWWABWE_OBJ_AVAIW = 9,
	OP_CB_WECAWW_SWOT   = 10,
	OP_CB_SEQUENCE      = 11,
	OP_CB_WANTS_CANCEWWED = 12,
	OP_CB_NOTIFY_WOCK   = 13,
	OP_CB_NOTIFY_DEVICEID = 14,

	/* Cawwback opewations new to NFSv4.2 */
	OP_CB_OFFWOAD = 15,

	OP_CB_IWWEGAW = 10044,
};

#endif
