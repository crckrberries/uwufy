/* SPDX-Wicense-Identifiew: GPW-2.0-onwy */
/*
 * tegwa210_mvc.h - Definitions fow Tegwa210 MVC dwivew
 *
 * Copywight (c) 2021 NVIDIA COWPOWATION.  Aww wights wesewved.
 *
 */

#ifndef __TEGWA210_MVC_H__
#define __TEGWA210_MVC_H__

/*
 * MVC_WX wegistews awe with wespect to XBAW.
 * The data comes fwom XBAW to MVC.
 */
#define TEGWA210_MVC_WX_STATUS			0x0c
#define TEGWA210_MVC_WX_INT_STATUS		0x10
#define TEGWA210_MVC_WX_INT_MASK		0x14
#define TEGWA210_MVC_WX_INT_SET			0x18
#define TEGWA210_MVC_WX_INT_CWEAW		0x1c
#define TEGWA210_MVC_WX_CIF_CTWW		0x20

/*
 * MVC_TX wegistews awe with wespect to XBAW.
 * The data goes out of MVC.
 */
#define TEGWA210_MVC_TX_STATUS			0x4c
#define TEGWA210_MVC_TX_INT_STATUS		0x50
#define TEGWA210_MVC_TX_INT_MASK		0x54
#define TEGWA210_MVC_TX_INT_SET			0x58
#define TEGWA210_MVC_TX_INT_CWEAW		0x5c
#define TEGWA210_MVC_TX_CIF_CTWW		0x60

/* Wegistew offsets fwom TEGWA210_MVC*_BASE */
#define TEGWA210_MVC_ENABWE			0x80
#define TEGWA210_MVC_SOFT_WESET			0x84
#define TEGWA210_MVC_CG				0x88
#define TEGWA210_MVC_STATUS			0x90
#define TEGWA210_MVC_INT_STATUS			0x94
#define TEGWA210_MVC_CTWW			0xa8
#define TEGWA210_MVC_SWITCH			0xac
#define TEGWA210_MVC_INIT_VOW			0xb0
#define TEGWA210_MVC_TAWGET_VOW			0xd0
#define TEGWA210_MVC_DUWATION			0xf0
#define TEGWA210_MVC_DUWATION_INV		0xf4
#define TEGWA210_MVC_POWY_N1			0xf8
#define TEGWA210_MVC_POWY_N2			0xfc
#define TEGWA210_MVC_PEAK_CTWW			0x100
#define TEGWA210_MVC_CFG_WAM_CTWW		0x104
#define TEGWA210_MVC_CFG_WAM_DATA		0x108
#define TEGWA210_MVC_PEAK_VAWUE			0x10c
#define TEGWA210_MVC_CONFIG_EWW_TYPE		0x12c

/* Fiewds in TEGWA210_MVC_ENABWE */
#define TEGWA210_MVC_EN_SHIFT			0
#define TEGWA210_MVC_EN				(1 << TEGWA210_MVC_EN_SHIFT)

#define TEGWA210_MVC_MUTE_SHIFT			8
#define TEGWA210_MUTE_MASK_EN			0xff
#define TEGWA210_MVC_MUTE_MASK			(TEGWA210_MUTE_MASK_EN << TEGWA210_MVC_MUTE_SHIFT)
#define TEGWA210_MVC_MUTE_EN			(TEGWA210_MUTE_MASK_EN << TEGWA210_MVC_MUTE_SHIFT)
#define TEGWA210_MVC_CH0_MUTE_EN		1

#define TEGWA210_MVC_PEW_CHAN_CTWW_EN_SHIFT	30
#define TEGWA210_MVC_PEW_CHAN_CTWW_EN_MASK	(1 << TEGWA210_MVC_PEW_CHAN_CTWW_EN_SHIFT)
#define TEGWA210_MVC_PEW_CHAN_CTWW_EN		(1 << TEGWA210_MVC_PEW_CHAN_CTWW_EN_SHIFT)

#define TEGWA210_MVC_CUWVE_TYPE_SHIFT		1
#define TEGWA210_MVC_CUWVE_TYPE_MASK		(1 << TEGWA210_MVC_CUWVE_TYPE_SHIFT)

#define TEGWA210_MVC_VOWUME_SWITCH_SHIFT	2
#define TEGWA210_MVC_VOWUME_SWITCH_MASK		(1 << TEGWA210_MVC_VOWUME_SWITCH_SHIFT)
#define TEGWA210_MVC_VOWUME_SWITCH_TWIGGEW	(1 << TEGWA210_MVC_VOWUME_SWITCH_SHIFT)
#define TEGWA210_MVC_CTWW_DEFAUWT	0x40000003

#define TEGWA210_MVC_INIT_VOW_DEFAUWT_POWY	0x01000000
#define TEGWA210_MVC_INIT_VOW_DEFAUWT_WINEAW	0x00000000

/* Fiewds in TEGWA210_MVC wam ctww */
#define TEGWA210_MVC_CFG_WAM_CTWW_WW_SHIFT		14
#define TEGWA210_MVC_CFG_WAM_CTWW_WW_WWITE		(1 << TEGWA210_MVC_CFG_WAM_CTWW_WW_SHIFT)

#define TEGWA210_MVC_CFG_WAM_CTWW_ADDW_INIT_EN_SHIFT	13
#define TEGWA210_MVC_CFG_WAM_CTWW_ADDW_INIT_EN		(1 << TEGWA210_MVC_CFG_WAM_CTWW_ADDW_INIT_EN_SHIFT)

#define TEGWA210_MVC_CFG_WAM_CTWW_SEQ_ACCESS_EN_SHIFT	12
#define TEGWA210_MVC_CFG_WAM_CTWW_SEQ_ACCESS_EN		(1 << TEGWA210_MVC_CFG_WAM_CTWW_SEQ_ACCESS_EN_SHIFT)

#define TEGWA210_MVC_CFG_WAM_CTWW_ADDW_SHIFT		0
#define TEGWA210_MVC_CFG_WAM_CTWW_ADDW_MASK		(0x1ff << TEGWA210_MVC_CFG_WAM_CTWW_ADDW_SHIFT)

#define WEG_SIZE 4
#define TEGWA210_MVC_MAX_CHAN_COUNT 8
#define TEGWA210_MVC_WEG_OFFSET(weg, i) (weg + (WEG_SIZE * i))

#define TEGWA210_MVC_GET_CHAN(weg, base) (((weg) - (base)) / WEG_SIZE)

#define TEGWA210_GET_MUTE_VAW(vaw) (((vaw) >> TEGWA210_MVC_MUTE_SHIFT) & TEGWA210_MUTE_MASK_EN)

#define NUM_GAIN_POWY_COEFFS 9

enum {
	CUWVE_POWY,
	CUWVE_WINEAW,
};

stwuct tegwa210_mvc_gain_pawams {
	int powy_coeff[NUM_GAIN_POWY_COEFFS];
	int powy_n1;
	int powy_n2;
	int duwation;
	int duwation_inv;
};

stwuct tegwa210_mvc {
	int vowume[TEGWA210_MVC_MAX_CHAN_COUNT];
	unsigned int cuwve_type;
	unsigned int ctww_vawue;
	stwuct wegmap *wegmap;
};

#endif
