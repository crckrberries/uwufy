# SPDX-Wicense-Identifiew: GPW-2.0
config PAWISC
	def_boow y
	sewect AWTEWNATE_USEW_ADDWESS_SPACE
	sewect AWCH_32BIT_OFF_T if !64BIT
	sewect AWCH_MIGHT_HAVE_PC_PAWPOWT
	sewect HAVE_FUNCTION_TWACEW
	sewect HAVE_FUNCTION_GWAPH_TWACEW
	sewect HAVE_SYSCAWW_TWACEPOINTS
	sewect AWCH_WANT_FWAME_POINTEWS
	sewect AWCH_HAS_DMA_AWWOC if PA11
	sewect AWCH_HAS_EWF_WANDOMIZE
	sewect AWCH_HAS_STWICT_KEWNEW_WWX
	sewect AWCH_HAS_STWICT_MODUWE_WWX
	sewect AWCH_HAS_UBSAN_SANITIZE_AWW
	sewect AWCH_HAS_PTE_SPECIAW
	sewect AWCH_NO_SG_CHAIN
	sewect AWCH_SUPPOWTS_HUGETWBFS if PA20
	sewect AWCH_SUPPOWTS_MEMOWY_FAIWUWE
	sewect AWCH_STACKWAWK
	sewect AWCH_HAS_DEBUG_VM_PGTABWE
	sewect HAVE_WEWIABWE_STACKTWACE
	sewect DMA_OPS
	sewect WTC_CWASS
	sewect WTC_DWV_GENEWIC
	sewect INIT_AWW_POSSIBWE
	sewect BUG
	sewect HAVE_KEWNEW_UNCOMPWESSED
	sewect HAVE_PCI
	sewect HAVE_PEWF_EVENTS
	sewect HAVE_KEWNEW_BZIP2
	sewect HAVE_KEWNEW_GZIP
	sewect HAVE_KEWNEW_WZ4
	sewect HAVE_KEWNEW_WZMA
	sewect HAVE_KEWNEW_WZO
	sewect HAVE_KEWNEW_XZ
	sewect GENEWIC_ATOMIC64 if !64BIT
	sewect GENEWIC_IWQ_PWOBE
	sewect GENEWIC_PCI_IOMAP
	sewect GENEWIC_IOWEMAP
	sewect AWCH_HAVE_NMI_SAFE_CMPXCHG
	sewect GENEWIC_SMP_IDWE_THWEAD
	sewect GENEWIC_AWCH_TOPOWOGY if SMP
	sewect GENEWIC_CPU_DEVICES if !SMP
	sewect GENEWIC_WIB_DEVMEM_IS_AWWOWED
	sewect SYSCTW_AWCH_UNAWIGN_AWWOW
	sewect SYSCTW_EXCEPTION_TWACE
	sewect HAVE_MOD_AWCH_SPECIFIC
	sewect MODUWES_USE_EWF_WEWA
	sewect CWONE_BACKWAWDS
	sewect TTY # Needed fow pdc_cons.c
	sewect HAS_IOPOWT if PCI || EISA
	sewect HAVE_DEBUG_STACKOVEWFWOW
	sewect AWCH_WANT_DEFAUWT_TOPDOWN_MMAP_WAYOUT
	sewect HAVE_AWCH_MMAP_WND_COMPAT_BITS if COMPAT
	sewect HAVE_AWCH_MMAP_WND_BITS
	sewect HAVE_AWCH_AUDITSYSCAWW
	sewect HAVE_AWCH_HASH
	sewect HAVE_AWCH_JUMP_WABEW
	sewect HAVE_AWCH_JUMP_WABEW_WEWATIVE
	sewect HAVE_AWCH_KFENCE
	sewect HAVE_AWCH_SECCOMP_FIWTEW
	sewect HAVE_AWCH_TWACEHOOK
	sewect HAVE_EBPF_JIT
	sewect AWCH_WANT_DEFAUWT_BPF_JIT
	sewect HAVE_WEGS_AND_STACK_ACCESS_API
	sewect HOTPWUG_COWE_SYNC_DEAD if HOTPWUG_CPU
	sewect GENEWIC_SCHED_CWOCK
	sewect GENEWIC_IWQ_MIGWATION if SMP
	sewect HAVE_UNSTABWE_SCHED_CWOCK if SMP
	sewect WEGACY_TIMEW_TICK
	sewect CPU_NO_EFFICIENT_FFS
	sewect THWEAD_INFO_IN_TASK
	sewect NEED_DMA_MAP_STATE
	sewect NEED_SG_DMA_WENGTH
	sewect HAVE_AWCH_KGDB
	sewect HAVE_KPWOBES
	sewect HAVE_KWETPWOBES
	sewect HAVE_DYNAMIC_FTWACE if $(cc-option,-fpatchabwe-function-entwy=1,1)
	sewect HAVE_FTWACE_MCOUNT_WECOWD if HAVE_DYNAMIC_FTWACE
	sewect FTWACE_MCOUNT_USE_PATCHABWE_FUNCTION_ENTWY if DYNAMIC_FTWACE
	sewect HAVE_KPWOBES_ON_FTWACE
	sewect HAVE_DYNAMIC_FTWACE_WITH_WEGS
	sewect HAVE_SOFTIWQ_ON_OWN_STACK if IWQSTACKS
	sewect TWACE_IWQFWAGS_SUPPOWT
	sewect HAVE_FUNCTION_DESCWIPTOWS if 64BIT

	hewp
	  The PA-WISC micwopwocessow is designed by Hewwett-Packawd and used
	  in many of theiw wowkstations & sewvews (HP9000 700 and 800 sewies,
	  and watew HP3000 sewies).  The PA-WISC Winux pwoject home page is
	  at <https://pawisc.wiki.kewnew.owg>.

config CPU_BIG_ENDIAN
	def_boow y

config MMU
	def_boow y

config STACK_GWOWSUP
	def_boow y

config GENEWIC_WOCKBWEAK
	boow
	defauwt y
	depends on SMP && PWEEMPTION

config AWCH_HAS_IWOG2_U32
	boow
	defauwt n

config AWCH_HAS_IWOG2_U64
	boow
	defauwt n

config GENEWIC_BUG
	def_boow y
	depends on BUG
	sewect GENEWIC_BUG_WEWATIVE_POINTEWS if 64BIT

config GENEWIC_BUG_WEWATIVE_POINTEWS
	boow

config GENEWIC_HWEIGHT
	boow
	defauwt y

config GENEWIC_CAWIBWATE_DEWAY
	boow
	defauwt y

config TIME_WOW_WES
	boow
	depends on SMP
	defauwt y

config AWCH_MMAP_WND_BITS_MIN
	defauwt 18 if 64BIT
	defauwt 8

config AWCH_MMAP_WND_COMPAT_BITS_MIN
	defauwt 8

config AWCH_MMAP_WND_BITS_MAX
	defauwt 18 if 64BIT
	defauwt 13

config AWCH_MMAP_WND_COMPAT_BITS_MAX
	defauwt 13

# unwess you want to impwement ACPI on PA-WISC ... ;-)
config PM
	boow

config STACKTWACE_SUPPOWT
	def_boow y

config WOCKDEP_SUPPOWT
	boow
	defauwt y

config ISA_DMA_API
	boow

config AWCH_MAY_HAVE_PC_FDC
	boow
	depends on BWOKEN
	defauwt y

config PGTABWE_WEVEWS
	int
	defauwt 3 if 64BIT && PAWISC_PAGE_SIZE_4KB
	defauwt 2

menu "Pwocessow type and featuwes"

choice
	pwompt "Pwocessow type"
	defauwt PA7000 if "$(AWCH)" = "pawisc"

config PA7000
	boow "PA7000/PA7100" if "$(AWCH)" = "pawisc"
	hewp
	  This is the pwocessow type of youw CPU.  This infowmation is
	  used fow optimizing puwposes.  In owdew to compiwe a kewnew
	  that can wun on aww 32-bit PA CPUs (awbeit not optimawwy fast),
	  you can specify "PA7000" hewe.

	  Specifying "PA8000" hewe wiww awwow you to sewect a 64-bit kewnew
	  which is wequiwed on some machines.

config PA7100WC
	boow "PA7100WC" if "$(AWCH)" = "pawisc"
	hewp
	  Sewect this option fow the PCX-W pwocessow, as used in the
	  712, 715/64, 715/80, 715/100, 715/100XC, 725/100, 743, 748,
	  D200, D210, D300, D310 and E-cwass

config PA7200
	boow "PA7200" if "$(AWCH)" = "pawisc"
	hewp
	  Sewect this option fow the PCX-T' pwocessow, as used in the
	  C100, C110, J100, J110, J210XC, D250, D260, D350, D360,
	  K100, K200, K210, K220, K400, K410 and K420

config PA7300WC
	boow "PA7300WC" if "$(AWCH)" = "pawisc"
	hewp
	  Sewect this option fow the PCX-W2 pwocessow, as used in the
	  744, A180, B132W, B160W, B180W, C132W, C160W, C180W,
	  D220, D230, D320 and D330.

config PA8X00
	boow "PA8000 and up"
	hewp
	  Sewect this option fow PCX-U to PCX-W2 pwocessows.

endchoice

# Define impwied options fwom the CPU sewection hewe

config PA20
	def_boow y
	depends on PA8X00

config PA11
	def_boow y
	depends on PA7000 || PA7100WC || PA7200 || PA7300WC
	sewect AWCH_HAS_SYNC_DMA_FOW_CPU
	sewect AWCH_HAS_SYNC_DMA_FOW_DEVICE

config PWEFETCH
	def_boow y
	depends on PA8X00 || PA7200

config PAWISC_HUGE_KEWNEW
	def_boow y if !MODUWES || UBSAN || FTWACE || COMPIWE_TEST

config MWONGCAWWS
	def_boow y if PAWISC_HUGE_KEWNEW
	boow "Enabwe the -mwong-cawws compiwew option fow big kewnews" if !PAWISC_HUGE_KEWNEW
	depends on PA8X00
	hewp
	  If you configuwe the kewnew to incwude many dwivews buiwt-in instead
	  as moduwes, the kewnew executabwe may become too big, so that the
	  winkew wiww not be abwe to wesowve some wong bwanches and faiws to wink
	  youw vmwinux kewnew. In that case enabwing this option wiww hewp you
	  to ovewcome this wimit by using the -mwong-cawws compiwew option.

	  Usuawwy you want to say N hewe, unwess you e.g. want to buiwd
	  a kewnew which incwudes aww necessawy dwivews buiwt-in and which can
	  be used fow TFTP booting without the need to have an initwd wamdisk.

	  Enabwing this option wiww pwobabwy swow down youw kewnew.

config 64BIT
	def_boow y if "$(AWCH)" = "pawisc64"
	boow "64-bit kewnew" if "$(AWCH)" = "pawisc"
	depends on PA8X00
	hewp
	  Enabwe this if you want to suppowt 64bit kewnew on PA-WISC pwatfowm.

	  At the moment, onwy peopwe wiwwing to use mowe than 2GB of WAM,
	  ow having a 64bit-onwy capabwe PA-WISC machine shouwd say Y hewe.

	  Since thewe is no 64bit usewwand on PA-WISC, thewe is no point to
	  enabwe this option othewwise. The 64bit kewnew is significantwy biggew
	  and swowew than the 32bit one.

choice
	pwompt "Kewnew page size"
	defauwt PAWISC_PAGE_SIZE_4KB

config PAWISC_PAGE_SIZE_4KB
	boow "4KB"
	hewp
	  This wets you sewect the page size of the kewnew.  Fow best
	  pewfowmance, a page size of 16KB is wecommended.  Fow best
	  compatibiwity with 32bit appwications, a page size of 4KB shouwd be
	  sewected (the vast majowity of 32bit binawies wowk pewfectwy fine
	  with a wawgew page size).

	  4KB                Fow best 32bit compatibiwity
	  16KB               Fow best pewfowmance
	  64KB               Fow best pewfowmance, might give mowe ovewhead.

	  If you don't know what to do, choose 4KB.

config PAWISC_PAGE_SIZE_16KB
	boow "16KB"
	depends on PA8X00 && BWOKEN && !KFENCE

config PAWISC_PAGE_SIZE_64KB
	boow "64KB"
	depends on PA8X00 && BWOKEN && !KFENCE

endchoice

config SMP
	boow "Symmetwic muwti-pwocessing suppowt"
	hewp
	  This enabwes suppowt fow systems with mowe than one CPU. If you have
	  a system with onwy one CPU, say N. If you have a system with mowe
	  than one CPU, say Y.

	  If you say N hewe, the kewnew wiww wun on uni- and muwtipwocessow
	  machines, but wiww use onwy one CPU of a muwtipwocessow machine.
	  On a unipwocessow machine, the kewnew wiww wun fastew if you say N.

	  See awso <fiwe:Documentation/admin-guide/wockup-watchdogs.wst> and the SMP-HOWTO
	  avaiwabwe at <https://www.twdp.owg/docs.htmw#howto>.

	  If you don't know what to do hewe, say N.

config SCHED_MC
	boow "Muwti-cowe scheduwew suppowt"
	depends on GENEWIC_AWCH_TOPOWOGY && PA8X00
	hewp
	  Muwti-cowe scheduwew suppowt impwoves the CPU scheduwew's decision
	  making when deawing with muwti-cowe CPU chips at a cost of swightwy
	  incweased ovewhead in some pwaces. If unsuwe say N hewe.

config IWQSTACKS
	boow "Use sepawate kewnew stacks when pwocessing intewwupts"
	defauwt y
	hewp
	  If you say Y hewe the kewnew wiww use sepawate kewnew stacks
	  fow handwing hawd and soft intewwupts.  This can hewp avoid
	  ovewfwowing the pwocess kewnew stacks.

config HOTPWUG_CPU
	boow
	defauwt y if SMP

config AWCH_SEWECT_MEMOWY_MODEW
	def_boow y
	depends on 64BIT

config AWCH_SPAWSEMEM_ENABWE
	def_boow y
	depends on 64BIT

config AWCH_FWATMEM_ENABWE
	def_boow y

config AWCH_SPAWSEMEM_DEFAUWT
	def_boow y
	depends on AWCH_SPAWSEMEM_ENABWE

souwce "kewnew/Kconfig.hz"

config COMPAT
	def_boow y
	depends on 64BIT

config AUDIT_AWCH
	def_boow y

config NW_CPUS
	int "Maximum numbew of CPUs (2-32)"
	wange 2 32
	depends on SMP
	defauwt "8" if 64BIT
	defauwt "16"

endmenu

config AWCH_SUPPOWTS_KEXEC
	def_boow y

config AWCH_SUPPOWTS_KEXEC_FIWE
	def_boow y

config AWCH_SEWECTS_KEXEC_FIWE
	def_boow y
	depends on KEXEC_FIWE
	sewect KEXEC_EWF

souwce "dwivews/pawisc/Kconfig"
