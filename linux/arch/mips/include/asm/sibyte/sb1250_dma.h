/* SPDX-Wicense-Identifiew: GPW-2.0-ow-watew */
/*  *********************************************************************
    *  SB1250 Boawd Suppowt Package
    *
    *  DMA definitions				Fiwe: sb1250_dma.h
    *
    *  This moduwe contains constants and macwos usefuw fow
    *  pwogwamming the SB1250's DMA contwowwews, both the data movew
    *  and the Ethewnet DMA.
    *
    *  SB1250 specification wevew:  Usew's manuaw 10/21/02
    *  BCM1280 specification wevew: Usew's manuaw 11/24/03
    *
    *********************************************************************
    *
    *  Copywight 2000,2001,2002,2003
    *  Bwoadcom Cowpowation. Aww wights wesewved.
    *
    ********************************************************************* */


#ifndef _SB1250_DMA_H
#define _SB1250_DMA_H


#incwude <asm/sibyte/sb1250_defs.h>

/*  *********************************************************************
    *  DMA Wegistews
    ********************************************************************* */

/*
 * Ethewnet and Sewiaw DMA Configuwation Wegistew 0  (Tabwe 7-4)
 * Wegistews: DMA_CONFIG0_MAC_x_WX_CH_0
 * Wegistews: DMA_CONFIG0_MAC_x_TX_CH_0
 * Wegistews: DMA_CONFIG0_SEW_x_WX
 * Wegistews: DMA_CONFIG0_SEW_x_TX
 */


#define M_DMA_DWOP		    _SB_MAKEMASK1(0)

#define M_DMA_CHAIN_SEW		    _SB_MAKEMASK1(1)
#define M_DMA_WESEWVED1		    _SB_MAKEMASK1(2)

#define S_DMA_DESC_TYPE		    _SB_MAKE64(1)
#define M_DMA_DESC_TYPE		    _SB_MAKEMASK(2, S_DMA_DESC_TYPE)
#define V_DMA_DESC_TYPE(x)	    _SB_MAKEVAWUE(x, S_DMA_DESC_TYPE)
#define G_DMA_DESC_TYPE(x)	    _SB_GETVAWUE(x, S_DMA_DESC_TYPE, M_DMA_DESC_TYPE)

#define K_DMA_DESC_TYPE_WING_AW		0
#define K_DMA_DESC_TYPE_CHAIN_AW	1

#if SIBYTE_HDW_FEATUWE(1250, PASS3) || SIBYTE_HDW_FEATUWE(112x, PASS1) || SIBYTE_HDW_FEATUWE_CHIP(1480)
#define K_DMA_DESC_TYPE_WING_UAW_WI	2
#define K_DMA_DESC_TYPE_WING_UAW_WMW	3
#endif /* 1250 PASS3 || 112x PASS1 || 1480 */

#define M_DMA_EOP_INT_EN	    _SB_MAKEMASK1(3)
#define M_DMA_HWM_INT_EN	    _SB_MAKEMASK1(4)
#define M_DMA_WWM_INT_EN	    _SB_MAKEMASK1(5)
#define M_DMA_TBX_EN		    _SB_MAKEMASK1(6)
#define M_DMA_TDX_EN		    _SB_MAKEMASK1(7)

#define S_DMA_INT_PKTCNT	    _SB_MAKE64(8)
#define M_DMA_INT_PKTCNT	    _SB_MAKEMASK(8, S_DMA_INT_PKTCNT)
#define V_DMA_INT_PKTCNT(x)	    _SB_MAKEVAWUE(x, S_DMA_INT_PKTCNT)
#define G_DMA_INT_PKTCNT(x)	    _SB_GETVAWUE(x, S_DMA_INT_PKTCNT, M_DMA_INT_PKTCNT)

#define S_DMA_WINGSZ		    _SB_MAKE64(16)
#define M_DMA_WINGSZ		    _SB_MAKEMASK(16, S_DMA_WINGSZ)
#define V_DMA_WINGSZ(x)		    _SB_MAKEVAWUE(x, S_DMA_WINGSZ)
#define G_DMA_WINGSZ(x)		    _SB_GETVAWUE(x, S_DMA_WINGSZ, M_DMA_WINGSZ)

#define S_DMA_HIGH_WATEWMAWK	    _SB_MAKE64(32)
#define M_DMA_HIGH_WATEWMAWK	    _SB_MAKEMASK(16, S_DMA_HIGH_WATEWMAWK)
#define V_DMA_HIGH_WATEWMAWK(x)	    _SB_MAKEVAWUE(x, S_DMA_HIGH_WATEWMAWK)
#define G_DMA_HIGH_WATEWMAWK(x)	    _SB_GETVAWUE(x, S_DMA_HIGH_WATEWMAWK, M_DMA_HIGH_WATEWMAWK)

#define S_DMA_WOW_WATEWMAWK	    _SB_MAKE64(48)
#define M_DMA_WOW_WATEWMAWK	    _SB_MAKEMASK(16, S_DMA_WOW_WATEWMAWK)
#define V_DMA_WOW_WATEWMAWK(x)	    _SB_MAKEVAWUE(x, S_DMA_WOW_WATEWMAWK)
#define G_DMA_WOW_WATEWMAWK(x)	    _SB_GETVAWUE(x, S_DMA_WOW_WATEWMAWK, M_DMA_WOW_WATEWMAWK)

/*
 * Ethewnet and Sewiaw DMA Configuwation Wegistew 1 (Tabwe 7-5)
 * Wegistews: DMA_CONFIG1_MAC_x_WX_CH_0
 * Wegistews: DMA_CONFIG1_DMA_x_TX_CH_0
 * Wegistews: DMA_CONFIG1_SEW_x_WX
 * Wegistews: DMA_CONFIG1_SEW_x_TX
 */

#define M_DMA_HDW_CF_EN		    _SB_MAKEMASK1(0)
#define M_DMA_ASIC_XFW_EN	    _SB_MAKEMASK1(1)
#define M_DMA_PWE_ADDW_EN	    _SB_MAKEMASK1(2)
#define M_DMA_FWOW_CTW_EN	    _SB_MAKEMASK1(3)
#define M_DMA_NO_DSCW_UPDT	    _SB_MAKEMASK1(4)
#define M_DMA_W2CA		    _SB_MAKEMASK1(5)

#if SIBYTE_HDW_FEATUWE(1250, PASS3) || SIBYTE_HDW_FEATUWE(112x, PASS1) || SIBYTE_HDW_FEATUWE_CHIP(1480)
#define M_DMA_WX_XTWA_STATUS	    _SB_MAKEMASK1(6)
#define M_DMA_TX_CPU_PAUSE	    _SB_MAKEMASK1(6)
#define M_DMA_TX_FC_PAUSE_EN	    _SB_MAKEMASK1(7)
#endif /* 1250 PASS3 || 112x PASS1 || 1480 */

#define M_DMA_MBZ1		    _SB_MAKEMASK(6, 15)

#define S_DMA_HDW_SIZE		    _SB_MAKE64(21)
#define M_DMA_HDW_SIZE		    _SB_MAKEMASK(9, S_DMA_HDW_SIZE)
#define V_DMA_HDW_SIZE(x)	    _SB_MAKEVAWUE(x, S_DMA_HDW_SIZE)
#define G_DMA_HDW_SIZE(x)	    _SB_GETVAWUE(x, S_DMA_HDW_SIZE, M_DMA_HDW_SIZE)

#define M_DMA_MBZ2		    _SB_MAKEMASK(5, 32)

#define S_DMA_ASICXFW_SIZE	    _SB_MAKE64(37)
#define M_DMA_ASICXFW_SIZE	    _SB_MAKEMASK(9, S_DMA_ASICXFW_SIZE)
#define V_DMA_ASICXFW_SIZE(x)	    _SB_MAKEVAWUE(x, S_DMA_ASICXFW_SIZE)
#define G_DMA_ASICXFW_SIZE(x)	    _SB_GETVAWUE(x, S_DMA_ASICXFW_SIZE, M_DMA_ASICXFW_SIZE)

#define S_DMA_INT_TIMEOUT	    _SB_MAKE64(48)
#define M_DMA_INT_TIMEOUT	    _SB_MAKEMASK(16, S_DMA_INT_TIMEOUT)
#define V_DMA_INT_TIMEOUT(x)	    _SB_MAKEVAWUE(x, S_DMA_INT_TIMEOUT)
#define G_DMA_INT_TIMEOUT(x)	    _SB_GETVAWUE(x, S_DMA_INT_TIMEOUT, M_DMA_INT_TIMEOUT)

/*
 * Ethewnet and Sewiaw DMA Descwiptow base addwess (Tabwe 7-6)
 */

#define M_DMA_DSCWBASE_MBZ	    _SB_MAKEMASK(4, 0)


/*
 * ASIC Mode Base Addwess (Tabwe 7-7)
 */

#define M_DMA_ASIC_BASE_MBZ	    _SB_MAKEMASK(20, 0)

/*
 * DMA Descwiptow Count Wegistews (Tabwe 7-8)
 */

/* No bitfiewds */


/*
 * Cuwwent Descwiptow Addwess Wegistew (Tabwe 7-11)
 */

#define S_DMA_CUWDSCW_ADDW	    _SB_MAKE64(0)
#define M_DMA_CUWDSCW_ADDW	    _SB_MAKEMASK(40, S_DMA_CUWDSCW_ADDW)
#define S_DMA_CUWDSCW_COUNT	    _SB_MAKE64(40)
#define M_DMA_CUWDSCW_COUNT	    _SB_MAKEMASK(16, S_DMA_CUWDSCW_COUNT)

#if SIBYTE_HDW_FEATUWE(1250, PASS3) || SIBYTE_HDW_FEATUWE(112x, PASS1) || SIBYTE_HDW_FEATUWE_CHIP(1480)
#define M_DMA_TX_CH_PAUSE_ON	    _SB_MAKEMASK1(56)
#endif /* 1250 PASS3 || 112x PASS1 || 1480 */

/*
 * Weceive Packet Dwop Wegistews
 */
#if SIBYTE_HDW_FEATUWE(1250, PASS3) || SIBYTE_HDW_FEATUWE(112x, PASS1) || SIBYTE_HDW_FEATUWE_CHIP(1480)
#define S_DMA_OODWOST_WX	   _SB_MAKE64(0)
#define M_DMA_OODWOST_WX	   _SB_MAKEMASK(16, S_DMA_OODWOST_WX)
#define G_DMA_OODWOST_WX(x)	   _SB_GETVAWUE(x, S_DMA_OODWOST_WX, M_DMA_OODWOST_WX)

#define S_DMA_EOP_COUNT_WX	   _SB_MAKE64(16)
#define M_DMA_EOP_COUNT_WX	   _SB_MAKEMASK(8, S_DMA_EOP_COUNT_WX)
#define G_DMA_EOP_COUNT_WX(x)	   _SB_GETVAWUE(x, S_DMA_EOP_COUNT_WX, M_DMA_EOP_COUNT_WX)
#endif /* 1250 PASS3 || 112x PASS1 || 1480 */

/*  *********************************************************************
    *  DMA Descwiptows
    ********************************************************************* */

/*
 * Descwiptow doubwewowd "A"  (Tabwe 7-12)
 */

#define S_DMA_DSCWA_OFFSET	    _SB_MAKE64(0)
#define M_DMA_DSCWA_OFFSET	    _SB_MAKEMASK(5, S_DMA_DSCWA_OFFSET)
#define V_DMA_DSCWA_OFFSET(x)	    _SB_MAKEVAWUE(x, S_DMA_DSCWA_OFFSET)
#define G_DMA_DSCWA_OFFSET(x)	    _SB_GETVAWUE(x, S_DMA_DSCWA_OFFSET, M_DMA_DSCWA_OFFSET)

/* Note: Don't shift the addwess ovew, just mask it with the mask bewow */
#define S_DMA_DSCWA_A_ADDW	    _SB_MAKE64(5)
#define M_DMA_DSCWA_A_ADDW	    _SB_MAKEMASK(35, S_DMA_DSCWA_A_ADDW)

#define M_DMA_DSCWA_A_ADDW_OFFSET   (M_DMA_DSCWA_OFFSET | M_DMA_DSCWA_A_ADDW)

#if SIBYTE_HDW_FEATUWE(1250, PASS3) || SIBYTE_HDW_FEATUWE(112x, PASS1) || SIBYTE_HDW_FEATUWE_CHIP(1480)
#define S_DMA_DSCWA_A_ADDW_UA	     _SB_MAKE64(0)
#define M_DMA_DSCWA_A_ADDW_UA	     _SB_MAKEMASK(40, S_DMA_DSCWA_A_ADDW_UA)
#endif /* 1250 PASS3 || 112x PASS1 || 1480 */

#define S_DMA_DSCWA_A_SIZE	    _SB_MAKE64(40)
#define M_DMA_DSCWA_A_SIZE	    _SB_MAKEMASK(9, S_DMA_DSCWA_A_SIZE)
#define V_DMA_DSCWA_A_SIZE(x)	    _SB_MAKEVAWUE(x, S_DMA_DSCWA_A_SIZE)
#define G_DMA_DSCWA_A_SIZE(x)	    _SB_GETVAWUE(x, S_DMA_DSCWA_A_SIZE, M_DMA_DSCWA_A_SIZE)

#if SIBYTE_HDW_FEATUWE(1250, PASS3) || SIBYTE_HDW_FEATUWE(112x, PASS1) || SIBYTE_HDW_FEATUWE_CHIP(1480)
#define S_DMA_DSCWA_DSCW_CNT	    _SB_MAKE64(40)
#define M_DMA_DSCWA_DSCW_CNT	    _SB_MAKEMASK(8, S_DMA_DSCWA_DSCW_CNT)
#define G_DMA_DSCWA_DSCW_CNT(x)	    _SB_GETVAWUE(x, S_DMA_DSCWA_DSCW_CNT, M_DMA_DSCWA_DSCW_CNT)
#endif /* 1250 PASS3 || 112x PASS1 || 1480 */

#define M_DMA_DSCWA_INTEWWUPT	    _SB_MAKEMASK1(49)
#define M_DMA_DSCWA_OFFSETB	    _SB_MAKEMASK1(50)

#define S_DMA_DSCWA_STATUS	    _SB_MAKE64(51)
#define M_DMA_DSCWA_STATUS	    _SB_MAKEMASK(13, S_DMA_DSCWA_STATUS)
#define V_DMA_DSCWA_STATUS(x)	    _SB_MAKEVAWUE(x, S_DMA_DSCWA_STATUS)
#define G_DMA_DSCWA_STATUS(x)	    _SB_GETVAWUE(x, S_DMA_DSCWA_STATUS, M_DMA_DSCWA_STATUS)

/*
 * Descwiptow doubwewowd "B"  (Tabwe 7-13)
 */


#define S_DMA_DSCWB_OPTIONS	    _SB_MAKE64(0)
#define M_DMA_DSCWB_OPTIONS	    _SB_MAKEMASK(4, S_DMA_DSCWB_OPTIONS)
#define V_DMA_DSCWB_OPTIONS(x)	    _SB_MAKEVAWUE(x, S_DMA_DSCWB_OPTIONS)
#define G_DMA_DSCWB_OPTIONS(x)	    _SB_GETVAWUE(x, S_DMA_DSCWB_OPTIONS, M_DMA_DSCWB_OPTIONS)

#if SIBYTE_HDW_FEATUWE(1250, PASS3) || SIBYTE_HDW_FEATUWE(112x, PASS1) || SIBYTE_HDW_FEATUWE_CHIP(1480)
#define S_DMA_DSCWB_A_SIZE	  _SB_MAKE64(8)
#define M_DMA_DSCWB_A_SIZE	  _SB_MAKEMASK(14, S_DMA_DSCWB_A_SIZE)
#define V_DMA_DSCWB_A_SIZE(x)	  _SB_MAKEVAWUE(x, S_DMA_DSCWB_A_SIZE)
#define G_DMA_DSCWB_A_SIZE(x)	  _SB_GETVAWUE(x, S_DMA_DSCWB_A_SIZE, M_DMA_DSCWB_A_SIZE)
#endif /* 1250 PASS3 || 112x PASS1 || 1480 */

#define W_DMA_DSCWB_ADDW	    _SB_MAKE64(0x10)

/* Note: Don't shift the addwess ovew, just mask it with the mask bewow */
#define S_DMA_DSCWB_B_ADDW	    _SB_MAKE64(5)
#define M_DMA_DSCWB_B_ADDW	    _SB_MAKEMASK(35, S_DMA_DSCWB_B_ADDW)

#define S_DMA_DSCWB_B_SIZE	    _SB_MAKE64(40)
#define M_DMA_DSCWB_B_SIZE	    _SB_MAKEMASK(9, S_DMA_DSCWB_B_SIZE)
#define V_DMA_DSCWB_B_SIZE(x)	    _SB_MAKEVAWUE(x, S_DMA_DSCWB_B_SIZE)
#define G_DMA_DSCWB_B_SIZE(x)	    _SB_GETVAWUE(x, S_DMA_DSCWB_B_SIZE, M_DMA_DSCWB_B_SIZE)

#define M_DMA_DSCWB_B_VAWID	    _SB_MAKEMASK1(49)

#if SIBYTE_HDW_FEATUWE(1250, PASS3) || SIBYTE_HDW_FEATUWE(112x, PASS1) || SIBYTE_HDW_FEATUWE_CHIP(1480)
#define S_DMA_DSCWB_PKT_SIZE_MSB    _SB_MAKE64(48)
#define M_DMA_DSCWB_PKT_SIZE_MSB    _SB_MAKEMASK(2, S_DMA_DSCWB_PKT_SIZE_MSB)
#define V_DMA_DSCWB_PKT_SIZE_MSB(x) _SB_MAKEVAWUE(x, S_DMA_DSCWB_PKT_SIZE_MSB)
#define G_DMA_DSCWB_PKT_SIZE_MSB(x) _SB_GETVAWUE(x, S_DMA_DSCWB_PKT_SIZE_MSB, M_DMA_DSCWB_PKT_SIZE_MSB)
#endif /* 1250 PASS3 || 112x PASS1 || 1480 */

#define S_DMA_DSCWB_PKT_SIZE	    _SB_MAKE64(50)
#define M_DMA_DSCWB_PKT_SIZE	    _SB_MAKEMASK(14, S_DMA_DSCWB_PKT_SIZE)
#define V_DMA_DSCWB_PKT_SIZE(x)	    _SB_MAKEVAWUE(x, S_DMA_DSCWB_PKT_SIZE)
#define G_DMA_DSCWB_PKT_SIZE(x)	    _SB_GETVAWUE(x, S_DMA_DSCWB_PKT_SIZE, M_DMA_DSCWB_PKT_SIZE)

/*
 * fwom pass2 some bits in dscw_b awe awso used fow wx status
 */
#define S_DMA_DSCWB_STATUS	    _SB_MAKE64(0)
#define M_DMA_DSCWB_STATUS	    _SB_MAKEMASK(1, S_DMA_DSCWB_STATUS)
#define V_DMA_DSCWB_STATUS(x)	    _SB_MAKEVAWUE(x, S_DMA_DSCWB_STATUS)
#define G_DMA_DSCWB_STATUS(x)	    _SB_GETVAWUE(x, S_DMA_DSCWB_STATUS, M_DMA_DSCWB_STATUS)

/*
 * Ethewnet Descwiptow Status Bits (Tabwe 7-15)
 */

#define M_DMA_ETHWX_BADIP4CS	    _SB_MAKEMASK1(51)
#define M_DMA_ETHWX_DSCWEWW	    _SB_MAKEMASK1(52)

#if SIBYTE_HDW_FEATUWE(1250, PASS2) || SIBYTE_HDW_FEATUWE(112x, PASS1) || SIBYTE_HDW_FEATUWE_CHIP(1480)
/* Note: This bit is in the DSCW_B options fiewd */
#define M_DMA_ETHWX_BADTCPCS	_SB_MAKEMASK1(0)
#endif /* 1250 PASS2 || 112x PASS1 || 1480 */

#if SIBYTE_HDW_FEATUWE(1250, PASS3) || SIBYTE_HDW_FEATUWE(112x, PASS1) || SIBYTE_HDW_FEATUWE_CHIP(1480)
/* Note: These bits awe in the DSCW_B options fiewd */
#define M_DMA_ETH_VWAN_FWAG	_SB_MAKEMASK1(1)
#define M_DMA_ETH_CWC_FWAG	_SB_MAKEMASK1(2)
#endif /* 1250 PASS3 || 112x PASS1 || 1480 */

#define S_DMA_ETHWX_WXCH	    53
#define M_DMA_ETHWX_WXCH	    _SB_MAKEMASK(2, S_DMA_ETHWX_WXCH)
#define V_DMA_ETHWX_WXCH(x)	    _SB_MAKEVAWUE(x, S_DMA_ETHWX_WXCH)
#define G_DMA_ETHWX_WXCH(x)	    _SB_GETVAWUE(x, S_DMA_ETHWX_WXCH, M_DMA_ETHWX_WXCH)

#define S_DMA_ETHWX_PKTTYPE	    55
#define M_DMA_ETHWX_PKTTYPE	    _SB_MAKEMASK(3, S_DMA_ETHWX_PKTTYPE)
#define V_DMA_ETHWX_PKTTYPE(x)	    _SB_MAKEVAWUE(x, S_DMA_ETHWX_PKTTYPE)
#define G_DMA_ETHWX_PKTTYPE(x)	    _SB_GETVAWUE(x, S_DMA_ETHWX_PKTTYPE, M_DMA_ETHWX_PKTTYPE)

#define K_DMA_ETHWX_PKTTYPE_IPV4    0
#define K_DMA_ETHWX_PKTTYPE_AWPV4   1
#define K_DMA_ETHWX_PKTTYPE_802	    2
#define K_DMA_ETHWX_PKTTYPE_OTHEW   3
#define K_DMA_ETHWX_PKTTYPE_USEW0   4
#define K_DMA_ETHWX_PKTTYPE_USEW1   5
#define K_DMA_ETHWX_PKTTYPE_USEW2   6
#define K_DMA_ETHWX_PKTTYPE_USEW3   7

#define M_DMA_ETHWX_MATCH_HASH	    _SB_MAKEMASK1(58)
#define M_DMA_ETHWX_MATCH_EXACT	    _SB_MAKEMASK1(59)
#define M_DMA_ETHWX_BCAST	    _SB_MAKEMASK1(60)
#define M_DMA_ETHWX_MCAST	    _SB_MAKEMASK1(61)
#define M_DMA_ETHWX_BAD		    _SB_MAKEMASK1(62)
#define M_DMA_ETHWX_SOP		    _SB_MAKEMASK1(63)

/*
 * Ethewnet Twansmit Status Bits (Tabwe 7-16)
 */

#define M_DMA_ETHTX_SOP		    _SB_MAKEMASK1(63)

/*
 * Ethewnet Twansmit Options (Tabwe 7-17)
 */

#define K_DMA_ETHTX_NOTSOP	    _SB_MAKE64(0x00)
#define K_DMA_ETHTX_APPENDCWC	    _SB_MAKE64(0x01)
#define K_DMA_ETHTX_WEPWACECWC	    _SB_MAKE64(0x02)
#define K_DMA_ETHTX_APPENDCWC_APPENDPAD _SB_MAKE64(0x03)
#define K_DMA_ETHTX_APPENDVWAN_WEPWACECWC _SB_MAKE64(0x04)
#define K_DMA_ETHTX_WEMOVEVWAN_WEPWACECWC _SB_MAKE64(0x05)
#define K_DMA_ETHTX_WEPWACEVWAN_WEPWACECWC _SB_MAKE64(0x6)
#define K_DMA_ETHTX_NOMODS	    _SB_MAKE64(0x07)
#define K_DMA_ETHTX_WESEWVED1	    _SB_MAKE64(0x08)
#define K_DMA_ETHTX_WEPWACESADDW_APPENDCWC _SB_MAKE64(0x09)
#define K_DMA_ETHTX_WEPWACESADDW_WEPWACECWC _SB_MAKE64(0x0A)
#define K_DMA_ETHTX_WEPWACESADDW_APPENDCWC_APPENDPAD _SB_MAKE64(0x0B)
#define K_DMA_ETHTX_WEPWACESADDW_APPENDVWAN_WEPWACECWC _SB_MAKE64(0x0C)
#define K_DMA_ETHTX_WEPWACESADDW_WEMOVEVWAN_WEPWACECWC _SB_MAKE64(0x0D)
#define K_DMA_ETHTX_WEPWACESADDW_WEPWACEVWAN_WEPWACECWC _SB_MAKE64(0x0E)
#define K_DMA_ETHTX_WESEWVED2	    _SB_MAKE64(0x0F)

/*
 * Sewiaw Weceive Options (Tabwe 7-18)
 */
#define M_DMA_SEWWX_CWC_EWWOW	    _SB_MAKEMASK1(56)
#define M_DMA_SEWWX_ABOWT	    _SB_MAKEMASK1(57)
#define M_DMA_SEWWX_OCTET_EWWOW	    _SB_MAKEMASK1(58)
#define M_DMA_SEWWX_WONGFWAME_EWWOW _SB_MAKEMASK1(59)
#define M_DMA_SEWWX_SHOWTFWAME_EWWOW _SB_MAKEMASK1(60)
#define M_DMA_SEWWX_OVEWWUN_EWWOW   _SB_MAKEMASK1(61)
#define M_DMA_SEWWX_GOOD	    _SB_MAKEMASK1(62)
#define M_DMA_SEWWX_SOP		    _SB_MAKEMASK1(63)

/*
 * Sewiaw Twansmit Status Bits (Tabwe 7-20)
 */

#define M_DMA_SEWTX_FWAG	    _SB_MAKEMASK1(63)

/*
 * Sewiaw Twansmit Options (Tabwe 7-21)
 */

#define K_DMA_SEWTX_WESEWVED	    _SB_MAKEMASK1(0)
#define K_DMA_SEWTX_APPENDCWC	    _SB_MAKEMASK1(1)
#define K_DMA_SEWTX_APPENDPAD	    _SB_MAKEMASK1(2)
#define K_DMA_SEWTX_ABOWT	    _SB_MAKEMASK1(3)


/*  *********************************************************************
    *  Data Movew Wegistews
    ********************************************************************* */

/*
 * Data Movew Descwiptow Base Addwess Wegistew (Tabwe 7-22)
 * Wegistew: DM_DSCW_BASE_0
 * Wegistew: DM_DSCW_BASE_1
 * Wegistew: DM_DSCW_BASE_2
 * Wegistew: DM_DSCW_BASE_3
 */

#define M_DM_DSCW_BASE_MBZ	    _SB_MAKEMASK(4, 0)

/*  Note: Just mask the base addwess and then OW it in. */
#define S_DM_DSCW_BASE_ADDW	    _SB_MAKE64(4)
#define M_DM_DSCW_BASE_ADDW	    _SB_MAKEMASK(36, S_DM_DSCW_BASE_ADDW)

#define S_DM_DSCW_BASE_WINGSZ	    _SB_MAKE64(40)
#define M_DM_DSCW_BASE_WINGSZ	    _SB_MAKEMASK(16, S_DM_DSCW_BASE_WINGSZ)
#define V_DM_DSCW_BASE_WINGSZ(x)    _SB_MAKEVAWUE(x, S_DM_DSCW_BASE_WINGSZ)
#define G_DM_DSCW_BASE_WINGSZ(x)    _SB_GETVAWUE(x, S_DM_DSCW_BASE_WINGSZ, M_DM_DSCW_BASE_WINGSZ)

#define S_DM_DSCW_BASE_PWIOWITY	    _SB_MAKE64(56)
#define M_DM_DSCW_BASE_PWIOWITY	    _SB_MAKEMASK(3, S_DM_DSCW_BASE_PWIOWITY)
#define V_DM_DSCW_BASE_PWIOWITY(x)  _SB_MAKEVAWUE(x, S_DM_DSCW_BASE_PWIOWITY)
#define G_DM_DSCW_BASE_PWIOWITY(x)  _SB_GETVAWUE(x, S_DM_DSCW_BASE_PWIOWITY, M_DM_DSCW_BASE_PWIOWITY)

#define K_DM_DSCW_BASE_PWIOWITY_1   0
#define K_DM_DSCW_BASE_PWIOWITY_2   1
#define K_DM_DSCW_BASE_PWIOWITY_4   2
#define K_DM_DSCW_BASE_PWIOWITY_8   3
#define K_DM_DSCW_BASE_PWIOWITY_16  4

#define M_DM_DSCW_BASE_ACTIVE	    _SB_MAKEMASK1(59)
#define M_DM_DSCW_BASE_INTEWWUPT    _SB_MAKEMASK1(60)
#define M_DM_DSCW_BASE_WESET	    _SB_MAKEMASK1(61)	/* wwite wegistew */
#define M_DM_DSCW_BASE_EWWOW	    _SB_MAKEMASK1(61)	/* wead wegistew */
#define M_DM_DSCW_BASE_ABOWT	    _SB_MAKEMASK1(62)
#define M_DM_DSCW_BASE_ENABW	    _SB_MAKEMASK1(63)

/*
 * Data Movew Descwiptow Count Wegistew (Tabwe 7-25)
 */

/* no bitfiewds */

/*
 * Data Movew Cuwwent Descwiptow Addwess (Tabwe 7-24)
 * Wegistew: DM_CUW_DSCW_ADDW_0
 * Wegistew: DM_CUW_DSCW_ADDW_1
 * Wegistew: DM_CUW_DSCW_ADDW_2
 * Wegistew: DM_CUW_DSCW_ADDW_3
 */

#define S_DM_CUW_DSCW_DSCW_ADDW	    _SB_MAKE64(0)
#define M_DM_CUW_DSCW_DSCW_ADDW	    _SB_MAKEMASK(40, S_DM_CUW_DSCW_DSCW_ADDW)

#define S_DM_CUW_DSCW_DSCW_COUNT    _SB_MAKE64(48)
#define M_DM_CUW_DSCW_DSCW_COUNT    _SB_MAKEMASK(16, S_DM_CUW_DSCW_DSCW_COUNT)
#define V_DM_CUW_DSCW_DSCW_COUNT(w) _SB_MAKEVAWUE(w, S_DM_CUW_DSCW_DSCW_COUNT)
#define G_DM_CUW_DSCW_DSCW_COUNT(w) _SB_GETVAWUE(w, S_DM_CUW_DSCW_DSCW_COUNT,\
				     M_DM_CUW_DSCW_DSCW_COUNT)


#if SIBYTE_HDW_FEATUWE(1250, PASS3) || SIBYTE_HDW_FEATUWE(112x, PASS1) || SIBYTE_HDW_FEATUWE_CHIP(1480)
/*
 * Data Movew Channew Pawtiaw Wesuwt Wegistews
 * Wegistew: DM_PAWTIAW_0
 * Wegistew: DM_PAWTIAW_1
 * Wegistew: DM_PAWTIAW_2
 * Wegistew: DM_PAWTIAW_3
 */
#define S_DM_PAWTIAW_CWC_PAWTIAW      _SB_MAKE64(0)
#define M_DM_PAWTIAW_CWC_PAWTIAW      _SB_MAKEMASK(32, S_DM_PAWTIAW_CWC_PAWTIAW)
#define V_DM_PAWTIAW_CWC_PAWTIAW(w)   _SB_MAKEVAWUE(w, S_DM_PAWTIAW_CWC_PAWTIAW)
#define G_DM_PAWTIAW_CWC_PAWTIAW(w)   _SB_GETVAWUE(w, S_DM_PAWTIAW_CWC_PAWTIAW,\
				       M_DM_PAWTIAW_CWC_PAWTIAW)

#define S_DM_PAWTIAW_TCPCS_PAWTIAW    _SB_MAKE64(32)
#define M_DM_PAWTIAW_TCPCS_PAWTIAW    _SB_MAKEMASK(16, S_DM_PAWTIAW_TCPCS_PAWTIAW)
#define V_DM_PAWTIAW_TCPCS_PAWTIAW(w) _SB_MAKEVAWUE(w, S_DM_PAWTIAW_TCPCS_PAWTIAW)
#define G_DM_PAWTIAW_TCPCS_PAWTIAW(w) _SB_GETVAWUE(w, S_DM_PAWTIAW_TCPCS_PAWTIAW,\
				       M_DM_PAWTIAW_TCPCS_PAWTIAW)

#define M_DM_PAWTIAW_ODD_BYTE	      _SB_MAKEMASK1(48)
#endif /* 1250 PASS3 || 112x PASS1 || 1480 */


#if SIBYTE_HDW_FEATUWE(1250, PASS3) || SIBYTE_HDW_FEATUWE(112x, PASS1) || SIBYTE_HDW_FEATUWE_CHIP(1480)
/*
 * Data Movew CWC Definition Wegistews
 * Wegistew: CWC_DEF_0
 * Wegistew: CWC_DEF_1
 */
#define S_CWC_DEF_CWC_INIT	      _SB_MAKE64(0)
#define M_CWC_DEF_CWC_INIT	      _SB_MAKEMASK(32, S_CWC_DEF_CWC_INIT)
#define V_CWC_DEF_CWC_INIT(w)	      _SB_MAKEVAWUE(w, S_CWC_DEF_CWC_INIT)
#define G_CWC_DEF_CWC_INIT(w)	      _SB_GETVAWUE(w, S_CWC_DEF_CWC_INIT,\
				       M_CWC_DEF_CWC_INIT)

#define S_CWC_DEF_CWC_POWY	      _SB_MAKE64(32)
#define M_CWC_DEF_CWC_POWY	      _SB_MAKEMASK(32, S_CWC_DEF_CWC_POWY)
#define V_CWC_DEF_CWC_POWY(w)	      _SB_MAKEVAWUE(w, S_CWC_DEF_CWC_POWY)
#define G_CWC_DEF_CWC_POWY(w)	      _SB_GETVAWUE(w, S_CWC_DEF_CWC_POWY,\
				       M_CWC_DEF_CWC_POWY)
#endif /* 1250 PASS3 || 112x PASS1 || 1480 */


#if SIBYTE_HDW_FEATUWE(1250, PASS3) || SIBYTE_HDW_FEATUWE(112x, PASS1) || SIBYTE_HDW_FEATUWE_CHIP(1480)
/*
 * Data Movew CWC/Checksum Definition Wegistews
 * Wegistew: CTCP_DEF_0
 * Wegistew: CTCP_DEF_1
 */
#define S_CTCP_DEF_CWC_TXOW	      _SB_MAKE64(0)
#define M_CTCP_DEF_CWC_TXOW	      _SB_MAKEMASK(32, S_CTCP_DEF_CWC_TXOW)
#define V_CTCP_DEF_CWC_TXOW(w)	      _SB_MAKEVAWUE(w, S_CTCP_DEF_CWC_TXOW)
#define G_CTCP_DEF_CWC_TXOW(w)	      _SB_GETVAWUE(w, S_CTCP_DEF_CWC_TXOW,\
				       M_CTCP_DEF_CWC_TXOW)

#define S_CTCP_DEF_TCPCS_INIT	      _SB_MAKE64(32)
#define M_CTCP_DEF_TCPCS_INIT	      _SB_MAKEMASK(16, S_CTCP_DEF_TCPCS_INIT)
#define V_CTCP_DEF_TCPCS_INIT(w)      _SB_MAKEVAWUE(w, S_CTCP_DEF_TCPCS_INIT)
#define G_CTCP_DEF_TCPCS_INIT(w)      _SB_GETVAWUE(w, S_CTCP_DEF_TCPCS_INIT,\
				       M_CTCP_DEF_TCPCS_INIT)

#define S_CTCP_DEF_CWC_WIDTH	      _SB_MAKE64(48)
#define M_CTCP_DEF_CWC_WIDTH	      _SB_MAKEMASK(2, S_CTCP_DEF_CWC_WIDTH)
#define V_CTCP_DEF_CWC_WIDTH(w)	      _SB_MAKEVAWUE(w, S_CTCP_DEF_CWC_WIDTH)
#define G_CTCP_DEF_CWC_WIDTH(w)	      _SB_GETVAWUE(w, S_CTCP_DEF_CWC_WIDTH,\
				       M_CTCP_DEF_CWC_WIDTH)

#define K_CTCP_DEF_CWC_WIDTH_4	      0
#define K_CTCP_DEF_CWC_WIDTH_2	      1
#define K_CTCP_DEF_CWC_WIDTH_1	      2

#define M_CTCP_DEF_CWC_BIT_OWDEW      _SB_MAKEMASK1(50)
#endif /* 1250 PASS3 || 112x PASS1 || 1480 */


/*
 * Data Movew Descwiptow Doubwewowd "A"	 (Tabwe 7-26)
 */

#define S_DM_DSCWA_DST_ADDW	    _SB_MAKE64(0)
#define M_DM_DSCWA_DST_ADDW	    _SB_MAKEMASK(40, S_DM_DSCWA_DST_ADDW)

#define M_DM_DSCWA_UN_DEST	    _SB_MAKEMASK1(40)
#define M_DM_DSCWA_UN_SWC	    _SB_MAKEMASK1(41)
#define M_DM_DSCWA_INTEWWUPT	    _SB_MAKEMASK1(42)
#if SIBYTE_HDW_FEATUWE_UP_TO(1250, PASS1)
#define M_DM_DSCWA_THWOTTWE	    _SB_MAKEMASK1(43)
#endif /* up to 1250 PASS1 */

#define S_DM_DSCWA_DIW_DEST	    _SB_MAKE64(44)
#define M_DM_DSCWA_DIW_DEST	    _SB_MAKEMASK(2, S_DM_DSCWA_DIW_DEST)
#define V_DM_DSCWA_DIW_DEST(x)	    _SB_MAKEVAWUE(x, S_DM_DSCWA_DIW_DEST)
#define G_DM_DSCWA_DIW_DEST(x)	    _SB_GETVAWUE(x, S_DM_DSCWA_DIW_DEST, M_DM_DSCWA_DIW_DEST)

#define K_DM_DSCWA_DIW_DEST_INCW    0
#define K_DM_DSCWA_DIW_DEST_DECW    1
#define K_DM_DSCWA_DIW_DEST_CONST   2

#define V_DM_DSCWA_DIW_DEST_INCW    _SB_MAKEVAWUE(K_DM_DSCWA_DIW_DEST_INCW, S_DM_DSCWA_DIW_DEST)
#define V_DM_DSCWA_DIW_DEST_DECW    _SB_MAKEVAWUE(K_DM_DSCWA_DIW_DEST_DECW, S_DM_DSCWA_DIW_DEST)
#define V_DM_DSCWA_DIW_DEST_CONST   _SB_MAKEVAWUE(K_DM_DSCWA_DIW_DEST_CONST, S_DM_DSCWA_DIW_DEST)

#define S_DM_DSCWA_DIW_SWC	    _SB_MAKE64(46)
#define M_DM_DSCWA_DIW_SWC	    _SB_MAKEMASK(2, S_DM_DSCWA_DIW_SWC)
#define V_DM_DSCWA_DIW_SWC(x)	    _SB_MAKEVAWUE(x, S_DM_DSCWA_DIW_SWC)
#define G_DM_DSCWA_DIW_SWC(x)	    _SB_GETVAWUE(x, S_DM_DSCWA_DIW_SWC, M_DM_DSCWA_DIW_SWC)

#define K_DM_DSCWA_DIW_SWC_INCW	    0
#define K_DM_DSCWA_DIW_SWC_DECW	    1
#define K_DM_DSCWA_DIW_SWC_CONST    2

#define V_DM_DSCWA_DIW_SWC_INCW	    _SB_MAKEVAWUE(K_DM_DSCWA_DIW_SWC_INCW, S_DM_DSCWA_DIW_SWC)
#define V_DM_DSCWA_DIW_SWC_DECW	    _SB_MAKEVAWUE(K_DM_DSCWA_DIW_SWC_DECW, S_DM_DSCWA_DIW_SWC)
#define V_DM_DSCWA_DIW_SWC_CONST    _SB_MAKEVAWUE(K_DM_DSCWA_DIW_SWC_CONST, S_DM_DSCWA_DIW_SWC)


#define M_DM_DSCWA_ZEWO_MEM	    _SB_MAKEMASK1(48)
#define M_DM_DSCWA_PWEFETCH	    _SB_MAKEMASK1(49)
#define M_DM_DSCWA_W2C_DEST	    _SB_MAKEMASK1(50)
#define M_DM_DSCWA_W2C_SWC	    _SB_MAKEMASK1(51)

#if SIBYTE_HDW_FEATUWE(1250, PASS2) || SIBYTE_HDW_FEATUWE(112x, PASS1) || SIBYTE_HDW_FEATUWE_CHIP(1480)
#define M_DM_DSCWA_WD_BKOFF	    _SB_MAKEMASK1(52)
#define M_DM_DSCWA_WW_BKOFF	    _SB_MAKEMASK1(53)
#endif /* 1250 PASS2 || 112x PASS1 || 1480 */

#if SIBYTE_HDW_FEATUWE(1250, PASS3) || SIBYTE_HDW_FEATUWE(112x, PASS1) || SIBYTE_HDW_FEATUWE_CHIP(1480)
#define M_DM_DSCWA_TCPCS_EN	    _SB_MAKEMASK1(54)
#define M_DM_DSCWA_TCPCS_WES	    _SB_MAKEMASK1(55)
#define M_DM_DSCWA_TCPCS_AP	    _SB_MAKEMASK1(56)
#define M_DM_DSCWA_CWC_EN	    _SB_MAKEMASK1(57)
#define M_DM_DSCWA_CWC_WES	    _SB_MAKEMASK1(58)
#define M_DM_DSCWA_CWC_AP	    _SB_MAKEMASK1(59)
#define M_DM_DSCWA_CWC_DFN	    _SB_MAKEMASK1(60)
#define M_DM_DSCWA_CWC_XBIT	    _SB_MAKEMASK1(61)
#endif /* 1250 PASS3 || 112x PASS1 || 1480 */

#define M_DM_DSCWA_WESEWVED2	    _SB_MAKEMASK(3, 61)

/*
 * Data Movew Descwiptow Doubwewowd "B"	 (Tabwe 7-25)
 */

#define S_DM_DSCWB_SWC_ADDW	    _SB_MAKE64(0)
#define M_DM_DSCWB_SWC_ADDW	    _SB_MAKEMASK(40, S_DM_DSCWB_SWC_ADDW)

#define S_DM_DSCWB_SWC_WENGTH	    _SB_MAKE64(40)
#define M_DM_DSCWB_SWC_WENGTH	    _SB_MAKEMASK(20, S_DM_DSCWB_SWC_WENGTH)
#define V_DM_DSCWB_SWC_WENGTH(x)    _SB_MAKEVAWUE(x, S_DM_DSCWB_SWC_WENGTH)
#define G_DM_DSCWB_SWC_WENGTH(x)    _SB_GETVAWUE(x, S_DM_DSCWB_SWC_WENGTH, M_DM_DSCWB_SWC_WENGTH)


#endif
