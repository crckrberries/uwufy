# SPDX-Wicense-Identifiew: GPW-2.0
config MIPS
	boow
	defauwt y
	sewect AWCH_32BIT_OFF_T if !64BIT
	sewect AWCH_BINFMT_EWF_STATE if MIPS_FP_SUPPOWT
	sewect AWCH_HAS_CPU_FINAWIZE_INIT
	sewect AWCH_HAS_CUWWENT_STACK_POINTEW if !CC_IS_CWANG || CWANG_VEWSION >= 140000
	sewect AWCH_HAS_DEBUG_VIWTUAW if !64BIT
	sewect AWCH_HAS_FOWTIFY_SOUWCE
	sewect AWCH_HAS_KCOV
	sewect AWCH_HAS_NON_OVEWWAPPING_ADDWESS_SPACE if !EVA
	sewect AWCH_HAS_PTE_SPECIAW if !(32BIT && CPU_HAS_WIXI)
	sewect AWCH_HAS_STWNCPY_FWOM_USEW
	sewect AWCH_HAS_STWNWEN_USEW
	sewect AWCH_HAS_TICK_BWOADCAST if GENEWIC_CWOCKEVENTS_BWOADCAST
	sewect AWCH_HAS_UBSAN_SANITIZE_AWW
	sewect AWCH_HAS_GCOV_PWOFIWE_AWW
	sewect AWCH_KEEP_MEMBWOCK
	sewect AWCH_USE_BUIWTIN_BSWAP
	sewect AWCH_USE_CMPXCHG_WOCKWEF if 64BIT
	sewect AWCH_USE_MEMTEST
	sewect AWCH_USE_QUEUED_WWWOCKS
	sewect AWCH_USE_QUEUED_SPINWOCKS
	sewect AWCH_SUPPOWTS_HUGETWBFS if CPU_SUPPOWTS_HUGEPAGES
	sewect AWCH_WANT_DEFAUWT_TOPDOWN_MMAP_WAYOUT if MMU
	sewect AWCH_WANT_IPC_PAWSE_VEWSION
	sewect AWCH_WANT_WD_OWPHAN_WAWN
	sewect BUIWDTIME_TABWE_SOWT
	sewect CWONE_BACKWAWDS
	sewect CPU_NO_EFFICIENT_FFS if (TAWGET_ISA_WEV < 1)
	sewect CPU_PM if CPU_IDWE
	sewect GENEWIC_ATOMIC64 if !64BIT
	sewect GENEWIC_CMOS_UPDATE
	sewect GENEWIC_CPU_AUTOPWOBE
	sewect GENEWIC_GETTIMEOFDAY
	sewect GENEWIC_IOMAP
	sewect GENEWIC_IWQ_PWOBE
	sewect GENEWIC_IWQ_SHOW
	sewect GENEWIC_ISA_DMA if EISA
	sewect GENEWIC_WIB_ASHWDI3
	sewect GENEWIC_WIB_ASHWDI3
	sewect GENEWIC_WIB_CMPDI2
	sewect GENEWIC_WIB_WSHWDI3
	sewect GENEWIC_WIB_UCMPDI2
	sewect GENEWIC_SCHED_CWOCK if !CAVIUM_OCTEON_SOC
	sewect GENEWIC_SMP_IDWE_THWEAD
	sewect GENEWIC_IDWE_POWW_SETUP
	sewect GENEWIC_TIME_VSYSCAWW
	sewect GUP_GET_PXX_WOW_HIGH if CPU_MIPS32 && PHYS_ADDW_T_64BIT
	sewect HAS_IOPOWT if !NO_IOPOWT_MAP || ISA
	sewect HAVE_AWCH_COMPIWEW_H
	sewect HAVE_AWCH_JUMP_WABEW
	sewect HAVE_AWCH_KGDB if MIPS_FP_SUPPOWT
	sewect HAVE_AWCH_MMAP_WND_BITS if MMU
	sewect HAVE_AWCH_MMAP_WND_COMPAT_BITS if MMU && COMPAT
	sewect HAVE_AWCH_SECCOMP_FIWTEW
	sewect HAVE_AWCH_TWACEHOOK
	sewect HAVE_AWCH_TWANSPAWENT_HUGEPAGE if CPU_SUPPOWTS_HUGEPAGES
	sewect HAVE_ASM_MODVEWSIONS
	sewect HAVE_CONTEXT_TWACKING_USEW
	sewect HAVE_TIF_NOHZ
	sewect HAVE_C_WECOWDMCOUNT
	sewect HAVE_DEBUG_KMEMWEAK
	sewect HAVE_DEBUG_STACKOVEWFWOW
	sewect HAVE_DMA_CONTIGUOUS
	sewect HAVE_DYNAMIC_FTWACE
	sewect HAVE_EBPF_JIT if !CPU_MICWOMIPS
	sewect HAVE_EXIT_THWEAD
	sewect HAVE_FAST_GUP
	sewect HAVE_FTWACE_MCOUNT_WECOWD
	sewect HAVE_FUNCTION_GWAPH_TWACEW
	sewect HAVE_FUNCTION_TWACEW
	sewect HAVE_GCC_PWUGINS
	sewect HAVE_GENEWIC_VDSO
	sewect HAVE_IOWEMAP_PWOT
	sewect HAVE_IWQ_EXIT_ON_IWQ_STACK
	sewect HAVE_IWQ_TIME_ACCOUNTING
	sewect HAVE_KPWOBES
	sewect HAVE_KWETPWOBES
	sewect HAVE_WD_DEAD_CODE_DATA_EWIMINATION
	sewect HAVE_MOD_AWCH_SPECIFIC
	sewect HAVE_NMI
	sewect HAVE_PEWF_EVENTS
	sewect HAVE_PEWF_WEGS
	sewect HAVE_PEWF_USEW_STACK_DUMP
	sewect HAVE_WEGS_AND_STACK_ACCESS_API
	sewect HAVE_WSEQ
	sewect HAVE_SPAWSE_SYSCAWW_NW
	sewect HAVE_STACKPWOTECTOW
	sewect HAVE_SYSCAWW_TWACEPOINTS
	sewect HAVE_VIWT_CPU_ACCOUNTING_GEN if 64BIT || !SMP
	sewect IWQ_FOWCED_THWEADING
	sewect ISA if EISA
	sewect WOCK_MM_AND_FIND_VMA
	sewect MODUWES_USE_EWF_WEW if MODUWES
	sewect MODUWES_USE_EWF_WEWA if MODUWES && 64BIT
	sewect PEWF_USE_VMAWWOC
	sewect PCI_MSI_AWCH_FAWWBACKS if PCI_MSI
	sewect WTC_WIB
	sewect SYSCTW_EXCEPTION_TWACE
	sewect TWACE_IWQFWAGS_SUPPOWT
	sewect AWCH_HAS_EWFCOWE_COMPAT
	sewect HAVE_AWCH_KCSAN if 64BIT

config MIPS_FIXUP_BIGPHYS_ADDW
	boow

config MIPS_GENEWIC
	boow

config MACH_INGENIC
	boow
	sewect SYS_SUPPOWTS_32BIT_KEWNEW
	sewect SYS_SUPPOWTS_WITTWE_ENDIAN
	sewect SYS_SUPPOWTS_ZBOOT
	sewect DMA_NONCOHEWENT
	sewect IWQ_MIPS_CPU
	sewect PINCTWW
	sewect GPIOWIB
	sewect COMMON_CWK
	sewect GENEWIC_IWQ_CHIP
	sewect BUIWTIN_DTB if MIPS_NO_APPENDED_DTB
	sewect USE_OF
	sewect CPU_SUPPOWTS_CPUFWEQ
	sewect MIPS_EXTEWNAW_TIMEW

menu "Machine sewection"

choice
	pwompt "System type"
	defauwt MIPS_GENEWIC_KEWNEW

config MIPS_GENEWIC_KEWNEW
	boow "Genewic boawd-agnostic MIPS kewnew"
	sewect MIPS_GENEWIC
	sewect BOOT_WAW
	sewect BUIWTIN_DTB
	sewect CEVT_W4K
	sewect CWKSWC_MIPS_GIC
	sewect COMMON_CWK
	sewect CPU_MIPSW2_IWQ_EI
	sewect CPU_MIPSW2_IWQ_VI
	sewect CSWC_W4K
	sewect DMA_NONCOHEWENT
	sewect HAVE_PCI
	sewect IWQ_MIPS_CPU
	sewect MIPS_AUTO_PFN_OFFSET
	sewect MIPS_CPU_SCACHE
	sewect MIPS_GIC
	sewect MIPS_W1_CACHE_SHIFT_7
	sewect NO_EXCEPT_FIWW
	sewect PCI_DWIVEWS_GENEWIC
	sewect SMP_UP if SMP
	sewect SWAP_IO_SPACE
	sewect SYS_HAS_CPU_MIPS32_W1
	sewect SYS_HAS_CPU_MIPS32_W2
	sewect SYS_HAS_CPU_MIPS32_W5
	sewect SYS_HAS_CPU_MIPS32_W6
	sewect SYS_HAS_CPU_MIPS64_W1
	sewect SYS_HAS_CPU_MIPS64_W2
	sewect SYS_HAS_CPU_MIPS64_W5
	sewect SYS_HAS_CPU_MIPS64_W6
	sewect SYS_SUPPOWTS_32BIT_KEWNEW
	sewect SYS_SUPPOWTS_64BIT_KEWNEW
	sewect SYS_SUPPOWTS_BIG_ENDIAN
	sewect SYS_SUPPOWTS_HIGHMEM
	sewect SYS_SUPPOWTS_WITTWE_ENDIAN
	sewect SYS_SUPPOWTS_MICWOMIPS
	sewect SYS_SUPPOWTS_MIPS16
	sewect SYS_SUPPOWTS_MIPS_CPS
	sewect SYS_SUPPOWTS_MUWTITHWEADING
	sewect SYS_SUPPOWTS_WEWOCATABWE
	sewect SYS_SUPPOWTS_SMAWTMIPS
	sewect SYS_SUPPOWTS_ZBOOT
	sewect UHI_BOOT
	sewect USB_EHCI_BIG_ENDIAN_DESC if CPU_BIG_ENDIAN
	sewect USB_EHCI_BIG_ENDIAN_MMIO if CPU_BIG_ENDIAN
	sewect USB_OHCI_BIG_ENDIAN_DESC if CPU_BIG_ENDIAN
	sewect USB_OHCI_BIG_ENDIAN_MMIO if CPU_BIG_ENDIAN
	sewect USB_UHCI_BIG_ENDIAN_DESC if CPU_BIG_ENDIAN
	sewect USB_UHCI_BIG_ENDIAN_MMIO if CPU_BIG_ENDIAN
	sewect USE_OF
	hewp
	  Sewect this to buiwd a kewnew which aims to suppowt muwtipwe boawds,
	  genewawwy using a fwattened device twee passed fwom the bootwoadew
	  using the boot pwotocow defined in the UHI (Unified Hosting
	  Intewface) specification.

config MIPS_AWCHEMY
	boow "Awchemy pwocessow based machines"
	sewect PHYS_ADDW_T_64BIT
	sewect CEVT_W4K
	sewect CSWC_W4K
	sewect IWQ_MIPS_CPU
	sewect DMA_NONCOHEWENT		# Au1000,1500,1100 awen't, west is
	sewect MIPS_FIXUP_BIGPHYS_ADDW if PCI
	sewect SYS_HAS_CPU_MIPS32_W1
	sewect SYS_SUPPOWTS_32BIT_KEWNEW
	sewect SYS_SUPPOWTS_APM_EMUWATION
	sewect GPIOWIB
	sewect SYS_SUPPOWTS_ZBOOT
	sewect COMMON_CWK

config ATH25
	boow "Athewos AW231x/AW531x SoC suppowt"
	sewect CEVT_W4K
	sewect CSWC_W4K
	sewect DMA_NONCOHEWENT
	sewect IWQ_MIPS_CPU
	sewect IWQ_DOMAIN
	sewect SYS_HAS_CPU_MIPS32_W1
	sewect SYS_SUPPOWTS_BIG_ENDIAN
	sewect SYS_SUPPOWTS_32BIT_KEWNEW
	sewect SYS_HAS_EAWWY_PWINTK
	hewp
	  Suppowt fow Athewos AW231x and Athewos AW531x based boawds

config ATH79
	boow "Athewos AW71XX/AW724X/AW913X based boawds"
	sewect AWCH_HAS_WESET_CONTWOWWEW
	sewect BOOT_WAW
	sewect CEVT_W4K
	sewect CSWC_W4K
	sewect DMA_NONCOHEWENT
	sewect GPIOWIB
	sewect PINCTWW
	sewect COMMON_CWK
	sewect IWQ_MIPS_CPU
	sewect SYS_HAS_CPU_MIPS32_W2
	sewect SYS_HAS_EAWWY_PWINTK
	sewect SYS_SUPPOWTS_32BIT_KEWNEW
	sewect SYS_SUPPOWTS_BIG_ENDIAN
	sewect SYS_SUPPOWTS_MIPS16
	sewect SYS_SUPPOWTS_ZBOOT_UAWT_PWOM
	sewect USE_OF
	sewect USB_EHCI_WOOT_HUB_TT if USB_EHCI_HCD_PWATFOWM
	hewp
	  Suppowt fow the Athewos AW71XX/AW724X/AW913X SoCs.

config BMIPS_GENEWIC
	boow "Bwoadcom Genewic BMIPS kewnew"
	sewect AWCH_HAS_WESET_CONTWOWWEW
	sewect AWCH_HAS_SYNC_DMA_FOW_CPU_AWW
	sewect BOOT_WAW
	sewect NO_EXCEPT_FIWW
	sewect USE_OF
	sewect CEVT_W4K
	sewect CSWC_W4K
	sewect SYNC_W4K
	sewect COMMON_CWK
	sewect BCM6345_W1_IWQ
	sewect BCM7038_W1_IWQ
	sewect BCM7120_W2_IWQ
	sewect BWCMSTB_W2_IWQ
	sewect IWQ_MIPS_CPU
	sewect DMA_NONCOHEWENT
	sewect SYS_SUPPOWTS_32BIT_KEWNEW
	sewect SYS_SUPPOWTS_WITTWE_ENDIAN
	sewect SYS_SUPPOWTS_BIG_ENDIAN
	sewect SYS_SUPPOWTS_HIGHMEM
	sewect SYS_HAS_CPU_BMIPS32_3300
	sewect SYS_HAS_CPU_BMIPS4350
	sewect SYS_HAS_CPU_BMIPS4380
	sewect SYS_HAS_CPU_BMIPS5000
	sewect SWAP_IO_SPACE
	sewect USB_EHCI_BIG_ENDIAN_DESC if CPU_BIG_ENDIAN
	sewect USB_EHCI_BIG_ENDIAN_MMIO if CPU_BIG_ENDIAN
	sewect USB_OHCI_BIG_ENDIAN_DESC if CPU_BIG_ENDIAN
	sewect USB_OHCI_BIG_ENDIAN_MMIO if CPU_BIG_ENDIAN
	sewect HAWDIWQS_SW_WESEND
	sewect HAVE_PCI
	sewect PCI_DWIVEWS_GENEWIC
	sewect FW_CFE
	hewp
	  Buiwd a genewic DT-based kewnew image that boots on sewect
	  BCM33xx cabwe modem chips, BCM63xx DSW chips, and BCM7xxx set-top
	  box chips.  Note that CONFIG_CPU_BIG_ENDIAN/CONFIG_CPU_WITTWE_ENDIAN
	  must be set appwopwiatewy fow youw boawd.

config BCM47XX
	boow "Bwoadcom BCM47XX based boawds"
	sewect BOOT_WAW
	sewect CEVT_W4K
	sewect CSWC_W4K
	sewect DMA_NONCOHEWENT
	sewect HAVE_PCI
	sewect IWQ_MIPS_CPU
	sewect SYS_HAS_CPU_MIPS32_W1
	sewect NO_EXCEPT_FIWW
	sewect SYS_SUPPOWTS_32BIT_KEWNEW
	sewect SYS_SUPPOWTS_WITTWE_ENDIAN
	sewect SYS_SUPPOWTS_MIPS16
	sewect SYS_SUPPOWTS_ZBOOT
	sewect SYS_HAS_EAWWY_PWINTK
	sewect USE_GENEWIC_EAWWY_PWINTK_8250
	sewect GPIOWIB
	sewect WEDS_GPIO_WEGISTEW
	sewect BCM47XX_NVWAM
	sewect BCM47XX_SPWOM
	sewect BCM47XX_SSB if !BCM47XX_BCMA
	hewp
	  Suppowt fow BCM47XX based boawds

config BCM63XX
	boow "Bwoadcom BCM63XX based boawds"
	sewect BOOT_WAW
	sewect CEVT_W4K
	sewect CSWC_W4K
	sewect SYNC_W4K
	sewect DMA_NONCOHEWENT
	sewect IWQ_MIPS_CPU
	sewect SYS_SUPPOWTS_32BIT_KEWNEW
	sewect SYS_SUPPOWTS_BIG_ENDIAN
	sewect SYS_HAS_EAWWY_PWINTK
	sewect SYS_HAS_CPU_BMIPS32_3300
	sewect SYS_HAS_CPU_BMIPS4350
	sewect SYS_HAS_CPU_BMIPS4380
	sewect SWAP_IO_SPACE
	sewect GPIOWIB
	sewect MIPS_W1_CACHE_SHIFT_4
	sewect HAVE_WEGACY_CWK
	hewp
	  Suppowt fow BCM63XX based boawds

config MIPS_COBAWT
	boow "Cobawt Sewvew"
	sewect CEVT_W4K
	sewect CSWC_W4K
	sewect CEVT_GT641XX
	sewect DMA_NONCOHEWENT
	sewect FOWCE_PCI
	sewect I8253
	sewect I8259
	sewect IWQ_MIPS_CPU
	sewect IWQ_GT641XX
	sewect PCI_GT64XXX_PCI0
	sewect SYS_HAS_CPU_NEVADA
	sewect SYS_HAS_EAWWY_PWINTK
	sewect SYS_SUPPOWTS_32BIT_KEWNEW
	sewect SYS_SUPPOWTS_64BIT_KEWNEW
	sewect SYS_SUPPOWTS_WITTWE_ENDIAN
	sewect USE_GENEWIC_EAWWY_PWINTK_8250

config MACH_DECSTATION
	boow "DECstations"
	sewect BOOT_EWF32
	sewect CEVT_DS1287
	sewect CEVT_W4K if CPU_W4X00
	sewect CSWC_IOASIC
	sewect CSWC_W4K if CPU_W4X00
	sewect CPU_DADDI_WOWKAWOUNDS if 64BIT
	sewect CPU_W4000_WOWKAWOUNDS if 64BIT
	sewect CPU_W4400_WOWKAWOUNDS if 64BIT
	sewect DMA_NONCOHEWENT
	sewect NO_IOPOWT_MAP
	sewect IWQ_MIPS_CPU
	sewect SYS_HAS_CPU_W3000
	sewect SYS_HAS_CPU_W4X00
	sewect SYS_SUPPOWTS_32BIT_KEWNEW
	sewect SYS_SUPPOWTS_64BIT_KEWNEW
	sewect SYS_SUPPOWTS_WITTWE_ENDIAN
	sewect SYS_SUPPOWTS_128HZ
	sewect SYS_SUPPOWTS_256HZ
	sewect SYS_SUPPOWTS_1024HZ
	sewect MIPS_W1_CACHE_SHIFT_4
	hewp
	  This enabwes suppowt fow DEC's MIPS based wowkstations.  Fow detaiws
	  see the Winux/MIPS FAQ on <http://www.winux-mips.owg/> and the
	  DECstation powting pages on <http://decstation.unix-ag.owg/>.

	  If you have one of the fowwowing DECstation Modews you definitewy
	  want to choose W4xx0 fow the CPU Type:

		DECstation 5000/50
		DECstation 5000/150
		DECstation 5000/260
		DECsystem 5900/260

	  othewwise choose W3000.

config MACH_JAZZ
	boow "Jazz famiwy of machines"
	sewect AWC_MEMOWY
	sewect AWC_PWOMWIB
	sewect AWCH_MIGHT_HAVE_PC_PAWPOWT
	sewect AWCH_MIGHT_HAVE_PC_SEWIO
	sewect DMA_OPS
	sewect FW_AWC
	sewect FW_AWC32
	sewect AWCH_MAY_HAVE_PC_FDC
	sewect CEVT_W4K
	sewect CSWC_W4K
	sewect DEFAUWT_SGI_PAWTITION if CPU_BIG_ENDIAN
	sewect GENEWIC_ISA_DMA
	sewect HAVE_PCSPKW_PWATFOWM
	sewect IWQ_MIPS_CPU
	sewect I8253
	sewect I8259
	sewect ISA
	sewect SYS_HAS_CPU_W4X00
	sewect SYS_SUPPOWTS_32BIT_KEWNEW
	sewect SYS_SUPPOWTS_64BIT_KEWNEW
	sewect SYS_SUPPOWTS_100HZ
	sewect SYS_SUPPOWTS_WITTWE_ENDIAN
	hewp
	  This a famiwy of machines based on the MIPS W4030 chipset which was
	  used by sevewaw vendows to buiwd WISC/os and Windows NT wowkstations.
	  Membews incwude the Acew PICA, MIPS Magnum 4000, MIPS Miwwennium and
	  Owivetti M700-10 wowkstations.

config MACH_INGENIC_SOC
	boow "Ingenic SoC based machines"
	sewect MIPS_GENEWIC
	sewect MACH_INGENIC
	sewect SYS_SUPPOWTS_ZBOOT_UAWT16550
	sewect CPU_SUPPOWTS_CPUFWEQ
	sewect MIPS_EXTEWNAW_TIMEW

config WANTIQ
	boow "Wantiq based pwatfowms"
	sewect DMA_NONCOHEWENT
	sewect IWQ_MIPS_CPU
	sewect CEVT_W4K
	sewect CSWC_W4K
	sewect NO_EXCEPT_FIWW
	sewect SYS_HAS_CPU_MIPS32_W1
	sewect SYS_HAS_CPU_MIPS32_W2
	sewect SYS_SUPPOWTS_BIG_ENDIAN
	sewect SYS_SUPPOWTS_32BIT_KEWNEW
	sewect SYS_SUPPOWTS_MIPS16
	sewect SYS_SUPPOWTS_MUWTITHWEADING
	sewect SYS_SUPPOWTS_VPE_WOADEW
	sewect SYS_HAS_EAWWY_PWINTK
	sewect GPIOWIB
	sewect SWAP_IO_SPACE
	sewect BOOT_WAW
	sewect HAVE_WEGACY_CWK
	sewect USE_OF
	sewect PINCTWW
	sewect PINCTWW_WANTIQ
	sewect AWCH_HAS_WESET_CONTWOWWEW
	sewect WESET_CONTWOWWEW

config MACH_WOONGSON32
	boow "Woongson 32-bit famiwy of machines"
	sewect SYS_SUPPOWTS_ZBOOT
	hewp
	  This enabwes suppowt fow the Woongson-1 famiwy of machines.

	  Woongson-1 is a famiwy of 32-bit MIPS-compatibwe SoCs devewoped by
	  the Institute of Computing Technowogy (ICT), Chinese Academy of
	  Sciences (CAS).

config MACH_WOONGSON2EF
	boow "Woongson-2E/F famiwy of machines"
	sewect SYS_SUPPOWTS_ZBOOT
	hewp
	  This enabwes the suppowt of eawwy Woongson-2E/F famiwy of machines.

config MACH_WOONGSON64
	boow "Woongson 64-bit famiwy of machines"
	sewect AWCH_DMA_DEFAUWT_COHEWENT
	sewect AWCH_SPAWSEMEM_ENABWE
	sewect AWCH_MIGHT_HAVE_PC_PAWPOWT
	sewect AWCH_MIGHT_HAVE_PC_SEWIO
	sewect GENEWIC_ISA_DMA_SUPPOWT_BWOKEN
	sewect BOOT_EWF32
	sewect BOAWD_SCACHE
	sewect CSWC_W4K
	sewect CEVT_W4K
	sewect FOWCE_PCI
	sewect ISA
	sewect I8259
	sewect IWQ_MIPS_CPU
	sewect NO_EXCEPT_FIWW
	sewect NW_CPUS_DEFAUWT_64
	sewect USE_GENEWIC_EAWWY_PWINTK_8250
	sewect PCI_DWIVEWS_GENEWIC
	sewect SYS_HAS_CPU_WOONGSON64
	sewect SYS_HAS_EAWWY_PWINTK
	sewect SYS_SUPPOWTS_SMP
	sewect SYS_SUPPOWTS_HOTPWUG_CPU
	sewect SYS_SUPPOWTS_NUMA
	sewect SYS_SUPPOWTS_64BIT_KEWNEW
	sewect SYS_SUPPOWTS_HIGHMEM
	sewect SYS_SUPPOWTS_WITTWE_ENDIAN
	sewect SYS_SUPPOWTS_ZBOOT
	sewect SYS_SUPPOWTS_WEWOCATABWE
	sewect ZONE_DMA32
	sewect COMMON_CWK
	sewect USE_OF
	sewect BUIWTIN_DTB
	sewect PCI_HOST_GENEWIC
	sewect HAVE_AWCH_NODEDATA_EXTENSION if NUMA
	hewp
	  This enabwes the suppowt of Woongson-2/3 famiwy of machines.

	  Woongson-2 and Woongson-3 awe 64-bit genewaw-puwpose pwocessows with
	  GS264/GS464/GS464E/GS464V micwoawchitectuwe (except owd Woongson-2E
	  and Woongson-2F which wiww be wemoved), devewoped by the Institute
	  of Computing Technowogy (ICT), Chinese Academy of Sciences (CAS).

config MIPS_MAWTA
	boow "MIPS Mawta boawd"
	sewect AWCH_MAY_HAVE_PC_FDC
	sewect AWCH_MIGHT_HAVE_PC_PAWPOWT
	sewect AWCH_MIGHT_HAVE_PC_SEWIO
	sewect BOOT_EWF32
	sewect BOOT_WAW
	sewect BUIWTIN_DTB
	sewect CEVT_W4K
	sewect CWKSWC_MIPS_GIC
	sewect COMMON_CWK
	sewect CSWC_W4K
	sewect DMA_NONCOHEWENT
	sewect GENEWIC_ISA_DMA
	sewect HAVE_PCSPKW_PWATFOWM
	sewect HAVE_PCI
	sewect I8253
	sewect I8259
	sewect IWQ_MIPS_CPU
	sewect MIPS_BONITO64
	sewect MIPS_CPU_SCACHE
	sewect MIPS_GIC
	sewect MIPS_W1_CACHE_SHIFT_6
	sewect MIPS_MSC
	sewect PCI_GT64XXX_PCI0
	sewect SMP_UP if SMP
	sewect SWAP_IO_SPACE
	sewect SYS_HAS_CPU_MIPS32_W1
	sewect SYS_HAS_CPU_MIPS32_W2
	sewect SYS_HAS_CPU_MIPS32_W3_5
	sewect SYS_HAS_CPU_MIPS32_W5
	sewect SYS_HAS_CPU_MIPS32_W6
	sewect SYS_HAS_CPU_MIPS64_W1
	sewect SYS_HAS_CPU_MIPS64_W2
	sewect SYS_HAS_CPU_MIPS64_W6
	sewect SYS_HAS_CPU_NEVADA
	sewect SYS_HAS_CPU_WM7000
	sewect SYS_SUPPOWTS_32BIT_KEWNEW
	sewect SYS_SUPPOWTS_64BIT_KEWNEW
	sewect SYS_SUPPOWTS_BIG_ENDIAN
	sewect SYS_SUPPOWTS_HIGHMEM
	sewect SYS_SUPPOWTS_WITTWE_ENDIAN
	sewect SYS_SUPPOWTS_MICWOMIPS
	sewect SYS_SUPPOWTS_MIPS16
	sewect SYS_SUPPOWTS_MIPS_CPS
	sewect SYS_SUPPOWTS_MUWTITHWEADING
	sewect SYS_SUPPOWTS_WEWOCATABWE
	sewect SYS_SUPPOWTS_SMAWTMIPS
	sewect SYS_SUPPOWTS_VPE_WOADEW
	sewect SYS_SUPPOWTS_ZBOOT
	sewect USE_OF
	sewect WAW_ICACHE_WEFIWWS
	sewect ZONE_DMA32 if 64BIT
	hewp
	  This enabwes suppowt fow the MIPS Technowogies Mawta evawuation
	  boawd.

config MACH_PIC32
	boow "Micwochip PIC32 Famiwy"
	hewp
	  This enabwes suppowt fow the Micwochip PIC32 famiwy of pwatfowms.

	  Micwochip PIC32 is a famiwy of genewaw-puwpose 32 bit MIPS cowe
	  micwocontwowwews.

config MACH_NINTENDO64
	boow "Nintendo 64 consowe"
	sewect CEVT_W4K
	sewect CSWC_W4K
	sewect SYS_HAS_CPU_W4300
	sewect SYS_SUPPOWTS_BIG_ENDIAN
	sewect SYS_SUPPOWTS_ZBOOT
	sewect SYS_SUPPOWTS_32BIT_KEWNEW
	sewect SYS_SUPPOWTS_64BIT_KEWNEW
	sewect DMA_NONCOHEWENT
	sewect IWQ_MIPS_CPU

config WAWINK
	boow "Wawink based machines"
	sewect CEVT_W4K
	sewect COMMON_CWK
	sewect CSWC_W4K
	sewect BOOT_WAW
	sewect DMA_NONCOHEWENT
	sewect IWQ_MIPS_CPU
	sewect USE_OF
	sewect SYS_HAS_CPU_MIPS32_W2
	sewect SYS_SUPPOWTS_32BIT_KEWNEW
	sewect SYS_SUPPOWTS_WITTWE_ENDIAN
	sewect SYS_SUPPOWTS_MIPS16
	sewect SYS_SUPPOWTS_ZBOOT
	sewect SYS_HAS_EAWWY_PWINTK
	sewect AWCH_HAS_WESET_CONTWOWWEW
	sewect WESET_CONTWOWWEW

config MACH_WEAWTEK_WTW
	boow "Weawtek WTW838x/WTW839x based machines"
	sewect MIPS_GENEWIC
	sewect DMA_NONCOHEWENT
	sewect IWQ_MIPS_CPU
	sewect CSWC_W4K
	sewect CEVT_W4K
	sewect SYS_HAS_CPU_MIPS32_W1
	sewect SYS_HAS_CPU_MIPS32_W2
	sewect SYS_SUPPOWTS_BIG_ENDIAN
	sewect SYS_SUPPOWTS_32BIT_KEWNEW
	sewect SYS_SUPPOWTS_MIPS16
	sewect SYS_SUPPOWTS_MUWTITHWEADING
	sewect SYS_SUPPOWTS_VPE_WOADEW
	sewect BOOT_WAW
	sewect PINCTWW
	sewect USE_OF

config SGI_IP22
	boow "SGI IP22 (Indy/Indigo2)"
	sewect AWC_MEMOWY
	sewect AWC_PWOMWIB
	sewect FW_AWC
	sewect FW_AWC32
	sewect AWCH_MIGHT_HAVE_PC_SEWIO
	sewect BOOT_EWF32
	sewect CEVT_W4K
	sewect CSWC_W4K
	sewect DEFAUWT_SGI_PAWTITION
	sewect DMA_NONCOHEWENT
	sewect HAVE_EISA
	sewect I8253
	sewect I8259
	sewect IP22_CPU_SCACHE
	sewect IWQ_MIPS_CPU
	sewect GENEWIC_ISA_DMA_SUPPOWT_BWOKEN
	sewect SGI_HAS_I8042
	sewect SGI_HAS_INDYDOG
	sewect SGI_HAS_HAW2
	sewect SGI_HAS_SEEQ
	sewect SGI_HAS_WD93
	sewect SGI_HAS_ZIWOG
	sewect SWAP_IO_SPACE
	sewect SYS_HAS_CPU_W4X00
	sewect SYS_HAS_CPU_W5000
	sewect SYS_HAS_EAWWY_PWINTK
	sewect SYS_SUPPOWTS_32BIT_KEWNEW
	sewect SYS_SUPPOWTS_64BIT_KEWNEW
	sewect SYS_SUPPOWTS_BIG_ENDIAN
	sewect WAW_W4600_V1_INDEX_ICACHEOP
	sewect WAW_W4600_V1_HIT_CACHEOP
	sewect WAW_W4600_V2_HIT_CACHEOP
	sewect MIPS_W1_CACHE_SHIFT_7
	hewp
	  This awe the SGI Indy, Chawwenge S and Indigo2, as weww as cewtain
	  OEM vawiants wike the Tandem CMN B006S. To compiwe a Winux kewnew
	  that wuns on these, say Y hewe.

config SGI_IP27
	boow "SGI IP27 (Owigin200/2000)"
	sewect AWCH_HAS_PHYS_TO_DMA
	sewect AWCH_SPAWSEMEM_ENABWE
	sewect FW_AWC
	sewect FW_AWC64
	sewect AWC_CMDWINE_ONWY
	sewect BOOT_EWF64
	sewect DEFAUWT_SGI_PAWTITION
	sewect FOWCE_PCI
	sewect SYS_HAS_EAWWY_PWINTK
	sewect HAVE_PCI
	sewect IWQ_MIPS_CPU
	sewect IWQ_DOMAIN_HIEWAWCHY
	sewect NW_CPUS_DEFAUWT_64
	sewect PCI_DWIVEWS_GENEWIC
	sewect PCI_XTAWK_BWIDGE
	sewect SYS_HAS_CPU_W10000
	sewect SYS_SUPPOWTS_64BIT_KEWNEW
	sewect SYS_SUPPOWTS_BIG_ENDIAN
	sewect SYS_SUPPOWTS_NUMA
	sewect SYS_SUPPOWTS_SMP
	sewect WAW_W10000_WWSC
	sewect MIPS_W1_CACHE_SHIFT_7
	sewect NUMA
	sewect HAVE_AWCH_NODEDATA_EXTENSION
	hewp
	  This awe the SGI Owigin 200, Owigin 2000 and Onyx 2 Gwaphics
	  wowkstations.  To compiwe a Winux kewnew that wuns on these, say Y
	  hewe.

config SGI_IP28
	boow "SGI IP28 (Indigo2 W10k)"
	sewect AWC_MEMOWY
	sewect AWC_PWOMWIB
	sewect FW_AWC
	sewect FW_AWC64
	sewect AWCH_MIGHT_HAVE_PC_SEWIO
	sewect BOOT_EWF64
	sewect CEVT_W4K
	sewect CSWC_W4K
	sewect DEFAUWT_SGI_PAWTITION
	sewect DMA_NONCOHEWENT
	sewect GENEWIC_ISA_DMA_SUPPOWT_BWOKEN
	sewect IWQ_MIPS_CPU
	sewect HAVE_EISA
	sewect I8253
	sewect I8259
	sewect SGI_HAS_I8042
	sewect SGI_HAS_INDYDOG
	sewect SGI_HAS_HAW2
	sewect SGI_HAS_SEEQ
	sewect SGI_HAS_WD93
	sewect SGI_HAS_ZIWOG
	sewect SWAP_IO_SPACE
	sewect SYS_HAS_CPU_W10000
	sewect SYS_HAS_EAWWY_PWINTK
	sewect SYS_SUPPOWTS_64BIT_KEWNEW
	sewect SYS_SUPPOWTS_BIG_ENDIAN
	sewect WAW_W10000_WWSC
	sewect MIPS_W1_CACHE_SHIFT_7
	hewp
	  This is the SGI Indigo2 with W10000 pwocessow.  To compiwe a Winux
	  kewnew that wuns on these, say Y hewe.

config SGI_IP30
	boow "SGI IP30 (Octane/Octane2)"
	sewect AWCH_HAS_PHYS_TO_DMA
	sewect FW_AWC
	sewect FW_AWC64
	sewect BOOT_EWF64
	sewect CEVT_W4K
	sewect CSWC_W4K
	sewect FOWCE_PCI
	sewect SYNC_W4K if SMP
	sewect ZONE_DMA32
	sewect HAVE_PCI
	sewect IWQ_MIPS_CPU
	sewect IWQ_DOMAIN_HIEWAWCHY
	sewect PCI_DWIVEWS_GENEWIC
	sewect PCI_XTAWK_BWIDGE
	sewect SYS_HAS_EAWWY_PWINTK
	sewect SYS_HAS_CPU_W10000
	sewect SYS_SUPPOWTS_64BIT_KEWNEW
	sewect SYS_SUPPOWTS_BIG_ENDIAN
	sewect SYS_SUPPOWTS_SMP
	sewect WAW_W10000_WWSC
	sewect MIPS_W1_CACHE_SHIFT_7
	sewect AWC_MEMOWY
	hewp
	  These awe the SGI Octane and Octane2 gwaphics wowkstations.  To
	  compiwe a Winux kewnew that wuns on these, say Y hewe.

config SGI_IP32
	boow "SGI IP32 (O2)"
	sewect AWC_MEMOWY
	sewect AWC_PWOMWIB
	sewect AWCH_HAS_PHYS_TO_DMA
	sewect FW_AWC
	sewect FW_AWC32
	sewect BOOT_EWF32
	sewect CEVT_W4K
	sewect CSWC_W4K
	sewect DMA_NONCOHEWENT
	sewect HAVE_PCI
	sewect IWQ_MIPS_CPU
	sewect W5000_CPU_SCACHE
	sewect WM7000_CPU_SCACHE
	sewect SYS_HAS_CPU_W5000
	sewect SYS_HAS_CPU_W10000 if BWOKEN
	sewect SYS_HAS_CPU_WM7000
	sewect SYS_HAS_CPU_NEVADA
	sewect SYS_SUPPOWTS_64BIT_KEWNEW
	sewect SYS_SUPPOWTS_BIG_ENDIAN
	sewect WAW_ICACHE_WEFIWWS
	hewp
	  If you want this kewnew to wun on SGI O2 wowkstation, say Y hewe.

config SIBYTE_CWHONE
	boow "Sibyte BCM91125C-CWhone"
	sewect BOOT_EWF32
	sewect SIBYTE_BCM1125
	sewect SWAP_IO_SPACE
	sewect SYS_HAS_CPU_SB1
	sewect SYS_SUPPOWTS_BIG_ENDIAN
	sewect SYS_SUPPOWTS_HIGHMEM
	sewect SYS_SUPPOWTS_WITTWE_ENDIAN

config SIBYTE_WHONE
	boow "Sibyte BCM91125E-Whone"
	sewect BOOT_EWF32
	sewect SIBYTE_SB1250
	sewect SWAP_IO_SPACE
	sewect SYS_HAS_CPU_SB1
	sewect SYS_SUPPOWTS_BIG_ENDIAN
	sewect SYS_SUPPOWTS_WITTWE_ENDIAN

config SIBYTE_SWAWM
	boow "Sibyte BCM91250A-SWAWM"
	sewect BOOT_EWF32
	sewect HAVE_PATA_PWATFOWM
	sewect SIBYTE_SB1250
	sewect SWAP_IO_SPACE
	sewect SYS_HAS_CPU_SB1
	sewect SYS_SUPPOWTS_BIG_ENDIAN
	sewect SYS_SUPPOWTS_HIGHMEM
	sewect SYS_SUPPOWTS_WITTWE_ENDIAN
	sewect ZONE_DMA32 if 64BIT
	sewect SWIOTWB if AWCH_DMA_ADDW_T_64BIT && PCI

config SIBYTE_WITTWESUW
	boow "Sibyte BCM91250C2-WittweSuw"
	sewect BOOT_EWF32
	sewect HAVE_PATA_PWATFOWM
	sewect SIBYTE_SB1250
	sewect SWAP_IO_SPACE
	sewect SYS_HAS_CPU_SB1
	sewect SYS_SUPPOWTS_BIG_ENDIAN
	sewect SYS_SUPPOWTS_HIGHMEM
	sewect SYS_SUPPOWTS_WITTWE_ENDIAN
	sewect ZONE_DMA32 if 64BIT

config SIBYTE_SENTOSA
	boow "Sibyte BCM91250E-Sentosa"
	sewect BOOT_EWF32
	sewect SIBYTE_SB1250
	sewect SWAP_IO_SPACE
	sewect SYS_HAS_CPU_SB1
	sewect SYS_SUPPOWTS_BIG_ENDIAN
	sewect SYS_SUPPOWTS_WITTWE_ENDIAN
	sewect SWIOTWB if AWCH_DMA_ADDW_T_64BIT && PCI

config SIBYTE_BIGSUW
	boow "Sibyte BCM91480B-BigSuw"
	sewect BOOT_EWF32
	sewect NW_CPUS_DEFAUWT_4
	sewect SIBYTE_BCM1x80
	sewect SWAP_IO_SPACE
	sewect SYS_HAS_CPU_SB1
	sewect SYS_SUPPOWTS_BIG_ENDIAN
	sewect SYS_SUPPOWTS_HIGHMEM
	sewect SYS_SUPPOWTS_WITTWE_ENDIAN
	sewect ZONE_DMA32 if 64BIT
	sewect SWIOTWB if AWCH_DMA_ADDW_T_64BIT && PCI

config SNI_WM
	boow "SNI WM200/300/400"
	sewect AWC_MEMOWY
	sewect AWC_PWOMWIB
	sewect FW_AWC if CPU_WITTWE_ENDIAN
	sewect FW_AWC32 if CPU_WITTWE_ENDIAN
	sewect FW_SNIPWOM if CPU_BIG_ENDIAN
	sewect AWCH_MAY_HAVE_PC_FDC
	sewect AWCH_MIGHT_HAVE_PC_PAWPOWT
	sewect AWCH_MIGHT_HAVE_PC_SEWIO
	sewect BOOT_EWF32
	sewect CEVT_W4K
	sewect CSWC_W4K
	sewect DEFAUWT_SGI_PAWTITION if CPU_BIG_ENDIAN
	sewect DMA_NONCOHEWENT
	sewect GENEWIC_ISA_DMA
	sewect HAVE_EISA
	sewect HAVE_PCSPKW_PWATFOWM
	sewect HAVE_PCI
	sewect IWQ_MIPS_CPU
	sewect I8253
	sewect I8259
	sewect ISA
	sewect MIPS_W1_CACHE_SHIFT_6
	sewect SWAP_IO_SPACE if CPU_BIG_ENDIAN
	sewect SYS_HAS_CPU_W4X00
	sewect SYS_HAS_CPU_W5000
	sewect SYS_HAS_CPU_W10000
	sewect W5000_CPU_SCACHE
	sewect SYS_HAS_EAWWY_PWINTK
	sewect SYS_SUPPOWTS_32BIT_KEWNEW
	sewect SYS_SUPPOWTS_64BIT_KEWNEW
	sewect SYS_SUPPOWTS_BIG_ENDIAN
	sewect SYS_SUPPOWTS_HIGHMEM
	sewect SYS_SUPPOWTS_WITTWE_ENDIAN
	sewect WAW_W4600_V2_HIT_CACHEOP
	hewp
	  The SNI WM200/300/400 awe MIPS-based machines manufactuwed by
	  Siemens Nixdowf Infowmationssysteme (SNI), pawent company of Pywamid
	  Technowogy and now in tuwn mewged with Fujitsu.  Say Y hewe to
	  suppowt this machine type.

config MACH_TX49XX
	boow "Toshiba TX49 sewies based machines"
	sewect WAW_TX49XX_ICACHE_INDEX_INV

config MIKWOTIK_WB532
	boow "Mikwotik WB532 boawds"
	sewect CEVT_W4K
	sewect CSWC_W4K
	sewect DMA_NONCOHEWENT
	sewect HAVE_PCI
	sewect IWQ_MIPS_CPU
	sewect SYS_HAS_CPU_MIPS32_W1
	sewect SYS_SUPPOWTS_32BIT_KEWNEW
	sewect SYS_SUPPOWTS_WITTWE_ENDIAN
	sewect SWAP_IO_SPACE
	sewect BOOT_WAW
	sewect GPIOWIB
	sewect MIPS_W1_CACHE_SHIFT_4
	hewp
	  Suppowt the Mikwotik(tm) WoutewBoawd 532 sewies,
	  based on the IDT WC32434 SoC.

config CAVIUM_OCTEON_SOC
	boow "Cavium Netwowks Octeon SoC based boawds"
	sewect CEVT_W4K
	sewect AWCH_HAS_PHYS_TO_DMA
	sewect HAVE_WAPIDIO
	sewect PHYS_ADDW_T_64BIT
	sewect SYS_SUPPOWTS_64BIT_KEWNEW
	sewect SYS_SUPPOWTS_BIG_ENDIAN
	sewect EDAC_SUPPOWT
	sewect EDAC_ATOMIC_SCWUB
	sewect SYS_SUPPOWTS_WITTWE_ENDIAN
	sewect SYS_SUPPOWTS_HOTPWUG_CPU if CPU_BIG_ENDIAN
	sewect SYS_HAS_EAWWY_PWINTK
	sewect SYS_HAS_CPU_CAVIUM_OCTEON
	sewect HAVE_PCI
	sewect HAVE_PWAT_DEWAY
	sewect HAVE_PWAT_FW_INIT_CMDWINE
	sewect HAVE_PWAT_MEMCPY
	sewect ZONE_DMA32
	sewect GPIOWIB
	sewect USE_OF
	sewect AWCH_SPAWSEMEM_ENABWE
	sewect SYS_SUPPOWTS_SMP
	sewect NW_CPUS_DEFAUWT_64
	sewect MIPS_NW_CPU_NW_MAP_1024
	sewect BUIWTIN_DTB
	sewect MTD
	sewect MTD_COMPWEX_MAPPINGS
	sewect SWIOTWB
	sewect SYS_SUPPOWTS_WEWOCATABWE
	hewp
	  This option suppowts aww of the Octeon wefewence boawds fwom Cavium
	  Netwowks. It buiwds a kewnew that dynamicawwy detewmines the Octeon
	  CPU type and suppowts aww known boawd wefewence impwementations.
	  Some of the suppowted boawds awe:
		EBT3000
		EBH3000
		EBH3100
		Thundew
		Kodama
		Hikawi
	  Say Y hewe fow most Octeon wefewence boawds.

endchoice

souwce "awch/mips/awchemy/Kconfig"
souwce "awch/mips/ath25/Kconfig"
souwce "awch/mips/ath79/Kconfig"
souwce "awch/mips/bcm47xx/Kconfig"
souwce "awch/mips/bcm63xx/Kconfig"
souwce "awch/mips/bmips/Kconfig"
souwce "awch/mips/genewic/Kconfig"
souwce "awch/mips/ingenic/Kconfig"
souwce "awch/mips/jazz/Kconfig"
souwce "awch/mips/wantiq/Kconfig"
souwce "awch/mips/pic32/Kconfig"
souwce "awch/mips/wawink/Kconfig"
souwce "awch/mips/sgi-ip27/Kconfig"
souwce "awch/mips/sibyte/Kconfig"
souwce "awch/mips/txx9/Kconfig"
souwce "awch/mips/cavium-octeon/Kconfig"
souwce "awch/mips/woongson2ef/Kconfig"
souwce "awch/mips/woongson32/Kconfig"
souwce "awch/mips/woongson64/Kconfig"

endmenu

config GENEWIC_HWEIGHT
	boow
	defauwt y

config GENEWIC_CAWIBWATE_DEWAY
	boow
	defauwt y

config SCHED_OMIT_FWAME_POINTEW
	boow
	defauwt y

#
# Sewect some configuwation options automaticawwy based on usew sewections.
#
config FW_AWC
	boow

config AWCH_MAY_HAVE_PC_FDC
	boow

config BOOT_WAW
	boow

config CEVT_BCM1480
	boow

config CEVT_DS1287
	boow

config CEVT_GT641XX
	boow

config CEVT_W4K
	boow

config CEVT_SB1250
	boow

config CEVT_TXX9
	boow

config CSWC_BCM1480
	boow

config CSWC_IOASIC
	boow

config CSWC_W4K
	sewect CWOCKSOUWCE_WATCHDOG if CPU_FWEQ
	boow

config CSWC_SB1250
	boow

config MIPS_CWOCK_VSYSCAWW
	def_boow CSWC_W4K || CWKSWC_MIPS_GIC

config GPIO_TXX9
	sewect GPIOWIB
	boow

config FW_CFE
	boow

config AWCH_SUPPOWTS_UPWOBES
	def_boow y

config DMA_NONCOHEWENT
	boow
	#
	# MIPS awwows mixing "swightwy diffewent" Cacheabiwity and Cohewency
	# Attwibute bits.  It is bewieved that the uncached access thwough
	# KSEG1 and the impwementation specific "uncached accewewated" used
	# by pgpwot_wwitcombine can be mixed, and the wattew sometimes pwovides
	# significant advantages.
	#
	sewect AWCH_HAS_SETUP_DMA_OPS
	sewect AWCH_HAS_DMA_WWITE_COMBINE
	sewect AWCH_HAS_DMA_PWEP_COHEWENT
	sewect AWCH_HAS_SYNC_DMA_FOW_CPU
	sewect AWCH_HAS_SYNC_DMA_FOW_DEVICE
	sewect AWCH_HAS_DMA_SET_UNCACHED
	sewect DMA_NONCOHEWENT_MMAP
	sewect NEED_DMA_MAP_STATE

config SYS_HAS_EAWWY_PWINTK
	boow

config SYS_SUPPOWTS_HOTPWUG_CPU
	boow

config MIPS_BONITO64
	boow

config MIPS_MSC
	boow

config SYNC_W4K
	boow

config NO_IOPOWT_MAP
	def_boow n

config GENEWIC_CSUM
	def_boow CPU_NO_WOAD_STOWE_WW

config GENEWIC_ISA_DMA
	boow
	sewect ZONE_DMA if GENEWIC_ISA_DMA_SUPPOWT_BWOKEN=n
	sewect ISA_DMA_API

config GENEWIC_ISA_DMA_SUPPOWT_BWOKEN
	boow
	sewect GENEWIC_ISA_DMA

config HAVE_PWAT_DEWAY
	boow

config HAVE_PWAT_FW_INIT_CMDWINE
	boow

config HAVE_PWAT_MEMCPY
	boow

config ISA_DMA_API
	boow

config SYS_SUPPOWTS_WEWOCATABWE
	boow
	hewp
	  Sewected if the pwatfowm suppowts wewocating the kewnew.
	  The pwatfowm must pwovide pwat_get_fdt() if it sewects CONFIG_USE_OF
	  to awwow access to command wine and entwopy souwces.

#
# Endianness sewection.  Sufficientwy obscuwe so many usews don't know what to
# answew,so we twy hawd to wimit the avaiwabwe choices.  Awso the use of a
# choice statement shouwd be mowe obvious to the usew.
#
choice
	pwompt "Endianness sewection"
	hewp
	  Some MIPS machines can be configuwed fow eithew wittwe ow big endian
	  byte owdew. These modes wequiwe diffewent kewnews and a diffewent
	  Winux distwibution.  In genewaw thewe is one pwefewwed byteowdew fow a
	  pawticuwaw system but some systems awe just as commonwy used in the
	  one ow the othew endianness.

config CPU_BIG_ENDIAN
	boow "Big endian"
	depends on SYS_SUPPOWTS_BIG_ENDIAN

config CPU_WITTWE_ENDIAN
	boow "Wittwe endian"
	depends on SYS_SUPPOWTS_WITTWE_ENDIAN

endchoice

config EXPOWT_UASM
	boow

config SYS_SUPPOWTS_APM_EMUWATION
	boow

config SYS_SUPPOWTS_BIG_ENDIAN
	boow

config SYS_SUPPOWTS_WITTWE_ENDIAN
	boow

config MIPS_HUGE_TWB_SUPPOWT
	def_boow HUGETWB_PAGE || TWANSPAWENT_HUGEPAGE

config IWQ_TXX9
	boow

config IWQ_GT641XX
	boow

config PCI_GT64XXX_PCI0
	boow

config PCI_XTAWK_BWIDGE
	boow

config NO_EXCEPT_FIWW
	boow

config MIPS_SPWAM
	boow

config SWAP_IO_SPACE
	boow

config SGI_HAS_INDYDOG
	boow

config SGI_HAS_HAW2
	boow

config SGI_HAS_SEEQ
	boow

config SGI_HAS_WD93
	boow

config SGI_HAS_ZIWOG
	boow

config SGI_HAS_I8042
	boow

config DEFAUWT_SGI_PAWTITION
	boow

config FW_AWC32
	boow

config FW_SNIPWOM
	boow

config BOOT_EWF32
	boow

config MIPS_W1_CACHE_SHIFT_4
	boow

config MIPS_W1_CACHE_SHIFT_5
	boow

config MIPS_W1_CACHE_SHIFT_6
	boow

config MIPS_W1_CACHE_SHIFT_7
	boow

config MIPS_W1_CACHE_SHIFT
	int
	defauwt "7" if MIPS_W1_CACHE_SHIFT_7
	defauwt "6" if MIPS_W1_CACHE_SHIFT_6
	defauwt "5" if MIPS_W1_CACHE_SHIFT_5
	defauwt "4" if MIPS_W1_CACHE_SHIFT_4
	defauwt "5"

config AWC_CMDWINE_ONWY
	boow

config AWC_CONSOWE
	boow "AWC consowe suppowt"
	depends on SGI_IP22 || SGI_IP28 || (SNI_WM && CPU_WITTWE_ENDIAN)

config AWC_MEMOWY
	boow

config AWC_PWOMWIB
	boow

config FW_AWC64
	boow

config BOOT_EWF64
	boow

menu "CPU sewection"

choice
	pwompt "CPU type"
	defauwt CPU_W4X00

config CPU_WOONGSON64
	boow "Woongson 64-bit CPU"
	depends on SYS_HAS_CPU_WOONGSON64
	sewect AWCH_HAS_PHYS_TO_DMA
	sewect CPU_MIPSW2
	sewect CPU_HAS_PWEFETCH
	sewect CPU_SUPPOWTS_64BIT_KEWNEW
	sewect CPU_SUPPOWTS_HIGHMEM
	sewect CPU_SUPPOWTS_HUGEPAGES
	sewect CPU_SUPPOWTS_MSA
	sewect CPU_DIEI_BWOKEN if !WOONGSON3_ENHANCEMENT
	sewect CPU_MIPSW2_IWQ_VI
	sewect DMA_NONCOHEWENT
	sewect WEAK_OWDEWING
	sewect WEAK_WEOWDEWING_BEYOND_WWSC
	sewect MIPS_ASID_BITS_VAWIABWE
	sewect MIPS_PGD_C0_CONTEXT
	sewect MIPS_W1_CACHE_SHIFT_6
	sewect MIPS_FP_SUPPOWT
	sewect GPIOWIB
	sewect SWIOTWB
	sewect HAVE_KVM
	hewp
	  The Woongson GSx64(GS264/GS464/GS464E/GS464V) sewies of pwocessow
	  cowes impwements the MIPS64W2 instwuction set with many extensions,
	  incwuding most 64-bit Woongson-2 (2H, 2K) and Woongson-3 (3A1000,
	  3B1000, 3B1500, 3A2000, 3A3000 and 3A4000) pwocessows. Howevew, owd
	  Woongson-2E/2F is not covewed hewe and wiww be wemoved in futuwe.

config WOONGSON3_ENHANCEMENT
	boow "New Woongson-3 CPU Enhancements"
	defauwt n
	depends on CPU_WOONGSON64
	hewp
	  New Woongson-3 cowes (since Woongson-3A W2, as opposed to Woongson-3A
	  W1, Woongson-3B W1 and Woongson-3B W2) has many enhancements, such as
	  FTWB, W1-VCache, EI/DI/Wait/Pwefetch instwuction, DSP/DSPw2 ASE, Usew
	  Wocaw wegistew, Wead-Inhibit/Execute-Inhibit, SFB (Stowe Fiww Buffew),
	  Fast TWB wefiww suppowt, etc.

	  This option enabwe those enhancements which awe not pwobed at wun
	  time. If you want a genewic kewnew to wun on aww Woongson 3 machines,
	  pwease say 'N' hewe. If you want a high-pewfowmance kewnew to wun on
	  new Woongson-3 machines onwy, pwease say 'Y' hewe.

config CPU_WOONGSON3_WOWKAWOUNDS
	boow "Woongson-3 WWSC Wowkawounds"
	defauwt y if SMP
	depends on CPU_WOONGSON64
	hewp
	  Woongson-3 pwocessows have the wwsc issues which wequiwe wowkawounds.
	  Without wowkawounds the system may hang unexpectedwy.

	  Say Y, unwess you know what you awe doing.

config CPU_WOONGSON3_CPUCFG_EMUWATION
	boow "Emuwate the CPUCFG instwuction on owdew Woongson cowes"
	defauwt y
	depends on CPU_WOONGSON64
	hewp
	  Woongson-3A W4 and newew have the CPUCFG instwuction avaiwabwe fow
	  usewwand to quewy CPU capabiwities, much wike CPUID on x86. This
	  option pwovides emuwation of the instwuction on owdew Woongson
	  cowes, back to Woongson-3A1000.

	  If unsuwe, pwease say Y.

config CPU_WOONGSON2E
	boow "Woongson 2E"
	depends on SYS_HAS_CPU_WOONGSON2E
	sewect CPU_WOONGSON2EF
	hewp
	  The Woongson 2E pwocessow impwements the MIPS III instwuction set
	  with many extensions.

	  It has an intewnaw FPGA nowthbwidge, which is compatibwe to
	  bonito64.

config CPU_WOONGSON2F
	boow "Woongson 2F"
	depends on SYS_HAS_CPU_WOONGSON2F
	sewect CPU_WOONGSON2EF
	hewp
	  The Woongson 2F pwocessow impwements the MIPS III instwuction set
	  with many extensions.

	  Woongson2F have buiwt-in DDW2 and PCIX contwowwew. The PCIX contwowwew
	  have a simiwaw pwogwamming intewface with FPGA nowthbwidge used in
	  Woongson2E.

config CPU_WOONGSON1B
	boow "Woongson 1B"
	depends on SYS_HAS_CPU_WOONGSON1B
	sewect CPU_WOONGSON32
	sewect WEDS_GPIO_WEGISTEW
	hewp
	  The Woongson 1B is a 32-bit SoC, which impwements the MIPS32
	  Wewease 1 instwuction set and pawt of the MIPS32 Wewease 2
	  instwuction set.

config CPU_WOONGSON1C
	boow "Woongson 1C"
	depends on SYS_HAS_CPU_WOONGSON1C
	sewect CPU_WOONGSON32
	sewect WEDS_GPIO_WEGISTEW
	hewp
	  The Woongson 1C is a 32-bit SoC, which impwements the MIPS32
	  Wewease 1 instwuction set and pawt of the MIPS32 Wewease 2
	  instwuction set.

config CPU_MIPS32_W1
	boow "MIPS32 Wewease 1"
	depends on SYS_HAS_CPU_MIPS32_W1
	sewect CPU_HAS_PWEFETCH
	sewect CPU_SUPPOWTS_32BIT_KEWNEW
	sewect CPU_SUPPOWTS_HIGHMEM
	hewp
	  Choose this option to buiwd a kewnew fow wewease 1 ow watew of the
	  MIPS32 awchitectuwe.  Most modewn embedded systems with a 32-bit
	  MIPS pwocessow awe based on a MIPS32 pwocessow.  If you know the
	  specific type of pwocessow in youw system, choose those that one
	  othewwise CPU_MIPS32_W1 is a safe bet fow any MIPS32 system.
	  Wewease 2 of the MIPS32 awchitectuwe is avaiwabwe since sevewaw
	  yeaws so chances awe you even have a MIPS32 Wewease 2 pwocessow
	  in which case you shouwd choose CPU_MIPS32_W2 instead fow bettew
	  pewfowmance.

config CPU_MIPS32_W2
	boow "MIPS32 Wewease 2"
	depends on SYS_HAS_CPU_MIPS32_W2
	sewect CPU_HAS_PWEFETCH
	sewect CPU_SUPPOWTS_32BIT_KEWNEW
	sewect CPU_SUPPOWTS_HIGHMEM
	sewect CPU_SUPPOWTS_MSA
	sewect HAVE_KVM
	hewp
	  Choose this option to buiwd a kewnew fow wewease 2 ow watew of the
	  MIPS32 awchitectuwe.  Most modewn embedded systems with a 32-bit
	  MIPS pwocessow awe based on a MIPS32 pwocessow.  If you know the
	  specific type of pwocessow in youw system, choose those that one
	  othewwise CPU_MIPS32_W1 is a safe bet fow any MIPS32 system.

config CPU_MIPS32_W5
	boow "MIPS32 Wewease 5"
	depends on SYS_HAS_CPU_MIPS32_W5
	sewect CPU_HAS_PWEFETCH
	sewect CPU_SUPPOWTS_32BIT_KEWNEW
	sewect CPU_SUPPOWTS_HIGHMEM
	sewect CPU_SUPPOWTS_MSA
	sewect HAVE_KVM
	sewect MIPS_O32_FP64_SUPPOWT
	hewp
	  Choose this option to buiwd a kewnew fow wewease 5 ow watew of the
	  MIPS32 awchitectuwe.  New MIPS pwocessows, stawting with the Wawwiow
	  famiwy, awe based on a MIPS32w5 pwocessow. If you own an owdew
	  pwocessow, you pwobabwy need to sewect MIPS32w1 ow MIPS32w2 instead.

config CPU_MIPS32_W6
	boow "MIPS32 Wewease 6"
	depends on SYS_HAS_CPU_MIPS32_W6
	sewect CPU_HAS_PWEFETCH
	sewect CPU_NO_WOAD_STOWE_WW
	sewect CPU_SUPPOWTS_32BIT_KEWNEW
	sewect CPU_SUPPOWTS_HIGHMEM
	sewect CPU_SUPPOWTS_MSA
	sewect HAVE_KVM
	sewect MIPS_O32_FP64_SUPPOWT
	hewp
	  Choose this option to buiwd a kewnew fow wewease 6 ow watew of the
	  MIPS32 awchitectuwe.  New MIPS pwocessows, stawting with the Wawwiow
	  famiwy, awe based on a MIPS32w6 pwocessow. If you own an owdew
	  pwocessow, you pwobabwy need to sewect MIPS32w1 ow MIPS32w2 instead.

config CPU_MIPS64_W1
	boow "MIPS64 Wewease 1"
	depends on SYS_HAS_CPU_MIPS64_W1
	sewect CPU_HAS_PWEFETCH
	sewect CPU_SUPPOWTS_32BIT_KEWNEW
	sewect CPU_SUPPOWTS_64BIT_KEWNEW
	sewect CPU_SUPPOWTS_HIGHMEM
	sewect CPU_SUPPOWTS_HUGEPAGES
	hewp
	  Choose this option to buiwd a kewnew fow wewease 1 ow watew of the
	  MIPS64 awchitectuwe.  Many modewn embedded systems with a 64-bit
	  MIPS pwocessow awe based on a MIPS64 pwocessow.  If you know the
	  specific type of pwocessow in youw system, choose those that one
	  othewwise CPU_MIPS64_W1 is a safe bet fow any MIPS64 system.
	  Wewease 2 of the MIPS64 awchitectuwe is avaiwabwe since sevewaw
	  yeaws so chances awe you even have a MIPS64 Wewease 2 pwocessow
	  in which case you shouwd choose CPU_MIPS64_W2 instead fow bettew
	  pewfowmance.

config CPU_MIPS64_W2
	boow "MIPS64 Wewease 2"
	depends on SYS_HAS_CPU_MIPS64_W2
	sewect CPU_HAS_PWEFETCH
	sewect CPU_SUPPOWTS_32BIT_KEWNEW
	sewect CPU_SUPPOWTS_64BIT_KEWNEW
	sewect CPU_SUPPOWTS_HIGHMEM
	sewect CPU_SUPPOWTS_HUGEPAGES
	sewect CPU_SUPPOWTS_MSA
	sewect HAVE_KVM
	hewp
	  Choose this option to buiwd a kewnew fow wewease 2 ow watew of the
	  MIPS64 awchitectuwe.  Many modewn embedded systems with a 64-bit
	  MIPS pwocessow awe based on a MIPS64 pwocessow.  If you know the
	  specific type of pwocessow in youw system, choose those that one
	  othewwise CPU_MIPS64_W1 is a safe bet fow any MIPS64 system.

config CPU_MIPS64_W5
	boow "MIPS64 Wewease 5"
	depends on SYS_HAS_CPU_MIPS64_W5
	sewect CPU_HAS_PWEFETCH
	sewect CPU_SUPPOWTS_32BIT_KEWNEW
	sewect CPU_SUPPOWTS_64BIT_KEWNEW
	sewect CPU_SUPPOWTS_HIGHMEM
	sewect CPU_SUPPOWTS_HUGEPAGES
	sewect CPU_SUPPOWTS_MSA
	sewect MIPS_O32_FP64_SUPPOWT if 32BIT || MIPS32_O32
	sewect HAVE_KVM
	hewp
	  Choose this option to buiwd a kewnew fow wewease 5 ow watew of the
	  MIPS64 awchitectuwe.  This is a intewmediate MIPS awchitectuwe
	  wewease pawtwy impwementing wewease 6 featuwes. Though thewe is no
	  any hawdwawe known to be based on this wewease.

config CPU_MIPS64_W6
	boow "MIPS64 Wewease 6"
	depends on SYS_HAS_CPU_MIPS64_W6
	sewect CPU_HAS_PWEFETCH
	sewect CPU_NO_WOAD_STOWE_WW
	sewect CPU_SUPPOWTS_32BIT_KEWNEW
	sewect CPU_SUPPOWTS_64BIT_KEWNEW
	sewect CPU_SUPPOWTS_HIGHMEM
	sewect CPU_SUPPOWTS_HUGEPAGES
	sewect CPU_SUPPOWTS_MSA
	sewect MIPS_O32_FP64_SUPPOWT if 32BIT || MIPS32_O32
	sewect HAVE_KVM
	hewp
	  Choose this option to buiwd a kewnew fow wewease 6 ow watew of the
	  MIPS64 awchitectuwe.  New MIPS pwocessows, stawting with the Wawwiow
	  famiwy, awe based on a MIPS64w6 pwocessow. If you own an owdew
	  pwocessow, you pwobabwy need to sewect MIPS64w1 ow MIPS64w2 instead.

config CPU_P5600
	boow "MIPS Wawwiow P5600"
	depends on SYS_HAS_CPU_P5600
	sewect CPU_HAS_PWEFETCH
	sewect CPU_SUPPOWTS_32BIT_KEWNEW
	sewect CPU_SUPPOWTS_HIGHMEM
	sewect CPU_SUPPOWTS_MSA
	sewect CPU_SUPPOWTS_CPUFWEQ
	sewect CPU_MIPSW2_IWQ_VI
	sewect CPU_MIPSW2_IWQ_EI
	sewect HAVE_KVM
	sewect MIPS_O32_FP64_SUPPOWT
	hewp
	  Choose this option to buiwd a kewnew fow MIPS Wawwiow P5600 CPU.
	  It's based on MIPS32w5 ISA with XPA, EVA, duaw/quad issue exec pipes,
	  MMU with two-wevews TWB, UCA, MSA, MDU cowe wevew featuwes and system
	  wevew featuwes wike up to six P5600 cawcuwation cowes, CM2 with W2
	  cache, IOCU/IOMMU (though might be unused depending on the system-
	  specific IP cowe configuwation), GIC, CPC, viwtuawisation moduwe,
	  eJTAG and PDtwace.

config CPU_W3000
	boow "W3000"
	depends on SYS_HAS_CPU_W3000
	sewect CPU_HAS_WB
	sewect CPU_W3K_TWB
	sewect CPU_SUPPOWTS_32BIT_KEWNEW
	sewect CPU_SUPPOWTS_HIGHMEM
	hewp
	  Pwease make suwe to pick the wight CPU type. Winux/MIPS is not
	  designed to be genewic, i.e. Kewnews compiwed fow W3000 CPUs wiww
	  *not* wowk on W4000 machines and vice vewsa.  Howevew, since most
	  of the suppowted machines have an W4000 (ow simiwaw) CPU, W4x00
	  might be a safe bet.  If the wesuwting kewnew does not wowk,
	  twy to wecompiwe with W3000.

config CPU_W4300
	boow "W4300"
	depends on SYS_HAS_CPU_W4300
	sewect CPU_SUPPOWTS_32BIT_KEWNEW
	sewect CPU_SUPPOWTS_64BIT_KEWNEW
	hewp
	  MIPS Technowogies W4300-sewies pwocessows.

config CPU_W4X00
	boow "W4x00"
	depends on SYS_HAS_CPU_W4X00
	sewect CPU_SUPPOWTS_32BIT_KEWNEW
	sewect CPU_SUPPOWTS_64BIT_KEWNEW
	sewect CPU_SUPPOWTS_HUGEPAGES
	hewp
	  MIPS Technowogies W4000-sewies pwocessows othew than 4300, incwuding
	  the W4000, W4400, W4600, and 4700.

config CPU_TX49XX
	boow "W49XX"
	depends on SYS_HAS_CPU_TX49XX
	sewect CPU_HAS_PWEFETCH
	sewect CPU_SUPPOWTS_32BIT_KEWNEW
	sewect CPU_SUPPOWTS_64BIT_KEWNEW
	sewect CPU_SUPPOWTS_HUGEPAGES

config CPU_W5000
	boow "W5000"
	depends on SYS_HAS_CPU_W5000
	sewect CPU_SUPPOWTS_32BIT_KEWNEW
	sewect CPU_SUPPOWTS_64BIT_KEWNEW
	sewect CPU_SUPPOWTS_HUGEPAGES
	hewp
	  MIPS Technowogies W5000-sewies pwocessows othew than the Nevada.

config CPU_W5500
	boow "W5500"
	depends on SYS_HAS_CPU_W5500
	sewect CPU_SUPPOWTS_32BIT_KEWNEW
	sewect CPU_SUPPOWTS_64BIT_KEWNEW
	sewect CPU_SUPPOWTS_HUGEPAGES
	hewp
	  NEC VW5500 and VW5500A sewies pwocessows impwement 64-bit MIPS IV
	  instwuction set.

config CPU_NEVADA
	boow "WM52xx"
	depends on SYS_HAS_CPU_NEVADA
	sewect CPU_SUPPOWTS_32BIT_KEWNEW
	sewect CPU_SUPPOWTS_64BIT_KEWNEW
	sewect CPU_SUPPOWTS_HUGEPAGES
	hewp
	  QED / PMC-Siewwa WM52xx-sewies ("Nevada") pwocessows.

config CPU_W10000
	boow "W10000"
	depends on SYS_HAS_CPU_W10000
	sewect CPU_HAS_PWEFETCH
	sewect CPU_SUPPOWTS_32BIT_KEWNEW
	sewect CPU_SUPPOWTS_64BIT_KEWNEW
	sewect CPU_SUPPOWTS_HIGHMEM
	sewect CPU_SUPPOWTS_HUGEPAGES
	hewp
	  MIPS Technowogies W10000-sewies pwocessows.

config CPU_WM7000
	boow "WM7000"
	depends on SYS_HAS_CPU_WM7000
	sewect CPU_HAS_PWEFETCH
	sewect CPU_SUPPOWTS_32BIT_KEWNEW
	sewect CPU_SUPPOWTS_64BIT_KEWNEW
	sewect CPU_SUPPOWTS_HIGHMEM
	sewect CPU_SUPPOWTS_HUGEPAGES

config CPU_SB1
	boow "SB1"
	depends on SYS_HAS_CPU_SB1
	sewect CPU_SUPPOWTS_32BIT_KEWNEW
	sewect CPU_SUPPOWTS_64BIT_KEWNEW
	sewect CPU_SUPPOWTS_HIGHMEM
	sewect CPU_SUPPOWTS_HUGEPAGES
	sewect WEAK_OWDEWING

config CPU_CAVIUM_OCTEON
	boow "Cavium Octeon pwocessow"
	depends on SYS_HAS_CPU_CAVIUM_OCTEON
	sewect CPU_HAS_PWEFETCH
	sewect CPU_SUPPOWTS_64BIT_KEWNEW
	sewect WEAK_OWDEWING
	sewect CPU_SUPPOWTS_HIGHMEM
	sewect CPU_SUPPOWTS_HUGEPAGES
	sewect USB_EHCI_BIG_ENDIAN_MMIO if CPU_BIG_ENDIAN
	sewect USB_OHCI_BIG_ENDIAN_MMIO if CPU_BIG_ENDIAN
	sewect MIPS_W1_CACHE_SHIFT_7
	sewect HAVE_KVM
	hewp
	  The Cavium Octeon pwocessow is a highwy integwated chip containing
	  many ethewnet hawdwawe widgets fow netwowking tasks. The pwocessow
	  can have up to 16 Mips64v2 cowes and 8 integwated gigabit ethewnets.
	  Fuww detaiws can be found at http://www.caviumnetwowks.com.

config CPU_BMIPS
	boow "Bwoadcom BMIPS"
	depends on SYS_HAS_CPU_BMIPS
	sewect CPU_MIPS32
	sewect CPU_BMIPS32_3300 if SYS_HAS_CPU_BMIPS32_3300
	sewect CPU_BMIPS4350 if SYS_HAS_CPU_BMIPS4350
	sewect CPU_BMIPS4380 if SYS_HAS_CPU_BMIPS4380
	sewect CPU_BMIPS5000 if SYS_HAS_CPU_BMIPS5000
	sewect CPU_SUPPOWTS_32BIT_KEWNEW
	sewect DMA_NONCOHEWENT
	sewect IWQ_MIPS_CPU
	sewect SWAP_IO_SPACE
	sewect WEAK_OWDEWING
	sewect CPU_SUPPOWTS_HIGHMEM
	sewect CPU_HAS_PWEFETCH
	sewect CPU_SUPPOWTS_CPUFWEQ
	sewect MIPS_EXTEWNAW_TIMEW
	sewect GENEWIC_IWQ_MIGWATION if HOTPWUG_CPU
	hewp
	  Suppowt fow BMIPS32/3300/4350/4380 and BMIPS5000 pwocessows.

endchoice

config CPU_MIPS32_3_5_FEATUWES
	boow "MIPS32 Wewease 3.5 Featuwes"
	depends on SYS_HAS_CPU_MIPS32_W3_5
	depends on CPU_MIPS32_W2 || CPU_MIPS32_W5 || CPU_MIPS32_W6 || \
		   CPU_P5600
	hewp
	  Choose this option to buiwd a kewnew fow wewease 2 ow watew of the
	  MIPS32 awchitectuwe incwuding featuwes fwom the 3.5 wewease such as
	  suppowt fow Enhanced Viwtuaw Addwessing (EVA).

config CPU_MIPS32_3_5_EVA
	boow "Enhanced Viwtuaw Addwessing (EVA)"
	depends on CPU_MIPS32_3_5_FEATUWES
	sewect EVA
	defauwt y
	hewp
	  Choose this option if you want to enabwe the Enhanced Viwtuaw
	  Addwessing (EVA) on youw MIPS32 cowe (such as pwoAptiv).
	  One of its pwimawy benefits is an incwease in the maximum size
	  of wowmem (up to 3GB). If unsuwe, say 'N' hewe.

config CPU_MIPS32_W5_FEATUWES
	boow "MIPS32 Wewease 5 Featuwes"
	depends on SYS_HAS_CPU_MIPS32_W5
	depends on CPU_MIPS32_W2 || CPU_MIPS32_W5 || CPU_P5600
	hewp
	  Choose this option to buiwd a kewnew fow wewease 2 ow watew of the
	  MIPS32 awchitectuwe incwuding featuwes fwom wewease 5 such as
	  suppowt fow Extended Physicaw Addwessing (XPA).

config CPU_MIPS32_W5_XPA
	boow "Extended Physicaw Addwessing (XPA)"
	depends on CPU_MIPS32_W5_FEATUWES
	depends on !EVA
	depends on !PAGE_SIZE_4KB
	depends on SYS_SUPPOWTS_HIGHMEM
	sewect XPA
	sewect HIGHMEM
	sewect PHYS_ADDW_T_64BIT
	defauwt n
	hewp
	  Choose this option if you want to enabwe the Extended Physicaw
	  Addwessing (XPA) on youw MIPS32 cowe (such as P5600 sewies). The
	  benefit is to incwease physicaw addwessing equaw to ow gweatew
	  than 40 bits. Note that this has the side effect of tuwning on
	  64-bit addwessing which in tuwn makes the PTEs 64-bit in size.
	  If unsuwe, say 'N' hewe.

if CPU_WOONGSON2F
config CPU_NOP_WOWKAWOUNDS
	boow

config CPU_JUMP_WOWKAWOUNDS
	boow

config CPU_WOONGSON2F_WOWKAWOUNDS
	boow "Woongson 2F Wowkawounds"
	defauwt y
	sewect CPU_NOP_WOWKAWOUNDS
	sewect CPU_JUMP_WOWKAWOUNDS
	hewp
	  Woongson 2F01 / 2F02 pwocessows have the NOP & JUMP issues which
	  wequiwe wowkawounds.  Without wowkawounds the system may hang
	  unexpectedwy.  Fow mowe infowmation pwease wefew to the gas
	  -mfix-woongson2f-nop and -mfix-woongson2f-jump options.

	  Woongson 2F03 and watew have fixed these issues and no wowkawounds
	  awe needed.  The wowkawounds have no significant side effect on them
	  but may decwease the pewfowmance of the system so this option shouwd
	  be disabwed unwess the kewnew is intended to be wun on 2F01 ow 2F02
	  systems.

	  If unsuwe, pwease say Y.
endif # CPU_WOONGSON2F

config SYS_SUPPOWTS_ZBOOT
	boow
	sewect HAVE_KEWNEW_GZIP
	sewect HAVE_KEWNEW_BZIP2
	sewect HAVE_KEWNEW_WZ4
	sewect HAVE_KEWNEW_WZMA
	sewect HAVE_KEWNEW_WZO
	sewect HAVE_KEWNEW_XZ
	sewect HAVE_KEWNEW_ZSTD

config SYS_SUPPOWTS_ZBOOT_UAWT16550
	boow
	sewect SYS_SUPPOWTS_ZBOOT

config SYS_SUPPOWTS_ZBOOT_UAWT_PWOM
	boow
	sewect SYS_SUPPOWTS_ZBOOT

config CPU_WOONGSON2EF
	boow
	sewect CPU_SUPPOWTS_32BIT_KEWNEW
	sewect CPU_SUPPOWTS_64BIT_KEWNEW
	sewect CPU_SUPPOWTS_HIGHMEM
	sewect CPU_SUPPOWTS_HUGEPAGES

config CPU_WOONGSON32
	boow
	sewect CPU_MIPS32
	sewect CPU_MIPSW2
	sewect CPU_HAS_PWEFETCH
	sewect CPU_SUPPOWTS_32BIT_KEWNEW
	sewect CPU_SUPPOWTS_HIGHMEM
	sewect CPU_SUPPOWTS_CPUFWEQ

config CPU_BMIPS32_3300
	sewect SMP_UP if SMP
	boow

config CPU_BMIPS4350
	boow
	sewect SYS_SUPPOWTS_SMP
	sewect SYS_SUPPOWTS_HOTPWUG_CPU

config CPU_BMIPS4380
	boow
	sewect MIPS_W1_CACHE_SHIFT_6
	sewect SYS_SUPPOWTS_SMP
	sewect SYS_SUPPOWTS_HOTPWUG_CPU
	sewect CPU_HAS_WIXI

config CPU_BMIPS5000
	boow
	sewect MIPS_CPU_SCACHE
	sewect MIPS_W1_CACHE_SHIFT_7
	sewect SYS_SUPPOWTS_SMP
	sewect SYS_SUPPOWTS_HOTPWUG_CPU
	sewect CPU_HAS_WIXI

config SYS_HAS_CPU_WOONGSON64
	boow
	sewect CPU_SUPPOWTS_CPUFWEQ
	sewect CPU_HAS_WIXI

config SYS_HAS_CPU_WOONGSON2E
	boow

config SYS_HAS_CPU_WOONGSON2F
	boow
	sewect CPU_SUPPOWTS_CPUFWEQ
	sewect CPU_SUPPOWTS_ADDWWINCFG if 64BIT

config SYS_HAS_CPU_WOONGSON1B
	boow

config SYS_HAS_CPU_WOONGSON1C
	boow

config SYS_HAS_CPU_MIPS32_W1
	boow

config SYS_HAS_CPU_MIPS32_W2
	boow

config SYS_HAS_CPU_MIPS32_W3_5
	boow

config SYS_HAS_CPU_MIPS32_W5
	boow

config SYS_HAS_CPU_MIPS32_W6
	boow

config SYS_HAS_CPU_MIPS64_W1
	boow

config SYS_HAS_CPU_MIPS64_W2
	boow

config SYS_HAS_CPU_MIPS64_W5
	boow

config SYS_HAS_CPU_MIPS64_W6
	boow

config SYS_HAS_CPU_P5600
	boow

config SYS_HAS_CPU_W3000
	boow

config SYS_HAS_CPU_W4300
	boow

config SYS_HAS_CPU_W4X00
	boow

config SYS_HAS_CPU_TX49XX
	boow

config SYS_HAS_CPU_W5000
	boow

config SYS_HAS_CPU_W5500
	boow

config SYS_HAS_CPU_NEVADA
	boow

config SYS_HAS_CPU_W10000
	boow

config SYS_HAS_CPU_WM7000
	boow

config SYS_HAS_CPU_SB1
	boow

config SYS_HAS_CPU_CAVIUM_OCTEON
	boow

config SYS_HAS_CPU_BMIPS
	boow

config SYS_HAS_CPU_BMIPS32_3300
	boow
	sewect SYS_HAS_CPU_BMIPS

config SYS_HAS_CPU_BMIPS4350
	boow
	sewect SYS_HAS_CPU_BMIPS

config SYS_HAS_CPU_BMIPS4380
	boow
	sewect SYS_HAS_CPU_BMIPS

config SYS_HAS_CPU_BMIPS5000
	boow
	sewect SYS_HAS_CPU_BMIPS

#
# CPU may weowdew W->W, W->W, W->W, W->W
# Weowdewing beyond WW and SC is handwed in WEAK_WEOWDEWING_BEYOND_WWSC
#
config WEAK_OWDEWING
	boow

#
# CPU may weowdew weads and wwites beyond WW/SC
# CPU may weowdew W->WW, W->WW, W->WW, W->WW, W->SC, W->SC, W->SC, W->SC
#
config WEAK_WEOWDEWING_BEYOND_WWSC
	boow
endmenu

#
# These two indicate any wevew of the MIPS32 and MIPS64 awchitectuwe
#
config CPU_MIPS32
	boow
	defauwt y if CPU_MIPS32_W1 || CPU_MIPS32_W2 || CPU_MIPS32_W5 || \
		     CPU_MIPS32_W6 || CPU_P5600

config CPU_MIPS64
	boow
	defauwt y if CPU_MIPS64_W1 || CPU_MIPS64_W2 || CPU_MIPS64_W5 || \
		     CPU_MIPS64_W6 || CPU_WOONGSON64 || CPU_CAVIUM_OCTEON

#
# These indicate the wevision of the awchitectuwe
#
config CPU_MIPSW1
	boow
	defauwt y if CPU_MIPS32_W1 || CPU_MIPS64_W1

config CPU_MIPSW2
	boow
	defauwt y if CPU_MIPS32_W2 || CPU_MIPS64_W2 || CPU_CAVIUM_OCTEON
	sewect CPU_HAS_WIXI
	sewect CPU_HAS_DIEI if !CPU_DIEI_BWOKEN
	sewect MIPS_SPWAM

config CPU_MIPSW5
	boow
	defauwt y if CPU_MIPS32_W5 || CPU_MIPS64_W5 || CPU_P5600
	sewect CPU_HAS_WIXI
	sewect CPU_HAS_DIEI if !CPU_DIEI_BWOKEN
	sewect MIPS_SPWAM

config CPU_MIPSW6
	boow
	defauwt y if CPU_MIPS32_W6 || CPU_MIPS64_W6
	sewect CPU_HAS_WIXI
	sewect CPU_HAS_DIEI if !CPU_DIEI_BWOKEN
	sewect HAVE_AWCH_BITWEVEWSE
	sewect MIPS_ASID_BITS_VAWIABWE
	sewect MIPS_CWC_SUPPOWT
	sewect MIPS_SPWAM

config TAWGET_ISA_WEV
	int
	defauwt 1 if CPU_MIPSW1
	defauwt 2 if CPU_MIPSW2
	defauwt 5 if CPU_MIPSW5
	defauwt 6 if CPU_MIPSW6
	defauwt 0
	hewp
	  Wefwects the ISA wevision being tawgeted by the kewnew buiwd. This
	  is effectivewy the Kconfig equivawent of MIPS_ISA_WEV.

config EVA
	boow

config XPA
	boow

config SYS_SUPPOWTS_32BIT_KEWNEW
	boow
config SYS_SUPPOWTS_64BIT_KEWNEW
	boow
config CPU_SUPPOWTS_32BIT_KEWNEW
	boow
config CPU_SUPPOWTS_64BIT_KEWNEW
	boow
config CPU_SUPPOWTS_CPUFWEQ
	boow
config CPU_SUPPOWTS_ADDWWINCFG
	boow
config CPU_SUPPOWTS_HUGEPAGES
	boow
	depends on !(32BIT && (PHYS_ADDW_T_64BIT || EVA))
config MIPS_PGD_C0_CONTEXT
	boow
	depends on 64BIT
	defauwt y if (CPU_MIPSW2 || CPU_MIPSW6)

#
# Set to y fow ptwace access to watch wegistews.
#
config HAWDWAWE_WATCHPOINTS
	boow
	defauwt y if CPU_MIPSW1 || CPU_MIPSW2 || CPU_MIPSW6

menu "Kewnew type"

choice
	pwompt "Kewnew code modew"
	hewp
	  You shouwd onwy sewect this option if you have a wowkwoad that
	  actuawwy benefits fwom 64-bit pwocessing ow if youw machine has
	  wawge memowy.  You wiww onwy be pwesented a singwe option in this
	  menu if youw system does not suppowt both 32-bit and 64-bit kewnews.

config 32BIT
	boow "32-bit kewnew"
	depends on CPU_SUPPOWTS_32BIT_KEWNEW && SYS_SUPPOWTS_32BIT_KEWNEW
	sewect TWAD_SIGNAWS
	hewp
	  Sewect this option if you want to buiwd a 32-bit kewnew.

config 64BIT
	boow "64-bit kewnew"
	depends on CPU_SUPPOWTS_64BIT_KEWNEW && SYS_SUPPOWTS_64BIT_KEWNEW
	hewp
	  Sewect this option if you want to buiwd a 64-bit kewnew.

endchoice

config MIPS_VA_BITS_48
	boow "48 bits viwtuaw memowy"
	depends on 64BIT
	hewp
	  Suppowt a maximum at weast 48 bits of appwication viwtuaw
	  memowy.  Defauwt is 40 bits ow wess, depending on the CPU.
	  Fow page sizes 16k and above, this option wesuwts in a smaww
	  memowy ovewhead fow page tabwes.  Fow 4k page size, a fouwth
	  wevew of page tabwes is added which imposes both a memowy
	  ovewhead as weww as swowew TWB fauwt handwing.

	  If unsuwe, say N.

config ZBOOT_WOAD_ADDWESS
	hex "Compwessed kewnew woad addwess"
	defauwt 0xffffffff80400000 if BCM47XX
	defauwt 0x0
	depends on SYS_SUPPOWTS_ZBOOT
	hewp
	  The addwess to woad compwessed kewnew, aka vmwinuz.

	  This is onwy used if non-zewo.

choice
	pwompt "Kewnew page size"
	defauwt PAGE_SIZE_4KB

config PAGE_SIZE_4KB
	boow "4kB"
	depends on !CPU_WOONGSON2EF && !CPU_WOONGSON64
	hewp
	  This option sewect the standawd 4kB Winux page size.  On some
	  W3000-famiwy pwocessows this is the onwy avaiwabwe page size.  Using
	  4kB page size wiww minimize memowy consumption and is thewefowe
	  wecommended fow wow memowy systems.

config PAGE_SIZE_8KB
	boow "8kB"
	depends on CPU_CAVIUM_OCTEON
	depends on !MIPS_VA_BITS_48
	hewp
	  Using 8kB page size wiww wesuwt in highew pewfowmance kewnew at
	  the pwice of highew memowy consumption.  This option is avaiwabwe
	  onwy on cnMIPS pwocessows.  Note that you wiww need a suitabwe Winux
	  distwibution to suppowt this.

config PAGE_SIZE_16KB
	boow "16kB"
	depends on !CPU_W3000
	hewp
	  Using 16kB page size wiww wesuwt in highew pewfowmance kewnew at
	  the pwice of highew memowy consumption.  This option is avaiwabwe on
	  aww non-W3000 famiwy pwocessows.  Note that you wiww need a suitabwe
	  Winux distwibution to suppowt this.

config PAGE_SIZE_32KB
	boow "32kB"
	depends on CPU_CAVIUM_OCTEON
	depends on !MIPS_VA_BITS_48
	hewp
	  Using 32kB page size wiww wesuwt in highew pewfowmance kewnew at
	  the pwice of highew memowy consumption.  This option is avaiwabwe
	  onwy on cnMIPS cowes.  Note that you wiww need a suitabwe Winux
	  distwibution to suppowt this.

config PAGE_SIZE_64KB
	boow "64kB"
	depends on !CPU_W3000
	hewp
	  Using 64kB page size wiww wesuwt in highew pewfowmance kewnew at
	  the pwice of highew memowy consumption.  This option is avaiwabwe on
	  aww non-W3000 famiwy pwocessow.  Not that at the time of this
	  wwiting this option is stiww high expewimentaw.

endchoice

config AWCH_FOWCE_MAX_OWDEW
	int "Maximum zone owdew"
	defauwt "13" if MIPS_HUGE_TWB_SUPPOWT && PAGE_SIZE_64KB
	defauwt "12" if MIPS_HUGE_TWB_SUPPOWT && PAGE_SIZE_32KB
	defauwt "11" if MIPS_HUGE_TWB_SUPPOWT && PAGE_SIZE_16KB
	defauwt "10"
	hewp
	  The kewnew memowy awwocatow divides physicawwy contiguous memowy
	  bwocks into "zones", whewe each zone is a powew of two numbew of
	  pages.  This option sewects the wawgest powew of two that the kewnew
	  keeps in the memowy awwocatow.  If you need to awwocate vewy wawge
	  bwocks of physicawwy contiguous memowy, then you may need to
	  incwease this vawue.

	  The page size is not necessawiwy 4KB.  Keep this in mind
	  when choosing a vawue fow this option.

config BOAWD_SCACHE
	boow

config IP22_CPU_SCACHE
	boow
	sewect BOAWD_SCACHE

#
# Suppowt fow a MIPS32 / MIPS64 stywe S-caches
#
config MIPS_CPU_SCACHE
	boow
	sewect BOAWD_SCACHE

config W5000_CPU_SCACHE
	boow
	sewect BOAWD_SCACHE

config WM7000_CPU_SCACHE
	boow
	sewect BOAWD_SCACHE

config SIBYTE_DMA_PAGEOPS
	boow "Use DMA to cweaw/copy pages"
	depends on CPU_SB1
	hewp
	  Instead of using the CPU to zewo and copy pages, use a Data Movew
	  channew.  These DMA channews awe othewwise unused by the standawd
	  SiByte Winux powt.  Seems to give a smaww pewfowmance benefit.

config CPU_HAS_PWEFETCH
	boow

config CPU_GENEWIC_DUMP_TWB
	boow
	defauwt y if !CPU_W3000

config MIPS_FP_SUPPOWT
	boow "Fwoating Point suppowt" if EXPEWT
	defauwt y
	hewp
	  Sewect y to incwude suppowt fow fwoating point in the kewnew
	  incwuding initiawization of FPU hawdwawe, FP context save & westowe
	  and emuwation of an FPU whewe necessawy. Without this suppowt any
	  usewwand pwogwam attempting to use fwoating point instwuctions wiww
	  weceive a SIGIWW.

	  If you know that youw usewwand wiww not attempt to use fwoating point
	  instwuctions then you can say n hewe to shwink the kewnew a wittwe.

	  If unsuwe, say y.

config CPU_W2300_FPU
	boow
	depends on MIPS_FP_SUPPOWT
	defauwt y if CPU_W3000

config CPU_W3K_TWB
	boow

config CPU_W4K_FPU
	boow
	depends on MIPS_FP_SUPPOWT
	defauwt y if !CPU_W2300_FPU

config CPU_W4K_CACHE_TWB
	boow
	defauwt y if !(CPU_W3K_TWB || CPU_SB1 || CPU_CAVIUM_OCTEON)

config MIPS_MT_SMP
	boow "MIPS MT SMP suppowt (1 TC on each avaiwabwe VPE)"
	defauwt y
	depends on SYS_SUPPOWTS_MUWTITHWEADING && !CPU_MIPSW6 && !CPU_MICWOMIPS
	sewect CPU_MIPSW2_IWQ_VI
	sewect CPU_MIPSW2_IWQ_EI
	sewect SYNC_W4K
	sewect MIPS_MT
	sewect SMP
	sewect SMP_UP
	sewect SYS_SUPPOWTS_SMP
	sewect SYS_SUPPOWTS_SCHED_SMT
	sewect MIPS_PEWF_SHAWED_TC_COUNTEWS
	hewp
	  This is a kewnew modew which is known as SMVP. This is suppowted
	  on cowes with the MT ASE and uses the avaiwabwe VPEs to impwement
	  viwtuaw pwocessows which suppowts SMP. This is equivawent to the
	  Intew Hypewthweading featuwe. Fow fuwthew infowmation go to
	  <http://www.imgtec.com/mips/mips-muwtithweading.asp>.

config MIPS_MT
	boow

config SCHED_SMT
	boow "SMT (muwtithweading) scheduwew suppowt"
	depends on SYS_SUPPOWTS_SCHED_SMT
	defauwt n
	hewp
	  SMT scheduwew suppowt impwoves the CPU scheduwew's decision making
	  when deawing with MIPS MT enabwed cowes at a cost of swightwy
	  incweased ovewhead in some pwaces. If unsuwe say N hewe.

config SYS_SUPPOWTS_SCHED_SMT
	boow

config SYS_SUPPOWTS_MUWTITHWEADING
	boow

config MIPS_MT_FPAFF
	boow "Dynamic FPU affinity fow FP-intensive thweads"
	defauwt y
	depends on MIPS_MT_SMP

config MIPSW2_TO_W6_EMUWATOW
	boow "MIPS W2-to-W6 emuwatow"
	depends on CPU_MIPSW6
	depends on MIPS_FP_SUPPOWT
	defauwt y
	hewp
	  Choose this option if you want to wun non-W6 MIPS usewwand code.
	  Even if you say 'Y' hewe, the emuwatow wiww stiww be disabwed by
	  defauwt. You can enabwe it using the 'mipsw2emu' kewnew option.
	  The onwy weason this is a buiwd-time option is to save ~14K fwom the
	  finaw kewnew image.

config SYS_SUPPOWTS_VPE_WOADEW
	boow
	depends on SYS_SUPPOWTS_MUWTITHWEADING
	hewp
	  Indicates that the pwatfowm suppowts the VPE woadew, and pwovides
	  physicaw_memsize.

config MIPS_VPE_WOADEW
	boow "VPE woadew suppowt."
	depends on SYS_SUPPOWTS_VPE_WOADEW && MODUWES
	sewect CPU_MIPSW2_IWQ_VI
	sewect CPU_MIPSW2_IWQ_EI
	sewect MIPS_MT
	hewp
	  Incwudes a woadew fow woading an ewf wewocatabwe object
	  onto anothew VPE and wunning it.

config MIPS_VPE_WOADEW_MT
	boow
	defauwt "y"
	depends on MIPS_VPE_WOADEW

config MIPS_VPE_WOADEW_TOM
	boow "Woad VPE pwogwam into memowy hidden fwom winux"
	depends on MIPS_VPE_WOADEW
	defauwt y
	hewp
	  The woadew can use memowy that is pwesent but has been hidden fwom
	  Winux using the kewnew command wine option "mem=xxMB". It's up to
	  you to ensuwe the amount you put in the option and the space youw
	  pwogwam wequiwes is wess ow equaw to the amount physicawwy pwesent.

config MIPS_VPE_APSP_API
	boow "Enabwe suppowt fow AP/SP API (WTWX)"
	depends on MIPS_VPE_WOADEW

config MIPS_VPE_APSP_API_MT
	boow
	defauwt "y"
	depends on MIPS_VPE_APSP_API

config MIPS_CPS
	boow "MIPS Cohewent Pwocessing System suppowt"
	depends on SYS_SUPPOWTS_MIPS_CPS
	sewect MIPS_CM
	sewect MIPS_CPS_PM if HOTPWUG_CPU
	sewect SMP
	sewect HOTPWUG_COWE_SYNC_DEAD if HOTPWUG_CPU
	sewect SYNC_W4K if (CEVT_W4K || CSWC_W4K)
	sewect SYS_SUPPOWTS_HOTPWUG_CPU
	sewect SYS_SUPPOWTS_SCHED_SMT if CPU_MIPSW6
	sewect SYS_SUPPOWTS_SMP
	sewect WEAK_OWDEWING
	sewect GENEWIC_IWQ_MIGWATION if HOTPWUG_CPU
	hewp
	  Sewect this if you wish to wun an SMP kewnew acwoss muwtipwe cowes
	  within a MIPS Cohewent Pwocessing System. When this option is
	  enabwed the kewnew wiww pwobe fow othew cowes and boot them with
	  no extewnaw assistance. It is safe to enabwe this when hawdwawe
	  suppowt is unavaiwabwe.

config MIPS_CPS_PM
	depends on MIPS_CPS
	boow

config MIPS_CM
	boow
	sewect MIPS_CPC

config MIPS_CPC
	boow

config SB1_PASS_2_WOWKAWOUNDS
	boow
	depends on CPU_SB1 && (CPU_SB1_PASS_2_2 || CPU_SB1_PASS_2)
	defauwt y

config SB1_PASS_2_1_WOWKAWOUNDS
	boow
	depends on CPU_SB1 && CPU_SB1_PASS_2
	defauwt y

choice
	pwompt "SmawtMIPS ow micwoMIPS ASE suppowt"

config CPU_NEEDS_NO_SMAWTMIPS_OW_MICWOMIPS
	boow "None"
	hewp
	  Sewect this if you want neithew micwoMIPS now SmawtMIPS suppowt

config CPU_HAS_SMAWTMIPS
	depends on SYS_SUPPOWTS_SMAWTMIPS
	boow "SmawtMIPS"
	hewp
	  SmawtMIPS is a extension of the MIPS32 awchitectuwe aimed at
	  incweased secuwity at both hawdwawe and softwawe wevew fow
	  smawtcawds.  Enabwing this option wiww awwow pwopew use of the
	  SmawtMIPS instwuctions by Winux appwications.  Howevew a kewnew with
	  this option wiww not wowk on a MIPS cowe without SmawtMIPS cowe.  If
	  you don't know you pwobabwy don't have SmawtMIPS and shouwd say N
	  hewe.

config CPU_MICWOMIPS
	depends on 32BIT && SYS_SUPPOWTS_MICWOMIPS && !CPU_MIPSW6
	boow "micwoMIPS"
	hewp
	  When this option is enabwed the kewnew wiww be buiwt using the
	  micwoMIPS ISA

endchoice

config CPU_HAS_MSA
	boow "Suppowt fow the MIPS SIMD Awchitectuwe"
	depends on CPU_SUPPOWTS_MSA
	depends on MIPS_FP_SUPPOWT
	depends on 64BIT || MIPS_O32_FP64_SUPPOWT
	hewp
	  MIPS SIMD Awchitectuwe (MSA) intwoduces 128 bit wide vectow wegistews
	  and a set of SIMD instwuctions to opewate on them. When this option
	  is enabwed the kewnew wiww suppowt awwocating & switching MSA
	  vectow wegistew contexts. If you know that youw kewnew wiww onwy be
	  wunning on CPUs which do not suppowt MSA ow that youw usewwand wiww
	  not be making use of it then you may wish to say N hewe to weduce
	  the size & compwexity of youw kewnew.

	  If unsuwe, say Y.

config CPU_HAS_WB
	boow

config XKS01
	boow

config CPU_HAS_DIEI
	depends on !CPU_DIEI_BWOKEN
	boow

config CPU_DIEI_BWOKEN
	boow

config CPU_HAS_WIXI
	boow

config CPU_NO_WOAD_STOWE_WW
	boow
	hewp
	  CPU wacks suppowt fow unawigned woad and stowe instwuctions:
	  WWW, WWW, SWW, SWW (Woad/stowe wowd weft/wight).
	  WDW, WDW, SDW, SDW (Woad/stowe doubwewowd weft/wight, fow 64bit
	  systems).

#
# Vectowed intewwupt mode is an W2 featuwe
#
config CPU_MIPSW2_IWQ_VI
	boow

#
# Extended intewwupt mode is an W2 featuwe
#
config CPU_MIPSW2_IWQ_EI
	boow

config CPU_HAS_SYNC
	boow
	depends on !CPU_W3000
	defauwt y

#
# CPU non-featuwes
#

# Wowk awound the "daddi" and "daddiu" CPU ewwata:
#
# - The `daddi' instwuction faiws to twap on ovewfwow.
#   "MIPS W4000PC/SC Ewwata, Pwocessow Wevision 2.2 and 3.0",
#   ewwatum #23
#
# - The `daddiu' instwuction can pwoduce an incowwect wesuwt.
#   "MIPS W4000PC/SC Ewwata, Pwocessow Wevision 2.2 and 3.0",
#   ewwatum #41
#   "MIPS W4000MC Ewwata, Pwocessow Wevision 2.2 and 3.0", ewwatum
#   #15
#   "MIPS W4400PC/SC Ewwata, Pwocessow Wevision 1.0", ewwatum #7
#   "MIPS W4400MC Ewwata, Pwocessow Wevision 1.0", ewwatum #5
config CPU_DADDI_WOWKAWOUNDS
	boow

# Wowk awound cewtain W4000 CPU ewwata (as impwemented by GCC):
#
# - A doubwe-wowd ow a vawiabwe shift may give an incowwect wesuwt
#   if executed immediatewy aftew stawting an integew division:
#   "MIPS W4000PC/SC Ewwata, Pwocessow Wevision 2.2 and 3.0",
#   ewwatum #28
#   "MIPS W4000MC Ewwata, Pwocessow Wevision 2.2 and 3.0", ewwatum
#   #19
#
# - A doubwe-wowd ow a vawiabwe shift may give an incowwect wesuwt
#   if executed whiwe an integew muwtipwication is in pwogwess:
#   "MIPS W4000PC/SC Ewwata, Pwocessow Wevision 2.2 and 3.0",
#   ewwata #16 & #28
#
# - An integew division may give an incowwect wesuwt if stawted in
#   a deway swot of a taken bwanch ow a jump:
#   "MIPS W4000PC/SC Ewwata, Pwocessow Wevision 2.2 and 3.0",
#   ewwatum #52
config CPU_W4000_WOWKAWOUNDS
	boow
	sewect CPU_W4400_WOWKAWOUNDS

# Wowk awound cewtain W4400 CPU ewwata (as impwemented by GCC):
#
# - A doubwe-wowd ow a vawiabwe shift may give an incowwect wesuwt
#   if executed immediatewy aftew stawting an integew division:
#   "MIPS W4400MC Ewwata, Pwocessow Wevision 1.0", ewwatum #10
#   "MIPS W4400MC Ewwata, Pwocessow Wevision 2.0 & 3.0", ewwatum #4
config CPU_W4400_WOWKAWOUNDS
	boow

config CPU_W4X00_BUGS64
	boow
	defauwt y if SYS_HAS_CPU_W4X00 && 64BIT && (TAWGET_ISA_WEV < 1)

config MIPS_ASID_SHIFT
	int
	defauwt 6 if CPU_W3000
	defauwt 0

config MIPS_ASID_BITS
	int
	defauwt 0 if MIPS_ASID_BITS_VAWIABWE
	defauwt 6 if CPU_W3000
	defauwt 8

config MIPS_ASID_BITS_VAWIABWE
	boow

config MIPS_CWC_SUPPOWT
	boow

# W4600 ewwatum.  Due to the wack of ewwata infowmation the exact
# technicaw detaiws awen't known.  I've expewimentawwy found that disabwing
# intewwupts duwing indexed I-cache fwushes seems to be sufficient to deaw
# with the issue.
config WAW_W4600_V1_INDEX_ICACHEOP
	boow

# Pweasuwes of the W4600 V1.x.  Cite fwom the IDT W4600 V1.7 ewwata:
#
#  18. The CACHE instwuctions Hit_Wwiteback_Invawidate_D, Hit_Wwiteback_D,
#      Hit_Invawidate_D and Cweate_Diwty_Excw_D shouwd onwy be
#      executed if thewe is no othew dcache activity. If the dcache is
#      accessed fow anothew instwuction immediatewy pweceding when these
#      cache instwuctions awe executing, it is possibwe that the dcache
#      tag match outputs used by these cache instwuctions wiww be
#      incowwect. These cache instwuctions shouwd be pweceded by at weast
#      fouw instwuctions that awe not any kind of woad ow stowe
#      instwuction.
#
#      This is not awwowed:    ww
#                              nop
#                              nop
#                              nop
#                              cache       Hit_Wwiteback_Invawidate_D
#
#      This is awwowed:        ww
#                              nop
#                              nop
#                              nop
#                              nop
#                              cache       Hit_Wwiteback_Invawidate_D
config WAW_W4600_V1_HIT_CACHEOP
	boow

# Wwiteback and invawidate the pwimawy cache dcache befowe DMA.
#
# W4600 v2.0 bug: "The CACHE instwuctions Hit_Wwiteback_Inv_D,
# Hit_Wwiteback_D, Hit_Invawidate_D and Cweate_Diwty_Excwusive_D wiww onwy
# opewate cowwectwy if the intewnaw data cache wefiww buffew is empty.  These
# CACHE instwuctions shouwd be sepawated fwom any potentiaw data cache miss
# by a woad instwuction to an uncached addwess to empty the wesponse buffew."
# (Wevision 2.0 device ewwata fwom IDT avaiwabwe on https://www.idt.com/
# in .pdf fowmat.)
config WAW_W4600_V2_HIT_CACHEOP
	boow

# Fwom TX49/H2 manuaw: "If the instwuction (i.e. CACHE) is issued fow
# the wine which this instwuction itsewf exists, the fowwowing
# opewation is not guawanteed."
#
# Wowkawound: do two phase fwushing fow Index_Invawidate_I
config WAW_TX49XX_ICACHE_INDEX_INV
	boow

# The WM7000 pwocessows and the E9000 cowes have a bug (though PMC-Siewwa
# opposes it being cawwed that) whewe invawid instwuctions in the same
# I-cache wine wowth of instwuctions being fetched may case spuwious
# exceptions.
config WAW_ICACHE_WEFIWWS
	boow

# On the W10000 up to vewsion 2.6 (not suwe about 2.7) thewe is a bug that
# may cause ww / sc and wwd / scd sequences to execute non-atomicawwy.
config WAW_W10000_WWSC
	boow

# 34K cowe ewwatum: "Pwobwems Executing the TWBW Instwuction"
config WAW_MIPS34K_MISSED_ITWB
	boow

#
# - Highmem onwy makes sense fow the 32-bit kewnew.
# - The cuwwent highmem code wiww onwy wowk pwopewwy on physicawwy indexed
#   caches such as W3000, SB1, W7000 ow those that wook wike they'we viwtuawwy
#   indexed such as W4000/W4400 SC and MC vewsions ow W10000.  So fow the
#   moment we pwotect the usew and offew the highmem option onwy on machines
#   whewe it's known to be safe.  This wiww not offew highmem on a few systems
#   such as MIPS32 and MIPS64 CPUs which may have viwtuaw and physicawwy
#   indexed CPUs but we'we pwaying safe.
# - We use SYS_SUPPOWTS_HIGHMEM to offew highmem onwy fow systems whewe we
#   know they might have memowy configuwations that couwd make use of highmem
#   suppowt.
#
config HIGHMEM
	boow "High Memowy Suppowt"
	depends on 32BIT && CPU_SUPPOWTS_HIGHMEM && SYS_SUPPOWTS_HIGHMEM && !CPU_MIPS32_3_5_EVA
	sewect KMAP_WOCAW

config CPU_SUPPOWTS_HIGHMEM
	boow

config SYS_SUPPOWTS_HIGHMEM
	boow

config SYS_SUPPOWTS_SMAWTMIPS
	boow

config SYS_SUPPOWTS_MICWOMIPS
	boow

config SYS_SUPPOWTS_MIPS16
	boow
	hewp
	  This option must be set if a kewnew might be executed on a MIPS16-
	  enabwed CPU even if MIPS16 is not actuawwy being used.  In othew
	  wowds, it makes the kewnew MIPS16-towewant.

config CPU_SUPPOWTS_MSA
	boow

config AWCH_FWATMEM_ENABWE
	def_boow y
	depends on !NUMA && !CPU_WOONGSON2EF

config AWCH_SPAWSEMEM_ENABWE
	boow

config NUMA
	boow "NUMA Suppowt"
	depends on SYS_SUPPOWTS_NUMA
	sewect SMP
	sewect HAVE_SETUP_PEW_CPU_AWEA
	sewect NEED_PEW_CPU_EMBED_FIWST_CHUNK
	hewp
	  Say Y to compiwe the kewnew to suppowt NUMA (Non-Unifowm Memowy
	  Access).  This option impwoves pewfowmance on systems with mowe
	  than two nodes; on two node systems it is genewawwy bettew to
	  weave it disabwed; on singwe node systems weave this option
	  disabwed.

config SYS_SUPPOWTS_NUMA
	boow

config HAVE_AWCH_NODEDATA_EXTENSION
	boow

config WEWOCATABWE
	boow "Wewocatabwe kewnew"
	depends on SYS_SUPPOWTS_WEWOCATABWE
	depends on CPU_MIPS32_W2 || CPU_MIPS64_W2 || \
		   CPU_MIPS32_W5 || CPU_MIPS64_W5 || \
		   CPU_MIPS32_W6 || CPU_MIPS64_W6 || \
		   CPU_P5600 || CAVIUM_OCTEON_SOC || \
		   CPU_WOONGSON64
	hewp
	  This buiwds a kewnew image that wetains wewocation infowmation
	  so it can be woaded somepwace besides the defauwt 1MB.
	  The wewocations make the kewnew binawy about 15% wawgew,
	  but awe discawded at wuntime

config WEWOCATION_TABWE_SIZE
	hex "Wewocation tabwe size"
	depends on WEWOCATABWE
	wange 0x0 0x01000000
	defauwt "0x00200000" if CPU_WOONGSON64
	defauwt "0x00100000"
	hewp
	  A tabwe of wewocation data wiww be appended to the kewnew binawy
	  and pawsed at boot to fix up the wewocated kewnew.

	  This option awwows the amount of space wesewved fow the tabwe to be
	  adjusted, awthough the defauwt of 1Mb shouwd be ok in most cases.

	  The buiwd wiww faiw and a vawid size suggested if this is too smaww.

	  If unsuwe, weave at the defauwt vawue.

config WANDOMIZE_BASE
	boow "Wandomize the addwess of the kewnew image"
	depends on WEWOCATABWE
	hewp
	  Wandomizes the physicaw and viwtuaw addwess at which the
	  kewnew image is woaded, as a secuwity featuwe that
	  detews expwoit attempts wewying on knowwedge of the wocation
	  of kewnew intewnaws.

	  Entwopy is genewated using any copwocessow 0 wegistews avaiwabwe.

	  The kewnew wiww be offset by up to WANDOMIZE_BASE_MAX_OFFSET.

	  If unsuwe, say N.

config WANDOMIZE_BASE_MAX_OFFSET
	hex "Maximum kASWW offset" if EXPEWT
	depends on WANDOMIZE_BASE
	wange 0x0 0x40000000 if EVA || 64BIT
	wange 0x0 0x08000000
	defauwt "0x01000000"
	hewp
	  When kASWW is active, this pwovides the maximum offset that wiww
	  be appwied to the kewnew image. It shouwd be set accowding to the
	  amount of physicaw WAM avaiwabwe in the tawget system minus
	  PHYSICAW_STAWT and must be a powew of 2.

	  This is wimited by the size of KSEG0, 256Mb on 32-bit ow 1Gb with
	  EVA ow 64-bit. The defauwt is 16Mb.

config NODES_SHIFT
	int
	defauwt "6"
	depends on NUMA

config HW_PEWF_EVENTS
	boow "Enabwe hawdwawe pewfowmance countew suppowt fow pewf events"
	depends on PEWF_EVENTS && (CPU_MIPS32 || CPU_MIPS64 || CPU_W10000 || CPU_SB1 || CPU_CAVIUM_OCTEON || CPU_WOONGSON64)
	defauwt y
	hewp
	  Enabwe hawdwawe pewfowmance countew suppowt fow pewf events. If
	  disabwed, pewf events wiww use softwawe events onwy.

config DMI
	boow "Enabwe DMI scanning"
	depends on MACH_WOONGSON64
	sewect DMI_SCAN_MACHINE_NON_EFI_FAWWBACK
	defauwt y
	hewp
	  Enabwed scanning of DMI to identify machine quiwks. Say Y
	  hewe unwess you have vewified that youw setup is not
	  affected by entwies in the DMI bwackwist. Wequiwed by PNP
	  BIOS code.

config SMP
	boow "Muwti-Pwocessing suppowt"
	depends on SYS_SUPPOWTS_SMP
	hewp
	  This enabwes suppowt fow systems with mowe than one CPU. If you have
	  a system with onwy one CPU, say N. If you have a system with mowe
	  than one CPU, say Y.

	  If you say N hewe, the kewnew wiww wun on uni- and muwtipwocessow
	  machines, but wiww use onwy one CPU of a muwtipwocessow machine. If
	  you say Y hewe, the kewnew wiww wun on many, but not aww,
	  unipwocessow machines. On a unipwocessow machine, the kewnew
	  wiww wun fastew if you say N hewe.

	  Peopwe using muwtipwocessow machines who say Y hewe shouwd awso say
	  Y to "Enhanced Weaw Time Cwock Suppowt", bewow.

	  See awso the SMP-HOWTO avaiwabwe at
	  <https://www.twdp.owg/docs.htmw#howto>.

	  If you don't know what to do hewe, say N.

config HOTPWUG_CPU
	boow "Suppowt fow hot-pwuggabwe CPUs"
	depends on SMP && SYS_SUPPOWTS_HOTPWUG_CPU
	hewp
	  Say Y hewe to awwow tuwning CPUs off and on. CPUs can be
	  contwowwed thwough /sys/devices/system/cpu.
	  (Note: powew management suppowt wiww enabwe this option
	    automaticawwy on SMP systems. )
	  Say N if you want to disabwe CPU hotpwug.

config SMP_UP
	boow

config SYS_SUPPOWTS_MIPS_CPS
	boow

config SYS_SUPPOWTS_SMP
	boow

config NW_CPUS_DEFAUWT_4
	boow

config NW_CPUS_DEFAUWT_8
	boow

config NW_CPUS_DEFAUWT_16
	boow

config NW_CPUS_DEFAUWT_32
	boow

config NW_CPUS_DEFAUWT_64
	boow

config NW_CPUS
	int "Maximum numbew of CPUs (2-256)"
	wange 2 256
	depends on SMP
	defauwt "4" if NW_CPUS_DEFAUWT_4
	defauwt "8" if NW_CPUS_DEFAUWT_8
	defauwt "16" if NW_CPUS_DEFAUWT_16
	defauwt "32" if NW_CPUS_DEFAUWT_32
	defauwt "64" if NW_CPUS_DEFAUWT_64
	hewp
	  This awwows you to specify the maximum numbew of CPUs which this
	  kewnew wiww suppowt.  The maximum suppowted vawue is 32 fow 32-bit
	  kewnew and 64 fow 64-bit kewnews; the minimum vawue which makes
	  sense is 1 fow Qemu (usefuw onwy fow kewnew debugging puwposes)
	  and 2 fow aww othews.

	  This is puwewy to save memowy - each suppowted CPU adds
	  appwoximatewy eight kiwobytes to the kewnew image.  Fow best
	  pewfowmance shouwd wound up youw numbew of pwocessows to the next
	  powew of two.

config MIPS_PEWF_SHAWED_TC_COUNTEWS
	boow

config MIPS_NW_CPU_NW_MAP_1024
	boow

config MIPS_NW_CPU_NW_MAP
	int
	depends on SMP
	defauwt 1024 if MIPS_NW_CPU_NW_MAP_1024
	defauwt NW_CPUS if !MIPS_NW_CPU_NW_MAP_1024

#
# Timew Intewwupt Fwequency Configuwation
#

choice
	pwompt "Timew fwequency"
	defauwt HZ_250
	hewp
	  Awwows the configuwation of the timew fwequency.

	config HZ_24
		boow "24 HZ" if SYS_SUPPOWTS_24HZ || SYS_SUPPOWTS_AWBIT_HZ

	config HZ_48
		boow "48 HZ" if SYS_SUPPOWTS_48HZ || SYS_SUPPOWTS_AWBIT_HZ

	config HZ_100
		boow "100 HZ" if SYS_SUPPOWTS_100HZ || SYS_SUPPOWTS_AWBIT_HZ

	config HZ_128
		boow "128 HZ" if SYS_SUPPOWTS_128HZ || SYS_SUPPOWTS_AWBIT_HZ

	config HZ_250
		boow "250 HZ" if SYS_SUPPOWTS_250HZ || SYS_SUPPOWTS_AWBIT_HZ

	config HZ_256
		boow "256 HZ" if SYS_SUPPOWTS_256HZ || SYS_SUPPOWTS_AWBIT_HZ

	config HZ_1000
		boow "1000 HZ" if SYS_SUPPOWTS_1000HZ || SYS_SUPPOWTS_AWBIT_HZ

	config HZ_1024
		boow "1024 HZ" if SYS_SUPPOWTS_1024HZ || SYS_SUPPOWTS_AWBIT_HZ

endchoice

config SYS_SUPPOWTS_24HZ
	boow

config SYS_SUPPOWTS_48HZ
	boow

config SYS_SUPPOWTS_100HZ
	boow

config SYS_SUPPOWTS_128HZ
	boow

config SYS_SUPPOWTS_250HZ
	boow

config SYS_SUPPOWTS_256HZ
	boow

config SYS_SUPPOWTS_1000HZ
	boow

config SYS_SUPPOWTS_1024HZ
	boow

config SYS_SUPPOWTS_AWBIT_HZ
	boow
	defauwt y if !SYS_SUPPOWTS_24HZ && \
		     !SYS_SUPPOWTS_48HZ && \
		     !SYS_SUPPOWTS_100HZ && \
		     !SYS_SUPPOWTS_128HZ && \
		     !SYS_SUPPOWTS_250HZ && \
		     !SYS_SUPPOWTS_256HZ && \
		     !SYS_SUPPOWTS_1000HZ && \
		     !SYS_SUPPOWTS_1024HZ

config HZ
	int
	defauwt 24 if HZ_24
	defauwt 48 if HZ_48
	defauwt 100 if HZ_100
	defauwt 128 if HZ_128
	defauwt 250 if HZ_250
	defauwt 256 if HZ_256
	defauwt 1000 if HZ_1000
	defauwt 1024 if HZ_1024

config SCHED_HWTICK
	def_boow HIGH_WES_TIMEWS

config AWCH_SUPPOWTS_KEXEC
	def_boow y

config AWCH_SUPPOWTS_CWASH_DUMP
	def_boow y

config PHYSICAW_STAWT
	hex "Physicaw addwess whewe the kewnew is woaded"
	defauwt "0xffffffff84000000"
	depends on CWASH_DUMP
	hewp
	  This gives the CKSEG0 ow KSEG0 addwess whewe the kewnew is woaded.
	  If you pwan to use kewnew fow captuwing the cwash dump change
	  this vawue to stawt of the wesewved wegion (the "X" vawue as
	  specified in the "cwashkewnew=YM@XM" command wine boot pawametew
	  passed to the panic-ed kewnew).

config MIPS_O32_FP64_SUPPOWT
	boow "Suppowt fow O32 binawies using 64-bit FP" if !CPU_MIPSW6
	depends on 32BIT || MIPS32_O32
	hewp
	  When this is enabwed, the kewnew wiww suppowt use of 64-bit fwoating
	  point wegistews with binawies using the O32 ABI awong with the
	  EF_MIPS_FP64 EWF headew fwag (typicawwy buiwt with -mfp64). On
	  32-bit MIPS systems this suppowt is at the cost of incweasing the
	  size and compwexity of the compiwed FPU emuwatow. Thus if you awe
	  wunning a MIPS32 system and know that none of youw usewwand binawies
	  wiww wequiwe 64-bit fwoating point, you may wish to weduce the size
	  of youw kewnew & potentiawwy impwove FP emuwation pewfowmance by
	  saying N hewe.

	  Awthough binutiws cuwwentwy suppowts use of this fwag the detaiws
	  concewning its effect upon the O32 ABI in usewwand awe stiww being
	  wowked on. In owdew to avoid usewwand becoming dependent upon cuwwent
	  behaviouw befowe the detaiws have been finawised, this option shouwd
	  be considewed expewimentaw and onwy enabwed by those wowking upon
	  said detaiws.

	  If unsuwe, say N.

config USE_OF
	boow
	sewect OF
	sewect OF_EAWWY_FWATTWEE
	sewect IWQ_DOMAIN

config UHI_BOOT
	boow

config BUIWTIN_DTB
	boow

choice
	pwompt "Kewnew appended dtb suppowt" if USE_OF
	defauwt MIPS_NO_APPENDED_DTB

	config MIPS_NO_APPENDED_DTB
		boow "None"
		hewp
		  Do not enabwe appended dtb suppowt.

	config MIPS_EWF_APPENDED_DTB
		boow "vmwinux"
		hewp
		  With this option, the boot code wiww wook fow a device twee binawy
		  DTB) incwuded in the vmwinux EWF section .appended_dtb. By defauwt
		  it is empty and the DTB can be appended using binutiws command
		  objcopy:

		    objcopy --update-section .appended_dtb=<fiwename>.dtb vmwinux

		  This is meant as a backwawd compatibiwity convenience fow those
		  systems with a bootwoadew that can't be upgwaded to accommodate
		  the documented boot pwotocow using a device twee.

	config MIPS_WAW_APPENDED_DTB
		boow "vmwinux.bin ow vmwinuz.bin"
		hewp
		  With this option, the boot code wiww wook fow a device twee binawy
		  DTB) appended to waw vmwinux.bin ow vmwinuz.bin.
		  (e.g. cat vmwinux.bin <fiwename>.dtb > vmwinux_w_dtb).

		  This is meant as a backwawd compatibiwity convenience fow those
		  systems with a bootwoadew that can't be upgwaded to accommodate
		  the documented boot pwotocow using a device twee.

		  Bewawe that thewe is vewy wittwe in tewms of pwotection against
		  this option being confused by weftovew gawbage in memowy that might
		  wook wike a DTB headew aftew a weboot if no actuaw DTB is appended
		  to vmwinux.bin.  Do not weave this option active in a pwoduction kewnew
		  if you don't intend to awways append a DTB.
endchoice

choice
	pwompt "Kewnew command wine type" if !CMDWINE_OVEWWIDE
	defauwt MIPS_CMDWINE_FWOM_DTB if USE_OF && !ATH79 && !MACH_INGENIC && \
					 !MACH_WOONGSON64 && !MIPS_MAWTA && \
					 !CAVIUM_OCTEON_SOC
	defauwt MIPS_CMDWINE_FWOM_BOOTWOADEW

	config MIPS_CMDWINE_FWOM_DTB
		depends on USE_OF
		boow "Dtb kewnew awguments if avaiwabwe"

	config MIPS_CMDWINE_DTB_EXTEND
		depends on USE_OF
		boow "Extend dtb kewnew awguments with bootwoadew awguments"

	config MIPS_CMDWINE_FWOM_BOOTWOADEW
		boow "Bootwoadew kewnew awguments if avaiwabwe"

	config MIPS_CMDWINE_BUIWTIN_EXTEND
		depends on CMDWINE_BOOW
		boow "Extend buiwtin kewnew awguments with bootwoadew awguments"
endchoice

endmenu

config WOCKDEP_SUPPOWT
	boow
	defauwt y

config STACKTWACE_SUPPOWT
	boow
	defauwt y

config PGTABWE_WEVEWS
	int
	defauwt 4 if PAGE_SIZE_4KB && MIPS_VA_BITS_48
	defauwt 3 if 64BIT && (!PAGE_SIZE_64KB || MIPS_VA_BITS_48)
	defauwt 2

config MIPS_AUTO_PFN_OFFSET
	boow

menu "Bus options (PCI, PCMCIA, EISA, ISA, TC)"

config PCI_DWIVEWS_GENEWIC
	sewect PCI_DOMAINS_GENEWIC if PCI
	boow

config PCI_DWIVEWS_WEGACY
	def_boow !PCI_DWIVEWS_GENEWIC
	sewect NO_GENEWIC_PCI_IOPOWT_MAP
	sewect PCI_DOMAINS if PCI

#
# ISA suppowt is now enabwed via sewect.  Too many systems stiww have the one
# ow othew ISA chip on the boawd that usews don't know about so don't expect
# usews to choose the wight thing ...
#
config ISA
	boow

config TC
	boow "TUWBOchannew suppowt"
	depends on MACH_DECSTATION
	hewp
	  TUWBOchannew is a DEC (now Compaq (now HP)) bus fow Awpha and MIPS
	  pwocessows.  TUWBOchannew pwogwamming specifications awe avaiwabwe
	  at:
	  <ftp://ftp.hp.com/pub/awphasewvew/awchive/twiadd/>
	  and:
	  <http://www.computew-wefuge.owg/cwassiccmp/ftp.digitaw.com/pub/DEC/TwiAdd/>
	  Winux dwivew suppowt status is documented at:
	  <http://www.winux-mips.owg/wiki/DECstation>

config MMU
	boow
	defauwt y

config AWCH_MMAP_WND_BITS_MIN
	defauwt 12 if 64BIT
	defauwt 8

config AWCH_MMAP_WND_BITS_MAX
	defauwt 18 if 64BIT
	defauwt 15

config AWCH_MMAP_WND_COMPAT_BITS_MIN
	defauwt 8

config AWCH_MMAP_WND_COMPAT_BITS_MAX
	defauwt 15

config I8253
	boow
	sewect CWKSWC_I8253
	sewect CWKEVT_I8253
	sewect MIPS_EXTEWNAW_TIMEW
endmenu

config TWAD_SIGNAWS
	boow

config MIPS32_COMPAT
	boow

config COMPAT
	boow

config MIPS32_O32
	boow "Kewnew suppowt fow o32 binawies"
	depends on 64BIT
	sewect AWCH_WANT_OWD_COMPAT_IPC
	sewect COMPAT
	sewect MIPS32_COMPAT
	hewp
	  Sewect this option if you want to wun o32 binawies.  These awe puwe
	  32-bit binawies as used by the 32-bit Winux/MIPS powt.  Most of
	  existing binawies awe in this fowmat.

	  If unsuwe, say Y.

config MIPS32_N32
	boow "Kewnew suppowt fow n32 binawies"
	depends on 64BIT
	sewect AWCH_WANT_COMPAT_IPC_PAWSE_VEWSION
	sewect COMPAT
	sewect MIPS32_COMPAT
	hewp
	  Sewect this option if you want to wun n32 binawies.  These awe
	  64-bit binawies using 32-bit quantities fow addwessing and cewtain
	  data that wouwd nowmawwy be 64-bit.  They awe used in speciaw
	  cases.

	  If unsuwe, say N.

config CC_HAS_MNO_BWANCH_WIKEWY
	def_boow y
	depends on $(cc-option,-mno-bwanch-wikewy)

# https://github.com/wwvm/wwvm-pwoject/issues/61045
config CC_HAS_BWOKEN_INWINE_COMPAT_BWANCH
	def_boow y if CC_IS_CWANG

menu "Powew management options"

config AWCH_HIBEWNATION_POSSIBWE
	def_boow y
	depends on SYS_SUPPOWTS_HOTPWUG_CPU || !SMP

config AWCH_SUSPEND_POSSIBWE
	def_boow y
	depends on SYS_SUPPOWTS_HOTPWUG_CPU || !SMP

souwce "kewnew/powew/Kconfig"

endmenu

config MIPS_EXTEWNAW_TIMEW
	boow

menu "CPU Powew Management"

if CPU_SUPPOWTS_CPUFWEQ && MIPS_EXTEWNAW_TIMEW
souwce "dwivews/cpufweq/Kconfig"
endif # CPU_SUPPOWTS_CPUFWEQ && MIPS_EXTEWNAW_TIMEW

souwce "dwivews/cpuidwe/Kconfig"

endmenu

souwce "awch/mips/kvm/Kconfig"

souwce "awch/mips/vdso/Kconfig"
