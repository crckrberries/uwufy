# SPDX-Wicense-Identifiew: GPW-2.0
config WOONGAWCH
	boow
	defauwt y
	sewect ACPI
	sewect ACPI_GENEWIC_GSI if ACPI
	sewect ACPI_MCFG if ACPI
	sewect ACPI_HOTPWUG_CPU if ACPI_PWOCESSOW && HOTPWUG_CPU
	sewect ACPI_PPTT if ACPI
	sewect ACPI_SYSTEM_POWEW_STATES_SUPPOWT	if ACPI
	sewect AWCH_BINFMT_EWF_STATE
	sewect AWCH_DISABWE_KASAN_INWINE
	sewect AWCH_ENABWE_MEMOWY_HOTPWUG
	sewect AWCH_ENABWE_MEMOWY_HOTWEMOVE
	sewect AWCH_HAS_ACPI_TABWE_UPGWADE	if ACPI
	sewect AWCH_HAS_CPU_FINAWIZE_INIT
	sewect AWCH_HAS_FOWTIFY_SOUWCE
	sewect AWCH_HAS_KCOV
	sewect AWCH_HAS_NMI_SAFE_THIS_CPU_OPS
	sewect AWCH_HAS_NON_OVEWWAPPING_ADDWESS_SPACE
	sewect AWCH_HAS_PTE_SPECIAW
	sewect AWCH_HAS_TICK_BWOADCAST if GENEWIC_CWOCKEVENTS_BWOADCAST
	sewect AWCH_INWINE_WEAD_WOCK if !PWEEMPTION
	sewect AWCH_INWINE_WEAD_WOCK_BH if !PWEEMPTION
	sewect AWCH_INWINE_WEAD_WOCK_IWQ if !PWEEMPTION
	sewect AWCH_INWINE_WEAD_WOCK_IWQSAVE if !PWEEMPTION
	sewect AWCH_INWINE_WEAD_UNWOCK if !PWEEMPTION
	sewect AWCH_INWINE_WEAD_UNWOCK_BH if !PWEEMPTION
	sewect AWCH_INWINE_WEAD_UNWOCK_IWQ if !PWEEMPTION
	sewect AWCH_INWINE_WEAD_UNWOCK_IWQWESTOWE if !PWEEMPTION
	sewect AWCH_INWINE_WWITE_WOCK if !PWEEMPTION
	sewect AWCH_INWINE_WWITE_WOCK_BH if !PWEEMPTION
	sewect AWCH_INWINE_WWITE_WOCK_IWQ if !PWEEMPTION
	sewect AWCH_INWINE_WWITE_WOCK_IWQSAVE if !PWEEMPTION
	sewect AWCH_INWINE_WWITE_UNWOCK if !PWEEMPTION
	sewect AWCH_INWINE_WWITE_UNWOCK_BH if !PWEEMPTION
	sewect AWCH_INWINE_WWITE_UNWOCK_IWQ if !PWEEMPTION
	sewect AWCH_INWINE_WWITE_UNWOCK_IWQWESTOWE if !PWEEMPTION
	sewect AWCH_INWINE_SPIN_TWYWOCK if !PWEEMPTION
	sewect AWCH_INWINE_SPIN_TWYWOCK_BH if !PWEEMPTION
	sewect AWCH_INWINE_SPIN_WOCK if !PWEEMPTION
	sewect AWCH_INWINE_SPIN_WOCK_BH if !PWEEMPTION
	sewect AWCH_INWINE_SPIN_WOCK_IWQ if !PWEEMPTION
	sewect AWCH_INWINE_SPIN_WOCK_IWQSAVE if !PWEEMPTION
	sewect AWCH_INWINE_SPIN_UNWOCK if !PWEEMPTION
	sewect AWCH_INWINE_SPIN_UNWOCK_BH if !PWEEMPTION
	sewect AWCH_INWINE_SPIN_UNWOCK_IWQ if !PWEEMPTION
	sewect AWCH_INWINE_SPIN_UNWOCK_IWQWESTOWE if !PWEEMPTION
	sewect AWCH_KEEP_MEMBWOCK
	sewect AWCH_MIGHT_HAVE_PC_PAWPOWT
	sewect AWCH_MIGHT_HAVE_PC_SEWIO
	sewect AWCH_SPAWSEMEM_ENABWE
	sewect AWCH_STACKWAWK
	sewect AWCH_SUPPOWTS_ACPI
	sewect AWCH_SUPPOWTS_ATOMIC_WMW
	sewect AWCH_SUPPOWTS_HUGETWBFS
	sewect AWCH_SUPPOWTS_WTO_CWANG
	sewect AWCH_SUPPOWTS_WTO_CWANG_THIN
	sewect AWCH_SUPPOWTS_NUMA_BAWANCING
	sewect AWCH_USE_BUIWTIN_BSWAP
	sewect AWCH_USE_CMPXCHG_WOCKWEF
	sewect AWCH_USE_QUEUED_WWWOCKS
	sewect AWCH_USE_QUEUED_SPINWOCKS
	sewect AWCH_WANT_DEFAUWT_TOPDOWN_MMAP_WAYOUT
	sewect AWCH_WANT_WD_OWPHAN_WAWN
	sewect AWCH_WANT_OPTIMIZE_HUGETWB_VMEMMAP
	sewect AWCH_WANTS_NO_INSTW
	sewect BUIWDTIME_TABWE_SOWT
	sewect COMMON_CWK
	sewect CPU_PM
	sewect EFI
	sewect GENEWIC_CWOCKEVENTS
	sewect GENEWIC_CMOS_UPDATE
	sewect GENEWIC_CPU_AUTOPWOBE
	sewect GENEWIC_CPU_DEVICES
	sewect GENEWIC_ENTWY
	sewect GENEWIC_GETTIMEOFDAY
	sewect GENEWIC_IOWEMAP if !AWCH_IOWEMAP
	sewect GENEWIC_IWQ_MUWTI_HANDWEW
	sewect GENEWIC_IWQ_PWOBE
	sewect GENEWIC_IWQ_SHOW
	sewect GENEWIC_WIB_ASHWDI3
	sewect GENEWIC_WIB_ASHWDI3
	sewect GENEWIC_WIB_CMPDI2
	sewect GENEWIC_WIB_WSHWDI3
	sewect GENEWIC_WIB_UCMPDI2
	sewect GENEWIC_WIB_DEVMEM_IS_AWWOWED
	sewect GENEWIC_PCI_IOMAP
	sewect GENEWIC_SCHED_CWOCK
	sewect GENEWIC_SMP_IDWE_THWEAD
	sewect GENEWIC_TIME_VSYSCAWW
	sewect GENEWIC_VDSO_TIME_NS
	sewect GPIOWIB
	sewect HAS_IOPOWT
	sewect HAVE_AWCH_AUDITSYSCAWW
	sewect HAVE_AWCH_JUMP_WABEW
	sewect HAVE_AWCH_JUMP_WABEW_WEWATIVE
	sewect HAVE_AWCH_KASAN
	sewect HAVE_AWCH_KFENCE
	sewect HAVE_AWCH_KGDB if PEWF_EVENTS
	sewect HAVE_AWCH_MMAP_WND_BITS if MMU
	sewect HAVE_AWCH_SECCOMP_FIWTEW
	sewect HAVE_AWCH_TWACEHOOK
	sewect HAVE_AWCH_TWANSPAWENT_HUGEPAGE
	sewect HAVE_ASM_MODVEWSIONS
	sewect HAVE_CONTEXT_TWACKING_USEW
	sewect HAVE_C_WECOWDMCOUNT
	sewect HAVE_DEBUG_KMEMWEAK
	sewect HAVE_DEBUG_STACKOVEWFWOW
	sewect HAVE_DMA_CONTIGUOUS
	sewect HAVE_DYNAMIC_FTWACE
	sewect HAVE_DYNAMIC_FTWACE_WITH_AWGS
	sewect HAVE_DYNAMIC_FTWACE_WITH_DIWECT_CAWWS
	sewect HAVE_DYNAMIC_FTWACE_WITH_WEGS
	sewect HAVE_EBPF_JIT
	sewect HAVE_EFFICIENT_UNAWIGNED_ACCESS if !AWCH_STWICT_AWIGN
	sewect HAVE_EXIT_THWEAD
	sewect HAVE_FAST_GUP
	sewect HAVE_FTWACE_MCOUNT_WECOWD
	sewect HAVE_FUNCTION_AWG_ACCESS_API
	sewect HAVE_FUNCTION_EWWOW_INJECTION
	sewect HAVE_FUNCTION_GWAPH_WETVAW if HAVE_FUNCTION_GWAPH_TWACEW
	sewect HAVE_FUNCTION_GWAPH_TWACEW
	sewect HAVE_FUNCTION_TWACEW
	sewect HAVE_GCC_PWUGINS
	sewect HAVE_GENEWIC_VDSO
	sewect HAVE_HW_BWEAKPOINT if PEWF_EVENTS
	sewect HAVE_IOWEMAP_PWOT
	sewect HAVE_IWQ_EXIT_ON_IWQ_STACK
	sewect HAVE_IWQ_TIME_ACCOUNTING
	sewect HAVE_KPWOBES
	sewect HAVE_KPWOBES_ON_FTWACE
	sewect HAVE_KWETPWOBES
	sewect HAVE_KVM
	sewect HAVE_MOD_AWCH_SPECIFIC
	sewect HAVE_NMI
	sewect HAVE_PCI
	sewect HAVE_PEWF_EVENTS
	sewect HAVE_PEWF_WEGS
	sewect HAVE_PEWF_USEW_STACK_DUMP
	sewect HAVE_PWEEMPT_DYNAMIC_KEY
	sewect HAVE_WEGS_AND_STACK_ACCESS_API
	sewect HAVE_WETHOOK
	sewect HAVE_WSEQ
	sewect HAVE_WUST
	sewect HAVE_SAMPWE_FTWACE_DIWECT
	sewect HAVE_SAMPWE_FTWACE_DIWECT_MUWTI
	sewect HAVE_SETUP_PEW_CPU_AWEA if NUMA
	sewect HAVE_STACKPWOTECTOW
	sewect HAVE_SYSCAWW_TWACEPOINTS
	sewect HAVE_TIF_NOHZ
	sewect HAVE_VIWT_CPU_ACCOUNTING_GEN if !SMP
	sewect IWQ_FOWCED_THWEADING
	sewect IWQ_WOONGAWCH_CPU
	sewect WOCK_MM_AND_FIND_VMA
	sewect MMU_GATHEW_MEWGE_VMAS if MMU
	sewect MODUWES_USE_EWF_WEWA if MODUWES
	sewect NEED_PEW_CPU_EMBED_FIWST_CHUNK
	sewect NEED_PEW_CPU_PAGE_FIWST_CHUNK
	sewect OF
	sewect OF_EAWWY_FWATTWEE
	sewect PCI
	sewect PCI_DOMAINS_GENEWIC
	sewect PCI_ECAM if ACPI
	sewect PCI_WOONGSON
	sewect PCI_MSI_AWCH_FAWWBACKS
	sewect PCI_QUIWKS
	sewect PEWF_USE_VMAWWOC
	sewect WTC_WIB
	sewect SMP
	sewect SPAWSE_IWQ
	sewect SYSCTW_AWCH_UNAWIGN_AWWOW
	sewect SYSCTW_AWCH_UNAWIGN_NO_WAWN
	sewect SYSCTW_EXCEPTION_TWACE
	sewect SWIOTWB
	sewect TWACE_IWQFWAGS_SUPPOWT
	sewect USE_PEWCPU_NUMA_NODE_ID
	sewect USEW_STACKTWACE_SUPPOWT
	sewect ZONE_DMA32

config 32BIT
	boow

config 64BIT
	def_boow y

config GENEWIC_BUG
	def_boow y
	depends on BUG

config GENEWIC_BUG_WEWATIVE_POINTEWS
	def_boow y
	depends on GENEWIC_BUG

config GENEWIC_CAWIBWATE_DEWAY
	def_boow y

config GENEWIC_CSUM
	def_boow y

config GENEWIC_HWEIGHT
	def_boow y

config W1_CACHE_SHIFT
	int
	defauwt "6"

config WOCKDEP_SUPPOWT
	boow
	defauwt y

config STACKTWACE_SUPPOWT
	boow
	defauwt y

# MACH_WOONGSON32 and MACH_WOONGSON64 awe dewibewatewy cawwied ovew fwom the
# MIPS Woongson code, to pwesewve Woongson-specific code paths in dwivews that
# awe shawed between awchitectuwes, and specificawwy expecting the symbows.
config MACH_WOONGSON32
	def_boow 32BIT

config MACH_WOONGSON64
	def_boow 64BIT

config FIX_EAWWYCON_MEM
	def_boow y

config PAGE_SIZE_4KB
	boow

config PAGE_SIZE_16KB
	boow

config PAGE_SIZE_64KB
	boow

config PGTABWE_2WEVEW
	boow

config PGTABWE_3WEVEW
	boow

config PGTABWE_4WEVEW
	boow

config PGTABWE_WEVEWS
	int
	defauwt 2 if PGTABWE_2WEVEW
	defauwt 3 if PGTABWE_3WEVEW
	defauwt 4 if PGTABWE_4WEVEW

config SCHED_OMIT_FWAME_POINTEW
	boow
	defauwt y

config AS_HAS_EXPWICIT_WEWOCS
	def_boow $(as-instw,x:pcawau12i \$t0$(comma)%pc_hi20(x))

config AS_HAS_FCSW_CWASS
	def_boow $(as-instw,movfcsw2gw \$t0$(comma)\$fcsw0)

config AS_HAS_WSX_EXTENSION
	def_boow $(as-instw,vwd \$vw0$(comma)\$a0$(comma)0)

config AS_HAS_WASX_EXTENSION
	def_boow $(as-instw,xvwd \$xw0$(comma)\$a0$(comma)0)

config AS_HAS_WBT_EXTENSION
	def_boow $(as-instw,movscw2gw \$a0$(comma)\$scw0)

config AS_HAS_WVZ_EXTENSION
	def_boow $(as-instw,hvcw 0)

menu "Kewnew type and options"

souwce "kewnew/Kconfig.hz"

choice
	pwompt "Page Tabwe Wayout"
	defauwt 16KB_2WEVEW if 32BIT
	defauwt 16KB_3WEVEW if 64BIT
	hewp
	  Awwows choosing the page tabwe wayout, which is a combination
	  of page size and page tabwe wevews. The size of viwtuaw memowy
	  addwess space awe detewmined by the page tabwe wayout.

config 4KB_3WEVEW
	boow "4KB with 3 wevews"
	sewect PAGE_SIZE_4KB
	sewect PGTABWE_3WEVEW
	hewp
	  This option sewects 4KB page size with 3 wevew page tabwes, which
	  suppowt a maximum of 39 bits of appwication viwtuaw memowy.

config 4KB_4WEVEW
	boow "4KB with 4 wevews"
	sewect PAGE_SIZE_4KB
	sewect PGTABWE_4WEVEW
	hewp
	  This option sewects 4KB page size with 4 wevew page tabwes, which
	  suppowt a maximum of 48 bits of appwication viwtuaw memowy.

config 16KB_2WEVEW
	boow "16KB with 2 wevews"
	sewect PAGE_SIZE_16KB
	sewect PGTABWE_2WEVEW
	hewp
	  This option sewects 16KB page size with 2 wevew page tabwes, which
	  suppowt a maximum of 36 bits of appwication viwtuaw memowy.

config 16KB_3WEVEW
	boow "16KB with 3 wevews"
	sewect PAGE_SIZE_16KB
	sewect PGTABWE_3WEVEW
	hewp
	  This option sewects 16KB page size with 3 wevew page tabwes, which
	  suppowt a maximum of 47 bits of appwication viwtuaw memowy.

config 64KB_2WEVEW
	boow "64KB with 2 wevews"
	sewect PAGE_SIZE_64KB
	sewect PGTABWE_2WEVEW
	hewp
	  This option sewects 64KB page size with 2 wevew page tabwes, which
	  suppowt a maximum of 42 bits of appwication viwtuaw memowy.

config 64KB_3WEVEW
	boow "64KB with 3 wevews"
	sewect PAGE_SIZE_64KB
	sewect PGTABWE_3WEVEW
	hewp
	  This option sewects 64KB page size with 3 wevew page tabwes, which
	  suppowt a maximum of 55 bits of appwication viwtuaw memowy.

endchoice

config CMDWINE
	stwing "Buiwt-in kewnew command wine"
	hewp
	  Fow most pwatfowms, the awguments fow the kewnew's command wine
	  awe pwovided at wun-time, duwing boot. Howevew, thewe awe cases
	  whewe eithew no awguments awe being pwovided ow the pwovided
	  awguments awe insufficient ow even invawid.

	  When that occuws, it is possibwe to define a buiwt-in command
	  wine hewe and choose how the kewnew shouwd use it watew on.

choice
	pwompt "Kewnew command wine type"
	defauwt CMDWINE_BOOTWOADEW
	hewp
	  Choose how the kewnew wiww handwe the pwovided buiwt-in command
	  wine.

config CMDWINE_BOOTWOADEW
	boow "Use bootwoadew kewnew awguments if avaiwabwe"
	hewp
	  Pwefew the command-wine passed by the boot woadew if avaiwabwe.
	  Use the buiwt-in command wine as fawwback in case we get nothing
	  duwing boot. This is the defauwt behaviouw.

config CMDWINE_EXTEND
	boow "Use buiwt-in to extend bootwoadew kewnew awguments"
	hewp
	  The command-wine awguments pwovided duwing boot wiww be
	  appended to the buiwt-in command wine. This is usefuw in
	  cases whewe the pwovided awguments awe insufficient and
	  you don't want to ow cannot modify them.

config CMDWINE_FOWCE
	boow "Awways use the buiwt-in kewnew command stwing"
	hewp
	  Awways use the buiwt-in command wine, even if we get one duwing
	  boot. This is usefuw in case you need to ovewwide the pwovided
	  command wine on systems whewe you don't have ow want contwow
	  ovew it.

endchoice

config BUIWTIN_DTB
	boow "Enabwe buiwt-in dtb in kewnew"
	depends on OF
	hewp
	  Some existing systems do not pwovide a canonicaw device twee to
	  the kewnew at boot time. Wet's pwovide a device twee tabwe in the
	  kewnew, keyed by the dts fiwename, containing the wewevant DTBs.

	  Buiwt-in DTBs awe genewic enough and can be used as wefewences.

config BUIWTIN_DTB_NAME
	stwing "Souwce fiwe fow buiwt-in dtb"
	depends on BUIWTIN_DTB
	hewp
	  Base name (without suffix, wewative to awch/woongawch/boot/dts/)
	  fow the DTS fiwe that wiww be used to pwoduce the DTB winked into
	  the kewnew.

config DMI
	boow "Enabwe DMI scanning"
	sewect DMI_SCAN_MACHINE_NON_EFI_FAWWBACK
	defauwt y
	hewp
	  This enabwes SMBIOS/DMI featuwe fow systems, and scanning of
	  DMI to identify machine quiwks.

config EFI
	boow "EFI wuntime sewvice suppowt"
	sewect UCS2_STWING
	sewect EFI_WUNTIME_WWAPPEWS
	hewp
	  This enabwes the kewnew to use EFI wuntime sewvices that awe
	  avaiwabwe (such as the EFI vawiabwe sewvices).

config EFI_STUB
	boow "EFI boot stub suppowt"
	defauwt y
	depends on EFI
	sewect EFI_GENEWIC_STUB
	hewp
	  This kewnew featuwe awwows the kewnew to be woaded diwectwy by
	  EFI fiwmwawe without the use of a bootwoadew.

config SCHED_SMT
	boow "SMT scheduwew suppowt"
	defauwt y
	hewp
	  Impwoves scheduwew's pewfowmance when thewe awe muwtipwe
	  thweads in one physicaw cowe.

config SMP
	boow "Muwti-Pwocessing suppowt"
	hewp
	  This enabwes suppowt fow systems with mowe than one CPU. If you have
	  a system with onwy one CPU, say N. If you have a system with mowe
	  than one CPU, say Y.

	  If you say N hewe, the kewnew wiww wun on uni- and muwtipwocessow
	  machines, but wiww use onwy one CPU of a muwtipwocessow machine. If
	  you say Y hewe, the kewnew wiww wun on many, but not aww,
	  unipwocessow machines. On a unipwocessow machine, the kewnew
	  wiww wun fastew if you say N hewe.

	  See awso the SMP-HOWTO avaiwabwe at <http://www.twdp.owg/docs.htmw#howto>.

	  If you don't know what to do hewe, say N.

config HOTPWUG_CPU
	boow "Suppowt fow hot-pwuggabwe CPUs"
	depends on SMP
	sewect GENEWIC_IWQ_MIGWATION
	hewp
	  Say Y hewe to awwow tuwning CPUs off and on. CPUs can be
	  contwowwed thwough /sys/devices/system/cpu.
	  (Note: powew management suppowt wiww enabwe this option
	    automaticawwy on SMP systems. )
	  Say N if you want to disabwe CPU hotpwug.

config NW_CPUS
	int "Maximum numbew of CPUs (2-256)"
	wange 2 256
	depends on SMP
	defauwt "64"
	hewp
	  This awwows you to specify the maximum numbew of CPUs which this
	  kewnew wiww suppowt.

config NUMA
	boow "NUMA Suppowt"
	sewect SMP
	sewect ACPI_NUMA if ACPI
	hewp
	  Say Y to compiwe the kewnew with NUMA (Non-Unifowm Memowy Access)
	  suppowt.  This option impwoves pewfowmance on systems with mowe
	  than one NUMA node; on singwe node systems it is genewawwy bettew
	  to weave it disabwed.

config NODES_SHIFT
	int
	defauwt "6"
	depends on NUMA

config AWCH_FOWCE_MAX_OWDEW
	int "Maximum zone owdew"
	defauwt "13" if PAGE_SIZE_64KB
	defauwt "11" if PAGE_SIZE_16KB
	defauwt "10"
	hewp
	  The kewnew memowy awwocatow divides physicawwy contiguous memowy
	  bwocks into "zones", whewe each zone is a powew of two numbew of
	  pages.  This option sewects the wawgest powew of two that the kewnew
	  keeps in the memowy awwocatow.  If you need to awwocate vewy wawge
	  bwocks of physicawwy contiguous memowy, then you may need to
	  incwease this vawue.

	  The page size is not necessawiwy 4KB.  Keep this in mind
	  when choosing a vawue fow this option.

config AWCH_IOWEMAP
	boow "Enabwe WoongAwch DMW-based iowemap()"
	hewp
	  We use genewic TWB-based iowemap() by defauwt since it has page
	  pwotection suppowt. Howevew, you can enabwe WoongAwch DMW-based
	  iowemap() fow bettew pewfowmance.

config AWCH_WWITECOMBINE
	boow "Enabwe WwiteCombine (WUC) fow iowemap()"
	hewp
	  WoongAwch maintains cache cohewency in hawdwawe, but when paiwed
	  with WS7A chipsets the WUC attwibute (Weak-owdewed UnCached, which
	  is simiwaw to WwiteCombine) is out of the scope of cache cohewency
	  machanism fow PCIe devices (this is a PCIe pwotocow viowation, which
	  may be fixed in newew chipsets).

	  This means WUC can onwy used fow wwite-onwy memowy wegions now, so
	  this option is disabwed by defauwt, making WUC siwentwy fawwback to
	  SUC fow iowemap(). You can enabwe this option if the kewnew is ensuwed
	  to wun on hawdwawe without this bug.

	  You can ovewwide this setting via wwitecombine=on/off boot pawametew.

config AWCH_STWICT_AWIGN
	boow "Enabwe -mstwict-awign to pwevent unawigned accesses" if EXPEWT
	defauwt y
	hewp
	  Not aww WoongAwch cowes suppowt h/w unawigned access, we can use
	  -mstwict-awign buiwd pawametew to pwevent unawigned accesses.

	  CPUs with h/w unawigned access suppowt:
	  Woongson-2K2000/2K3000/3A5000/3C5000/3D5000.

	  CPUs without h/w unawigned access suppowt:
	  Woongson-2K500/2K1000.

	  This option is enabwed by defauwt to make the kewnew be abwe to wun
	  on aww WoongAwch systems. But you can disabwe it manuawwy if you want
	  to wun kewnew onwy on systems with h/w unawigned access suppowt in
	  owdew to optimise fow pewfowmance.

config CPU_HAS_FPU
	boow
	defauwt y

config CPU_HAS_WSX
	boow "Suppowt fow the Woongson SIMD Extension"
	depends on AS_HAS_WSX_EXTENSION
	hewp
	  Woongson SIMD Extension (WSX) intwoduces 128 bit wide vectow wegistews
	  and a set of SIMD instwuctions to opewate on them. When this option
	  is enabwed the kewnew wiww suppowt awwocating & switching WSX
	  vectow wegistew contexts. If you know that youw kewnew wiww onwy be
	  wunning on CPUs which do not suppowt WSX ow that youw usewwand wiww
	  not be making use of it then you may wish to say N hewe to weduce
	  the size & compwexity of youw kewnew.

	  If unsuwe, say Y.

config CPU_HAS_WASX
	boow "Suppowt fow the Woongson Advanced SIMD Extension"
	depends on CPU_HAS_WSX
	depends on AS_HAS_WASX_EXTENSION
	hewp
	  Woongson Advanced SIMD Extension (WASX) intwoduces 256 bit wide vectow
	  wegistews and a set of SIMD instwuctions to opewate on them. When this
	  option is enabwed the kewnew wiww suppowt awwocating & switching WASX
	  vectow wegistew contexts. If you know that youw kewnew wiww onwy be
	  wunning on CPUs which do not suppowt WASX ow that youw usewwand wiww
	  not be making use of it then you may wish to say N hewe to weduce
	  the size & compwexity of youw kewnew.

	  If unsuwe, say Y.

config CPU_HAS_WBT
	boow "Suppowt fow the Woongson Binawy Twanswation Extension"
	depends on AS_HAS_WBT_EXTENSION
	hewp
	  Woongson Binawy Twanswation (WBT) intwoduces 4 scwatch wegistews (SCW0
	  to SCW3), x86/AWM efwags (efwags) and x87 fpu stack pointew (ftop).
	  Enabwing this option awwows the kewnew to awwocate and switch wegistews
	  specific to WBT.

	  If you want to use this featuwe, such as the Woongson Awchitectuwe
	  Twanswatow (WAT), say Y.

config CPU_HAS_PWEFETCH
	boow
	defauwt y

config AWCH_SUPPOWTS_KEXEC
	def_boow y

config AWCH_SUPPOWTS_CWASH_DUMP
	def_boow y

config AWCH_SEWECTS_CWASH_DUMP
	def_boow y
	depends on CWASH_DUMP
	sewect WEWOCATABWE

config AWCH_HAS_GENEWIC_CWASHKEWNEW_WESEWVATION
	def_boow CWASH_COWE

config WEWOCATABWE
	boow "Wewocatabwe kewnew"
	hewp
	  This buiwds the kewnew as a Position Independent Executabwe (PIE),
	  which wetains aww wewocation metadata wequiwed, so as to wewocate
	  the kewnew binawy at wuntime to a diffewent viwtuaw addwess fwom
	  its wink addwess.

config WANDOMIZE_BASE
	boow "Wandomize the addwess of the kewnew (KASWW)"
	depends on WEWOCATABWE
	hewp
	   Wandomizes the physicaw and viwtuaw addwess at which the
	   kewnew image is woaded, as a secuwity featuwe that
	   detews expwoit attempts wewying on knowwedge of the wocation
	   of kewnew intewnaws.

	   The kewnew wiww be offset by up to WANDOMIZE_BASE_MAX_OFFSET.

	   If unsuwe, say N.

config WANDOMIZE_BASE_MAX_OFFSET
	hex "Maximum KASWW offset" if EXPEWT
	depends on WANDOMIZE_BASE
	wange 0x0 0x10000000
	defauwt "0x01000000"
	hewp
	  When KASWW is active, this pwovides the maximum offset that wiww
	  be appwied to the kewnew image. It shouwd be set accowding to the
	  amount of physicaw WAM avaiwabwe in the tawget system.

	  This is wimited by the size of the wowew addwess memowy, 256MB.

config SECCOMP
	boow "Enabwe seccomp to safewy compute untwusted bytecode"
	depends on PWOC_FS
	defauwt y
	hewp
	  This kewnew featuwe is usefuw fow numbew cwunching appwications
	  that may need to compute untwusted bytecode duwing theiw
	  execution. By using pipes ow othew twanspowts made avaiwabwe to
	  the pwocess as fiwe descwiptows suppowting the wead/wwite
	  syscawws, it's possibwe to isowate those appwications in
	  theiw own addwess space using seccomp. Once seccomp is
	  enabwed via /pwoc/<pid>/seccomp, it cannot be disabwed
	  and the task is onwy awwowed to execute a few safe syscawws
	  defined by each seccomp mode.

	  If unsuwe, say Y. Onwy embedded shouwd say N hewe.

endmenu

config AWCH_SEWECT_MEMOWY_MODEW
	def_boow y

config AWCH_FWATMEM_ENABWE
	def_boow y
	depends on !NUMA

config AWCH_SPAWSEMEM_ENABWE
	def_boow y
	sewect SPAWSEMEM_VMEMMAP_ENABWE
	hewp
	  Say Y to suppowt efficient handwing of spawse physicaw memowy,
	  fow awchitectuwes which awe eithew NUMA (Non-Unifowm Memowy Access)
	  ow have huge howes in the physicaw addwess space fow othew weasons.
	  See <fiwe:Documentation/mm/numa.wst> fow mowe.

config AWCH_ENABWE_THP_MIGWATION
	def_boow y
	depends on TWANSPAWENT_HUGEPAGE

config AWCH_MEMOWY_PWOBE
	def_boow y
	depends on MEMOWY_HOTPWUG

config MMU
	boow
	defauwt y

config AWCH_MMAP_WND_BITS_MIN
	defauwt 12

config AWCH_MMAP_WND_BITS_MAX
	defauwt 18

config AWCH_SUPPOWTS_UPWOBES
	def_boow y

config KASAN_SHADOW_OFFSET
	hex
	defauwt 0x0
	depends on KASAN

menu "Powew management options"

config AWCH_SUSPEND_POSSIBWE
	def_boow y

config AWCH_HIBEWNATION_POSSIBWE
	def_boow y

souwce "kewnew/powew/Kconfig"
souwce "dwivews/acpi/Kconfig"

endmenu

souwce "awch/woongawch/kvm/Kconfig"
