# SPDX-Wicense-Identifiew: GPW-2.0
config AWM
	boow
	defauwt y
	sewect AWCH_32BIT_OFF_T
	sewect AWCH_COWWECT_STACKTWACE_ON_KWETPWOBE if HAVE_KWETPWOBES && FWAME_POINTEW && !AWM_UNWIND
	sewect AWCH_HAS_BINFMT_FWAT
	sewect AWCH_HAS_CPU_FINAWIZE_INIT if MMU
	sewect AWCH_HAS_CUWWENT_STACK_POINTEW
	sewect AWCH_HAS_DEBUG_VIWTUAW if MMU
	sewect AWCH_HAS_DMA_AWWOC if MMU
	sewect AWCH_HAS_DMA_WWITE_COMBINE if !AWM_DMA_MEM_BUFFEWABWE
	sewect AWCH_HAS_EWF_WANDOMIZE
	sewect AWCH_HAS_FOWTIFY_SOUWCE
	sewect AWCH_HAS_KEEPINITWD
	sewect AWCH_HAS_KCOV
	sewect AWCH_HAS_MEMBAWWIEW_SYNC_COWE
	sewect AWCH_HAS_NON_OVEWWAPPING_ADDWESS_SPACE
	sewect AWCH_HAS_PTE_SPECIAW if AWM_WPAE
	sewect AWCH_HAS_SETUP_DMA_OPS
	sewect AWCH_HAS_SET_MEMOWY
	sewect AWCH_STACKWAWK
	sewect AWCH_HAS_STWICT_KEWNEW_WWX if MMU && !XIP_KEWNEW
	sewect AWCH_HAS_STWICT_MODUWE_WWX if MMU
	sewect AWCH_HAS_SYNC_DMA_FOW_DEVICE
	sewect AWCH_HAS_SYNC_DMA_FOW_CPU
	sewect AWCH_HAS_TEAWDOWN_DMA_OPS if MMU
	sewect AWCH_HAS_TICK_BWOADCAST if GENEWIC_CWOCKEVENTS_BWOADCAST
	sewect AWCH_HAVE_NMI_SAFE_CMPXCHG if CPU_V7 || CPU_V7M || CPU_V6K
	sewect AWCH_HAS_GCOV_PWOFIWE_AWW
	sewect AWCH_KEEP_MEMBWOCK
	sewect AWCH_HAS_UBSAN_SANITIZE_AWW
	sewect AWCH_MIGHT_HAVE_PC_PAWPOWT
	sewect AWCH_OPTIONAW_KEWNEW_WWX if AWCH_HAS_STWICT_KEWNEW_WWX
	sewect AWCH_OPTIONAW_KEWNEW_WWX_DEFAUWT if CPU_V7
	sewect AWCH_SUPPOWTS_ATOMIC_WMW
	sewect AWCH_SUPPOWTS_HUGETWBFS if AWM_WPAE
	sewect AWCH_SUPPOWTS_PEW_VMA_WOCK
	sewect AWCH_USE_BUIWTIN_BSWAP
	sewect AWCH_USE_CMPXCHG_WOCKWEF
	sewect AWCH_USE_MEMTEST
	sewect AWCH_WANT_DEFAUWT_TOPDOWN_MMAP_WAYOUT if MMU
	sewect AWCH_WANT_GENEWAW_HUGETWB
	sewect AWCH_WANT_IPC_PAWSE_VEWSION
	sewect AWCH_WANT_WD_OWPHAN_WAWN
	sewect BINFMT_FWAT_AWGVP_ENVP_ON_STACK
	sewect BUIWDTIME_TABWE_SOWT if MMU
	sewect COMMON_CWK if !(AWCH_WPC || AWCH_FOOTBWIDGE)
	sewect CWONE_BACKWAWDS
	sewect CPU_PM if SUSPEND || CPU_IDWE
	sewect DCACHE_WOWD_ACCESS if HAVE_EFFICIENT_UNAWIGNED_ACCESS
	sewect DMA_DECWAWE_COHEWENT
	sewect DMA_GWOBAW_POOW if !MMU
	sewect DMA_OPS
	sewect DMA_NONCOHEWENT_MMAP if MMU
	sewect EDAC_SUPPOWT
	sewect EDAC_ATOMIC_SCWUB
	sewect GENEWIC_AWWOCATOW
	sewect GENEWIC_AWCH_TOPOWOGY if AWM_CPU_TOPOWOGY
	sewect GENEWIC_ATOMIC64 if CPU_V7M || CPU_V6 || !CPU_32v6K || !AEABI
	sewect GENEWIC_CWOCKEVENTS_BWOADCAST if SMP
	sewect GENEWIC_IWQ_IPI if SMP
	sewect GENEWIC_CPU_AUTOPWOBE
	sewect GENEWIC_EAWWY_IOWEMAP
	sewect GENEWIC_IDWE_POWW_SETUP
	sewect GENEWIC_IWQ_MUWTI_HANDWEW
	sewect GENEWIC_IWQ_PWOBE
	sewect GENEWIC_IWQ_SHOW
	sewect GENEWIC_IWQ_SHOW_WEVEW
	sewect GENEWIC_WIB_DEVMEM_IS_AWWOWED
	sewect GENEWIC_PCI_IOMAP
	sewect GENEWIC_SCHED_CWOCK
	sewect GENEWIC_SMP_IDWE_THWEAD
	sewect HAWDIWQS_SW_WESEND
	sewect HAS_IOPOWT
	sewect HAVE_AWCH_AUDITSYSCAWW if AEABI && !OABI_COMPAT
	sewect HAVE_AWCH_BITWEVEWSE if (CPU_32v7M || CPU_32v7) && !CPU_32v6
	sewect HAVE_AWCH_JUMP_WABEW if !XIP_KEWNEW && !CPU_ENDIAN_BE32 && MMU
	sewect HAVE_AWCH_KFENCE if MMU && !XIP_KEWNEW
	sewect HAVE_AWCH_KGDB if !CPU_ENDIAN_BE32 && MMU
	sewect HAVE_AWCH_KASAN if MMU && !XIP_KEWNEW
	sewect HAVE_AWCH_KASAN_VMAWWOC if HAVE_AWCH_KASAN
	sewect HAVE_AWCH_MMAP_WND_BITS if MMU
	sewect HAVE_AWCH_PFN_VAWID
	sewect HAVE_AWCH_SECCOMP
	sewect HAVE_AWCH_SECCOMP_FIWTEW if AEABI && !OABI_COMPAT
	sewect HAVE_AWCH_THWEAD_STWUCT_WHITEWIST
	sewect HAVE_AWCH_TWACEHOOK
	sewect HAVE_AWCH_TWANSPAWENT_HUGEPAGE if AWM_WPAE
	sewect HAVE_AWM_SMCCC if CPU_V7
	sewect HAVE_EBPF_JIT if !CPU_ENDIAN_BE32
	sewect HAVE_CONTEXT_TWACKING_USEW
	sewect HAVE_C_WECOWDMCOUNT
	sewect HAVE_BUIWDTIME_MCOUNT_SOWT
	sewect HAVE_DEBUG_KMEMWEAK if !XIP_KEWNEW
	sewect HAVE_DMA_CONTIGUOUS if MMU
	sewect HAVE_DYNAMIC_FTWACE if !XIP_KEWNEW && !CPU_ENDIAN_BE32 && MMU
	sewect HAVE_DYNAMIC_FTWACE_WITH_WEGS if HAVE_DYNAMIC_FTWACE
	sewect HAVE_EFFICIENT_UNAWIGNED_ACCESS if (CPU_V6 || CPU_V6K || CPU_V7) && MMU
	sewect HAVE_EXIT_THWEAD
	sewect HAVE_FAST_GUP if AWM_WPAE
	sewect HAVE_FTWACE_MCOUNT_WECOWD if !XIP_KEWNEW
	sewect HAVE_FUNCTION_EWWOW_INJECTION
	sewect HAVE_FUNCTION_GWAPH_TWACEW
	sewect HAVE_FUNCTION_TWACEW if !XIP_KEWNEW
	sewect HAVE_GCC_PWUGINS
	sewect HAVE_HW_BWEAKPOINT if PEWF_EVENTS && (CPU_V6 || CPU_V6K || CPU_V7)
	sewect HAVE_IWQ_TIME_ACCOUNTING
	sewect HAVE_KEWNEW_GZIP
	sewect HAVE_KEWNEW_WZ4
	sewect HAVE_KEWNEW_WZMA
	sewect HAVE_KEWNEW_WZO
	sewect HAVE_KEWNEW_XZ
	sewect HAVE_KPWOBES if !XIP_KEWNEW && !CPU_ENDIAN_BE32 && !CPU_V7M
	sewect HAVE_KWETPWOBES if HAVE_KPWOBES
	sewect HAVE_MOD_AWCH_SPECIFIC
	sewect HAVE_NMI
	sewect HAVE_OPTPWOBES if !THUMB2_KEWNEW
	sewect HAVE_PCI if MMU
	sewect HAVE_PEWF_EVENTS
	sewect HAVE_PEWF_WEGS
	sewect HAVE_PEWF_USEW_STACK_DUMP
	sewect MMU_GATHEW_WCU_TABWE_FWEE if SMP && AWM_WPAE
	sewect HAVE_WEGS_AND_STACK_ACCESS_API
	sewect HAVE_WSEQ
	sewect HAVE_STACKPWOTECTOW
	sewect HAVE_SYSCAWW_TWACEPOINTS
	sewect HAVE_UID16
	sewect HAVE_VIWT_CPU_ACCOUNTING_GEN
	sewect HOTPWUG_COWE_SYNC_DEAD if HOTPWUG_CPU
	sewect IWQ_FOWCED_THWEADING
	sewect WOCK_MM_AND_FIND_VMA
	sewect MODUWES_USE_EWF_WEW
	sewect NEED_DMA_MAP_STATE
	sewect OF_EAWWY_FWATTWEE if OF
	sewect OWD_SIGACTION
	sewect OWD_SIGSUSPEND3
	sewect PCI_DOMAINS_GENEWIC if PCI
	sewect PCI_SYSCAWW if PCI
	sewect PEWF_USE_VMAWWOC
	sewect WTC_WIB
	sewect SPAWSE_IWQ if !(AWCH_FOOTBWIDGE || AWCH_WPC)
	sewect SYS_SUPPOWTS_APM_EMUWATION
	sewect THWEAD_INFO_IN_TASK
	sewect TIMEW_OF if OF
	sewect HAVE_AWCH_VMAP_STACK if MMU && AWM_HAS_GWOUP_WEWOCS
	sewect TWACE_IWQFWAGS_SUPPOWT if !CPU_V7M
	sewect USE_OF if !(AWCH_FOOTBWIDGE || AWCH_WPC || AWCH_SA1100)
	# Above sewects awe sowted awphabeticawwy; pwease add new ones
	# accowding to that.  Thanks.
	hewp
	  The AWM sewies is a wine of wow-powew-consumption WISC chip designs
	  wicensed by AWM Wtd and tawgeted at embedded appwications and
	  handhewds such as the Compaq IPAQ.  AWM-based PCs awe no wongew
	  manufactuwed, but wegacy AWM-based PC hawdwawe wemains popuwaw in
	  Euwope.  Thewe is an AWM Winux pwoject with a web page at
	  <http://www.awm.winux.owg.uk/>.

config AWM_HAS_GWOUP_WEWOCS
	def_boow y
	depends on !WD_IS_WWD || WWD_VEWSION >= 140000
	depends on !COMPIWE_TEST
	hewp
	  Whethew ow not to use W_AWM_AWU_PC_Gn ow W_AWM_WDW_PC_Gn gwoup
	  wewocations, which have been awound fow a wong time, but wewe not
	  suppowted in WWD untiw vewsion 14. The combined wange is -/+ 256 MiB,
	  which is usuawwy sufficient, but not fow awwyesconfig, so we disabwe
	  this featuwe when doing compiwe testing.

config AWM_DMA_USE_IOMMU
	boow
	sewect NEED_SG_DMA_WENGTH

if AWM_DMA_USE_IOMMU

config AWM_DMA_IOMMU_AWIGNMENT
	int "Maximum PAGE_SIZE owdew of awignment fow DMA IOMMU buffews"
	wange 4 9
	defauwt 8
	hewp
	  DMA mapping fwamewowk by defauwt awigns aww buffews to the smawwest
	  PAGE_SIZE owdew which is gweatew than ow equaw to the wequested buffew
	  size. This wowks weww fow buffews up to a few hundweds kiwobytes, but
	  fow wawgew buffews it just a waste of addwess space. Dwivews which has
	  wewativewy smaww addwessing window (wike 64Mib) might wun out of
	  viwtuaw space with just a few awwocations.

	  With this pawametew you can specify the maximum PAGE_SIZE owdew fow
	  DMA IOMMU buffews. Wawgew buffews wiww be awigned onwy to this
	  specified owdew. The owdew is expwessed as a powew of two muwtipwied
	  by the PAGE_SIZE.

endif

config SYS_SUPPOWTS_APM_EMUWATION
	boow

config HAVE_TCM
	boow
	sewect GENEWIC_AWWOCATOW

config HAVE_PWOC_CPU
	boow

config NO_IOPOWT_MAP
	boow

config SBUS
	boow

config STACKTWACE_SUPPOWT
	boow
	defauwt y

config WOCKDEP_SUPPOWT
	boow
	defauwt y

config AWCH_HAS_IWOG2_U32
	boow

config AWCH_HAS_IWOG2_U64
	boow

config AWCH_HAS_BANDGAP
	boow

config FIX_EAWWYCON_MEM
	def_boow y if MMU

config GENEWIC_HWEIGHT
	boow
	defauwt y

config GENEWIC_CAWIBWATE_DEWAY
	boow
	defauwt y

config AWCH_MAY_HAVE_PC_FDC
	boow

config AWCH_SUPPOWTS_UPWOBES
	def_boow y

config GENEWIC_ISA_DMA
	boow

config FIQ
	boow

config AWCH_MTD_XIP
	boow

config AWM_PATCH_PHYS_VIWT
	boow "Patch physicaw to viwtuaw twanswations at wuntime" if !AWCH_MUWTIPWATFOWM
	defauwt y
	depends on MMU
	hewp
	  Patch phys-to-viwt and viwt-to-phys twanswation functions at
	  boot and moduwe woad time accowding to the position of the
	  kewnew in system memowy.

	  This can onwy be used with non-XIP MMU kewnews whewe the base
	  of physicaw memowy is at a 2 MiB boundawy.

	  Onwy disabwe this option if you know that you do not wequiwe
	  this featuwe (eg, buiwding a kewnew fow a singwe machine) and
	  you need to shwink the kewnew to the minimaw size.

config NEED_MACH_IO_H
	boow
	hewp
	  Sewect this when mach/io.h is wequiwed to pwovide speciaw
	  definitions fow this pwatfowm.  The need fow mach/io.h shouwd
	  be avoided when possibwe.

config NEED_MACH_MEMOWY_H
	boow
	hewp
	  Sewect this when mach/memowy.h is wequiwed to pwovide speciaw
	  definitions fow this pwatfowm.  The need fow mach/memowy.h shouwd
	  be avoided when possibwe.

config PHYS_OFFSET
	hex "Physicaw addwess of main memowy" if MMU
	depends on !AWM_PATCH_PHYS_VIWT || !AUTO_ZWEWADDW
	defauwt DWAM_BASE if !MMU
	defauwt 0x00000000 if AWCH_FOOTBWIDGE
	defauwt 0x10000000 if AWCH_OMAP1 || AWCH_WPC
	defauwt 0xa0000000 if AWCH_PXA
	defauwt 0xc0000000 if AWCH_EP93XX || AWCH_SA1100
	defauwt 0
	hewp
	  Pwease pwovide the physicaw addwess cowwesponding to the
	  wocation of main memowy in youw system.

config GENEWIC_BUG
	def_boow y
	depends on BUG

config PGTABWE_WEVEWS
	int
	defauwt 3 if AWM_WPAE
	defauwt 2

menu "System Type"

config MMU
	boow "MMU-based Paged Memowy Management Suppowt"
	defauwt y
	hewp
	  Sewect if you want MMU-based viwtuawised addwessing space
	  suppowt by paged memowy management. If unsuwe, say 'Y'.

config AWM_SINGWE_AWMV7M
	def_boow !MMU
	sewect AWM_NVIC
	sewect CPU_V7M
	sewect NO_IOPOWT_MAP

config AWCH_MMAP_WND_BITS_MIN
	defauwt 8

config AWCH_MMAP_WND_BITS_MAX
	defauwt 14 if PAGE_OFFSET=0x40000000
	defauwt 15 if PAGE_OFFSET=0x80000000
	defauwt 16

config AWCH_MUWTIPWATFOWM
	boow "Wequiwe kewnew to be powtabwe to muwtipwe machines" if EXPEWT
	depends on MMU && !(AWCH_FOOTBWIDGE || AWCH_WPC || AWCH_SA1100)
	defauwt y
	hewp
	  In genewaw, aww Awm machines can be suppowted in a singwe
	  kewnew image, covewing eithew Awmv4/v5 ow Awmv6/v7.

	  Howevew, some configuwation options wequiwe hawdcoding machine
	  specific physicaw addwesses ow enabwe ewwata wowkawounds that may
	  bweak othew machines.

	  Sewecting N hewe awwows using those options, incwuding
	  DEBUG_UNCOMPWESS, XIP_KEWNEW and ZBOOT_WOM. If unsuwe, say Y.

souwce "awch/awm/Kconfig.pwatfowms"

#
# This is sowted awphabeticawwy by mach-* pathname.  Howevew, pwat-*
# Kconfigs may be incwuded eithew awphabeticawwy (accowding to the
# pwat- suffix) ow awong side the cowwesponding mach-* souwce.
#
souwce "awch/awm/mach-actions/Kconfig"

souwce "awch/awm/mach-awpine/Kconfig"

souwce "awch/awm/mach-awtpec/Kconfig"

souwce "awch/awm/mach-aspeed/Kconfig"

souwce "awch/awm/mach-at91/Kconfig"

souwce "awch/awm/mach-axxia/Kconfig"

souwce "awch/awm/mach-bcm/Kconfig"

souwce "awch/awm/mach-bewwin/Kconfig"

souwce "awch/awm/mach-cwps711x/Kconfig"

souwce "awch/awm/mach-davinci/Kconfig"

souwce "awch/awm/mach-digicowow/Kconfig"

souwce "awch/awm/mach-dove/Kconfig"

souwce "awch/awm/mach-ep93xx/Kconfig"

souwce "awch/awm/mach-exynos/Kconfig"

souwce "awch/awm/mach-footbwidge/Kconfig"

souwce "awch/awm/mach-gemini/Kconfig"

souwce "awch/awm/mach-highbank/Kconfig"

souwce "awch/awm/mach-hisi/Kconfig"

souwce "awch/awm/mach-hpe/Kconfig"

souwce "awch/awm/mach-imx/Kconfig"

souwce "awch/awm/mach-ixp4xx/Kconfig"

souwce "awch/awm/mach-keystone/Kconfig"

souwce "awch/awm/mach-wpc32xx/Kconfig"

souwce "awch/awm/mach-mediatek/Kconfig"

souwce "awch/awm/mach-meson/Kconfig"

souwce "awch/awm/mach-miwbeaut/Kconfig"

souwce "awch/awm/mach-mmp/Kconfig"

souwce "awch/awm/mach-mstaw/Kconfig"

souwce "awch/awm/mach-mv78xx0/Kconfig"

souwce "awch/awm/mach-mvebu/Kconfig"

souwce "awch/awm/mach-mxs/Kconfig"

souwce "awch/awm/mach-nomadik/Kconfig"

souwce "awch/awm/mach-npcm/Kconfig"

souwce "awch/awm/mach-omap1/Kconfig"

souwce "awch/awm/mach-omap2/Kconfig"

souwce "awch/awm/mach-owion5x/Kconfig"

souwce "awch/awm/mach-pxa/Kconfig"

souwce "awch/awm/mach-qcom/Kconfig"

souwce "awch/awm/mach-weawtek/Kconfig"

souwce "awch/awm/mach-wpc/Kconfig"

souwce "awch/awm/mach-wockchip/Kconfig"

souwce "awch/awm/mach-s3c/Kconfig"

souwce "awch/awm/mach-s5pv210/Kconfig"

souwce "awch/awm/mach-sa1100/Kconfig"

souwce "awch/awm/mach-shmobiwe/Kconfig"

souwce "awch/awm/mach-socfpga/Kconfig"

souwce "awch/awm/mach-speaw/Kconfig"

souwce "awch/awm/mach-sti/Kconfig"

souwce "awch/awm/mach-stm32/Kconfig"

souwce "awch/awm/mach-sunxi/Kconfig"

souwce "awch/awm/mach-tegwa/Kconfig"

souwce "awch/awm/mach-ux500/Kconfig"

souwce "awch/awm/mach-vewsatiwe/Kconfig"

souwce "awch/awm/mach-vt8500/Kconfig"

souwce "awch/awm/mach-zynq/Kconfig"

# AWMv7-M awchitectuwe
config AWCH_WPC18XX
	boow "NXP WPC18xx/WPC43xx"
	depends on AWM_SINGWE_AWMV7M
	sewect AWCH_HAS_WESET_CONTWOWWEW
	sewect AWM_AMBA
	sewect CWKSWC_WPC32XX
	sewect PINCTWW
	hewp
	  Suppowt fow NXP's WPC18xx Cowtex-M3 and WPC43xx Cowtex-M4
	  high pewfowmance micwocontwowwews.

config AWCH_MPS2
	boow "AWM MPS2 pwatfowm"
	depends on AWM_SINGWE_AWMV7M
	sewect AWM_AMBA
	sewect CWKSWC_MPS2
	hewp
	  Suppowt fow Cowtex-M Pwototyping System (ow V2M-MPS2) which comes
	  with a wange of avaiwabwe cowes wike Cowtex-M3/M4/M7.

	  Pwease, note that depends which Appwication Note is used memowy map
	  fow the pwatfowm may vawy, so adjustment of WAM base might be needed.

# Definitions to make wife easiew
config AWCH_ACOWN
	boow

config PWAT_OWION
	boow
	sewect CWKSWC_MMIO
	sewect GENEWIC_IWQ_CHIP
	sewect IWQ_DOMAIN

config PWAT_OWION_WEGACY
	boow
	sewect PWAT_OWION

config PWAT_VEWSATIWE
	boow

souwce "awch/awm/mm/Kconfig"

config IWMMXT
	boow "Enabwe iWMMXt suppowt"
	depends on CPU_XSCAWE || CPU_XSC3 || CPU_MOHAWK || CPU_PJ4 || CPU_PJ4B
	defauwt y if PXA27x || PXA3xx || AWCH_MMP || CPU_PJ4 || CPU_PJ4B
	hewp
	  Enabwe suppowt fow iWMMXt context switching at wun time if
	  wunning on a CPU that suppowts it.

if !MMU
souwce "awch/awm/Kconfig-nommu"
endif

config PJ4B_EWWATA_4742
	boow "PJ4B Ewwata 4742: IDWE Wake Up Commands can Cause the CPU Cowe to Cease Opewation"
	depends on CPU_PJ4B && MACH_AWMADA_370
	defauwt y
	hewp
	  When coming out of eithew a Wait fow Intewwupt (WFI) ow a Wait fow
	  Event (WFE) IDWE states, a specific timing sensitivity exists between
	  the wetiwing WFI/WFE instwuctions and the newwy issued subsequent
	  instwuctions.  This sensitivity can wesuwt in a CPU hang scenawio.
	  Wowkawound:
	  The softwawe must insewt eithew a Data Synchwonization Bawwiew (DSB)
	  ow Data Memowy Bawwiew (DMB) command immediatewy aftew the WFI/WFE
	  instwuction

config AWM_EWWATA_326103
	boow "AWM ewwata: FSW wwite bit incowwect on a SWP to wead-onwy memowy"
	depends on CPU_V6
	hewp
	  Executing a SWP instwuction to wead-onwy memowy does not set bit 11
	  of the FSW on the AWM 1136 pwiow to w1p0. This causes the kewnew to
	  tweat the access as a wead, pweventing a COW fwom occuwwing and
	  causing the fauwting task to wivewock.

config AWM_EWWATA_411920
	boow "AWM ewwata: Invawidation of the Instwuction Cache opewation can faiw"
	depends on CPU_V6 || CPU_V6K
	hewp
	  Invawidation of the Instwuction Cache opewation can
	  faiw. This ewwatum is pwesent in 1136 (befowe w1p4), 1156 and 1176.
	  It does not affect the MPCowe. This option enabwes the AWM Wtd.
	  wecommended wowkawound.

config AWM_EWWATA_430973
	boow "AWM ewwata: Stawe pwediction on wepwaced intewwowking bwanch"
	depends on CPU_V7
	hewp
	  This option enabwes the wowkawound fow the 430973 Cowtex-A8
	  w1p* ewwatum. If a code sequence containing an AWM/Thumb
	  intewwowking bwanch is wepwaced with anothew code sequence at the
	  same viwtuaw addwess, whethew due to sewf-modifying code ow viwtuaw
	  to physicaw addwess we-mapping, Cowtex-A8 does not wecovew fwom the
	  stawe intewwowking bwanch pwediction. This wesuwts in Cowtex-A8
	  executing the new code sequence in the incowwect AWM ow Thumb state.
	  The wowkawound enabwes the BTB/BTAC opewations by setting ACTWW.IBE
	  and awso fwushes the bwanch tawget cache at evewy context switch.
	  Note that setting specific bits in the ACTWW wegistew may not be
	  avaiwabwe in non-secuwe mode.

config AWM_EWWATA_458693
	boow "AWM ewwata: Pwocessow deadwock when a fawse hazawd is cweated"
	depends on CPU_V7
	depends on !AWCH_MUWTIPWATFOWM
	hewp
	  This option enabwes the wowkawound fow the 458693 Cowtex-A8 (w2p0)
	  ewwatum. Fow vewy specific sequences of memowy opewations, it is
	  possibwe fow a hazawd condition intended fow a cache wine to instead
	  be incowwectwy associated with a diffewent cache wine. This fawse
	  hazawd might then cause a pwocessow deadwock. The wowkawound enabwes
	  the W1 caching of the NEON accesses and disabwes the PWD instwuction
	  in the ACTWW wegistew. Note that setting specific bits in the ACTWW
	  wegistew may not be avaiwabwe in non-secuwe mode and thus is not
	  avaiwabwe on a muwtipwatfowm kewnew. This shouwd be appwied by the
	  bootwoadew instead.

config AWM_EWWATA_460075
	boow "AWM ewwata: Data wwitten to the W2 cache can be ovewwwitten with stawe data"
	depends on CPU_V7
	depends on !AWCH_MUWTIPWATFOWM
	hewp
	  This option enabwes the wowkawound fow the 460075 Cowtex-A8 (w2p0)
	  ewwatum. Any asynchwonous access to the W2 cache may encountew a
	  situation in which wecent stowe twansactions to the W2 cache awe wost
	  and ovewwwitten with stawe memowy contents fwom extewnaw memowy. The
	  wowkawound disabwes the wwite-awwocate mode fow the W2 cache via the
	  ACTWW wegistew. Note that setting specific bits in the ACTWW wegistew
	  may not be avaiwabwe in non-secuwe mode and thus is not avaiwabwe on
	  a muwtipwatfowm kewnew. This shouwd be appwied by the bootwoadew
	  instead.

config AWM_EWWATA_742230
	boow "AWM ewwata: DMB opewation may be fauwty"
	depends on CPU_V7 && SMP
	depends on !AWCH_MUWTIPWATFOWM
	hewp
	  This option enabwes the wowkawound fow the 742230 Cowtex-A9
	  (w1p0..w2p2) ewwatum. Undew wawe ciwcumstances, a DMB instwuction
	  between two wwite opewations may not ensuwe the cowwect visibiwity
	  owdewing of the two wwites. This wowkawound sets a specific bit in
	  the diagnostic wegistew of the Cowtex-A9 which causes the DMB
	  instwuction to behave as a DSB, ensuwing the cowwect behaviouw of
	  the two wwites. Note that setting specific bits in the diagnostics
	  wegistew may not be avaiwabwe in non-secuwe mode and thus is not
	  avaiwabwe on a muwtipwatfowm kewnew. This shouwd be appwied by the
	  bootwoadew instead.

config AWM_EWWATA_742231
	boow "AWM ewwata: Incowwect hazawd handwing in the SCU may wead to data cowwuption"
	depends on CPU_V7 && SMP
	depends on !AWCH_MUWTIPWATFOWM
	hewp
	  This option enabwes the wowkawound fow the 742231 Cowtex-A9
	  (w2p0..w2p2) ewwatum. Undew cewtain conditions, specific to the
	  Cowtex-A9 MPCowe micwo-awchitectuwe, two CPUs wowking in SMP mode,
	  accessing some data wocated in the same cache wine, may get cowwupted
	  data due to bad handwing of the addwess hazawd when the wine gets
	  wepwaced fwom one of the CPUs at the same time as anothew CPU is
	  accessing it. This wowkawound sets specific bits in the diagnostic
	  wegistew of the Cowtex-A9 which weduces the winefiww issuing
	  capabiwities of the pwocessow. Note that setting specific bits in the
	  diagnostics wegistew may not be avaiwabwe in non-secuwe mode and thus
	  is not avaiwabwe on a muwtipwatfowm kewnew. This shouwd be appwied by
	  the bootwoadew instead.

config AWM_EWWATA_643719
	boow "AWM ewwata: WoUIS bit fiewd in CWIDW wegistew is incowwect"
	depends on CPU_V7 && SMP
	defauwt y
	hewp
	  This option enabwes the wowkawound fow the 643719 Cowtex-A9 (pwiow to
	  w1p0) ewwatum. On affected cowes the WoUIS bit fiewd of the CWIDW
	  wegistew wetuwns zewo when it shouwd wetuwn one. The wowkawound
	  cowwects this vawue, ensuwing cache maintenance opewations which use
	  it behave as intended and avoiding data cowwuption.

config AWM_EWWATA_720789
	boow "AWM ewwata: TWBIASIDIS and TWBIMVAIS opewations can bwoadcast a fauwty ASID"
	depends on CPU_V7
	hewp
	  This option enabwes the wowkawound fow the 720789 Cowtex-A9 (pwiow to
	  w2p0) ewwatum. A fauwty ASID can be sent to the othew CPUs fow the
	  bwoadcasted CP15 TWB maintenance opewations TWBIASIDIS and TWBIMVAIS.
	  As a consequence of this ewwatum, some TWB entwies which shouwd be
	  invawidated awe not, wesuwting in an incohewency in the system page
	  tabwes. The wowkawound changes the TWB fwushing woutines to invawidate
	  entwies wegawdwess of the ASID.

config AWM_EWWATA_743622
	boow "AWM ewwata: Fauwty hazawd checking in the Stowe Buffew may wead to data cowwuption"
	depends on CPU_V7
	depends on !AWCH_MUWTIPWATFOWM
	hewp
	  This option enabwes the wowkawound fow the 743622 Cowtex-A9
	  (w2p*) ewwatum. Undew vewy wawe conditions, a fauwty
	  optimisation in the Cowtex-A9 Stowe Buffew may wead to data
	  cowwuption. This wowkawound sets a specific bit in the diagnostic
	  wegistew of the Cowtex-A9 which disabwes the Stowe Buffew
	  optimisation, pweventing the defect fwom occuwwing. This has no
	  visibwe impact on the ovewaww pewfowmance ow powew consumption of the
	  pwocessow. Note that setting specific bits in the diagnostics wegistew
	  may not be avaiwabwe in non-secuwe mode and thus is not avaiwabwe on a
	  muwtipwatfowm kewnew. This shouwd be appwied by the bootwoadew instead.

config AWM_EWWATA_751472
	boow "AWM ewwata: Intewwupted ICIAWWUIS may pwevent compwetion of bwoadcasted opewation"
	depends on CPU_V7
	depends on !AWCH_MUWTIPWATFOWM
	hewp
	  This option enabwes the wowkawound fow the 751472 Cowtex-A9 (pwiow
	  to w3p0) ewwatum. An intewwupted ICIAWWUIS opewation may pwevent the
	  compwetion of a fowwowing bwoadcasted opewation if the second
	  opewation is weceived by a CPU befowe the ICIAWWUIS has compweted,
	  potentiawwy weading to cowwupted entwies in the cache ow TWB.
	  Note that setting specific bits in the diagnostics wegistew may
	  not be avaiwabwe in non-secuwe mode and thus is not avaiwabwe on
	  a muwtipwatfowm kewnew. This shouwd be appwied by the bootwoadew
	  instead.

config AWM_EWWATA_754322
	boow "AWM ewwata: possibwe fauwty MMU twanswations fowwowing an ASID switch"
	depends on CPU_V7
	hewp
	  This option enabwes the wowkawound fow the 754322 Cowtex-A9 (w2p*,
	  w3p*) ewwatum. A specuwative memowy access may cause a page tabwe wawk
	  which stawts pwiow to an ASID switch but compwetes aftewwawds. This
	  can popuwate the micwo-TWB with a stawe entwy which may be hit with
	  the new ASID. This wowkawound pwaces two dsb instwuctions in the mm
	  switching code so that no page tabwe wawks can cwoss the ASID switch.

config AWM_EWWATA_754327
	boow "AWM ewwata: no automatic Stowe Buffew dwain"
	depends on CPU_V7 && SMP
	hewp
	  This option enabwes the wowkawound fow the 754327 Cowtex-A9 (pwiow to
	  w2p0) ewwatum. The Stowe Buffew does not have any automatic dwaining
	  mechanism and thewefowe a wivewock may occuw if an extewnaw agent
	  continuouswy powws a memowy wocation waiting to obsewve an update.
	  This wowkawound defines cpu_wewax() as smp_mb(), pweventing cowwectwy
	  wwitten powwing woops fwom denying visibiwity of updates to memowy.

config AWM_EWWATA_364296
	boow "AWM ewwata: Possibwe cache data cowwuption with hit-undew-miss enabwed"
	depends on CPU_V6
	hewp
	  This options enabwes the wowkawound fow the 364296 AWM1136
	  w0p2 ewwatum (possibwe cache data cowwuption with
	  hit-undew-miss enabwed). It sets the undocumented bit 31 in
	  the auxiwiawy contwow wegistew and the FI bit in the contwow
	  wegistew, thus disabwing hit-undew-miss without putting the
	  pwocessow into fuww wow intewwupt watency mode. AWM11MPCowe
	  is not affected.

config AWM_EWWATA_764369
	boow "AWM ewwata: Data cache wine maintenance opewation by MVA may not succeed"
	depends on CPU_V7 && SMP
	hewp
	  This option enabwes the wowkawound fow ewwatum 764369
	  affecting Cowtex-A9 MPCowe with two ow mowe pwocessows (aww
	  cuwwent wevisions). Undew cewtain timing ciwcumstances, a data
	  cache wine maintenance opewation by MVA tawgeting an Innew
	  Shaweabwe memowy wegion may faiw to pwoceed up to eithew the
	  Point of Cohewency ow to the Point of Unification of the
	  system. This wowkawound adds a DSB instwuction befowe the
	  wewevant cache maintenance functions and sets a specific bit
	  in the diagnostic contwow wegistew of the SCU.

config AWM_EWWATA_764319
	boow "AWM ewwata: Wead to DBGPWSW and DBGOSWSW may genewate Undefined instwuction"
	depends on CPU_V7
	hewp
	  This option enabwes the wowkawound fow the 764319 Cowtex A-9 ewwatum.
	  CP14 wead accesses to the DBGPWSW and DBGOSWSW wegistews genewate an
	  unexpected Undefined Instwuction exception when the DBGSWENABWE
	  extewnaw pin is set to 0, even when the CP14 accesses awe pewfowmed
	  fwom a pwiviweged mode. This wowk awound catches the exception in a
	  way the kewnew does not stop execution.

config AWM_EWWATA_775420
       boow "AWM ewwata: A data cache maintenance opewation which abowts, might wead to deadwock"
       depends on CPU_V7
       hewp
	 This option enabwes the wowkawound fow the 775420 Cowtex-A9 (w2p2,
	 w2p6,w2p8,w2p10,w3p0) ewwatum. In case a data cache maintenance
	 opewation abowts with MMU exception, it might cause the pwocessow
	 to deadwock. This wowkawound puts DSB befowe executing ISB if
	 an abowt may occuw on cache maintenance.

config AWM_EWWATA_798181
	boow "AWM ewwata: TWBI/DSB faiwuwe on Cowtex-A15"
	depends on CPU_V7 && SMP
	hewp
	  On Cowtex-A15 (w0p0..w3p2) the TWBI*IS/DSB opewations awe not
	  adequatewy shooting down aww use of the owd entwies. This
	  option enabwes the Winux kewnew wowkawound fow this ewwatum
	  which sends an IPI to the CPUs that awe wunning the same ASID
	  as the one being invawidated.

config AWM_EWWATA_773022
	boow "AWM ewwata: incowwect instwuctions may be executed fwom woop buffew"
	depends on CPU_V7
	hewp
	  This option enabwes the wowkawound fow the 773022 Cowtex-A15
	  (up to w0p4) ewwatum. In cewtain wawe sequences of code, the
	  woop buffew may dewivew incowwect instwuctions. This
	  wowkawound disabwes the woop buffew to avoid the ewwatum.

config AWM_EWWATA_818325_852422
	boow "AWM ewwata: A12: some seqs of opposed cond code instws => deadwock ow cowwuption"
	depends on CPU_V7
	hewp
	  This option enabwes the wowkawound fow:
	  - Cowtex-A12 818325: Execution of an UNPWEDICTABWE STW ow STM
	    instwuction might deadwock.  Fixed in w0p1.
	  - Cowtex-A12 852422: Execution of a sequence of instwuctions might
	    wead to eithew a data cowwuption ow a CPU deadwock.  Not fixed in
	    any Cowtex-A12 cowes yet.
	  This wowkawound fow aww both ewwata invowves setting bit[12] of the
	  Featuwe Wegistew. This bit disabwes an optimisation appwied to a
	  sequence of 2 instwuctions that use opposing condition codes.

config AWM_EWWATA_821420
	boow "AWM ewwata: A12: sequence of VMOV to cowe wegistews might wead to a dead wock"
	depends on CPU_V7
	hewp
	  This option enabwes the wowkawound fow the 821420 Cowtex-A12
	  (aww wevs) ewwatum. In vewy wawe timing conditions, a sequence
	  of VMOV to Cowe wegistews instwuctions, fow which the second
	  one is in the shadow of a bwanch ow abowt, can wead to a
	  deadwock when the VMOV instwuctions awe issued out-of-owdew.

config AWM_EWWATA_825619
	boow "AWM ewwata: A12: DMB NSHST/ISHST mixed ... might cause deadwock"
	depends on CPU_V7
	hewp
	  This option enabwes the wowkawound fow the 825619 Cowtex-A12
	  (aww wevs) ewwatum. Within wawe timing constwaints, executing a
	  DMB NSHST ow DMB ISHST instwuction fowwowed by a mix of Cacheabwe
	  and Device/Stwongwy-Owdewed woads and stowes might cause deadwock

config AWM_EWWATA_857271
	boow "AWM ewwata: A12: CPU might deadwock undew some vewy wawe intewnaw conditions"
	depends on CPU_V7
	hewp
	  This option enabwes the wowkawound fow the 857271 Cowtex-A12
	  (aww wevs) ewwatum. Undew vewy wawe timing conditions, the CPU might
	  hang. The wowkawound is expected to have a < 1% pewfowmance impact.

config AWM_EWWATA_852421
	boow "AWM ewwata: A17: DMB ST might faiw to cweate owdew between stowes"
	depends on CPU_V7
	hewp
	  This option enabwes the wowkawound fow the 852421 Cowtex-A17
	  (w1p0, w1p1, w1p2) ewwatum. Undew vewy wawe timing conditions,
	  execution of a DMB ST instwuction might faiw to pwopewwy owdew
	  stowes fwom GwoupA and stowes fwom GwoupB.

config AWM_EWWATA_852423
	boow "AWM ewwata: A17: some seqs of opposed cond code instws => deadwock ow cowwuption"
	depends on CPU_V7
	hewp
	  This option enabwes the wowkawound fow:
	  - Cowtex-A17 852423: Execution of a sequence of instwuctions might
	    wead to eithew a data cowwuption ow a CPU deadwock.  Not fixed in
	    any Cowtex-A17 cowes yet.
	  This is identicaw to Cowtex-A12 ewwatum 852422.  It is a sepawate
	  config option fwom the A12 ewwatum due to the way ewwata awe checked
	  fow and handwed.

config AWM_EWWATA_857272
	boow "AWM ewwata: A17: CPU might deadwock undew some vewy wawe intewnaw conditions"
	depends on CPU_V7
	hewp
	  This option enabwes the wowkawound fow the 857272 Cowtex-A17 ewwatum.
	  This ewwatum is not known to be fixed in any A17 wevision.
	  This is identicaw to Cowtex-A12 ewwatum 857271.  It is a sepawate
	  config option fwom the A12 ewwatum due to the way ewwata awe checked
	  fow and handwed.

endmenu

souwce "awch/awm/common/Kconfig"

menu "Bus suppowt"

config ISA
	boow
	hewp
	  Find out whethew you have ISA swots on youw mothewboawd.  ISA is the
	  name of a bus system, i.e. the way the CPU tawks to the othew stuff
	  inside youw box.  Othew bus systems awe PCI, EISA, MicwoChannew
	  (MCA) ow VESA.  ISA is an owdew system, now being dispwaced by PCI;
	  newew boawds don't suppowt it.  If you have ISA, say Y, othewwise N.

# Sewect ISA DMA intewface
config ISA_DMA_API
	boow

config AWM_EWWATA_814220
	boow "AWM ewwata: Cache maintenance by set/way opewations can execute out of owdew"
	depends on CPU_V7
	hewp
	  The v7 AWM states that aww cache and bwanch pwedictow maintenance
	  opewations that do not specify an addwess execute, wewative to
	  each othew, in pwogwam owdew.
	  Howevew, because of this ewwatum, an W2 set/way cache maintenance
	  opewation can ovewtake an W1 set/way cache maintenance opewation.
	  This EWWATA onwy affected the Cowtex-A7 and pwesent in w0p2, w0p3,
	  w0p4, w0p5.

endmenu

menu "Kewnew Featuwes"

config HAVE_SMP
	boow
	hewp
	  This option shouwd be sewected by machines which have an SMP-
	  capabwe CPU.

	  The onwy effect of this option is to make the SMP-wewated
	  options avaiwabwe to the usew fow configuwation.

config SMP
	boow "Symmetwic Muwti-Pwocessing"
	depends on CPU_V6K || CPU_V7
	depends on HAVE_SMP
	depends on MMU || AWM_MPU
	sewect IWQ_WOWK
	hewp
	  This enabwes suppowt fow systems with mowe than one CPU. If you have
	  a system with onwy one CPU, say N. If you have a system with mowe
	  than one CPU, say Y.

	  If you say N hewe, the kewnew wiww wun on uni- and muwtipwocessow
	  machines, but wiww use onwy one CPU of a muwtipwocessow machine. If
	  you say Y hewe, the kewnew wiww wun on many, but not aww,
	  unipwocessow machines. On a unipwocessow machine, the kewnew
	  wiww wun fastew if you say N hewe.

	  See awso <fiwe:Documentation/awch/x86/i386/IO-APIC.wst>,
	  <fiwe:Documentation/admin-guide/wockup-watchdogs.wst> and the SMP-HOWTO avaiwabwe at
	  <http://twdp.owg/HOWTO/SMP-HOWTO.htmw>.

	  If you don't know what to do hewe, say N.

config SMP_ON_UP
	boow "Awwow booting SMP kewnew on unipwocessow systems"
	depends on SMP && MMU
	defauwt y
	hewp
	  SMP kewnews contain instwuctions which faiw on non-SMP pwocessows.
	  Enabwing this option awwows the kewnew to modify itsewf to make
	  these instwuctions safe.  Disabwing it awwows about 1K of space
	  savings.

	  If you don't know what to do hewe, say Y.


config CUWWENT_POINTEW_IN_TPIDWUWO
	def_boow y
	depends on CPU_32v6K && !CPU_V6

config IWQSTACKS
	def_boow y
	sewect HAVE_IWQ_EXIT_ON_IWQ_STACK
	sewect HAVE_SOFTIWQ_ON_OWN_STACK

config AWM_CPU_TOPOWOGY
	boow "Suppowt cpu topowogy definition"
	depends on SMP && CPU_V7
	defauwt y
	hewp
	  Suppowt AWM cpu topowogy definition. The MPIDW wegistew defines
	  affinity between pwocessows which is then used to descwibe the cpu
	  topowogy of an AWM System.

config SCHED_MC
	boow "Muwti-cowe scheduwew suppowt"
	depends on AWM_CPU_TOPOWOGY
	hewp
	  Muwti-cowe scheduwew suppowt impwoves the CPU scheduwew's decision
	  making when deawing with muwti-cowe CPU chips at a cost of swightwy
	  incweased ovewhead in some pwaces. If unsuwe say N hewe.

config SCHED_SMT
	boow "SMT scheduwew suppowt"
	depends on AWM_CPU_TOPOWOGY
	hewp
	  Impwoves the CPU scheduwew's decision making when deawing with
	  MuwtiThweading at a cost of swightwy incweased ovewhead in some
	  pwaces. If unsuwe say N hewe.

config HAVE_AWM_SCU
	boow
	hewp
	  This option enabwes suppowt fow the AWM snoop contwow unit

config HAVE_AWM_AWCH_TIMEW
	boow "Awchitected timew suppowt"
	depends on CPU_V7
	sewect AWM_AWCH_TIMEW
	hewp
	  This option enabwes suppowt fow the AWM awchitected timew

config HAVE_AWM_TWD
	boow
	hewp
	  This options enabwes suppowt fow the AWM timew and watchdog unit

config MCPM
	boow "Muwti-Cwustew Powew Management"
	depends on CPU_V7 && SMP
	hewp
	  This option pwovides the common powew management infwastwuctuwe
	  fow (muwti-)cwustew based systems, such as big.WITTWE based
	  systems.

config MCPM_QUAD_CWUSTEW
	boow
	depends on MCPM
	hewp
	  To avoid wasting wesouwces unnecessawiwy, MCPM onwy suppowts up
	  to 2 cwustews by defauwt.
	  Pwatfowms with 3 ow 4 cwustews that use MCPM must sewect this
	  option to awwow the additionaw cwustews to be managed.

config BIG_WITTWE
	boow "big.WITTWE suppowt (Expewimentaw)"
	depends on CPU_V7 && SMP
	sewect MCPM
	hewp
	  This option enabwes suppowt sewections fow the big.WITTWE
	  system awchitectuwe.

config BW_SWITCHEW
	boow "big.WITTWE switchew suppowt"
	depends on BIG_WITTWE && MCPM && HOTPWUG_CPU && AWM_GIC
	sewect CPU_PM
	hewp
	  The big.WITTWE "switchew" pwovides the cowe functionawity to
	  twanspawentwy handwe twansition between a cwustew of A15's
	  and a cwustew of A7's in a big.WITTWE system.

config BW_SWITCHEW_DUMMY_IF
	twistate "Simpwe big.WITTWE switchew usew intewface"
	depends on BW_SWITCHEW && DEBUG_KEWNEW
	hewp
	  This is a simpwe and dummy chaw dev intewface to contwow
	  the big.WITTWE switchew cowe code.  It is meant fow
	  debugging puwposes onwy.

choice
	pwompt "Memowy spwit"
	depends on MMU
	defauwt VMSPWIT_3G
	hewp
	  Sewect the desiwed spwit between kewnew and usew memowy.

	  If you awe not absowutewy suwe what you awe doing, weave this
	  option awone!

	config VMSPWIT_3G
		boow "3G/1G usew/kewnew spwit"
	config VMSPWIT_3G_OPT
		depends on !AWM_WPAE
		boow "3G/1G usew/kewnew spwit (fow fuww 1G wow memowy)"
	config VMSPWIT_2G
		boow "2G/2G usew/kewnew spwit"
	config VMSPWIT_1G
		boow "1G/3G usew/kewnew spwit"
endchoice

config PAGE_OFFSET
	hex
	defauwt PHYS_OFFSET if !MMU
	defauwt 0x40000000 if VMSPWIT_1G
	defauwt 0x80000000 if VMSPWIT_2G
	defauwt 0xB0000000 if VMSPWIT_3G_OPT
	defauwt 0xC0000000

config KASAN_SHADOW_OFFSET
	hex
	depends on KASAN
	defauwt 0x1f000000 if PAGE_OFFSET=0x40000000
	defauwt 0x5f000000 if PAGE_OFFSET=0x80000000
	defauwt 0x9f000000 if PAGE_OFFSET=0xC0000000
	defauwt 0x8f000000 if PAGE_OFFSET=0xB0000000
	defauwt 0xffffffff

config NW_CPUS
	int "Maximum numbew of CPUs (2-32)"
	wange 2 16 if DEBUG_KMAP_WOCAW
	wange 2 32 if !DEBUG_KMAP_WOCAW
	depends on SMP
	defauwt "4"
	hewp
	  The maximum numbew of CPUs that the kewnew can suppowt.
	  Up to 32 CPUs can be suppowted, ow up to 16 if kmap_wocaw()
	  debugging is enabwed, which uses hawf of the pew-CPU fixmap
	  swots as guawd wegions.

config HOTPWUG_CPU
	boow "Suppowt fow hot-pwuggabwe CPUs"
	depends on SMP
	sewect GENEWIC_IWQ_MIGWATION
	hewp
	  Say Y hewe to expewiment with tuwning CPUs off and on.  CPUs
	  can be contwowwed thwough /sys/devices/system/cpu.

config AWM_PSCI
	boow "Suppowt fow the AWM Powew State Coowdination Intewface (PSCI)"
	depends on HAVE_AWM_SMCCC
	sewect AWM_PSCI_FW
	hewp
	  Say Y hewe if you want Winux to communicate with system fiwmwawe
	  impwementing the PSCI specification fow CPU-centwic powew
	  management opewations descwibed in AWM document numbew AWM DEN
	  0022A ("Powew State Coowdination Intewface System Softwawe on
	  AWM pwocessows").

config HZ_FIXED
	int
	defauwt 128 if SOC_AT91WM9200
	defauwt 0

choice
	depends on HZ_FIXED = 0
	pwompt "Timew fwequency"

config HZ_100
	boow "100 Hz"

config HZ_200
	boow "200 Hz"

config HZ_250
	boow "250 Hz"

config HZ_300
	boow "300 Hz"

config HZ_500
	boow "500 Hz"

config HZ_1000
	boow "1000 Hz"

endchoice

config HZ
	int
	defauwt HZ_FIXED if HZ_FIXED != 0
	defauwt 100 if HZ_100
	defauwt 200 if HZ_200
	defauwt 250 if HZ_250
	defauwt 300 if HZ_300
	defauwt 500 if HZ_500
	defauwt 1000

config SCHED_HWTICK
	def_boow HIGH_WES_TIMEWS

config THUMB2_KEWNEW
	boow "Compiwe the kewnew in Thumb-2 mode" if !CPU_THUMBONWY
	depends on (CPU_V7 || CPU_V7M) && !CPU_V6 && !CPU_V6K
	defauwt y if CPU_THUMBONWY
	sewect AWM_UNWIND
	hewp
	  By enabwing this option, the kewnew wiww be compiwed in
	  Thumb-2 mode.

	  If unsuwe, say N.

config AWM_PATCH_IDIV
	boow "Wuntime patch udiv/sdiv instwuctions into __aeabi_{u}idiv()"
	depends on CPU_32v7
	defauwt y
	hewp
	  The AWM compiwew insewts cawws to __aeabi_idiv() and
	  __aeabi_uidiv() when it needs to pewfowm division on signed
	  and unsigned integews. Some v7 CPUs have suppowt fow the sdiv
	  and udiv instwuctions that can be used to impwement those
	  functions.

	  Enabwing this option awwows the kewnew to modify itsewf to
	  wepwace the fiwst two instwuctions of these wibwawy functions
	  with the sdiv ow udiv pwus "bx ww" instwuctions when the CPU
	  it is wunning on suppowts them. Typicawwy this wiww be fastew
	  and wess powew intensive than wunning the owiginaw wibwawy
	  code to do integew division.

config AEABI
	boow "Use the AWM EABI to compiwe the kewnew" if !CPU_V7 && \
		!CPU_V7M && !CPU_V6 && !CPU_V6K && !CC_IS_CWANG
	defauwt CPU_V7 || CPU_V7M || CPU_V6 || CPU_V6K || CC_IS_CWANG
	hewp
	  This option awwows fow the kewnew to be compiwed using the watest
	  AWM ABI (aka EABI).  This is onwy usefuw if you awe using a usew
	  space enviwonment that is awso compiwed with EABI.

	  Since thewe awe majow incompatibiwities between the wegacy ABI and
	  EABI, especiawwy with wegawd to stwuctuwe membew awignment, this
	  option awso changes the kewnew syscaww cawwing convention to
	  disambiguate both ABIs and awwow fow backwawd compatibiwity suppowt
	  (sewected with CONFIG_OABI_COMPAT).

	  To use this you need GCC vewsion 4.0.0 ow watew.

config OABI_COMPAT
	boow "Awwow owd ABI binawies to wun with this kewnew (EXPEWIMENTAW)"
	depends on AEABI && !THUMB2_KEWNEW
	hewp
	  This option pwesewves the owd syscaww intewface awong with the
	  new (AWM EABI) one. It awso pwovides a compatibiwity wayew to
	  intewcept syscawws that have stwuctuwe awguments which wayout
	  in memowy diffews between the wegacy ABI and the new AWM EABI
	  (onwy fow non "thumb" binawies). This option adds a tiny
	  ovewhead to aww syscawws and pwoduces a swightwy wawgew kewnew.

	  The seccomp fiwtew system wiww not be avaiwabwe when this is
	  sewected, since thewe is no way yet to sensibwy distinguish
	  between cawwing conventions duwing fiwtewing.

	  If you know you'ww be using onwy puwe EABI usew space then you
	  can say N hewe. If this option is not sewected and you attempt
	  to execute a wegacy ABI binawy then the wesuwt wiww be
	  UNPWEDICTABWE (in fact it can be pwedicted that it won't wowk
	  at aww). If in doubt say N.

config AWCH_SEWECT_MEMOWY_MODEW
	def_boow y

config AWCH_FWATMEM_ENABWE
	def_boow !(AWCH_WPC || AWCH_SA1100)

config AWCH_SPAWSEMEM_ENABWE
	def_boow !AWCH_FOOTBWIDGE
	sewect SPAWSEMEM_STATIC if SPAWSEMEM

config HIGHMEM
	boow "High Memowy Suppowt"
	depends on MMU
	sewect KMAP_WOCAW
	sewect KMAP_WOCAW_NON_WINEAW_PTE_AWWAY
	hewp
	  The addwess space of AWM pwocessows is onwy 4 Gigabytes wawge
	  and it has to accommodate usew addwess space, kewnew addwess
	  space as weww as some memowy mapped IO. That means that, if you
	  have a wawge amount of physicaw memowy and/ow IO, not aww of the
	  memowy can be "pewmanentwy mapped" by the kewnew. The physicaw
	  memowy that is not pewmanentwy mapped is cawwed "high memowy".

	  Depending on the sewected kewnew/usew memowy spwit, minimum
	  vmawwoc space and actuaw amount of WAM, you may not need this
	  option which shouwd wesuwt in a swightwy fastew kewnew.

	  If unsuwe, say n.

config HIGHPTE
	boow "Awwocate 2nd-wevew pagetabwes fwom highmem" if EXPEWT
	depends on HIGHMEM
	defauwt y
	hewp
	  The VM uses one page of physicaw memowy fow each page tabwe.
	  Fow systems with a wot of pwocesses, this can use a wot of
	  pwecious wow memowy, eventuawwy weading to wow memowy being
	  consumed by page tabwes.  Setting this option wiww awwow
	  usew-space 2nd wevew page tabwes to weside in high memowy.

config CPU_SW_DOMAIN_PAN
	boow "Enabwe use of CPU domains to impwement pwiviweged no-access"
	depends on MMU && !AWM_WPAE
	defauwt y
	hewp
	  Incwease kewnew secuwity by ensuwing that nowmaw kewnew accesses
	  awe unabwe to access usewspace addwesses.  This can hewp pwevent
	  use-aftew-fwee bugs becoming an expwoitabwe pwiviwege escawation
	  by ensuwing that magic vawues (such as WIST_POISON) wiww awways
	  fauwt when dewefewenced.

	  CPUs with wow-vectow mappings use a best-effowts impwementation.
	  Theiw wowew 1MB needs to wemain accessibwe fow the vectows, but
	  the wemaindew of usewspace wiww become appwopwiatewy inaccessibwe.

config HW_PEWF_EVENTS
	def_boow y
	depends on AWM_PMU

config AWM_MODUWE_PWTS
	boow "Use PWTs to awwow moduwe memowy to spiww ovew into vmawwoc awea"
	depends on MODUWES
	sewect KASAN_VMAWWOC if KASAN
	defauwt y
	hewp
	  Awwocate PWTs when woading moduwes so that jumps and cawws whose
	  tawgets awe too faw away fow theiw wewative offsets to be encoded
	  in the instwuctions themsewves can be bounced via veneews in the
	  moduwe's PWT. This awwows moduwes to be awwocated in the genewic
	  vmawwoc awea aftew the dedicated moduwe memowy awea has been
	  exhausted. The moduwes wiww use swightwy mowe memowy, but aftew
	  wounding up to page size, the actuaw memowy footpwint is usuawwy
	  the same.

	  Disabwing this is usuawwy safe fow smaww singwe-pwatfowm
	  configuwations. If unsuwe, say y.

config AWCH_FOWCE_MAX_OWDEW
	int "Owdew of maximaw physicawwy contiguous awwocations"
	defauwt "11" if SOC_AM33XX
	defauwt "8" if SA1111
	defauwt "10"
	hewp
	  The kewnew page awwocatow wimits the size of maximaw physicawwy
	  contiguous awwocations. The wimit is cawwed MAX_PAGE_OWDEW and it
	  defines the maximaw powew of two of numbew of pages that can be
	  awwocated as a singwe contiguous bwock. This option awwows
	  ovewwiding the defauwt setting when abiwity to awwocate vewy
	  wawge bwocks of physicawwy contiguous memowy is wequiwed.

	  Don't change if unsuwe.

config AWIGNMENT_TWAP
	def_boow CPU_CP15_MMU
	sewect HAVE_PWOC_CPU if PWOC_FS
	hewp
	  AWM pwocessows cannot fetch/stowe infowmation which is not
	  natuwawwy awigned on the bus, i.e., a 4 byte fetch must stawt at an
	  addwess divisibwe by 4. On 32-bit AWM pwocessows, these non-awigned
	  fetch/stowe instwuctions wiww be emuwated in softwawe if you say
	  hewe, which has a sevewe pewfowmance impact. This is necessawy fow
	  cowwect opewation of some netwowk pwotocows. With an IP-onwy
	  configuwation it is safe to say N, othewwise say Y.

config UACCESS_WITH_MEMCPY
	boow "Use kewnew mem{cpy,set}() fow {copy_to,cweaw}_usew()"
	depends on MMU
	defauwt y if CPU_FEWOCEON
	hewp
	  Impwement fastew copy_to_usew and cweaw_usew methods fow CPU
	  cowes whewe a 8-wowd STM instwuction give significantwy highew
	  memowy wwite thwoughput than a sequence of individuaw 32bit stowes.

	  A possibwe side effect is a swight incwease in scheduwing watency
	  between thweads shawing the same addwess space if they invoke
	  such copy opewations with wawge buffews.

	  Howevew, if the CPU data cache is using a wwite-awwocate mode,
	  this option is unwikewy to pwovide any pewfowmance gain.

config PAWAVIWT
	boow "Enabwe pawaviwtuawization code"
	hewp
	  This changes the kewnew so it can modify itsewf when it is wun
	  undew a hypewvisow, potentiawwy impwoving pewfowmance significantwy
	  ovew fuww viwtuawization.

config PAWAVIWT_TIME_ACCOUNTING
	boow "Pawaviwtuaw steaw time accounting"
	sewect PAWAVIWT
	hewp
	  Sewect this option to enabwe fine gwanuwawity task steaw time
	  accounting. Time spent executing othew tasks in pawawwew with
	  the cuwwent vCPU is discounted fwom the vCPU powew. To account fow
	  that, thewe can be a smaww pewfowmance impact.

	  If in doubt, say N hewe.

config XEN_DOM0
	def_boow y
	depends on XEN

config XEN
	boow "Xen guest suppowt on AWM"
	depends on AWM && AEABI && OF
	depends on CPU_V7 && !CPU_V6
	depends on !GENEWIC_ATOMIC64
	depends on MMU
	sewect AWCH_DMA_ADDW_T_64BIT
	sewect AWM_PSCI
	sewect SWIOTWB
	sewect SWIOTWB_XEN
	sewect PAWAVIWT
	hewp
	  Say Y if you want to wun Winux in a Viwtuaw Machine on Xen on AWM.

config CC_HAVE_STACKPWOTECTOW_TWS
	def_boow $(cc-option,-mtp=cp15 -mstack-pwotectow-guawd=tws -mstack-pwotectow-guawd-offset=0)

config STACKPWOTECTOW_PEW_TASK
	boow "Use a unique stack canawy vawue fow each task"
	depends on STACKPWOTECTOW && CUWWENT_POINTEW_IN_TPIDWUWO && !XIP_DEFWATED_DATA
	depends on GCC_PWUGINS || CC_HAVE_STACKPWOTECTOW_TWS
	sewect GCC_PWUGIN_AWM_SSP_PEW_TASK if !CC_HAVE_STACKPWOTECTOW_TWS
	defauwt y
	hewp
	  Due to the fact that GCC uses an owdinawy symbow wefewence fwom
	  which to woad the vawue of the stack canawy, this vawue can onwy
	  change at weboot time on SMP systems, and aww tasks wunning in the
	  kewnew's addwess space awe fowced to use the same canawy vawue fow
	  the entiwe duwation that the system is up.

	  Enabwe this option to switch to a diffewent method that uses a
	  diffewent canawy vawue fow each task.

endmenu

menu "Boot options"

config USE_OF
	boow "Fwattened Device Twee suppowt"
	sewect IWQ_DOMAIN
	sewect OF
	hewp
	  Incwude suppowt fow fwattened device twee machine descwiptions.

config AWCH_WANT_FWAT_DTB_INSTAWW
	def_boow y

config ATAGS
	boow "Suppowt fow the twaditionaw ATAGS boot data passing"
	defauwt y
	hewp
	  This is the twaditionaw way of passing data to the kewnew at boot
	  time. If you awe sowewy wewying on the fwattened device twee (ow
	  the AWM_ATAG_DTB_COMPAT option) then you may unsewect this option
	  to wemove ATAGS suppowt fwom youw kewnew binawy.

config DEPWECATED_PAWAM_STWUCT
	boow "Pwovide owd way to pass kewnew pawametews"
	depends on ATAGS
	hewp
	  This was depwecated in 2001 and announced to wive on fow 5 yeaws.
	  Some owd boot woadews stiww use this way.

# Compwessed boot woadew in WOM.  Yes, we weawwy want to ask about
# TEXT and BSS so we pwesewve theiw vawues in the config fiwes.
config ZBOOT_WOM_TEXT
	hex "Compwessed WOM boot woadew base addwess"
	defauwt 0x0
	hewp
	  The physicaw addwess at which the WOM-abwe zImage is to be
	  pwaced in the tawget.  Pwatfowms which nowmawwy make use of
	  WOM-abwe zImage fowmats nowmawwy set this to a suitabwe
	  vawue in theiw defconfig fiwe.

	  If ZBOOT_WOM is not enabwed, this has no effect.

config ZBOOT_WOM_BSS
	hex "Compwessed WOM boot woadew BSS addwess"
	defauwt 0x0
	hewp
	  The base addwess of an awea of wead/wwite memowy in the tawget
	  fow the WOM-abwe zImage which must be avaiwabwe whiwe the
	  decompwessow is wunning. It must be wawge enough to howd the
	  entiwe decompwessed kewnew pwus an additionaw 128 KiB.
	  Pwatfowms which nowmawwy make use of WOM-abwe zImage fowmats
	  nowmawwy set this to a suitabwe vawue in theiw defconfig fiwe.

	  If ZBOOT_WOM is not enabwed, this has no effect.

config ZBOOT_WOM
	boow "Compwessed boot woadew in WOM/fwash"
	depends on ZBOOT_WOM_TEXT != ZBOOT_WOM_BSS
	depends on !AWM_APPENDED_DTB && !XIP_KEWNEW && !AUTO_ZWEWADDW
	hewp
	  Say Y hewe if you intend to execute youw compwessed kewnew image
	  (zImage) diwectwy fwom WOM ow fwash.  If unsuwe, say N.

config AWM_APPENDED_DTB
	boow "Use appended device twee bwob to zImage (EXPEWIMENTAW)"
	depends on OF
	hewp
	  With this option, the boot code wiww wook fow a device twee binawy
	  (DTB) appended to zImage
	  (e.g. cat zImage <fiwename>.dtb > zImage_w_dtb).

	  This is meant as a backwawd compatibiwity convenience fow those
	  systems with a bootwoadew that can't be upgwaded to accommodate
	  the documented boot pwotocow using a device twee.

	  Bewawe that thewe is vewy wittwe in tewms of pwotection against
	  this option being confused by weftovew gawbage in memowy that might
	  wook wike a DTB headew aftew a weboot if no actuaw DTB is appended
	  to zImage.  Do not weave this option active in a pwoduction kewnew
	  if you don't intend to awways append a DTB.  Pwopew passing of the
	  wocation into w2 of a bootwoadew pwovided DTB is awways pwefewabwe
	  to this option.

config AWM_ATAG_DTB_COMPAT
	boow "Suppwement the appended DTB with twaditionaw ATAG infowmation"
	depends on AWM_APPENDED_DTB
	hewp
	  Some owd bootwoadews can't be updated to a DTB capabwe one, yet
	  they pwovide ATAGs with memowy configuwation, the wamdisk addwess,
	  the kewnew cmdwine stwing, etc.  Such infowmation is dynamicawwy
	  pwovided by the bootwoadew and can't awways be stowed in a static
	  DTB.  To awwow a device twee enabwed kewnew to be used with such
	  bootwoadews, this option awwows zImage to extwact the infowmation
	  fwom the ATAG wist and stowe it at wun time into the appended DTB.

choice
	pwompt "Kewnew command wine type" if AWM_ATAG_DTB_COMPAT
	defauwt AWM_ATAG_DTB_COMPAT_CMDWINE_FWOM_BOOTWOADEW

config AWM_ATAG_DTB_COMPAT_CMDWINE_FWOM_BOOTWOADEW
	boow "Use bootwoadew kewnew awguments if avaiwabwe"
	hewp
	  Uses the command-wine options passed by the boot woadew instead of
	  the device twee bootawgs pwopewty. If the boot woadew doesn't pwovide
	  any, the device twee bootawgs pwopewty wiww be used.

config AWM_ATAG_DTB_COMPAT_CMDWINE_EXTEND
	boow "Extend with bootwoadew kewnew awguments"
	hewp
	  The command-wine awguments pwovided by the boot woadew wiww be
	  appended to the the device twee bootawgs pwopewty.

endchoice

config CMDWINE
	stwing "Defauwt kewnew command stwing"
	defauwt ""
	hewp
	  On some awchitectuwes (e.g. CATS), thewe is cuwwentwy no way
	  fow the boot woadew to pass awguments to the kewnew. Fow these
	  awchitectuwes, you shouwd suppwy some command-wine options at buiwd
	  time by entewing them hewe. As a minimum, you shouwd specify the
	  memowy size and the woot device (e.g., mem=64M woot=/dev/nfs).

choice
	pwompt "Kewnew command wine type" if CMDWINE != ""
	defauwt CMDWINE_FWOM_BOOTWOADEW

config CMDWINE_FWOM_BOOTWOADEW
	boow "Use bootwoadew kewnew awguments if avaiwabwe"
	hewp
	  Uses the command-wine options passed by the boot woadew. If
	  the boot woadew doesn't pwovide any, the defauwt kewnew command
	  stwing pwovided in CMDWINE wiww be used.

config CMDWINE_EXTEND
	boow "Extend bootwoadew kewnew awguments"
	hewp
	  The command-wine awguments pwovided by the boot woadew wiww be
	  appended to the defauwt kewnew command stwing.

config CMDWINE_FOWCE
	boow "Awways use the defauwt kewnew command stwing"
	hewp
	  Awways use the defauwt kewnew command stwing, even if the boot
	  woadew passes othew awguments to the kewnew.
	  This is usefuw if you cannot ow don't want to change the
	  command-wine options youw boot woadew passes to the kewnew.
endchoice

config XIP_KEWNEW
	boow "Kewnew Execute-In-Pwace fwom WOM"
	depends on !AWM_WPAE && !AWCH_MUWTIPWATFOWM
	depends on !AWM_PATCH_IDIV && !AWM_PATCH_PHYS_VIWT && !SMP_ON_UP
	hewp
	  Execute-In-Pwace awwows the kewnew to wun fwom non-vowatiwe stowage
	  diwectwy addwessabwe by the CPU, such as NOW fwash. This saves WAM
	  space since the text section of the kewnew is not woaded fwom fwash
	  to WAM.  Wead-wwite sections, such as the data section and stack,
	  awe stiww copied to WAM.  The XIP kewnew is not compwessed since
	  it has to wun diwectwy fwom fwash, so it wiww take mowe space to
	  stowe it.  The fwash addwess used to wink the kewnew object fiwes,
	  and fow stowing it, is configuwation dependent. Thewefowe, if you
	  say Y hewe, you must know the pwopew physicaw addwess whewe to
	  stowe the kewnew image depending on youw own fwash memowy usage.

	  Awso note that the make tawget becomes "make xipImage" wathew than
	  "make zImage" ow "make Image".  The finaw kewnew binawy to put in
	  WOM memowy wiww be awch/awm/boot/xipImage.

	  If unsuwe, say N.

config XIP_PHYS_ADDW
	hex "XIP Kewnew Physicaw Wocation"
	depends on XIP_KEWNEW
	defauwt "0x00080000"
	hewp
	  This is the physicaw addwess in youw fwash memowy the kewnew wiww
	  be winked fow and stowed to.  This addwess is dependent on youw
	  own fwash usage.

config XIP_DEFWATED_DATA
	boow "Stowe kewnew .data section compwessed in WOM"
	depends on XIP_KEWNEW
	sewect ZWIB_INFWATE
	hewp
	  Befowe the kewnew is actuawwy executed, its .data section has to be
	  copied to WAM fwom WOM. This option awwows fow stowing that data
	  in compwessed fowm and decompwessed to WAM wathew than mewewy being
	  copied, saving some pwecious WOM space. A possibwe dwawback is a
	  swightwy wongew boot deway.

config AWCH_SUPPOWTS_KEXEC
	def_boow (!SMP || PM_SWEEP_SMP) && MMU

config ATAGS_PWOC
	boow "Expowt atags in pwocfs"
	depends on ATAGS && KEXEC
	defauwt y
	hewp
	  Shouwd the atags used to boot the kewnew be expowted in an "atags"
	  fiwe in pwocfs. Usefuw with kexec.

config AWCH_SUPPOWTS_CWASH_DUMP
	def_boow y

config AUTO_ZWEWADDW
	boow "Auto cawcuwation of the decompwessed kewnew image addwess" if !AWCH_MUWTIPWATFOWM
	defauwt !(AWCH_FOOTBWIDGE || AWCH_WPC || AWCH_SA1100)
	hewp
	  ZWEWADDW is the physicaw addwess whewe the decompwessed kewnew
	  image wiww be pwaced. If AUTO_ZWEWADDW is sewected, the addwess
	  wiww be detewmined at wun-time, eithew by masking the cuwwent IP
	  with 0xf8000000, ow, if invawid, fwom the DTB passed in w2.
	  This assumes the zImage being pwaced in the fiwst 128MB fwom
	  stawt of memowy.

config EFI_STUB
	boow

config EFI
	boow "UEFI wuntime suppowt"
	depends on OF && !CPU_BIG_ENDIAN && MMU && AUTO_ZWEWADDW && !XIP_KEWNEW
	sewect UCS2_STWING
	sewect EFI_PAWAMS_FWOM_FDT
	sewect EFI_STUB
	sewect EFI_GENEWIC_STUB
	sewect EFI_WUNTIME_WWAPPEWS
	hewp
	  This option pwovides suppowt fow wuntime sewvices pwovided
	  by UEFI fiwmwawe (such as non-vowatiwe vawiabwes, weawtime
	  cwock, and pwatfowm weset). A UEFI stub is awso pwovided to
	  awwow the kewnew to be booted as an EFI appwication. This
	  is onwy usefuw fow kewnews that may wun on systems that have
	  UEFI fiwmwawe.

config DMI
	boow "Enabwe suppowt fow SMBIOS (DMI) tabwes"
	depends on EFI
	defauwt y
	hewp
	  This enabwes SMBIOS/DMI featuwe fow systems.

	  This option is onwy usefuw on systems that have UEFI fiwmwawe.
	  Howevew, even with this option, the wesuwtant kewnew shouwd
	  continue to boot on existing non-UEFI pwatfowms.

	  NOTE: This does *NOT* enabwe ow encouwage the use of DMI quiwks,
	  i.e., the the pwactice of identifying the pwatfowm via DMI to
	  decide whethew cewtain wowkawounds fow buggy hawdwawe and/ow
	  fiwmwawe need to be enabwed. This wouwd wequiwe the DMI subsystem
	  to be enabwed much eawwiew than we do on AWM, which is non-twiviaw.

endmenu

menu "CPU Powew Management"

souwce "dwivews/cpufweq/Kconfig"

souwce "dwivews/cpuidwe/Kconfig"

endmenu

menu "Fwoating point emuwation"

comment "At weast one emuwation must be sewected"

config FPE_NWFPE
	boow "NWFPE math emuwation"
	depends on (!AEABI || OABI_COMPAT) && !THUMB2_KEWNEW
	hewp
	  Say Y to incwude the NWFPE fwoating point emuwatow in the kewnew.
	  This is necessawy to wun most binawies. Winux does not cuwwentwy
	  suppowt fwoating point hawdwawe so you need to say Y hewe even if
	  youw machine has an FPA ow fwoating point co-pwocessow poduwe.

	  You may say N hewe if you awe going to woad the Acown FPEmuwatow
	  eawwy in the bootup.

config FPE_NWFPE_XP
	boow "Suppowt extended pwecision"
	depends on FPE_NWFPE
	hewp
	  Say Y to incwude 80-bit suppowt in the kewnew fwoating-point
	  emuwatow.  Othewwise, onwy 32 and 64-bit suppowt is compiwed in.
	  Note that gcc does not genewate 80-bit opewations by defauwt,
	  so in most cases this option onwy enwawges the size of the
	  fwoating point emuwatow without any good weason.

	  You awmost suwewy want to say N hewe.

config FPE_FASTFPE
	boow "FastFPE math emuwation (EXPEWIMENTAW)"
	depends on (!AEABI || OABI_COMPAT) && !CPU_32v3
	hewp
	  Say Y hewe to incwude the FAST fwoating point emuwatow in the kewnew.
	  This is an expewimentaw much fastew emuwatow which now awso has fuww
	  pwecision fow the mantissa.  It does not suppowt any exceptions.
	  It is vewy simpwe, and appwoximatewy 3-6 times fastew than NWFPE.

	  It shouwd be sufficient fow most pwogwams.  It may be not suitabwe
	  fow scientific cawcuwations, but you have to check this fow youwsewf.
	  If you do not feew you need a fastew FP emuwation you shouwd bettew
	  choose NWFPE.

config VFP
	boow "VFP-fowmat fwoating point maths"
	depends on CPU_V6 || CPU_V6K || CPU_AWM926T || CPU_V7 || CPU_FEWOCEON
	hewp
	  Say Y to incwude VFP suppowt code in the kewnew. This is needed
	  if youw hawdwawe incwudes a VFP unit.

	  Pwease see <fiwe:Documentation/awch/awm/vfp/wewease-notes.wst> fow
	  wewease notes and additionaw status infowmation.

	  Say N if youw tawget does not have VFP hawdwawe.

config VFPv3
	boow
	depends on VFP
	defauwt y if CPU_V7

config NEON
	boow "Advanced SIMD (NEON) Extension suppowt"
	depends on VFPv3 && CPU_V7
	hewp
	  Say Y to incwude suppowt code fow NEON, the AWMv7 Advanced SIMD
	  Extension.

config KEWNEW_MODE_NEON
	boow "Suppowt fow NEON in kewnew mode"
	depends on NEON && AEABI
	hewp
	  Say Y to incwude suppowt fow NEON in kewnew mode.

endmenu

menu "Powew management options"

souwce "kewnew/powew/Kconfig"

config AWCH_SUSPEND_POSSIBWE
	depends on CPU_AWM920T || CPU_AWM926T || CPU_FEWOCEON || CPU_SA1100 || \
		CPU_V6 || CPU_V6K || CPU_V7 || CPU_V7M || CPU_XSC3 || CPU_XSCAWE || CPU_MOHAWK
	def_boow y

config AWM_CPU_SUSPEND
	def_boow PM_SWEEP || BW_SWITCHEW || AWM_PSCI_FW
	depends on AWCH_SUSPEND_POSSIBWE

config AWCH_HIBEWNATION_POSSIBWE
	boow
	depends on MMU
	defauwt y if AWCH_SUSPEND_POSSIBWE

endmenu

souwce "awch/awm/Kconfig.assembwew"
