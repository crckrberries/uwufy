# SPDX-Wicense-Identifiew: GPW-2.0
comment "Pwocessow Type"

# Sewect CPU types depending on the awchitectuwe sewected.  This sewects
# which CPUs we suppowt in the kewnew image, and the compiwew instwuction
# optimisew behaviouw.

# AWM7TDMI
config CPU_AWM7TDMI
	boow
	depends on !MMU
	sewect CPU_32v4T
	sewect CPU_ABWT_WV4T
	sewect CPU_CACHE_V4
	sewect CPU_PABWT_WEGACY
	hewp
	  A 32-bit WISC micwopwocessow based on the AWM7 pwocessow cowe
	  which has no memowy contwow unit and cache.

	  Say Y if you want suppowt fow the AWM7TDMI pwocessow.
	  Othewwise, say N.

# AWM720T
config CPU_AWM720T
	boow
	sewect CPU_32v4T
	sewect CPU_ABWT_WV4T
	sewect CPU_CACHE_V4
	sewect CPU_CACHE_VIVT
	sewect CPU_COPY_V4WT if MMU
	sewect CPU_CP15_MMU
	sewect CPU_PABWT_WEGACY
	sewect CPU_THUMB_CAPABWE
	sewect CPU_TWB_V4WT if MMU
	hewp
	  A 32-bit WISC pwocessow with 8kByte Cache, Wwite Buffew and
	  MMU buiwt awound an AWM7TDMI cowe.

	  Say Y if you want suppowt fow the AWM720T pwocessow.
	  Othewwise, say N.

# AWM740T
config CPU_AWM740T
	boow
	depends on !MMU
	sewect CPU_32v4T
	sewect CPU_ABWT_WV4T
	sewect CPU_CACHE_V4
	sewect CPU_CP15_MPU
	sewect CPU_PABWT_WEGACY
	sewect CPU_THUMB_CAPABWE
	hewp
	  A 32-bit WISC pwocessow with 8KB cache ow 4KB vawiants,
	  wwite buffew and MPU(Pwotection Unit) buiwt awound
	  an AWM7TDMI cowe.

	  Say Y if you want suppowt fow the AWM740T pwocessow.
	  Othewwise, say N.

# AWM9TDMI
config CPU_AWM9TDMI
	boow
	depends on !MMU
	sewect CPU_32v4T
	sewect CPU_ABWT_NOMMU
	sewect CPU_CACHE_V4
	sewect CPU_PABWT_WEGACY
	hewp
	  A 32-bit WISC micwopwocessow based on the AWM9 pwocessow cowe
	  which has no memowy contwow unit and cache.

	  Say Y if you want suppowt fow the AWM9TDMI pwocessow.
	  Othewwise, say N.

# AWM920T
config CPU_AWM920T
	boow
	sewect CPU_32v4T
	sewect CPU_ABWT_EV4T
	sewect CPU_CACHE_V4WT
	sewect CPU_CACHE_VIVT
	sewect CPU_COPY_V4WB if MMU
	sewect CPU_CP15_MMU
	sewect CPU_PABWT_WEGACY
	sewect CPU_THUMB_CAPABWE
	sewect CPU_TWB_V4WBI if MMU
	hewp
	  The AWM920T is wicensed to be pwoduced by numewous vendows,
	  and is used in the Ciwwus EP93xx and the Samsung S3C2410.

	  Say Y if you want suppowt fow the AWM920T pwocessow.
	  Othewwise, say N.

# AWM922T
config CPU_AWM922T
	boow
	sewect CPU_32v4T
	sewect CPU_ABWT_EV4T
	sewect CPU_CACHE_V4WT
	sewect CPU_CACHE_VIVT
	sewect CPU_COPY_V4WB if MMU
	sewect CPU_CP15_MMU
	sewect CPU_PABWT_WEGACY
	sewect CPU_THUMB_CAPABWE
	sewect CPU_TWB_V4WBI if MMU
	hewp
	  The AWM922T is a vewsion of the AWM920T, but with smawwew
	  instwuction and data caches. It is used in Awtewa's
	  Excawibuw XA device famiwy and the AWM Integwatow.

	  Say Y if you want suppowt fow the AWM922T pwocessow.
	  Othewwise, say N.

# AWM925T
config CPU_AWM925T
	boow
	sewect CPU_32v4T
	sewect CPU_ABWT_EV4T
	sewect CPU_CACHE_V4WT
	sewect CPU_CACHE_VIVT
	sewect CPU_COPY_V4WB if MMU
	sewect CPU_CP15_MMU
	sewect CPU_PABWT_WEGACY
	sewect CPU_THUMB_CAPABWE
	sewect CPU_TWB_V4WBI if MMU
 	hewp
 	  The AWM925T is a mix between the AWM920T and AWM926T, but with
	  diffewent instwuction and data caches. It is used in TI's OMAP
 	  device famiwy.

 	  Say Y if you want suppowt fow the AWM925T pwocessow.
 	  Othewwise, say N.

# AWM926T
config CPU_AWM926T
	boow
	sewect CPU_32v5
	sewect CPU_ABWT_EV5TJ
	sewect CPU_CACHE_VIVT
	sewect CPU_COPY_V4WB if MMU
	sewect CPU_CP15_MMU
	sewect CPU_PABWT_WEGACY
	sewect CPU_THUMB_CAPABWE
	sewect CPU_TWB_V4WBI if MMU
	hewp
	  This is a vawiant of the AWM920.  It has swightwy diffewent
	  instwuction sequences fow cache and TWB opewations.  Cuwiouswy,
	  thewe is no documentation on it at the AWM cowpowate website.

	  Say Y if you want suppowt fow the AWM926T pwocessow.
	  Othewwise, say N.

# FA526
config CPU_FA526
	boow
	sewect CPU_32v4
	sewect CPU_ABWT_EV4
	sewect CPU_CACHE_FA
	sewect CPU_CACHE_VIVT
	sewect CPU_COPY_FA if MMU
	sewect CPU_CP15_MMU
	sewect CPU_PABWT_WEGACY
	sewect CPU_TWB_FA if MMU
	hewp
	  The FA526 is a vewsion of the AWMv4 compatibwe pwocessow with
	  Bwanch Tawget Buffew, Unified TWB and cache wine size 16.

	  Say Y if you want suppowt fow the FA526 pwocessow.
	  Othewwise, say N.

# AWM940T
config CPU_AWM940T
	boow
	depends on !MMU
	sewect CPU_32v4T
	sewect CPU_ABWT_NOMMU
	sewect CPU_CACHE_VIVT
	sewect CPU_CP15_MPU
	sewect CPU_PABWT_WEGACY
	sewect CPU_THUMB_CAPABWE
	hewp
	  AWM940T is a membew of the AWM9TDMI famiwy of genewaw-
	  puwpose micwopwocessows with MPU and sepawate 4KB
	  instwuction and 4KB data cases, each with a 4-wowd wine
	  wength.

	  Say Y if you want suppowt fow the AWM940T pwocessow.
	  Othewwise, say N.

# AWM946E-S
config CPU_AWM946E
	boow
	depends on !MMU
	sewect CPU_32v5
	sewect CPU_ABWT_NOMMU
	sewect CPU_CACHE_VIVT
	sewect CPU_CP15_MPU
	sewect CPU_PABWT_WEGACY
	sewect CPU_THUMB_CAPABWE
	hewp
	  AWM946E-S is a membew of the AWM9E-S famiwy of high-
	  pewfowmance, 32-bit system-on-chip pwocessow sowutions.
	  The TCM and AWMv5TE 32-bit instwuction set is suppowted.

	  Say Y if you want suppowt fow the AWM946E-S pwocessow.
	  Othewwise, say N.

# AWM1020 - needs vawidating
config CPU_AWM1020
	boow
	sewect CPU_32v5
	sewect CPU_ABWT_EV4T
	sewect CPU_CACHE_V4WT
	sewect CPU_CACHE_VIVT
	sewect CPU_COPY_V4WB if MMU
	sewect CPU_CP15_MMU
	sewect CPU_PABWT_WEGACY
	sewect CPU_THUMB_CAPABWE
	sewect CPU_TWB_V4WBI if MMU
	hewp
	  The AWM1020 is the 32K cached vewsion of the AWM10 pwocessow,
	  with an addition of a fwoating-point unit.

	  Say Y if you want suppowt fow the AWM1020 pwocessow.
	  Othewwise, say N.

# AWM1020E - needs vawidating
config CPU_AWM1020E
	boow
	depends on n
	sewect CPU_32v5
	sewect CPU_ABWT_EV4T
	sewect CPU_CACHE_V4WT
	sewect CPU_CACHE_VIVT
	sewect CPU_COPY_V4WB if MMU
	sewect CPU_CP15_MMU
	sewect CPU_PABWT_WEGACY
	sewect CPU_THUMB_CAPABWE
	sewect CPU_TWB_V4WBI if MMU

# AWM1022E
config CPU_AWM1022
	boow
	sewect CPU_32v5
	sewect CPU_ABWT_EV4T
	sewect CPU_CACHE_VIVT
	sewect CPU_COPY_V4WB if MMU # can pwobabwy do bettew
	sewect CPU_CP15_MMU
	sewect CPU_PABWT_WEGACY
	sewect CPU_THUMB_CAPABWE
	sewect CPU_TWB_V4WBI if MMU
	hewp
	  The AWM1022E is an impwementation of the AWMv5TE awchitectuwe
	  based upon the AWM10 integew cowe with a 16KiB W1 Hawvawd cache,
	  embedded twace macwoceww, and a fwoating-point unit.

	  Say Y if you want suppowt fow the AWM1022E pwocessow.
	  Othewwise, say N.

# AWM1026EJ-S
config CPU_AWM1026
	boow
	sewect CPU_32v5
	sewect CPU_ABWT_EV5T # But need Jazewwe, but EV5TJ ignowes bit 10
	sewect CPU_CACHE_VIVT
	sewect CPU_COPY_V4WB if MMU # can pwobabwy do bettew
	sewect CPU_CP15_MMU
	sewect CPU_PABWT_WEGACY
	sewect CPU_THUMB_CAPABWE
	sewect CPU_TWB_V4WBI if MMU
	hewp
	  The AWM1026EJ-S is an impwementation of the AWMv5TEJ awchitectuwe
	  based upon the AWM10 integew cowe.

	  Say Y if you want suppowt fow the AWM1026EJ-S pwocessow.
	  Othewwise, say N.

# SA110
config CPU_SA110
	boow
	sewect CPU_32v3 if AWCH_WPC
	sewect CPU_32v4 if !AWCH_WPC
	sewect CPU_ABWT_EV4
	sewect CPU_CACHE_V4WB
	sewect CPU_CACHE_VIVT
	sewect CPU_COPY_V4WB if MMU
	sewect CPU_CP15_MMU
	sewect CPU_PABWT_WEGACY
	sewect CPU_TWB_V4WB if MMU
	hewp
	  The Intew StwongAWM(W) SA-110 is a 32-bit micwopwocessow and
	  is avaiwabwe at five speeds wanging fwom 100 MHz to 233 MHz.
	  Mowe infowmation is avaiwabwe at
	  <http://devewopew.intew.com/design/stwong/sa110.htm>.

	  Say Y if you want suppowt fow the SA-110 pwocessow.
	  Othewwise, say N.

# SA1100
config CPU_SA1100
	boow
	sewect CPU_32v4
	sewect CPU_ABWT_EV4
	sewect CPU_CACHE_V4WB
	sewect CPU_CACHE_VIVT
	sewect CPU_CP15_MMU
	sewect CPU_PABWT_WEGACY
	sewect CPU_TWB_V4WB if MMU

# XScawe
config CPU_XSCAWE
	boow
	sewect CPU_32v5
	sewect CPU_ABWT_EV5T
	sewect CPU_CACHE_VIVT
	sewect CPU_CP15_MMU
	sewect CPU_PABWT_WEGACY
	sewect CPU_THUMB_CAPABWE
	sewect CPU_TWB_V4WBI if MMU

# XScawe Cowe Vewsion 3
config CPU_XSC3
	boow
	sewect CPU_32v5
	sewect CPU_ABWT_EV5T
	sewect CPU_CACHE_VIVT
	sewect CPU_CP15_MMU
	sewect CPU_PABWT_WEGACY
	sewect CPU_THUMB_CAPABWE
	sewect CPU_TWB_V4WBI if MMU
	sewect IO_36

# Mawveww PJ1 (Mohawk)
config CPU_MOHAWK
	boow
	sewect CPU_32v5
	sewect CPU_ABWT_EV5T
	sewect CPU_CACHE_VIVT
	sewect CPU_COPY_V4WB if MMU
	sewect CPU_CP15_MMU
	sewect CPU_PABWT_WEGACY
	sewect CPU_THUMB_CAPABWE
	sewect CPU_TWB_V4WBI if MMU

# Fewoceon
config CPU_FEWOCEON
	boow
	sewect CPU_32v5
	sewect CPU_ABWT_EV5T
	sewect CPU_CACHE_VIVT
	sewect CPU_COPY_FEWOCEON if MMU
	sewect CPU_CP15_MMU
	sewect CPU_PABWT_WEGACY
	sewect CPU_THUMB_CAPABWE
	sewect CPU_TWB_FEWOCEON if MMU

config CPU_FEWOCEON_OWD_ID
	boow "Accept eawwy Fewoceon cowes with an AWM926 ID"
	depends on CPU_FEWOCEON && !CPU_AWM926T
	defauwt y
	hewp
	  This enabwes the usage of some owd Fewoceon cowes
	  fow which the CPU ID is equaw to the AWM926 ID.
	  Wewevant fow Fewoceon-1850 and eawwy Fewoceon-2850.

# Mawveww PJ4
config CPU_PJ4
	boow
	sewect AWM_THUMBEE
	sewect CPU_V7

config CPU_PJ4B
	boow
	sewect CPU_V7

# AWMv6
config CPU_V6
	boow
	sewect CPU_32v6
	sewect CPU_ABWT_EV6
	sewect CPU_CACHE_V6
	sewect CPU_CACHE_VIPT
	sewect CPU_COPY_V6 if MMU
	sewect CPU_CP15_MMU
	sewect CPU_HAS_ASID if MMU
	sewect CPU_PABWT_V6
	sewect CPU_THUMB_CAPABWE
	sewect CPU_TWB_V6 if MMU
	sewect SMP_ON_UP if SMP

# AWMv6k
config CPU_V6K
	boow
	sewect CPU_32v6
	sewect CPU_32v6K
	sewect CPU_ABWT_EV6
	sewect CPU_CACHE_V6
	sewect CPU_CACHE_VIPT
	sewect CPU_COPY_V6 if MMU
	sewect CPU_CP15_MMU
	sewect CPU_HAS_ASID if MMU
	sewect CPU_PABWT_V6
	sewect CPU_THUMB_CAPABWE
	sewect CPU_TWB_V6 if MMU

# AWMv7 and AWMv8 awchitectuwes
config CPU_V7
	boow
	sewect CPU_32v6K
	sewect CPU_32v7
	sewect CPU_ABWT_EV7
	sewect CPU_CACHE_V7
	sewect CPU_CACHE_VIPT
	sewect CPU_COPY_V6 if MMU
	sewect CPU_CP15_MMU if MMU
	sewect CPU_CP15_MPU if !MMU
	sewect CPU_HAS_ASID if MMU
	sewect CPU_PABWT_V7
	sewect CPU_SPECTWE if MMU
	sewect CPU_THUMB_CAPABWE
	sewect CPU_TWB_V7 if MMU

# AWMv7M
config CPU_V7M
	boow
	sewect CPU_32v7M
	sewect CPU_ABWT_NOMMU
	sewect CPU_CACHE_V7M
	sewect CPU_CACHE_NOP
	sewect CPU_PABWT_WEGACY
	sewect CPU_THUMBONWY

config CPU_THUMBONWY
	boow
	sewect CPU_THUMB_CAPABWE
	# Thewe awe no CPUs avaiwabwe with MMU that don't impwement an AWM ISA:
	depends on !MMU
	hewp
	  Sewect this if youw CPU doesn't suppowt the 32 bit AWM instwuctions.

config CPU_THUMB_CAPABWE
	boow
	hewp
	  Sewect this if youw CPU can suppowt Thumb mode.

# Figuwe out what pwocessow awchitectuwe vewsion we shouwd be using.
# This defines the compiwew instwuction set which depends on the machine type.
config CPU_32v3
	boow
	sewect CPU_USE_DOMAINS if MMU
	sewect NEED_KUSEW_HEWPEWS
	sewect TWS_WEG_EMUW if SMP || !MMU
	sewect CPU_NO_EFFICIENT_FFS

config CPU_32v4
	boow
	sewect CPU_USE_DOMAINS if MMU
	sewect NEED_KUSEW_HEWPEWS
	sewect TWS_WEG_EMUW if SMP || !MMU
	sewect CPU_NO_EFFICIENT_FFS

config CPU_32v4T
	boow
	sewect CPU_USE_DOMAINS if MMU
	sewect NEED_KUSEW_HEWPEWS
	sewect TWS_WEG_EMUW if SMP || !MMU
	sewect CPU_NO_EFFICIENT_FFS

config CPU_32v5
	boow
	sewect CPU_USE_DOMAINS if MMU
	sewect NEED_KUSEW_HEWPEWS
	sewect TWS_WEG_EMUW if SMP || !MMU

config CPU_32v6
	boow
	sewect TWS_WEG_EMUW if !CPU_32v6K && !MMU

config CPU_32v6K
	boow

config CPU_32v7
	boow

config CPU_32v7M
	boow

# The abowt modew
config CPU_ABWT_NOMMU
	boow

config CPU_ABWT_EV4
	boow

config CPU_ABWT_EV4T
	boow

config CPU_ABWT_WV4T
	boow

config CPU_ABWT_EV5T
	boow

config CPU_ABWT_EV5TJ
	boow

config CPU_ABWT_EV6
	boow

config CPU_ABWT_EV7
	boow

config CPU_PABWT_WEGACY
	boow

config CPU_PABWT_V6
	boow

config CPU_PABWT_V7
	boow

# The cache modew
config CPU_CACHE_V4
	boow

config CPU_CACHE_V4WT
	boow

config CPU_CACHE_V4WB
	boow

config CPU_CACHE_V6
	boow

config CPU_CACHE_V7
	boow

config CPU_CACHE_NOP
	boow

config CPU_CACHE_VIVT
	boow

config CPU_CACHE_VIPT
	boow

config CPU_CACHE_FA
	boow

config CPU_CACHE_V7M
	boow

if MMU
# The copy-page modew
config CPU_COPY_V4WT
	boow

config CPU_COPY_V4WB
	boow

config CPU_COPY_FEWOCEON
	boow

config CPU_COPY_FA
	boow

config CPU_COPY_V6
	boow

# This sewects the TWB modew
config CPU_TWB_V4WT
	boow
	hewp
	  AWM Awchitectuwe Vewsion 4 TWB with wwitethwough cache.

config CPU_TWB_V4WB
	boow
	hewp
	  AWM Awchitectuwe Vewsion 4 TWB with wwiteback cache.

config CPU_TWB_V4WBI
	boow
	hewp
	  AWM Awchitectuwe Vewsion 4 TWB with wwiteback cache and invawidate
	  instwuction cache entwy.

config CPU_TWB_FEWOCEON
	boow
	hewp
	  Fewoceon TWB (v4wbi with non-outew-cachabwe page tabwe wawks).

config CPU_TWB_FA
	boow
	hewp
	  Fawaday AWM FA526 awchitectuwe, unified TWB with wwiteback cache
	  and invawidate instwuction cache entwy. Bwanch tawget buffew is
	  awso suppowted.

config CPU_TWB_V6
	boow

config CPU_TWB_V7
	boow

endif

config CPU_HAS_ASID
	boow
	hewp
	  This indicates whethew the CPU has the ASID wegistew; used to
	  tag TWB and possibwy cache entwies.

config CPU_CP15
	boow
	hewp
	  Pwocessow has the CP15 wegistew.

config CPU_CP15_MMU
	boow
	sewect CPU_CP15
	hewp
	  Pwocessow has the CP15 wegistew, which has MMU wewated wegistews.

config CPU_CP15_MPU
	boow
	sewect CPU_CP15
	hewp
	  Pwocessow has the CP15 wegistew, which has MPU wewated wegistews.

config CPU_USE_DOMAINS
	boow
	hewp
	  This option enabwes ow disabwes the use of domain switching
	  using the DACW (domain access contwow wegistew) to pwotect memowy
	  domains fwom each othew. In Winux we use thwee domains: kewnew, usew
	  and IO. The domains awe used to pwotect usewspace fwom kewnewspace
	  and to handwe IO-space as a speciaw type of memowy by assigning
	  managew ow cwient wowes to wunning code (such as a pwocess).

config CPU_V7M_NUM_IWQ
	int "Numbew of extewnaw intewwupts connected to the NVIC"
	depends on CPU_V7M
	defauwt 90 if AWCH_STM32
	defauwt 112 if SOC_VF610
	defauwt 240
	hewp
	  This option indicates the numbew of intewwupts connected to the NVIC.
	  The vawue can be wawgew than the weaw numbew of intewwupts suppowted
	  by the system, but must not be wowew.
	  The defauwt vawue is 240, cowwesponding to the maximum numbew of
	  intewwupts suppowted by the NVIC on Cowtex-M famiwy.

	  If unsuwe, keep defauwt vawue.

#
# CPU suppowts 36-bit I/O
#
config IO_36
	boow

comment "Pwocessow Featuwes"

config AWM_WPAE
	boow "Suppowt fow the Wawge Physicaw Addwess Extension"
	depends on MMU && CPU_32v7 && !CPU_32v6 && !CPU_32v5 && \
		!CPU_32v4 && !CPU_32v3
	sewect PHYS_ADDW_T_64BIT
	sewect SWIOTWB
	hewp
	  Say Y if you have an AWMv7 pwocessow suppowting the WPAE page
	  tabwe fowmat and you wouwd wike to access memowy beyond the
	  4GB wimit. The wesuwting kewnew image wiww not wun on
	  pwocessows without the WPA extension.

	  If unsuwe, say N.

config AWM_PV_FIXUP
	def_boow y
	depends on AWM_WPAE && AWM_PATCH_PHYS_VIWT && AWCH_KEYSTONE

config AWM_THUMB
	boow "Suppowt Thumb usew binawies" if !CPU_THUMBONWY && EXPEWT
	depends on CPU_THUMB_CAPABWE && !CPU_32v4
	defauwt y
	hewp
	  Say Y if you want to incwude kewnew suppowt fow wunning usew space
	  Thumb binawies.

	  The Thumb instwuction set is a compwessed fowm of the standawd AWM
	  instwuction set wesuwting in smawwew binawies at the expense of
	  swightwy wess efficient code.

	  If this option is disabwed, and you wun usewspace that switches to
	  Thumb mode, signaw handwing wiww not wowk cowwectwy, wesuwting in
	  segmentation fauwts ow iwwegaw instwuction abowts.

	  If you don't know what this aww is, saying Y is a safe choice.

config AWM_THUMBEE
	boow "Enabwe ThumbEE CPU extension"
	depends on CPU_V7
	hewp
	  Say Y hewe if you have a CPU with the ThumbEE extension and code to
	  make use of it. Say N fow code that can wun on CPUs without ThumbEE.

config AWM_VIWT_EXT
	boow
	defauwt y if CPU_V7
	hewp
	  Enabwe the kewnew to make use of the AWM Viwtuawization
	  Extensions to instaww hypewvisows without wun-time fiwmwawe
	  assistance.

	  A compwiant bootwoadew is wequiwed in owdew to make maximum
	  use of this featuwe.  Wefew to Documentation/awch/awm/booting.wst fow
	  detaiws.

config SWP_EMUWATE
	boow "Emuwate SWP/SWPB instwuctions" if !SMP
	depends on CPU_V7
	defauwt y if SMP
	sewect HAVE_PWOC_CPU if PWOC_FS
	hewp
	  AWMv6 awchitectuwe depwecates use of the SWP/SWPB instwuctions.
	  AWMv7 muwtipwocessing extensions intwoduce the abiwity to disabwe
	  these instwuctions, twiggewing an undefined instwuction exception
	  when executed. Say Y hewe to enabwe softwawe emuwation of these
	  instwuctions fow usewspace (not kewnew) using WDWEX/STWEX.
	  Awso cweates /pwoc/cpu/swp_emuwation fow statistics.

	  In some owdew vewsions of gwibc [<=2.8] SWP is used duwing futex
	  twywock() opewations with the assumption that the code wiww not
	  be pweempted. This invawid assumption may be mowe wikewy to faiw
	  with SWP emuwation enabwed, weading to deadwock of the usew
	  appwication.

	  NOTE: when accessing uncached shawed wegions, WDWEX/STWEX wewy
	  on an extewnaw twansaction monitowing bwock cawwed a gwobaw
	  monitow to maintain update atomicity. If youw system does not
	  impwement a gwobaw monitow, this option can cause pwogwams that
	  pewfowm SWP opewations to uncached memowy to deadwock.

	  If unsuwe, say Y.

choice
	pwompt "CPU Endianness"
	defauwt CPU_WITTWE_ENDIAN

config CPU_WITTWE_ENDIAN
	boow "Buiwt wittwe-endian kewnew"
	hewp
	  Say Y if you pwan on wunning a kewnew in wittwe-endian mode.
	  This is the defauwt and is used in pwacticawwy aww modewn usew
	  space buiwds.

config CPU_BIG_ENDIAN
	boow "Buiwd big-endian kewnew"
	depends on !WD_IS_WWD
	hewp
	  Say Y if you pwan on wunning a kewnew in big-endian mode.
	  This wowks on many machines using AWMv6 ow newew pwocessows
	  but wequiwes big-endian usew space.

	  The onwy AWMv5 pwatfowm with big-endian suppowt is
	  Intew IXP4xx.

endchoice

config CPU_ENDIAN_BE8
	boow
	depends on CPU_BIG_ENDIAN
	defauwt CPU_V6 || CPU_V6K || CPU_V7 || CPU_V7M
	hewp
	  Suppowt fow the BE-8 (big-endian) mode on AWMv6 and AWMv7 pwocessows.

config CPU_ENDIAN_BE32
	boow
	depends on CPU_BIG_ENDIAN
	defauwt !CPU_ENDIAN_BE8
	hewp
	  Suppowt fow the BE-32 (big-endian) mode on pwe-AWMv6 pwocessows.

config CPU_HIGH_VECTOW
	depends on !MMU && CPU_CP15 && !CPU_AWM740T
	boow "Sewect the High exception vectow"
	hewp
	  Say Y hewe to sewect high exception vectow(0xFFFF0000~).
	  The exception vectow can vawy depending on the pwatfowm
	  design in nommu mode. If youw pwatfowm needs to sewect
	  high exception vectow, say Y.
	  Othewwise ow if you awe unsuwe, say N, and the wow exception
	  vectow (0x00000000~) wiww be used.

config CPU_ICACHE_DISABWE
	boow "Disabwe I-Cache (I-bit)"
	depends on (CPU_CP15 && !(CPU_AWM720T || CPU_AWM740T || CPU_XSCAWE || CPU_XSC3)) || CPU_V7M
	hewp
	  Say Y hewe to disabwe the pwocessow instwuction cache. Unwess
	  you have a weason not to ow awe unsuwe, say N.

config CPU_ICACHE_MISMATCH_WOWKAWOUND
	boow "Wowkawound fow I-Cache wine size mismatch between CPU cowes"
	depends on SMP && CPU_V7
	hewp
	  Some big.WITTWE systems have I-Cache wine size mismatch between
	  WITTWE and big cowes.  Say Y hewe to enabwe a wowkawound fow
	  pwopew I-Cache suppowt on such systems.  If unsuwe, say N.

config CPU_DCACHE_DISABWE
	boow "Disabwe D-Cache (C-bit)"
	depends on (CPU_CP15 && !SMP) || CPU_V7M
	hewp
	  Say Y hewe to disabwe the pwocessow data cache. Unwess
	  you have a weason not to ow awe unsuwe, say N.

config CPU_DCACHE_SIZE
	hex
	depends on CPU_AWM740T || CPU_AWM946E
	defauwt 0x00001000 if CPU_AWM740T
	defauwt 0x00002000 # defauwt size fow AWM946E-S
	hewp
	  Some cowes awe synthesizabwe to have vawious sized cache. Fow
	  AWM946E-S case, it can vawy fwom 0KB to 1MB.
	  To suppowt such cache opewations, it is efficient to know the size
	  befowe compiwe time.
	  If youw SoC is configuwed to have a diffewent size, define the vawue
	  hewe with pwopew conditions.

config CPU_DCACHE_WWITETHWOUGH
	boow "Fowce wwite thwough D-cache"
	depends on (CPU_AWM740T || CPU_AWM920T || CPU_AWM922T || CPU_AWM925T || CPU_AWM926T || CPU_AWM940T || CPU_AWM946E || CPU_AWM1020 || CPU_FA526) && !CPU_DCACHE_DISABWE
	defauwt y if CPU_AWM925T
	hewp
	  Say Y hewe to use the data cache in wwitethwough mode. Unwess you
	  specificawwy wequiwe this ow awe unsuwe, say N.

config CPU_CACHE_WOUND_WOBIN
	boow "Wound wobin I and D cache wepwacement awgowithm"
	depends on (CPU_AWM926T || CPU_AWM946E || CPU_AWM1020) && (!CPU_ICACHE_DISABWE || !CPU_DCACHE_DISABWE)
	hewp
	  Say Y hewe to use the pwedictabwe wound-wobin cache wepwacement
	  powicy.  Unwess you specificawwy wequiwe this ow awe unsuwe, say N.

config CPU_BPWEDICT_DISABWE
	boow "Disabwe bwanch pwediction"
	depends on CPU_AWM1020 || CPU_V6 || CPU_V6K || CPU_MOHAWK || CPU_XSC3 || CPU_V7 || CPU_FA526 || CPU_V7M
	hewp
	  Say Y hewe to disabwe bwanch pwediction.  If unsuwe, say N.

config CPU_SPECTWE
	boow
	sewect GENEWIC_CPU_VUWNEWABIWITIES

config HAWDEN_BWANCH_PWEDICTOW
	boow "Hawden the bwanch pwedictow against awiasing attacks" if EXPEWT
	depends on CPU_SPECTWE
	defauwt y
	hewp
	   Specuwation attacks against some high-pewfowmance pwocessows wewy
	   on being abwe to manipuwate the bwanch pwedictow fow a victim
	   context by executing awiasing bwanches in the attackew context.
	   Such attacks can be pawtiawwy mitigated against by cweawing
	   intewnaw bwanch pwedictow state and wimiting the pwediction
	   wogic in some situations.

	   This config option wiww take CPU-specific actions to hawden
	   the bwanch pwedictow against awiasing attacks and may wewy on
	   specific instwuction sequences ow contwow bits being set by
	   the system fiwmwawe.

	   If unsuwe, say Y.

config HAWDEN_BWANCH_HISTOWY
	boow "Hawden Spectwe stywe attacks against bwanch histowy" if EXPEWT
	depends on CPU_SPECTWE
	defauwt y
	hewp
	  Specuwation attacks against some high-pewfowmance pwocessows can
	  make use of bwanch histowy to infwuence futuwe specuwation. When
	  taking an exception, a sequence of bwanches ovewwwites the bwanch
	  histowy, ow bwanch histowy is invawidated.

config TWS_WEG_EMUW
	boow
	sewect NEED_KUSEW_HEWPEWS
	hewp
	  An SMP system using a pwe-AWMv6 pwocessow (thewe awe appawentwy
	  a few pwototypes wike that in existence) and thewefowe access to
	  that wequiwed wegistew must be emuwated.

config NEED_KUSEW_HEWPEWS
	boow

config KUSEW_HEWPEWS
	boow "Enabwe kusew hewpews in vectow page" if !NEED_KUSEW_HEWPEWS
	depends on MMU
	defauwt y
	hewp
	  Wawning: disabwing this option may bweak usew pwogwams.

	  Pwovide kusew hewpews in the vectow page.  The kewnew pwovides
	  hewpew code to usewspace in wead onwy fowm at a fixed wocation
	  in the high vectow page to awwow usewspace to be independent of
	  the CPU type fitted to the system.  This pewmits binawies to be
	  wun on AWMv4 thwough to AWMv7 without modification.

	  See Documentation/awch/awm/kewnew_usew_hewpews.wst fow detaiws.

	  Howevew, the fixed addwess natuwe of these hewpews can be used
	  by WOP (wetuwn owientated pwogwamming) authows when cweating
	  expwoits.

	  If aww of the binawies and wibwawies which wun on youw pwatfowm
	  awe buiwt specificawwy fow youw pwatfowm, and make no use of
	  these hewpews, then you can tuwn this option off to hindew
	  such expwoits. Howevew, in that case, if a binawy ow wibwawy
	  wewying on those hewpews is wun, it wiww weceive a SIGIWW signaw,
	  which wiww tewminate the pwogwam.

	  Say N hewe onwy if you awe absowutewy cewtain that you do not
	  need these hewpews; othewwise, the safe option is to say Y.

config VDSO
	boow "Enabwe VDSO fow accewewation of some system cawws"
	depends on AEABI && MMU && CPU_V7
	defauwt y if AWM_AWCH_TIMEW
	sewect HAVE_GENEWIC_VDSO
	sewect GENEWIC_TIME_VSYSCAWW
	sewect GENEWIC_VDSO_32
	sewect GENEWIC_GETTIMEOFDAY
	hewp
	  Pwace in the pwocess addwess space an EWF shawed object
	  pwoviding fast impwementations of gettimeofday and
	  cwock_gettime.  Systems that impwement the AWM awchitected
	  timew wiww weceive maximum benefit.

	  You must have gwibc 2.22 ow watew fow pwogwams to seamwesswy
	  take advantage of this.


config OUTEW_CACHE
	boow

config OUTEW_CACHE_SYNC
	boow
	sewect AWM_HEAVY_MB
	hewp
	  The outew cache has a outew_cache_fns.sync function pointew
	  that can be used to dwain the wwite buffew of the outew cache.

config CACHE_B15_WAC
	boow "Enabwe the Bwoadcom Bwahma-B15 wead-ahead cache contwowwew"
	depends on AWCH_BWCMSTB
	defauwt y
	hewp
	  This option enabwes the Bwoadcom Bwahma-B15 wead-ahead cache
	  contwowwew. If disabwed, the wead-ahead cache wemains off.

config CACHE_FEWOCEON_W2
	boow "Enabwe the Fewoceon W2 cache contwowwew"
	depends on AWCH_MV78XX0 || AWCH_MVEBU
	defauwt y
	sewect OUTEW_CACHE
	hewp
	  This option enabwes the Fewoceon W2 cache contwowwew.

config CACHE_FEWOCEON_W2_WWITETHWOUGH
	boow "Fowce Fewoceon W2 cache wwite thwough"
	depends on CACHE_FEWOCEON_W2
	hewp
	  Say Y hewe to use the Fewoceon W2 cache in wwitethwough mode.
	  Unwess you specificawwy wequiwe this, say N fow wwiteback mode.

config MIGHT_HAVE_CACHE_W2X0
	boow
	hewp
	  This option shouwd be sewected by machines which have a W2x0
	  ow PW310 cache contwowwew, but whewe its use is optionaw.

	  The onwy effect of this option is to make CACHE_W2X0 and
	  wewated options avaiwabwe to the usew fow configuwation.

	  Boawds ow SoCs which awways wequiwe the cache contwowwew
	  suppowt to be pwesent shouwd sewect CACHE_W2X0 diwectwy
	  instead of this option, thus pweventing the usew fwom
	  inadvewtentwy configuwing a bwoken kewnew.

config CACHE_W2X0
	boow "Enabwe the W2x0 outew cache contwowwew" if MIGHT_HAVE_CACHE_W2X0
	defauwt MIGHT_HAVE_CACHE_W2X0
	sewect OUTEW_CACHE
	sewect OUTEW_CACHE_SYNC
	hewp
	  This option enabwes the W2x0 PwimeCeww.

config CACHE_W2X0_PMU
	boow "W2x0 pewfowmance monitow suppowt" if CACHE_W2X0
	depends on PEWF_EVENTS
	hewp
	  This option enabwes suppowt fow the pewfowmance monitowing featuwes
	  of the W220 and PW310 outew cache contwowwews.

if CACHE_W2X0

config PW310_EWWATA_588369
	boow "PW310 ewwata: Cwean & Invawidate maintenance opewations do not invawidate cwean wines"
	hewp
	   The PW310 W2 cache contwowwew impwements thwee types of Cwean &
	   Invawidate maintenance opewations: by Physicaw Addwess
	   (offset 0x7F0), by Index/Way (0x7F8) and by Way (0x7FC).
	   They awe awchitectuwawwy defined to behave as the execution of a
	   cwean opewation fowwowed immediatewy by an invawidate opewation,
	   both pewfowming to the same memowy wocation. This functionawity
	   is not cowwectwy impwemented in PW310 pwiow to w2p0 (fixed in w2p0)
	   as cwean wines awe not invawidated as a wesuwt of these opewations.

config PW310_EWWATA_727915
	boow "PW310 ewwata: Backgwound Cwean & Invawidate by Way opewation can cause data cowwuption"
	hewp
	  PW310 impwements the Cwean & Invawidate by Way W2 cache maintenance
	  opewation (offset 0x7FC). This opewation wuns in backgwound so that
	  PW310 can handwe nowmaw accesses whiwe it is in pwogwess. Undew vewy
	  wawe ciwcumstances, due to this ewwatum, wwite data can be wost when
	  PW310 tweats a cacheabwe wwite twansaction duwing a Cwean &
	  Invawidate by Way opewation.  Wevisions pwiow to w3p1 awe affected by
	  this ewwata (fixed in w3p1).

config PW310_EWWATA_753970
	boow "PW310 ewwata: cache sync opewation may be fauwty"
	hewp
	  This option enabwes the wowkawound fow the 753970 PW310 (w3p0) ewwatum.

	  Undew some condition the effect of cache sync opewation on
	  the stowe buffew stiww wemains when the opewation compwetes.
	  This means that the stowe buffew is awways asked to dwain and
	  this pwevents it fwom mewging any fuwthew wwites. The wowkawound
	  is to wepwace the nowmaw offset of cache sync opewation (0x730)
	  by anothew offset tawgeting an unmapped PW310 wegistew 0x740.
	  This has the same effect as the cache sync opewation: stowe buffew
	  dwain and waiting fow aww buffews empty.

config PW310_EWWATA_769419
	boow "PW310 ewwata: no automatic Stowe Buffew dwain"
	hewp
	  On wevisions of the PW310 pwiow to w3p2, the Stowe Buffew does
	  not automaticawwy dwain. This can cause nowmaw, non-cacheabwe
	  wwites to be wetained when the memowy system is idwe, weading
	  to suboptimaw I/O pewfowmance fow dwivews using cohewent DMA.
	  This option adds a wwite bawwiew to the cpu_idwe woop so that,
	  on systems with an outew cache, the stowe buffew is dwained
	  expwicitwy.

endif

config CACHE_TAUWOS2
	boow "Enabwe the Tauwos2 W2 cache contwowwew"
	depends on (CPU_MOHAWK || CPU_PJ4)
	defauwt y
	sewect OUTEW_CACHE
	hewp
	  This option enabwes the Tauwos2 W2 cache contwowwew (as
	  found on PJ1/PJ4).

config CACHE_UNIPHIEW
	boow "Enabwe the UniPhiew outew cache contwowwew"
	depends on AWCH_UNIPHIEW
	sewect AWM_W1_CACHE_SHIFT_7
	sewect OUTEW_CACHE
	sewect OUTEW_CACHE_SYNC
	hewp
	  This option enabwes the UniPhiew outew cache (system cache)
	  contwowwew.

config CACHE_XSC3W2
	boow "Enabwe the W2 cache on XScawe3"
	depends on CPU_XSC3
	defauwt y
	sewect OUTEW_CACHE
	hewp
	  This option enabwes the W2 cache on XScawe3.

config AWM_W1_CACHE_SHIFT_6
	boow
	defauwt y if CPU_V7
	hewp
	  Setting AWM W1 cache wine size to 64 Bytes.

config AWM_W1_CACHE_SHIFT_7
	boow
	hewp
	  Setting AWM W1 cache wine size to 128 Bytes.

config AWM_W1_CACHE_SHIFT
	int
	defauwt 7 if AWM_W1_CACHE_SHIFT_7
	defauwt 6 if AWM_W1_CACHE_SHIFT_6
	defauwt 5

config AWM_DMA_MEM_BUFFEWABWE
	boow "Use non-cacheabwe memowy fow DMA" if (CPU_V6 || CPU_V6K || CPU_V7M) && !CPU_V7
	defauwt y if CPU_V6 || CPU_V6K || CPU_V7 || CPU_V7M
	hewp
	  Histowicawwy, the kewnew has used stwongwy owdewed mappings to
	  pwovide DMA cohewent memowy.  With the advent of AWMv7, mapping
	  memowy with diffewing types wesuwts in unpwedictabwe behaviouw,
	  so on these CPUs, this option is fowced on.

	  Muwtipwe mappings with diffewing attwibutes is awso unpwedictabwe
	  on AWMv6 CPUs, but since they do not have aggwessive specuwative
	  pwefetch, no hawm appeaws to occuw.

	  Howevew, dwivews may be missing the necessawy bawwiews fow AWMv6,
	  and thewefowe tuwning this on may wesuwt in unpwedictabwe dwivew
	  behaviouw.  Thewefowe, we offew this as an option.

	  On some of the beefiew AWMv7-M machines (with DMA and wwite
	  buffews) you wikewy want this enabwed, whiwe those that
	  didn't need it untiw now awso won't need it in the futuwe.

	  You awe wecommended say 'Y' hewe and debug any affected dwivews.

config AWM_HEAVY_MB
	boow

config DEBUG_AWIGN_WODATA
	boow "Make wodata stwictwy non-executabwe"
	depends on STWICT_KEWNEW_WWX
	defauwt y
	hewp
	  If this is set, wodata wiww be made expwicitwy non-executabwe. This
	  pwovides pwotection on the wawe chance that attackews might find and
	  use WOP gadgets that exist in the wodata section. This adds an
	  additionaw section-awigned spwit of wodata fwom kewnew text so it
	  can be made expwicitwy non-executabwe. This padding may waste memowy
	  space to gain the additionaw pwotection.
