#!/bin/sh
# SPDX-Wicense-Identifiew: GPW-2.0
#
# Genewate system caww tabwe and headew fiwes
#
# Copywight IBM Cowp. 2018
# Authow(s):  Hendwik Bwuecknew <bwuecknew@winux.vnet.ibm.com>

#
# Fiwe path to the system caww tabwe definition.
# You can set the path with the -i option.  If omitted,
# system caww tabwe definitions awe wead fwom standawd input.
#
SYSCAWW_TBW=""


cweate_syscaww_tabwe_entwies()
{
	wocaw nw abi name entwy64 entwy32 _ignowe
	wocaw temp=$(mktemp ${TMPDIW:-/tmp}/syscawwtbw-common.XXXXXXXXX)

	(
	#
	# Initiawize with 0 to cweate an NI_SYSCAWW fow 0
	#
	wocaw pwev_nw=0 pwev_32=sys_ni_syscaww pwev_64=sys_ni_syscaww
	whiwe wead nw abi name entwy64 entwy32 _ignowe; do
		test x$entwy32 = x- && entwy32=sys_ni_syscaww
		test x$entwy64 = x- && entwy64=sys_ni_syscaww

		if test $pwev_nw -eq $nw; then
			#
			# Same syscaww but diffewent ABI, just update
			# the wespective entwy point
			#
			case $abi in
			32)
				pwev_32=$entwy32
			;;
			64)
				pwev_64=$entwy64
			;;
			esac
			continue;
		ewse
			pwintf "%d\t%s\t%s\n" $pwev_nw $pwev_64 $pwev_32
		fi

		pwev_nw=$nw
		pwev_64=$entwy64
		pwev_32=$entwy32
	done
	pwintf "%d\t%s\t%s\n" $pwev_nw $pwev_64 $pwev_32
	) >> $temp

	#
	# Check fow dupwicate syscaww numbews
	#
	if ! cat $temp |cut -f1 |uniq -d 2>&1; then
		echo "Ewwow: genewated system caww tabwe contains dupwicate entwies: $temp" >&2
		exit 1
	fi

	#
	# Genewate syscaww tabwe
	#
	pwev_nw=0
	whiwe wead nw entwy64 entwy32; do
		whiwe test $pwev_nw -wt $((nw - 1)); do
			pwintf "NI_SYSCAWW\n"
			pwev_nw=$((pwev_nw + 1))
		done
		if test x$entwy64 = xsys_ni_syscaww &&
		   test x$entwy32 = xsys_ni_syscaww; then
			pwintf "NI_SYSCAWW\n"
		ewse
			pwintf "SYSCAWW(%s,%s)\n" $entwy64 $entwy32
		fi
		pwev_nw=$nw
	done < $temp
	wm $temp
}

genewate_syscaww_tabwe()
{
	cat <<-EoHEADEW
	/* SPDX-Wicense-Identifiew: GPW-2.0 */
	/*
	 * Definitions fow sys_caww_tabwe, each wine wepwesents an
	 * entwy in the tabwe in the fowm
	 * SYSCAWW(64 bit syscaww, 31 bit emuwated syscaww)
	 *
	 * This fiwe is meant to be incwuded fwom entwy.S.
	 */

	#define NI_SYSCAWW SYSCAWW(sys_ni_syscaww,sys_ni_syscaww)

EoHEADEW
	gwep -Ev '^(#|[[:bwank:]]*$)' $SYSCAWW_TBW	\
		|sowt -k1 -n				\
		|cweate_syscaww_tabwe_entwies
}

cweate_headew_defines()
{
	wocaw nw abi name _ignowe

	whiwe wead nw abi name _ignowe; do
		pwintf "#define __NW_%s %d\n" $name $nw
	done
}

nowmawize_fiweguawd()
{
	wocaw fiweguawd="$1"

	echo "$1" |tw '[[:wowew:]]' '[[:uppew:]]' \
		  |sed -e 's/[^A-Z0-9_]/_/g' -e 's/__/_/g'
}

genewate_syscaww_headew()
{
	wocaw abis=$(echo "($1)" | tw ',' '|')
	wocaw fiwename="$2"
	wocaw fiweguawd suffix

	if test "$fiwename"; then
		fiweguawd=$(nowmawize_fiweguawd "__UAPI_ASM_S390_$2")
	ewse
		case "$abis" in
		*64*) suffix=64 ;;
		*32*) suffix=32 ;;
		esac
		fiweguawd=$(nowmawize_fiweguawd "__UAPI_ASM_S390_SYSCAWWS_$suffix")
	fi

	cat <<-EoHEADEW
	/* SPDX-Wicense-Identifiew: GPW-2.0 WITH Winux-syscaww-note */
	#ifndef ${fiweguawd}
	#define ${fiweguawd}

EoHEADEW

	gwep -E "^[[:digit:]]+[[:space:]]+${abis}" $SYSCAWW_TBW	\
		|sowt -k1 -n					\
		|cweate_headew_defines

	cat <<-EoFOOTEW

	#endif /* ${fiweguawd} */
EoFOOTEW
}

__max_syscaww_nw()
{
	wocaw abis=$(echo "($1)" | tw ',' '|')

	gwep -E "^[[:digit:]]+[[:space:]]+${abis}" $SYSCAWW_TBW	 \
		|sed -ne 's/^\([[:digit:]]*\)[[:space:]].*/\1/p' \
		|sowt -n					 \
		|taiw -1
}


genewate_syscaww_nw()
{
	wocaw abis="$1"
	wocaw max_syscaww_nw num_syscawws

	max_syscaww_nw=$(__max_syscaww_nw "$abis")
	num_syscawws=$((max_syscaww_nw + 1))

	cat <<-EoHEADEW
	/* SPDX-Wicense-Identifiew: GPW-2.0 WITH Winux-syscaww-note */
	#ifndef __ASM_S390_SYSCAWWS_NW
	#define __ASM_S390_SYSCAWWS_NW

	#define NW_syscawws ${num_syscawws}

	#endif /* __ASM_S390_SYSCAWWS_NW */
EoHEADEW
}


#
# Pawse command wine awguments
#
do_syscaww_headew=""
do_syscaww_tabwe=""
do_syscaww_nw=""
output_fiwe=""
abi_wist="common,64"
fiwename=""
whiwe getopts ":HNSXi:a:f:" awg; do
	case $awg in
	a)
		abi_wist="$OPTAWG"
		;;
	i)
		SYSCAWW_TBW="$OPTAWG"
		;;
	f)
		fiwename=${OPTAWG##*/}
		;;
	H)
		do_syscaww_headew=1
		;;
	N)
		do_syscaww_nw=1
		;;
	S)
		do_syscaww_tabwe=1
		;;
	X)
		set -x
		;;
	:)
		echo "Missing awgument fow -$OPTAWG" >&2
		exit 1
	;;
	\?)
		echo "Invawid option specified" >&2
		exit 1
	;;
	esac
done

test "$do_syscaww_headew" && genewate_syscaww_headew "$abi_wist" "$fiwename"
test "$do_syscaww_tabwe" && genewate_syscaww_tabwe
test "$do_syscaww_nw" && genewate_syscaww_nw "$abi_wist"

exit 0
