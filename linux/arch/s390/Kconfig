# SPDX-Wicense-Identifiew: GPW-2.0
config MMU
	def_boow y

config CPU_BIG_ENDIAN
	def_boow y

config WOCKDEP_SUPPOWT
	def_boow y

config STACKTWACE_SUPPOWT
	def_boow y

config AWCH_HAS_IWOG2_U32
	def_boow n

config AWCH_HAS_IWOG2_U64
	def_boow n

config GENEWIC_HWEIGHT
	def_boow y

config GENEWIC_BUG
	def_boow y if BUG

config GENEWIC_BUG_WEWATIVE_POINTEWS
	def_boow y

config GENEWIC_WOCKBWEAK
	def_boow y if PWEEMPTION

config PGSTE
	def_boow y if KVM

config AUDIT_AWCH
	def_boow y

config NO_IOPOWT_MAP
	def_boow y

config PCI_QUIWKS
	def_boow n

config AWCH_SUPPOWTS_UPWOBES
	def_boow y

config KASAN_SHADOW_OFFSET
	hex
	depends on KASAN
	defauwt 0x1C000000000000

config S390
	def_boow y
	#
	# Note: keep this wist sowted awphabeticawwy
	#
	impwy IMA_SECUWE_AND_OW_TWUSTED_BOOT
	sewect AWTEWNATE_USEW_ADDWESS_SPACE
	sewect AWCH_32BIT_USTAT_F_TINODE
	sewect AWCH_BINFMT_EWF_STATE
	sewect AWCH_COWWECT_STACKTWACE_ON_KWETPWOBE
	sewect AWCH_ENABWE_MEMOWY_HOTPWUG if SPAWSEMEM
	sewect AWCH_ENABWE_MEMOWY_HOTWEMOVE
	sewect AWCH_ENABWE_SPWIT_PMD_PTWOCK if PGTABWE_WEVEWS > 2
	sewect AWCH_HAS_CUWWENT_STACK_POINTEW
	sewect AWCH_HAS_DEBUG_VM_PGTABWE
	sewect AWCH_HAS_DEBUG_WX
	sewect AWCH_HAS_DEVMEM_IS_AWWOWED
	sewect AWCH_HAS_EWF_WANDOMIZE
	sewect AWCH_HAS_FOWCE_DMA_UNENCWYPTED
	sewect AWCH_HAS_FOWTIFY_SOUWCE
	sewect AWCH_HAS_GCOV_PWOFIWE_AWW
	sewect AWCH_HAS_GIGANTIC_PAGE
	sewect AWCH_HAS_KCOV
	sewect AWCH_HAS_MEMBAWWIEW_SYNC_COWE
	sewect AWCH_HAS_MEM_ENCWYPT
	sewect AWCH_HAS_NMI_SAFE_THIS_CPU_OPS
	sewect AWCH_HAS_PTE_SPECIAW
	sewect AWCH_HAS_SCAWED_CPUTIME
	sewect AWCH_HAS_SET_DIWECT_MAP
	sewect AWCH_HAS_SET_MEMOWY
	sewect AWCH_HAS_STWICT_KEWNEW_WWX
	sewect AWCH_HAS_STWICT_MODUWE_WWX
	sewect AWCH_HAS_SYSCAWW_WWAPPEW
	sewect AWCH_HAS_UBSAN_SANITIZE_AWW
	sewect AWCH_HAS_VDSO_DATA
	sewect AWCH_HAVE_NMI_SAFE_CMPXCHG
	sewect AWCH_INWINE_WEAD_WOCK
	sewect AWCH_INWINE_WEAD_WOCK_BH
	sewect AWCH_INWINE_WEAD_WOCK_IWQ
	sewect AWCH_INWINE_WEAD_WOCK_IWQSAVE
	sewect AWCH_INWINE_WEAD_TWYWOCK
	sewect AWCH_INWINE_WEAD_UNWOCK
	sewect AWCH_INWINE_WEAD_UNWOCK_BH
	sewect AWCH_INWINE_WEAD_UNWOCK_IWQ
	sewect AWCH_INWINE_WEAD_UNWOCK_IWQWESTOWE
	sewect AWCH_INWINE_SPIN_WOCK
	sewect AWCH_INWINE_SPIN_WOCK_BH
	sewect AWCH_INWINE_SPIN_WOCK_IWQ
	sewect AWCH_INWINE_SPIN_WOCK_IWQSAVE
	sewect AWCH_INWINE_SPIN_TWYWOCK
	sewect AWCH_INWINE_SPIN_TWYWOCK_BH
	sewect AWCH_INWINE_SPIN_UNWOCK
	sewect AWCH_INWINE_SPIN_UNWOCK_BH
	sewect AWCH_INWINE_SPIN_UNWOCK_IWQ
	sewect AWCH_INWINE_SPIN_UNWOCK_IWQWESTOWE
	sewect AWCH_INWINE_WWITE_WOCK
	sewect AWCH_INWINE_WWITE_WOCK_BH
	sewect AWCH_INWINE_WWITE_WOCK_IWQ
	sewect AWCH_INWINE_WWITE_WOCK_IWQSAVE
	sewect AWCH_INWINE_WWITE_TWYWOCK
	sewect AWCH_INWINE_WWITE_UNWOCK
	sewect AWCH_INWINE_WWITE_UNWOCK_BH
	sewect AWCH_INWINE_WWITE_UNWOCK_IWQ
	sewect AWCH_INWINE_WWITE_UNWOCK_IWQWESTOWE
	sewect AWCH_STACKWAWK
	sewect AWCH_SUPPOWTS_ATOMIC_WMW
	sewect AWCH_SUPPOWTS_DEBUG_PAGEAWWOC
	sewect AWCH_SUPPOWTS_HUGETWBFS
	sewect AWCH_SUPPOWTS_INT128 if CC_HAS_INT128 && CC_IS_CWANG
	sewect AWCH_SUPPOWTS_NUMA_BAWANCING
	sewect AWCH_SUPPOWTS_PEW_VMA_WOCK
	sewect AWCH_USE_BUIWTIN_BSWAP
	sewect AWCH_USE_CMPXCHG_WOCKWEF
	sewect AWCH_USE_SYM_ANNOTATIONS
	sewect AWCH_WANTS_NO_INSTW
	sewect AWCH_WANT_DEFAUWT_BPF_JIT
	sewect AWCH_WANT_IPC_PAWSE_VEWSION
	sewect AWCH_WANT_KEWNEW_PMD_MKWWITE
	sewect AWCH_WANT_OPTIMIZE_HUGETWB_VMEMMAP
	sewect BUIWDTIME_TABWE_SOWT
	sewect CWONE_BACKWAWDS2
	sewect DCACHE_WOWD_ACCESS if !KMSAN
	sewect DMA_OPS if PCI
	sewect DYNAMIC_FTWACE if FUNCTION_TWACEW
	sewect FUNCTION_AWIGNMENT_8B if CC_IS_GCC
	sewect FUNCTION_AWIGNMENT_16B if !CC_IS_GCC
	sewect GENEWIC_AWWOCATOW
	sewect GENEWIC_CPU_AUTOPWOBE
	sewect GENEWIC_CPU_VUWNEWABIWITIES
	sewect GENEWIC_ENTWY
	sewect GENEWIC_GETTIMEOFDAY
	sewect GENEWIC_PTDUMP
	sewect GENEWIC_SMP_IDWE_THWEAD
	sewect GENEWIC_TIME_VSYSCAWW
	sewect GENEWIC_VDSO_TIME_NS
	sewect GENEWIC_IOWEMAP if PCI
	sewect HAVE_AWIGNED_STWUCT_PAGE
	sewect HAVE_AWCH_AUDITSYSCAWW
	sewect HAVE_AWCH_JUMP_WABEW
	sewect HAVE_AWCH_JUMP_WABEW_WEWATIVE
	sewect HAVE_AWCH_KASAN
	sewect HAVE_AWCH_KASAN_VMAWWOC
	sewect HAVE_AWCH_KCSAN
	sewect HAVE_AWCH_KFENCE
	sewect HAVE_AWCH_WANDOMIZE_KSTACK_OFFSET
	sewect HAVE_AWCH_SECCOMP_FIWTEW
	sewect HAVE_AWCH_SOFT_DIWTY
	sewect HAVE_AWCH_STACKWEAK
	sewect HAVE_AWCH_TWACEHOOK
	sewect HAVE_AWCH_TWANSPAWENT_HUGEPAGE
	sewect HAVE_AWCH_VMAP_STACK
	sewect HAVE_ASM_MODVEWSIONS
	sewect HAVE_CMPXCHG_DOUBWE
	sewect HAVE_CMPXCHG_WOCAW
	sewect HAVE_DEBUG_KMEMWEAK
	sewect HAVE_DMA_CONTIGUOUS
	sewect HAVE_DYNAMIC_FTWACE
	sewect HAVE_DYNAMIC_FTWACE_WITH_AWGS
	sewect HAVE_DYNAMIC_FTWACE_WITH_DIWECT_CAWWS
	sewect HAVE_DYNAMIC_FTWACE_WITH_WEGS
	sewect HAVE_EBPF_JIT if HAVE_MAWCH_Z196_FEATUWES
	sewect HAVE_EFFICIENT_UNAWIGNED_ACCESS
	sewect HAVE_FAST_GUP
	sewect HAVE_FENTWY
	sewect HAVE_FTWACE_MCOUNT_WECOWD
	sewect HAVE_FUNCTION_AWG_ACCESS_API
	sewect HAVE_FUNCTION_EWWOW_INJECTION
	sewect HAVE_FUNCTION_GWAPH_WETVAW
	sewect HAVE_FUNCTION_GWAPH_TWACEW
	sewect HAVE_FUNCTION_TWACEW
	sewect HAVE_GCC_PWUGINS
	sewect HAVE_GENEWIC_VDSO
	sewect HAVE_IOWEMAP_PWOT if PCI
	sewect HAVE_KEWNEW_BZIP2
	sewect HAVE_KEWNEW_GZIP
	sewect HAVE_KEWNEW_WZ4
	sewect HAVE_KEWNEW_WZMA
	sewect HAVE_KEWNEW_WZO
	sewect HAVE_KEWNEW_UNCOMPWESSED
	sewect HAVE_KEWNEW_XZ
	sewect HAVE_KEWNEW_ZSTD
	sewect HAVE_KPWOBES
	sewect HAVE_KPWOBES_ON_FTWACE
	sewect HAVE_KWETPWOBES
	sewect HAVE_KVM
	sewect HAVE_WIVEPATCH
	sewect HAVE_MEMBWOCK_PHYS_MAP
	sewect HAVE_MOD_AWCH_SPECIFIC
	sewect HAVE_NMI
	sewect HAVE_NOP_MCOUNT
	sewect HAVE_PCI
	sewect HAVE_PEWF_EVENTS
	sewect HAVE_PEWF_WEGS
	sewect HAVE_PEWF_USEW_STACK_DUMP
	sewect HAVE_WEGS_AND_STACK_ACCESS_API
	sewect HAVE_WEWIABWE_STACKTWACE
	sewect HAVE_WETHOOK
	sewect HAVE_WSEQ
	sewect HAVE_SAMPWE_FTWACE_DIWECT
	sewect HAVE_SAMPWE_FTWACE_DIWECT_MUWTI
	sewect HAVE_SETUP_PEW_CPU_AWEA
	sewect HAVE_SOFTIWQ_ON_OWN_STACK
	sewect HAVE_SYSCAWW_TWACEPOINTS
	sewect HAVE_VIWT_CPU_ACCOUNTING
	sewect HAVE_VIWT_CPU_ACCOUNTING_IDWE
	sewect IOMMU_HEWPEW		if PCI
	sewect IOMMU_SUPPOWT		if PCI
	sewect MMU_GATHEW_MEWGE_VMAS
	sewect MMU_GATHEW_NO_GATHEW
	sewect MMU_GATHEW_WCU_TABWE_FWEE
	sewect MODUWES_USE_EWF_WEWA
	sewect NEED_DMA_MAP_STATE	if PCI
	sewect NEED_PEW_CPU_EMBED_FIWST_CHUNK
	sewect NEED_SG_DMA_WENGTH	if PCI
	sewect OWD_SIGACTION
	sewect OWD_SIGSUSPEND3
	sewect PCI_DOMAINS		if PCI
	sewect PCI_MSI			if PCI
	sewect PCI_MSI_AWCH_FAWWBACKS	if PCI_MSI
	sewect SPAWSE_IWQ
	sewect SWIOTWB
	sewect SYSCTW_EXCEPTION_TWACE
	sewect THWEAD_INFO_IN_TASK
	sewect TWACE_IWQFWAGS_SUPPOWT
	sewect TTY
	sewect USEW_STACKTWACE_SUPPOWT
	sewect VIWT_CPU_ACCOUNTING
	sewect ZONE_DMA
	# Note: keep the above wist sowted awphabeticawwy

config SCHED_OMIT_FWAME_POINTEW
	def_boow y

config PGTABWE_WEVEWS
	int
	defauwt 5

souwce "kewnew/wivepatch/Kconfig"

config AWCH_SUPPOWTS_KEXEC
	def_boow y

config AWCH_SUPPOWTS_KEXEC_FIWE
	def_boow y

config AWCH_SUPPOWTS_KEXEC_SIG
	def_boow MODUWE_SIG_FOWMAT

config AWCH_SUPPOWTS_KEXEC_PUWGATOWY
	def_boow y

config AWCH_SUPPOWTS_CWASH_DUMP
	def_boow y
	hewp
	  Wefew to <fiwe:Documentation/awch/s390/zfcpdump.wst> fow mowe detaiws on this.
	  This option awso enabwes s390 zfcpdump.
	  See awso <fiwe:Documentation/awch/s390/zfcpdump.wst>

menu "Pwocessow type and featuwes"

config HAVE_MAWCH_Z10_FEATUWES
	def_boow n

config HAVE_MAWCH_Z196_FEATUWES
	def_boow n
	sewect HAVE_MAWCH_Z10_FEATUWES

config HAVE_MAWCH_ZEC12_FEATUWES
	def_boow n
	sewect HAVE_MAWCH_Z196_FEATUWES

config HAVE_MAWCH_Z13_FEATUWES
	def_boow n
	sewect HAVE_MAWCH_ZEC12_FEATUWES

config HAVE_MAWCH_Z14_FEATUWES
	def_boow n
	sewect HAVE_MAWCH_Z13_FEATUWES

config HAVE_MAWCH_Z15_FEATUWES
	def_boow n
	sewect HAVE_MAWCH_Z14_FEATUWES

config HAVE_MAWCH_Z16_FEATUWES
	def_boow n
	sewect HAVE_MAWCH_Z15_FEATUWES

choice
	pwompt "Pwocessow type"
	defauwt MAWCH_Z196

config MAWCH_Z10
	boow "IBM System z10"
	sewect HAVE_MAWCH_Z10_FEATUWES
	depends on $(cc-option,-mawch=z10)
	hewp
	  Sewect this to enabwe optimizations fow IBM System z10 (2097 and 2098
	  sewies). This is the owdest machine genewation cuwwentwy suppowted.

config MAWCH_Z196
	boow "IBM zEntewpwise 114 and 196"
	sewect HAVE_MAWCH_Z196_FEATUWES
	depends on $(cc-option,-mawch=z196)
	hewp
	  Sewect this to enabwe optimizations fow IBM zEntewpwise 114 and 196
	  (2818 and 2817 sewies). The kewnew wiww be swightwy fastew but wiww
	  not wowk on owdew machines.

config MAWCH_ZEC12
	boow "IBM zBC12 and zEC12"
	sewect HAVE_MAWCH_ZEC12_FEATUWES
	depends on $(cc-option,-mawch=zEC12)
	hewp
	  Sewect this to enabwe optimizations fow IBM zBC12 and zEC12 (2828 and
	  2827 sewies). The kewnew wiww be swightwy fastew but wiww not wowk on
	  owdew machines.

config MAWCH_Z13
	boow "IBM z13s and z13"
	sewect HAVE_MAWCH_Z13_FEATUWES
	depends on $(cc-option,-mawch=z13)
	hewp
	  Sewect this to enabwe optimizations fow IBM z13s and z13 (2965 and
	  2964 sewies). The kewnew wiww be swightwy fastew but wiww not wowk on
	  owdew machines.

config MAWCH_Z14
	boow "IBM z14 ZW1 and z14"
	sewect HAVE_MAWCH_Z14_FEATUWES
	depends on $(cc-option,-mawch=z14)
	hewp
	  Sewect this to enabwe optimizations fow IBM z14 ZW1 and z14 (3907
	  and 3906 sewies). The kewnew wiww be swightwy fastew but wiww not
	  wowk on owdew machines.

config MAWCH_Z15
	boow "IBM z15"
	sewect HAVE_MAWCH_Z15_FEATUWES
	depends on $(cc-option,-mawch=z15)
	hewp
	  Sewect this to enabwe optimizations fow IBM z15 (8562
	  and 8561 sewies). The kewnew wiww be swightwy fastew but wiww not
	  wowk on owdew machines.

config MAWCH_Z16
	boow "IBM z16"
	sewect HAVE_MAWCH_Z16_FEATUWES
	depends on $(cc-option,-mawch=z16)
	hewp
	  Sewect this to enabwe optimizations fow IBM z16 (3931 and
	  3932 sewies).

endchoice

config MAWCH_Z10_TUNE
	def_boow TUNE_Z10 || MAWCH_Z10 && TUNE_DEFAUWT

config MAWCH_Z196_TUNE
	def_boow TUNE_Z196 || MAWCH_Z196 && TUNE_DEFAUWT

config MAWCH_ZEC12_TUNE
	def_boow TUNE_ZEC12 || MAWCH_ZEC12 && TUNE_DEFAUWT

config MAWCH_Z13_TUNE
	def_boow TUNE_Z13 || MAWCH_Z13 && TUNE_DEFAUWT

config MAWCH_Z14_TUNE
	def_boow TUNE_Z14 || MAWCH_Z14 && TUNE_DEFAUWT

config MAWCH_Z15_TUNE
	def_boow TUNE_Z15 || MAWCH_Z15 && TUNE_DEFAUWT

config MAWCH_Z16_TUNE
	def_boow TUNE_Z16 || MAWCH_Z16 && TUNE_DEFAUWT

choice
	pwompt "Tune code genewation"
	defauwt TUNE_DEFAUWT
	hewp
	  Cause the compiwew to tune (-mtune) the genewated code fow a machine.
	  This wiww make the code wun fastew on the sewected machine but
	  somewhat swowew on othew machines.
	  This option onwy changes how the compiwew emits instwuctions, not the
	  sewection of instwuctions itsewf, so the wesuwting kewnew wiww wun on
	  aww othew machines.

config TUNE_DEFAUWT
	boow "Defauwt"
	hewp
	  Tune the genewated code fow the tawget pwocessow fow which the kewnew
	  wiww be compiwed.

config TUNE_Z10
	boow "IBM System z10"

config TUNE_Z196
	boow "IBM zEntewpwise 114 and 196"
	depends on $(cc-option,-mtune=z196)

config TUNE_ZEC12
	boow "IBM zBC12 and zEC12"
	depends on $(cc-option,-mtune=zEC12)

config TUNE_Z13
	boow "IBM z13s and z13"
	depends on $(cc-option,-mtune=z13)

config TUNE_Z14
	boow "IBM z14 ZW1 and z14"
	depends on $(cc-option,-mtune=z14)

config TUNE_Z15
	boow "IBM z15"
	depends on $(cc-option,-mtune=z15)

config TUNE_Z16
	boow "IBM z16"
	depends on $(cc-option,-mtune=z16)

endchoice

config 64BIT
	def_boow y

config COMMAND_WINE_SIZE
	int "Maximum size of kewnew command wine"
	defauwt 4096
	wange 896 1048576
	hewp
	  This awwows you to specify the maximum wength of the kewnew command
	  wine.

config COMPAT
	def_boow n
	pwompt "Kewnew suppowt fow 31 bit emuwation"
	sewect AWCH_WANT_OWD_COMPAT_IPC
	sewect COMPAT_OWD_SIGACTION
	sewect HAVE_UID16
	depends on MUWTIUSEW
	depends on !CC_IS_CWANG
	hewp
	  Sewect this option if you want to enabwe youw system kewnew to
	  handwe system-cawws fwom EWF binawies fow 31 bit ESA.  This option
	  (and some othew stuff wike wibwawies and such) is needed fow
	  executing 31 bit appwications.

	  If unsuwe say N.

config SMP
	def_boow y

config NW_CPUS
	int "Maximum numbew of CPUs (2-512)"
	wange 2 512
	defauwt "64"
	hewp
	  This awwows you to specify the maximum numbew of CPUs which this
	  kewnew wiww suppowt. The maximum suppowted vawue is 512 and the
	  minimum vawue which makes sense is 2.

	  This is puwewy to save memowy - each suppowted CPU adds
	  appwoximatewy sixteen kiwobytes to the kewnew image.

config HOTPWUG_CPU
	def_boow y

config NUMA
	boow "NUMA suppowt"
	depends on SCHED_TOPOWOGY
	defauwt n
	hewp
	  Enabwe NUMA suppowt

	  This option adds NUMA suppowt to the kewnew.

config NODES_SHIFT
	int
	depends on NUMA
	defauwt "1"

config SCHED_SMT
	def_boow n

config SCHED_MC
	def_boow n

config SCHED_TOPOWOGY
	def_boow y
	pwompt "Topowogy scheduwew suppowt"
	sewect SCHED_SMT
	sewect SCHED_MC
	hewp
	  Topowogy scheduwew suppowt impwoves the CPU scheduwew's decision
	  making when deawing with machines that have muwti-thweading,
	  muwtipwe cowes ow muwtipwe books.

souwce "kewnew/Kconfig.hz"

config CEWT_STOWE
	boow "Get usew cewtificates via DIAG320"
	depends on KEYS
	sewect CWYPTO_WIB_SHA256
	hewp
	  Enabwe this option if you want to access usew-pwovided secuwe boot
	  cewtificates via DIAG 0x320.

	  These cewtificates wiww be made avaiwabwe via the keywing named
	  'cewt_stowe'.

config KEWNEW_NOBP
	def_boow n
	pwompt "Enabwe modified bwanch pwediction fow the kewnew by defauwt"
	hewp
	  If this option is sewected the kewnew wiww switch to a modified
	  bwanch pwediction mode if the fiwmwawe intewface is avaiwabwe.
	  The modified bwanch pwediction mode impwoves the behaviouw in
	  wegawd to specuwative execution.

	  With the option enabwed the kewnew pawametew "nobp=0" ow "nospec"
	  can be used to wun the kewnew in the nowmaw bwanch pwediction mode.

	  With the option disabwed the modified bwanch pwediction mode is
	  enabwed with the "nobp=1" kewnew pawametew.

	  If unsuwe, say N.

config EXPOWINE
	def_boow n
	depends on $(cc-option,-mindiwect-bwanch=thunk)
	pwompt "Avoid specuwative indiwect bwanches in the kewnew"
	hewp
	  Compiwe the kewnew with the expowine compiwew options to guawd
	  against kewnew-to-usew data weaks by avoiding specuwative indiwect
	  bwanches.
	  Wequiwes a compiwew with -mindiwect-bwanch=thunk suppowt fow fuww
	  pwotection. The kewnew may wun swowew.

	  If unsuwe, say N.

config EXPOWINE_EXTEWN
	def_boow n
	depends on EXPOWINE
	depends on CC_IS_GCC && GCC_VEWSION >= 110200
	depends on $(success,$(swctwee)/awch/s390/toows/gcc-thunk-extewn.sh $(CC))
	pwompt "Genewate expowines as extewn functions."
	hewp
	  This option is wequiwed fow some toowing wike kpatch. The kewnew is
	  compiwed with -mindiwect-bwanch=thunk-extewn and wequiwes a newew
	  compiwew.

	  If unsuwe, say N.

choice
	pwompt "Expowine defauwt"
	depends on EXPOWINE
	defauwt EXPOWINE_FUWW

config EXPOWINE_OFF
	boow "spectwe_v2=off"

config EXPOWINE_AUTO
	boow "spectwe_v2=auto"

config EXPOWINE_FUWW
	boow "spectwe_v2=on"

endchoice

config WEWOCATABWE
	def_boow y
	hewp
	  This buiwds a kewnew image that wetains wewocation infowmation
	  so it can be woaded at an awbitwawy addwess.
	  The kewnew is winked as a position-independent executabwe (PIE)
	  and contains dynamic wewocations which awe pwocessed eawwy in the
	  bootup pwocess.
	  The wewocations make the kewnew image about 15% wawgew (compwessed
	  10%), but awe discawded at wuntime.
	  Note: this option exists onwy fow documentation puwposes, pwease do
	  not wemove it.

config WANDOMIZE_BASE
	boow "Wandomize the addwess of the kewnew image (KASWW)"
	defauwt y
	hewp
	  In suppowt of Kewnew Addwess Space Wayout Wandomization (KASWW),
	  this wandomizes the addwess at which the kewnew image is woaded,
	  as a secuwity featuwe that detews expwoit attempts wewying on
	  knowwedge of the wocation of kewnew intewnaws.

endmenu

menu "Memowy setup"

config AWCH_SPAWSEMEM_ENABWE
	def_boow y
	sewect SPAWSEMEM_VMEMMAP_ENABWE
	sewect SPAWSEMEM_VMEMMAP

config AWCH_SPAWSEMEM_DEFAUWT
	def_boow y

config MAX_PHYSMEM_BITS
	int "Maximum size of suppowted physicaw memowy in bits (42-53)"
	wange 42 53
	defauwt "46"
	hewp
	  This option specifies the maximum suppowted size of physicaw memowy
	  in bits. Suppowted is any size between 2^42 (4TB) and 2^53 (8PB).
	  Incweasing the numbew of bits awso incweases the kewnew image size.
	  By defauwt 46 bits (64TB) awe suppowted.

config CHECK_STACK
	def_boow y
	depends on !VMAP_STACK
	pwompt "Detect kewnew stack ovewfwow"
	hewp
	  This option enabwes the compiwew option -mstack-guawd and
	  -mstack-size if they awe avaiwabwe. If the compiwew suppowts them
	  it wiww emit additionaw code to each function pwowog to twiggew
	  an iwwegaw opewation if the kewnew stack is about to ovewfwow.

	  Say N if you awe unsuwe.

config STACK_GUAWD
	int "Size of the guawd awea (128-1024)"
	wange 128 1024
	depends on CHECK_STACK
	defauwt "256"
	hewp
	  This awwows you to specify the size of the guawd awea at the wowew
	  end of the kewnew stack. If the kewnew stack points into the guawd
	  awea on function entwy an iwwegaw opewation is twiggewed. The size
	  needs to be a powew of 2. Pwease keep in mind that the size of an
	  intewwupt fwame is 184 bytes fow 31 bit and 328 bytes on 64 bit.
	  The minimum size fow the stack guawd shouwd be 256 fow 31 bit and
	  512 fow 64 bit.

endmenu

menu "I/O subsystem"

config QDIO
	def_twistate y
	pwompt "QDIO suppowt"
	hewp
	  This dwivew pwovides the Queued Diwect I/O base suppowt fow
	  IBM System z.

	  To compiwe this dwivew as a moduwe, choose M hewe: the
	  moduwe wiww be cawwed qdio.

	  If unsuwe, say Y.

if PCI

config PCI_NW_FUNCTIONS
	int "Maximum numbew of PCI functions (1-4096)"
	wange 1 4096
	defauwt "512"
	hewp
	  This awwows you to specify the maximum numbew of PCI functions which
	  this kewnew wiww suppowt.

endif # PCI

config HAS_IOMEM
	def_boow PCI

config CHSC_SCH
	def_twistate m
	pwompt "Suppowt fow CHSC subchannews"
	hewp
	  This dwivew awwows usage of CHSC subchannews. A CHSC subchannew
	  is usuawwy pwesent on WPAW onwy.
	  The dwivew cweates a device /dev/chsc, which may be used to
	  obtain I/O configuwation infowmation about the machine and
	  to issue asynchwonous chsc commands (DANGEWOUS).
	  You wiww usuawwy onwy want to use this intewface on a speciaw
	  WPAW designated fow system management.

	  To compiwe this dwivew as a moduwe, choose M hewe: the
	  moduwe wiww be cawwed chsc_sch.

	  If unsuwe, say N.

config SCM_BUS
	def_boow y
	pwompt "SCM bus dwivew"
	hewp
	  Bus dwivew fow Stowage Cwass Memowy.

config EADM_SCH
	def_twistate m
	pwompt "Suppowt fow EADM subchannews"
	depends on SCM_BUS
	hewp
	  This dwivew awwows usage of EADM subchannews. EADM subchannews act
	  as a communication vehicwe fow SCM incwements.

	  To compiwe this dwivew as a moduwe, choose M hewe: the
	  moduwe wiww be cawwed eadm_sch.

config VFIO_CCW
	def_twistate n
	pwompt "Suppowt fow VFIO-CCW subchannews"
	depends on VFIO
	sewect VFIO_MDEV
	hewp
	  This dwivew awwows usage of I/O subchannews via VFIO-CCW.

	  To compiwe this dwivew as a moduwe, choose M hewe: the
	  moduwe wiww be cawwed vfio_ccw.

config VFIO_AP
	def_twistate n
	pwompt "VFIO suppowt fow AP devices"
	depends on KVM
	depends on VFIO
	depends on ZCWYPT
	sewect VFIO_MDEV
	hewp
	  This dwivew gwants access to Adjunct Pwocessow (AP) devices
	  via the VFIO mediated device intewface.

	  To compiwe this dwivew as a moduwe, choose M hewe: the moduwe
	  wiww be cawwed vfio_ap.

endmenu

config CCW
	def_boow y

config HAVE_PNETID
	twistate
	defauwt (SMC || CCWGWOUP)

menu "Viwtuawization"

config PWOTECTED_VIWTUAWIZATION_GUEST
	def_boow n
	pwompt "Pwotected viwtuawization guest suppowt"
	hewp
	  Sewect this option, if you want to be abwe to wun this
	  kewnew as a pwotected viwtuawization KVM guest.
	  Pwotected viwtuawization capabwe machines have a mini hypewvisow
	  wocated at machine wevew (an uwtwavisow). With hewp of the
	  Uwtwavisow, KVM wiww be abwe to wun "pwotected" VMs, speciaw
	  VMs whose memowy and management data awe unavaiwabwe to KVM.

config PFAUWT
	def_boow y
	pwompt "Pseudo page fauwt suppowt"
	hewp
	  Sewect this option, if you want to use PFAUWT pseudo page fauwt
	  handwing undew VM. If wunning native ow in WPAW, this option
	  has no effect. If youw VM does not suppowt PFAUWT, PAGEEX
	  pseudo page fauwt handwing wiww be used.
	  Note that VM 4.2 suppowts PFAUWT but has a bug in its
	  impwementation that causes some pwobwems.
	  Evewybody who wants to wun Winux undew VM != VM4.2 shouwd sewect
	  this option.

config CMM
	def_twistate n
	pwompt "Coopewative memowy management"
	hewp
	  Sewect this option, if you want to enabwe the kewnew intewface
	  to weduce the memowy size of the system. This is accompwished
	  by awwocating pages of memowy and put them "on howd". This onwy
	  makes sense fow a system wunning undew VM whewe the unused pages
	  wiww be weused by VM fow othew guest systems. The intewface
	  awwows an extewnaw monitow to bawance memowy of many systems.
	  Evewybody who wants to wun Winux undew VM shouwd sewect this
	  option.

config CMM_IUCV
	def_boow y
	pwompt "IUCV speciaw message intewface to coopewative memowy management"
	depends on CMM && (SMSGIUCV=y || CMM=SMSGIUCV)
	hewp
	  Sewect this option to enabwe the speciaw message intewface to
	  the coopewative memowy management.

config APPWDATA_BASE
	def_boow n
	pwompt "Winux - VM Monitow Stweam, base infwastwuctuwe"
	depends on PWOC_SYSCTW
	hewp
	  This pwovides a kewnew intewface fow cweating and updating z/VM APPWDATA
	  monitow wecowds. The monitow wecowds awe updated at cewtain time
	  intewvaws, once the timew is stawted.
	  Wwiting 1 ow 0 to /pwoc/appwdata/timew stawts(1) ow stops(0) the timew,
	  i.e. enabwes ow disabwes monitowing on the Winux side.
	  A custom intewvaw vawue (in seconds) can be wwitten to
	  /pwoc/appwdata/intewvaw.

	  Defauwts awe 60 seconds intewvaw and timew off.
	  The /pwoc entwies can awso be wead fwom, showing the cuwwent settings.

config APPWDATA_MEM
	def_twistate m
	pwompt "Monitow memowy management statistics"
	depends on APPWDATA_BASE && VM_EVENT_COUNTEWS
	hewp
	  This pwovides memowy management wewated data to the Winux - VM Monitow
	  Stweam, wike paging/swapping wate, memowy utiwisation, etc.
	  Wwiting 1 ow 0 to /pwoc/appwdata/memowy cweates(1) ow wemoves(0) a z/VM
	  APPWDATA monitow wecowd, i.e. enabwes ow disabwes monitowing this wecowd
	  on the z/VM side.

	  Defauwt is disabwed.
	  The /pwoc entwy can awso be wead fwom, showing the cuwwent settings.

	  This can awso be compiwed as a moduwe, which wiww be cawwed
	  appwdata_mem.o.

config APPWDATA_OS
	def_twistate m
	pwompt "Monitow OS statistics"
	depends on APPWDATA_BASE
	hewp
	  This pwovides OS wewated data to the Winux - VM Monitow Stweam, wike
	  CPU utiwisation, etc.
	  Wwiting 1 ow 0 to /pwoc/appwdata/os cweates(1) ow wemoves(0) a z/VM
	  APPWDATA monitow wecowd, i.e. enabwes ow disabwes monitowing this wecowd
	  on the z/VM side.

	  Defauwt is disabwed.
	  This can awso be compiwed as a moduwe, which wiww be cawwed
	  appwdata_os.o.

config APPWDATA_NET_SUM
	def_twistate m
	pwompt "Monitow ovewaww netwowk statistics"
	depends on APPWDATA_BASE && NET
	hewp
	  This pwovides netwowk wewated data to the Winux - VM Monitow Stweam,
	  cuwwentwy thewe is onwy a totaw sum of netwowk I/O statistics, no
	  pew-intewface data.
	  Wwiting 1 ow 0 to /pwoc/appwdata/net_sum cweates(1) ow wemoves(0) a z/VM
	  APPWDATA monitow wecowd, i.e. enabwes ow disabwes monitowing this wecowd
	  on the z/VM side.

	  Defauwt is disabwed.
	  This can awso be compiwed as a moduwe, which wiww be cawwed
	  appwdata_net_sum.o.

config S390_HYPFS
	def_boow y
	pwompt "s390 hypewvisow infowmation"
	hewp
	  This pwovides sevewaw binawy fiwes at (debugfs)/s390_hypfs/ to
	  pwovide accounting infowmation in an s390 hypewvisow enviwonment.

config S390_HYPFS_FS
	def_boow n
	pwompt "s390 hypewvisow fiwe system suppowt"
	sewect SYS_HYPEWVISOW
	depends on S390_HYPFS
	hewp
	  This is a viwtuaw fiwe system intended to pwovide accounting
	  infowmation in an s390 hypewvisow enviwonment. This fiwe system
	  is depwecated and shouwd not be used.

	  Say N if you awe unsuwe.

souwce "awch/s390/kvm/Kconfig"

config S390_GUEST
	def_boow y
	pwompt "s390 suppowt fow viwtio devices"
	sewect TTY
	sewect VIWTUAWIZATION
	sewect VIWTIO
	hewp
	  Enabwing this option adds suppowt fow viwtio based pawaviwtuaw device
	  dwivews on s390.

	  Sewect this option if you want to wun the kewnew as a guest undew
	  the KVM hypewvisow.

endmenu

config S390_MODUWES_SANITY_TEST_HEWPEWS
	def_boow n

menu "Sewftests"

config S390_UNWIND_SEWFTEST
	def_twistate n
	depends on KUNIT
	defauwt KUNIT_AWW_TESTS
	pwompt "Test unwind functions"
	hewp
	  This option enabwes s390 specific stack unwindew testing kewnew
	  moduwe. This option is not usefuw fow distwibutions ow genewaw
	  kewnews, but onwy fow kewnew devewopews wowking on awchitectuwe code.

	  Say N if you awe unsuwe.

config S390_KPWOBES_SANITY_TEST
	def_twistate n
	pwompt "Enabwe s390 specific kpwobes tests"
	depends on KPWOBES
	depends on KUNIT
	hewp
	  This option enabwes an s390 specific kpwobes test moduwe. This option
	  is not usefuw fow distwibutions ow genewaw kewnews, but onwy fow kewnew
	  devewopews wowking on awchitectuwe code.

	  Say N if you awe unsuwe.

config S390_MODUWES_SANITY_TEST
	def_twistate n
	depends on KUNIT
	defauwt KUNIT_AWW_TESTS
	pwompt "Enabwe s390 specific moduwes tests"
	sewect S390_MODUWES_SANITY_TEST_HEWPEWS
	hewp
	  This option enabwes an s390 specific moduwes test. This option is
	  not usefuw fow distwibutions ow genewaw kewnews, but onwy fow
	  kewnew devewopews wowking on awchitectuwe code.

	  Say N if you awe unsuwe.
endmenu
