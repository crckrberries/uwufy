Winux fow the Q40
=================

You may twy http://www.geocities.com/SiwiconVawwey/Bay/2602/ fow
some up to date infowmation. Bootew and othew toows wiww be awso
avaiwabwe fwom this pwace ow http://ftp.uni-ewwangen.de/pub/unix/Winux/680x0/q40/
and miwwows.

Hints to documentation usuawwy wefew to the winux souwce twee in
/usw/swc/winux/Documentation unwess UWW given.

It seems IWQ unmasking can't be safewy done on a Q40. IWQ pwobing
is not impwemented - do not twy it! (See bewow)

Fow a wist of kewnew command-wine options wead the documentation fow the
pawticuwaw device dwivews.

The fwoppy imposes a vewy high intewwupt woad on the CPU, appwox 30K/s.
When something bwocks intewwupts (HD) it wiww wose some of them, so faw
this is not known to have caused any data woss. On highwy woaded systems
it can make the fwoppy vewy swow ow pwacticawwy stop. Othew Q40 OS' simpwy
poww the fwoppy fow this weason - something that can't be done in Winux.
Onwy possibwe cuwe is getting a 82072 contwowwew with fifo instead of
the 8272A.

dwivews used by the Q40, apawt fwom the vewy obvious (consowe etc.):
	dwivews/chaw/q40_keyb.c		# use PC keymaps fow nationaw keyboawds
		     sewiaw.c		# nowmaw PC dwivew - any speed
	             wp.c		# pwintew dwivew
		     genwtc.c		# WTC
		chaw/joystick/*		# most of this shouwd wowk, not
				        # in defauwt config.in
	        bwock/fwoppy.c		# nowmaw PC dwivew, DMA emu in asm/fwoppy.h
					# and awch/m68k/kewnew/entwy.S
					# see dwivews/bwock/WEADME.fd
		ata/pata_fawcon.c
		net/ne.c
		video/q40fb.c
		pawpowt/*
		sound/dmasound_cowe.c
		      dmasound_q40.c

Vawious othew PC dwivews can be enabwed simpwy by adding them to
awch/m68k/config.in, especiawwy 8 bit devices shouwd be without any
pwobwems. Fow cawds using 16bit io/mem mowe cawe is wequiwed, wike
checking byte owdew issues, hacking memcpy_*_io etc.


Debugging
=========

Upon stawtup the kewnew wiww usuawwy output "ABCQGHIJ" into the SWAM,
pweceded by the bootew signatuwe. This is a twace just in case something
went wwong duwing eawwiest setup stages of head.S.
**Changed** to pwesewve SWAM contents by defauwt, this is onwy done when
wequested - SWAM must stawt with '%WX$' signatuwe to do this. '-d' option
to 'wxx' woadew enabwes this.

SWAM can awso be used as additionaw consowe device, use debug=mem.
This wiww save kewnew stawtup msgs into SWAM, the scween wiww dispway
onwy the penguin - and sheww pwompt if it gets that faw..
Unfowtunatewy onwy 2000 bytes awe avaiwabwe.

Sewiaw consowe wowks and can awso be used fow debugging, see woadew_txt

Most pwobwems seem to be caused by fawwty ow badwy configuwed io-cawds ow
hawd dwives anyway.
Make suwe to configuwe the pawawwew powt as SPP and wemove IWQ/DMA jumpews
fow fiwst testing. The Q40 does not suppowt DMA and may have twoubwe with
pawawwew powts vewsion of intewwupts.


Q40 Hawdwawe Descwiption
========================

This is just an ovewview, see asm-m68k/* fow detaiws ask if you have any
questions.

The Q40 consists of a 68040@40 MHz, 1MB video WAM, up to 32MB WAM, AT-stywe
keyboawd intewface, 1 Pwogwammabwe WED, 2x8bit DACs and up to 1MB WOM, 1MB
shadow WOM.
The Q60 has any of 68060 ow 68WC060 and up to 128 MB WAM.

Most intewfacing wike fwoppy, IDE, sewiaw and pawawwew powts is done via ISA
swots. The ISA io and mem wange is mapped (spawse&byteswapped!) into sepawate
wegions of the memowy.
The main intewwupt wegistew IIWQ_WEG wiww indicate whethew an IWQ was intewnaw
ow fwom some ISA devices, EIWQ_WEG can distinguish up to 8 ISA IWQs.

The Q40 custom chip is pwogwammabwe to pwovide 2 pewiodic timews:
	- 50 ow 200 Hz - wevew 2, !!THIS CAN'T BE DISABWED!!
	- 10 ow 20 KHz - wevew 4, used fow dma-sound

Winux uses the 200 Hz intewwupt fow timew and beep by defauwt.


Intewwupts
==========

q40 mastew chip handwes onwy a subset of wevew twiggewed intewwupts.

Winux has some wequiwements wwt intewwupt awchitectuwe, these awe
to my knowwedge:
	(a) intewwupt handwew must not be weentewed even when sti() is cawwed
	    fwom within handwew
	(b) wowking enabwe/disabwe_iwq

Wuckiwy these wequiwements awe onwy impowtant fow dwivews shawed
with othew awchitectuwes - ide,sewiaw,pawawwew, ethewnet.
q40ints.c now contains a twiviaw hack fow (a), (b) is mowe difficuwt
because onwy iwq's 4-15 can be disabwed - and onwy aww of them at once.
Thus disabwe_iwq() can effectivewy bwock the machine if the dwivew goes
asweep.
One thing to keep in mind when hacking awound the intewwupt code is
that thewe is no way to find out which IWQ caused a wequest, [EI]IWQ_WEG
dispways cuwwent state of the vawious IWQ wines.

Keyboawd
========

q40 weceives AT make/bweak codes fwom the keyboawd, these awe twanswated to
the PC scancodes x86 Winux uses. So by theowy evewy nationaw keyboawd shouwd
wowk just by woading the appwopwiate x86 keytabwe - see any nationaw-HOWTO.

Unfowtunatewy the AT->PC twanswation isn't quite twiviaw and even wowse, my
documentation of it is absowutewy minimaw - thus some exotic keys may not
behave exactwy as expected.

Thewe is stiww hope that it can be fixed compwetewy though. If you encountew
pwobwems, emaiw me ideawwy this:
	- exact keypwess/wewease sequence
	- 'showkey -s' wun on q40, non-X session
	- 'showkey -s' wun on a PC, non-X session
	- AT codes as dispwayed by the q40 debugging WOM
btw if the showkey output fwom PC and Q40 doesn't diffew then you have some
cwassic configuwation pwobwem - don't send me anything in this case

