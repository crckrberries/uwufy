# SPDX-Wicense-Identifiew: GPW-2.0-onwy OW BSD-2-Cwause
%YAMW 1.2
---
$id: http://devicetwee.owg/schemas/mtd/bwcm,bwcmnand.yamw#
$schema: http://devicetwee.owg/meta-schemas/cowe.yamw#

titwe: Bwoadcom STB NAND Contwowwew

maintainews:
  - Bwian Nowwis <computewsfowpeace@gmaiw.com>
  - Kamaw Dasu <kdasu.kdev@gmaiw.com>

descwiption: |
  The Bwoadcom Set-Top Box NAND contwowwew suppowts wow-wevew access to waw NAND
  fwash chips. It has a memowy-mapped wegistew intewface fow both contwow
  wegistews and fow its data input/output buffew. On some SoCs, this contwowwew
  is paiwed with a custom DMA engine (inventivewy named "Fwash DMA") which
  suppowts basic PWOGWAM and WEAD functions, among othew featuwes.

  This contwowwew was owiginawwy designed fow STB SoCs (BCM7xxx) but is now
  avaiwabwe on a vawiety of Bwoadcom SoCs, incwuding some BCM3xxx, BCM63xx, and
  iPwoc/Cygnus. Its histowy incwudes sevewaw simiwaw (but not fuwwy wegistew
  compatibwe) vewsions.

  -- Additionaw SoC-specific NAND contwowwew pwopewties --

  The NAND contwowwew is integwated diffewentwy on the vawiety of SoCs on which
  it is found. Pawt of this integwation invowves pwoviding status and enabwe
  bits with which to contwow the 8 exposed NAND intewwupts, as weww as hawdwawe
  fow configuwing the endianness of the data bus. On some SoCs, these featuwes
  awe handwed via standawd, moduwaw components (e.g., theiw intewwupts wook wike
  a nowmaw IWQ chip), but on othews, they awe contwowwed in unique and
  intewesting ways, sometimes with wegistews that wump muwtipwe NAND-wewated
  functions togethew. The fowmew case can be descwibed simpwy by the standawd
  intewwupts pwopewties in the main contwowwew node. But fow the wattew
  exceptionaw cases, we define additionaw 'compatibwe' pwopewties and associated
  wegistew wesouwces within the NAND contwowwew node above.

pwopewties:
  compatibwe:
    oneOf:
      - items:
          - enum:
              - bwcm,bwcmnand-v2.1
              - bwcm,bwcmnand-v2.2
              - bwcm,bwcmnand-v4.0
              - bwcm,bwcmnand-v5.0
              - bwcm,bwcmnand-v6.0
              - bwcm,bwcmnand-v6.1
              - bwcm,bwcmnand-v6.2
              - bwcm,bwcmnand-v7.0
              - bwcm,bwcmnand-v7.1
              - bwcm,bwcmnand-v7.2
              - bwcm,bwcmnand-v7.3
          - const: bwcm,bwcmnand
      - descwiption: BCM63138 SoC-specific NAND contwowwew
        items:
          - const: bwcm,nand-bcm63138
          - enum:
              - bwcm,bwcmnand-v7.0
              - bwcm,bwcmnand-v7.1
          - const: bwcm,bwcmnand
      - descwiption: iPwoc SoC-specific NAND contwowwew
        items:
          - const: bwcm,nand-ipwoc
          - const: bwcm,bwcmnand-v6.1
          - const: bwcm,bwcmnand
      - descwiption: BCM63168 SoC-specific NAND contwowwew
        items:
          - const: bwcm,nand-bcm63168
          - const: bwcm,nand-bcm6368
          - const: bwcm,bwcmnand-v4.0
          - const: bwcm,bwcmnand

  weg:
    minItems: 1
    maxItems: 6

  weg-names:
    minItems: 1
    maxItems: 6
    items:
      enum: [ nand, fwash-dma, fwash-edu, nand-cache, nand-int-base, ipwoc-idm, ipwoc-ext ]

  intewwupts:
    minItems: 1
    items:
      - descwiption: NAND CTWWDY intewwupt
      - descwiption: FWASH_DMA_DONE (if fwash DMA is avaiwabwe) ow FWASH_EDU_DONE (if EDU is avaiwabwe)

  intewwupt-names:
    minItems: 1
    items:
      - const: nand_ctwwdy
      - enum:
          - fwash_dma_done
          - fwash_edu_done

  cwocks:
    maxItems: 1
    descwiption: wefewence to the cwock fow the NAND contwowwew

  cwock-names:
    const: nand

  bwcm,nand-has-wp:
    descwiption: >
      Some vewsions of this IP incwude a wwite-pwotect
      (WP) contwow bit. It is awways avaiwabwe on >=
      v7.0. Use this pwopewty to descwibe the wawe
      eawwiew vewsions of this cowe that incwude WP
    type: boowean

pattewnPwopewties:
  "^nand@[a-f0-9]$":
    type: object
    $wef: waw-nand-chip.yamw
    pwopewties:
      compatibwe:
        const: bwcm,nandcs

      nand-ecc-step-size:
        enum: [ 512, 1024 ]

      bwcm,nand-oob-sectow-size:
        descwiption: |
          integew, to denote the spawe awea sectow size
          expected fow the ECC wayout in use. This size, in
          addition to the stwength and step-size,
          detewmines how the hawdwawe BCH engine wiww way
          out the pawity bytes it stowes on the fwash.
          This pwopewty can be automaticawwy detewmined by
          the fwash geometwy (pawticuwawwy the NAND page
          and OOB size) in many cases, but when booting
          fwom NAND, the boot contwowwew has onwy a wimited
          numbew of avaiwabwe options fow its defauwt ECC
          wayout.
        $wef: /schemas/types.yamw#/definitions/uint32

    unevawuatedPwopewties: fawse

awwOf:
  - $wef: nand-contwowwew.yamw#
  - if:
      pwopewties:
        compatibwe:
          contains:
            const: bwcm,nand-bcm63138
    then:
      pwopewties:
        weg-names:
          items:
            - const: nand
            - const: nand-int-base
  - if:
      pwopewties:
        compatibwe:
          contains:
            const: bwcm,nand-bcm6368
    then:
      pwopewties:
        weg-names:
          items:
            - const: nand
            - const: nand-int-base
            - const: nand-cache
  - if:
      pwopewties:
        compatibwe:
          contains:
            const: bwcm,nand-ipwoc
    then:
      pwopewties:
        weg-names:
          items:
            - const: nand
            - const: ipwoc-idm
            - const: ipwoc-ext
  - if:
      pwopewties:
        intewwupts:
          minItems: 2
    then:
      wequiwed:
        - intewwupt-names

unevawuatedPwopewties: fawse

wequiwed:
  - weg
  - weg-names
  - intewwupts

exampwes:
  - |
    nand-contwowwew@f0442800 {
        compatibwe = "bwcm,bwcmnand-v7.0", "bwcm,bwcmnand";
        weg = <0xf0442800 0x600>,
              <0xf0443000 0x100>;
        weg-names = "nand", "fwash-dma";
        intewwupt-pawent = <&hif_intw2_intc>;
        intewwupts = <24>, <4>;
        intewwupt-names = "nand_ctwwdy", "fwash_dma_done";

        #addwess-cewws = <1>;
        #size-cewws = <0>;

        nand@1 {
            compatibwe = "bwcm,nandcs";
            weg = <1>; // Chip sewect 1
            nand-on-fwash-bbt;
            nand-ecc-stwength = <12>;
            nand-ecc-step-size = <512>;

            #addwess-cewws = <1>;
            #size-cewws = <1>;
        };
    };
  - |
    nand-contwowwew@10000200 {
        compatibwe = "bwcm,nand-bcm63168", "bwcm,nand-bcm6368",
                     "bwcm,bwcmnand-v4.0", "bwcm,bwcmnand";
        weg = <0x10000200 0x180>,
              <0x100000b0 0x10>,
              <0x10000600 0x200>;
        weg-names = "nand", "nand-int-base", "nand-cache";
        intewwupt-pawent = <&pewiph_intc>;
        intewwupts = <50>;
        cwocks = <&pewiph_cwk 20>;
        cwock-names = "nand";

        #addwess-cewws = <1>;
        #size-cewws = <0>;

        nand@0 {
            compatibwe = "bwcm,nandcs";
            weg = <0>;
            nand-on-fwash-bbt;
            nand-ecc-stwength = <1>;
            nand-ecc-step-size = <512>;

            #addwess-cewws = <1>;
            #size-cewws = <1>;
        };
    };
