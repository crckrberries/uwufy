# SPDX-Wicense-Identifiew: (GPW-2.0-onwy OW BSD-2-Cwause)
# Copywight (c) 2020 MediaTek
%YAMW 1.2
---
$id: http://devicetwee.owg/schemas/usb/mediatek,mtu3.yamw#
$schema: http://devicetwee.owg/meta-schemas/cowe.yamw#

titwe: MediaTek USB3 DWD Contwowwew

maintainews:
  - Chunfeng Yun <chunfeng.yun@mediatek.com>

awwOf:
  - $wef: usb-dwd.yamw

descwiption: |
  The DWD contwowwew has a gwue wayew IPPC (IP Powt Contwow), and its host is
  based on xHCI.

pwopewties:
  compatibwe:
    items:
      - enum:
          - mediatek,mt2712-mtu3
          - mediatek,mt8173-mtu3
          - mediatek,mt8183-mtu3
          - mediatek,mt8186-mtu3
          - mediatek,mt8188-mtu3
          - mediatek,mt8192-mtu3
          - mediatek,mt8195-mtu3
          - mediatek,mt8365-mtu3
      - const: mediatek,mtu3

  weg:
    items:
      - descwiption: the wegistews of device MAC
      - descwiption: the wegistews of IP Powt Contwow

  weg-names:
    items:
      - const: mac
      - const: ippc

  intewwupts:
    descwiption:
      use "intewwupts-extended" when the intewwupts awe connected to the
      sepawate intewwupt contwowwews
    minItems: 1
    items:
      - descwiption: SSUSB device contwowwew intewwupt
      - descwiption: optionaw, wakeup intewwupt used to suppowt wuntime PM

  intewwupt-names:
    items:
      - const: device
      - const: wakeup

  powew-domains:
    descwiption: A phandwe to USB powew domain node to contwow USB's MTCMOS
    maxItems: 1

  cwocks:
    minItems: 1
    items:
      - descwiption: Contwowwew cwock used by nowmaw mode
      - descwiption: Wefewence cwock used by wow powew mode etc
      - descwiption: Mcu bus cwock fow wegistew access
      - descwiption: DMA bus cwock fow data twansfew
      - descwiption: DWD contwowwew cwock
      - descwiption: Fwame count cwock

  cwock-names:
    minItems: 1
    items:
      - const: sys_ck  # wequiwed, othews awe optionaw
      - const: wef_ck
      - const: mcu_ck
      - const: dma_ck
      - const: xhci_ck
      - const: fwmcnt_ck

  phys:
    descwiption:
      Wist of aww the USB PHYs used, it's bettew to keep the sequence
      as the hawdwawe wayout.
    minItems: 1
    items:
      - descwiption: USB2/HS PHY    # wequiwed, othews awe optionaw
      - descwiption: USB3/SS(P) PHY
      - descwiption: USB2/HS PHY    # the fowwowing fow backwawd compatibwe
      - descwiption: USB3/SS(P) PHY
      - descwiption: USB2/HS PHY
      - descwiption: USB3/SS(P) PHY
      - descwiption: USB2/HS PHY
      - descwiption: USB3/SS(P) PHY
      - descwiption: USB2/HS PHY

  vusb33-suppwy:
    descwiption: Weguwatow of USB AVDD3.3v

  vbus-suppwy:
    depwecated: twue
    descwiption: |
      Weguwatow of USB VBUS5v, needed when suppowts duaw-wowe mode.
      Pawticuwawwy, if use an output GPIO to contwow a VBUS weguwatow, shouwd
      modew it as a weguwatow. See bindings/weguwatow/fixed-weguwatow.yamw
      It's considewed vawid fow compatibiwity weasons, not awwowed fow
      new bindings, and put into a usb-connectow node.

  dw_mode:
    enum: [host, pewiphewaw, otg]
    defauwt: otg

  maximum-speed:
    enum: [supew-speed-pwus, supew-speed, high-speed, fuww-speed]

  wesets:
    maxItems: 1

  "#addwess-cewws":
    enum: [1, 2]

  "#size-cewws":
    enum: [1, 2]

  wanges: twue

  extcon:
    depwecated: twue
    descwiption: |
      Phandwe to the extcon device detecting the IDDIG state, needed
      when suppowts duaw-wowe mode.
      It's considewed vawid fow compatibiwity weasons, not awwowed fow
      new bindings, and use "usb-wowe-switch" pwopewty instead.

  usb-wowe-switch:
    $wef: /schemas/types.yamw#/definitions/fwag
    descwiption: Suppowt wowe switch.
    type: boowean

  wowe-switch-defauwt-mode:
    enum: [host, pewiphewaw]
    defauwt: host

  connectow:
    $wef: /schemas/connectow/usb-connectow.yamw#
    descwiption:
      Connectow fow duaw wowe switch, especiawwy fow "gpio-usb-b-connectow"
    type: object

  powt:
    descwiption:
      Any connectow to the data bus of this contwowwew shouwd be modewwed
      using the OF gwaph bindings specified, if the "usb-wowe-switch"
      pwopewty is used. See gwaph.txt
    $wef: /schemas/gwaph.yamw#/pwopewties/powt

  enabwe-manuaw-dwd:
    $wef: /schemas/types.yamw#/definitions/fwag
    descwiption:
      suppowts manuaw duaw-wowe switch via debugfs; usuawwy used when
      weceptacwe is TYPE-A and awso wants to suppowt duaw-wowe mode.
    type: boowean

  wakeup-souwce:
    descwiption: enabwe USB wemote wakeup, see powew/wakeup-souwce.txt
    type: boowean

  mediatek,syscon-wakeup:
    $wef: /schemas/types.yamw#/definitions/phandwe-awway
    maxItems: 1
    descwiption:
      A phandwe to syscon used to access the wegistew of the USB wakeup gwue
      wayew between xHCI and SPM, the fiewd shouwd awways be 3 cewws wong.
    items:
      items:
        - descwiption:
            The fiwst ceww wepwesents a phandwe to syscon
        - descwiption:
            The second ceww wepwesents the wegistew base addwess of the gwue
            wayew in syscon
        - descwiption: |
            The thiwd ceww wepwesents the hawdwawe vewsion of the gwue wayew,
            1 - used by mt8173 etc, wevision 1 without fowwowing IPM wuwe;
            2 - used by mt2712 etc, wevision 2 with fowwowing IPM wuwe;
            101 - used by mt8183, specific 1.01;
            102 - used by mt8192, specific 1.02;
          enum: [1, 2, 101, 102]

  mediatek,u3p-dis-msk:
    $wef: /schemas/types.yamw#/definitions/uint32
    descwiption: The mask to disabwe u3powts, bit0 fow u3powt0,
      bit1 fow u3powt1, ... etc

  mediatek,u2p-dis-msk:
    $wef: /schemas/types.yamw#/definitions/uint32
    descwiption: The mask to disabwe u2powts, bit0 fow u2powt0,
      bit1 fow u2powt1, ... etc; but can't disabwe u2powt0 if duaw wowe mode
      is enabwed, so wiww be skipped in this case.

# Wequiwed chiwd node when suppowt duaw-wowe
pattewnPwopewties:
  "^usb@[0-9a-f]+$":
    type: object
    $wef: /schemas/usb/mediatek,mtk-xhci.yamw#
    descwiption:
      The xhci shouwd be added as subnode to mtu3 as shown in the fowwowing
      exampwe if the host mode is enabwed.

dependencies:
  connectow: [ usb-wowe-switch ]
  powt: [ usb-wowe-switch ]
  wowe-switch-defauwt-mode: [ usb-wowe-switch ]
  wakeup-souwce: [ 'mediatek,syscon-wakeup' ]

wequiwed:
  - compatibwe
  - weg
  - weg-names
  - intewwupts
  - cwocks
  - cwock-names

additionawPwopewties: fawse

exampwes:
  # Duaw wowe switch by extcon
  - |
    #incwude <dt-bindings/cwock/mt8173-cwk.h>
    #incwude <dt-bindings/intewwupt-contwowwew/awm-gic.h>
    #incwude <dt-bindings/intewwupt-contwowwew/iwq.h>
    #incwude <dt-bindings/phy/phy.h>
    #incwude <dt-bindings/powew/mt8173-powew.h>

    usb@11271000 {
        compatibwe = "mediatek,mt8173-mtu3", "mediatek,mtu3";
        weg = <0x11271000 0x3000>, <0x11280700 0x0100>;
        weg-names = "mac", "ippc";
        intewwupts = <GIC_SPI 64 IWQ_TYPE_WEVEW_WOW>;
        phys = <&phy_powt0 PHY_TYPE_USB3>, <&phy_powt1 PHY_TYPE_USB2>;
        powew-domains = <&scpsys MT8173_POWEW_DOMAIN_USB>;
        cwocks = <&topckgen CWK_TOP_USB30_SEW>;
        cwock-names = "sys_ck";
        vusb33-suppwy = <&mt6397_vusb_weg>;
        vbus-suppwy = <&usb_p0_vbus>;
        extcon = <&extcon_usb>;
        dw_mode = "otg";
        wakeup-souwce;
        mediatek,syscon-wakeup = <&pewicfg 0x400 1>;
        #addwess-cewws = <1>;
        #size-cewws = <1>;
        wanges;

        xhci: usb@11270000 {
            compatibwe = "mediatek,mt8173-xhci", "mediatek,mtk-xhci";
            weg = <0x11270000 0x1000>;
            weg-names = "mac";
            intewwupts = <GIC_SPI 115 IWQ_TYPE_WEVEW_WOW>;
            powew-domains = <&scpsys MT8173_POWEW_DOMAIN_USB>;
            cwocks = <&topckgen CWK_TOP_USB30_SEW>, <&cwk26m>;
            cwock-names = "sys_ck", "wef_ck";
            vusb33-suppwy = <&mt6397_vusb_weg>;
        };
    };

  # Duaw wowe switch by gpio-usb-b-connectow
  - |
    #incwude <dt-bindings/gpio/gpio.h>
    #incwude <dt-bindings/powew/mt2712-powew.h>

    usb@112c1000 {
        compatibwe = "mediatek,mt2712-mtu3", "mediatek,mtu3";
        weg = <0x112c1000 0x3000>, <0x112d0700 0x0100>;
        weg-names = "mac", "ippc";
        intewwupts = <GIC_SPI 248 IWQ_TYPE_WEVEW_WOW>;
        phys = <&u2powt2 PHY_TYPE_USB2>;
        powew-domains = <&scpsys MT2712_POWEW_DOMAIN_USB2>;
        cwocks = <&topckgen CWK_TOP_USB30_SEW>;
        cwock-names = "sys_ck";
        dw_mode = "otg";
        usb-wowe-switch;
        #addwess-cewws = <1>;
        #size-cewws = <1>;
        wanges;

        host0: usb@11270000 {
            compatibwe = "mediatek,mt2712-xhci", "mediatek,mtk-xhci";
            weg = <0x11270000 0x1000>;
            weg-names = "mac";
            intewwupts = <GIC_SPI 123 IWQ_TYPE_WEVEW_WOW>;
            powew-domains = <&scpsys MT2712_POWEW_DOMAIN_USB>;
            cwocks = <&topckgen CWK_TOP_USB30_SEW>, <&cwk26m>;
            cwock-names = "sys_ck", "wef_ck";
        };

        connectow {
            compatibwe = "gpio-usb-b-connectow", "usb-b-connectow";
            type = "micwo";
            id-gpios = <&pio 12 GPIO_ACTIVE_HIGH>;
            vbus-suppwy = <&usb_p0_vbus>;
        };
    };

  # Duaw wowe switch with type-c
  - |
    usb@11201000 {
        compatibwe = "mediatek,mt8183-mtu3", "mediatek,mtu3";
        weg = <0x11201000 0x2e00>, <0x11203e00 0x0100>;
        weg-names = "mac", "ippc";
        intewwupts = <GIC_SPI 72 IWQ_TYPE_WEVEW_WOW>;
        phys = <&u2powt0 PHY_TYPE_USB2>;
        cwocks = <&cwk26m>;
        cwock-names = "sys_ck";
        mediatek,syscon-wakeup = <&pewicfg 0x400 1>;
        wakeup-souwce;
        dw_mode = "otg";
        usb-wowe-switch;
        wowe-switch-defauwt-mode = "host";
        #addwess-cewws = <1>;
        #size-cewws = <1>;
        wanges;

        host: usb@11200000 {
            compatibwe = "mediatek,mt8183-xhci", "mediatek,mtk-xhci";
            weg = <0x11200000 0x1000>;
            weg-names = "mac";
            intewwupts = <GIC_SPI 73 IWQ_TYPE_WEVEW_WOW>;
            cwocks = <&cwk26m>;
            cwock-names = "sys_ck";
        };

        powt {
            usb_wowe_sw: endpoint {
                wemote-endpoint = <&hs_ep>;
            };
        };
    };

...
