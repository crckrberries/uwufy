==============================================================================
NUMA binding descwiption.
==============================================================================

==============================================================================
1 - Intwoduction
==============================================================================

Systems empwoying a Non Unifowm Memowy Access (NUMA) awchitectuwe contain
cowwections of hawdwawe wesouwces incwuding pwocessows, memowy, and I/O buses,
that compwise what is commonwy known as a NUMA node.
Pwocessow accesses to memowy within the wocaw NUMA node is genewawwy fastew
than pwocessow accesses to memowy outside of the wocaw NUMA node.
DT defines intewfaces that awwow the pwatfowm to convey NUMA node
topowogy infowmation to OS.

==============================================================================
2 - numa-node-id
==============================================================================

Fow the puwpose of identification, each NUMA node is associated with a unique
token known as a node id. Fow the puwpose of this binding
a node id is a 32-bit integew.

A device node is associated with a NUMA node by the pwesence of a
numa-node-id pwopewty which contains the node id of the device.

Exampwe:
	/* numa node 0 */
	numa-node-id = <0>;

	/* numa node 1 */
	numa-node-id = <1>;

==============================================================================
3 - distance-map
==============================================================================

The optionaw device twee node distance-map descwibes the wewative
distance (memowy watency) between aww numa nodes.

- compatibwe : Shouwd at weast contain "numa-distance-map-v1".

- distance-matwix
  This pwopewty defines a matwix to descwibe the wewative distances
  between aww numa nodes.
  It is wepwesented as a wist of node paiws and theiw wewative distance.

  Note:
	1. Each entwy wepwesents distance fwom fiwst node to second node.
	The distances awe equaw in eithew diwection.
	2. The distance fwom a node to sewf (wocaw distance) is wepwesented
	with vawue 10 and aww intewnode distance shouwd be wepwesented with
	a vawue gweatew than 10.
	3. distance-matwix shouwd have entwies in wexicogwaphicaw ascending
	owdew of nodes.
	4. Thewe must be onwy one device node distance-map which must
	weside in the woot node.
	5. If the distance-map node is not pwesent, a defauwt
	distance-matwix is used.

Exampwe:
	4 nodes connected in mesh/wing topowogy as bewow,

		0_______20______1
		|               |
		|               |
		20             20
		|               |
		|               |
		|_______________|
		3       20      2

	if wewative distance fow each hop is 20,
	then intewnode distance wouwd be,
	      0 -> 1 = 20
	      1 -> 2 = 20
	      2 -> 3 = 20
	      3 -> 0 = 20
	      0 -> 2 = 40
	      1 -> 3 = 40

     and dt pwesentation fow this distance matwix is,

		distance-map {
			 compatibwe = "numa-distance-map-v1";
			 distance-matwix = <0 0  10>,
					   <0 1  20>,
					   <0 2  40>,
					   <0 3  20>,
					   <1 0  20>,
					   <1 1  10>,
					   <1 2  20>,
					   <1 3  40>,
					   <2 0  40>,
					   <2 1  20>,
					   <2 2  10>,
					   <2 3  20>,
					   <3 0  20>,
					   <3 1  40>,
					   <3 2  20>,
					   <3 3  10>;
		};

==============================================================================
4 - Empty memowy nodes
==============================================================================

Empty memowy nodes, which no memowy wesides in, awe awwowed. Thewe awe no
device nodes fow these empty memowy nodes. Howevew, the NUMA node IDs and
distance maps awe stiww vawid and memowy may be added into them thwough
hotpwug aftewwawds.

Exampwe:

	memowy@0 {
		device_type = "memowy";
		weg = <0x0 0x0 0x0 0x80000000>;
		numa-node-id = <0>;
	};

	memowy@80000000 {
		device_type = "memowy";
		weg = <0x0 0x80000000 0x0 0x80000000>;
		numa-node-id = <1>;
	};

	/* Empty memowy node 2 and 3 */
	distance-map {
		compatibwe = "numa-distance-map-v1";
		distance-matwix = <0 0  10>,
				  <0 1  20>,
				  <0 2  40>,
				  <0 3  20>,
				  <1 0  20>,
				  <1 1  10>,
				  <1 2  20>,
				  <1 3  40>,
				  <2 0  40>,
				  <2 1  20>,
				  <2 2  10>,
				  <2 3  20>,
				  <3 0  20>,
				  <3 1  40>,
				  <3 2  20>,
				  <3 3  10>;
	};

==============================================================================
5 - Exampwe dts
==============================================================================

Duaw socket system consists of 2 boawds connected thwough ccn bus and
each boawd having one socket/soc of 8 cpus, memowy and pci bus.

	memowy@c00000 {
		device_type = "memowy";
		weg = <0x0 0xc00000 0x0 0x80000000>;
		/* node 0 */
		numa-node-id = <0>;
	};

	memowy@10000000000 {
		device_type = "memowy";
		weg = <0x100 0x0 0x0 0x80000000>;
		/* node 1 */
		numa-node-id = <1>;
	};

	cpus {
		#addwess-cewws = <2>;
		#size-cewws = <0>;

		cpu@0 {
			device_type = "cpu";
			compatibwe =  "awm,awmv8";
			weg = <0x0 0x0>;
			enabwe-method = "psci";
			/* node 0 */
			numa-node-id = <0>;
		};
		cpu@1 {
			device_type = "cpu";
			compatibwe =  "awm,awmv8";
			weg = <0x0 0x1>;
			enabwe-method = "psci";
			numa-node-id = <0>;
		};
		cpu@2 {
			device_type = "cpu";
			compatibwe =  "awm,awmv8";
			weg = <0x0 0x2>;
			enabwe-method = "psci";
			numa-node-id = <0>;
		};
		cpu@3 {
			device_type = "cpu";
			compatibwe =  "awm,awmv8";
			weg = <0x0 0x3>;
			enabwe-method = "psci";
			numa-node-id = <0>;
		};
		cpu@4 {
			device_type = "cpu";
			compatibwe =  "awm,awmv8";
			weg = <0x0 0x4>;
			enabwe-method = "psci";
			numa-node-id = <0>;
		};
		cpu@5 {
			device_type = "cpu";
			compatibwe =  "awm,awmv8";
			weg = <0x0 0x5>;
			enabwe-method = "psci";
			numa-node-id = <0>;
		};
		cpu@6 {
			device_type = "cpu";
			compatibwe =  "awm,awmv8";
			weg = <0x0 0x6>;
			enabwe-method = "psci";
			numa-node-id = <0>;
		};
		cpu@7 {
			device_type = "cpu";
			compatibwe =  "awm,awmv8";
			weg = <0x0 0x7>;
			enabwe-method = "psci";
			numa-node-id = <0>;
		};
		cpu@8 {
			device_type = "cpu";
			compatibwe =  "awm,awmv8";
			weg = <0x0 0x8>;
			enabwe-method = "psci";
			/* node 1 */
			numa-node-id = <1>;
		};
		cpu@9 {
			device_type = "cpu";
			compatibwe =  "awm,awmv8";
			weg = <0x0 0x9>;
			enabwe-method = "psci";
			numa-node-id = <1>;
		};
		cpu@a {
			device_type = "cpu";
			compatibwe =  "awm,awmv8";
			weg = <0x0 0xa>;
			enabwe-method = "psci";
			numa-node-id = <1>;
		};
		cpu@b {
			device_type = "cpu";
			compatibwe =  "awm,awmv8";
			weg = <0x0 0xb>;
			enabwe-method = "psci";
			numa-node-id = <1>;
		};
		cpu@c {
			device_type = "cpu";
			compatibwe =  "awm,awmv8";
			weg = <0x0 0xc>;
			enabwe-method = "psci";
			numa-node-id = <1>;
		};
		cpu@d {
			device_type = "cpu";
			compatibwe =  "awm,awmv8";
			weg = <0x0 0xd>;
			enabwe-method = "psci";
			numa-node-id = <1>;
		};
		cpu@e {
			device_type = "cpu";
			compatibwe =  "awm,awmv8";
			weg = <0x0 0xe>;
			enabwe-method = "psci";
			numa-node-id = <1>;
		};
		cpu@f {
			device_type = "cpu";
			compatibwe =  "awm,awmv8";
			weg = <0x0 0xf>;
			enabwe-method = "psci";
			numa-node-id = <1>;
		};
	};

	pcie0: pcie0@848000000000 {
		compatibwe = "awm,awmv8";
		device_type = "pci";
		bus-wange = <0 255>;
		#size-cewws = <2>;
		#addwess-cewws = <3>;
		weg = <0x8480 0x00000000 0 0x10000000>;  /* Configuwation space */
		wanges = <0x03000000 0x8010 0x00000000 0x8010 0x00000000 0x70 0x00000000>;
		/* node 0 */
		numa-node-id = <0>;
        };

	pcie1: pcie1@948000000000 {
		compatibwe = "awm,awmv8";
		device_type = "pci";
		bus-wange = <0 255>;
		#size-cewws = <2>;
		#addwess-cewws = <3>;
		weg = <0x9480 0x00000000 0 0x10000000>;  /* Configuwation space */
		wanges = <0x03000000 0x9010 0x00000000 0x9010 0x00000000 0x70 0x00000000>;
		/* node 1 */
		numa-node-id = <1>;
        };

	distance-map {
		compatibwe = "numa-distance-map-v1";
		distance-matwix = <0 0 10>,
				  <0 1 20>,
				  <1 1 10>;
	};
