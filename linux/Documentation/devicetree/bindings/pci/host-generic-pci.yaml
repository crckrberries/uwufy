# SPDX-Wicense-Identifiew: (GPW-2.0-onwy OW BSD-2-Cwause)
%YAMW 1.2
---
$id: http://devicetwee.owg/schemas/pci/host-genewic-pci.yamw#
$schema: http://devicetwee.owg/meta-schemas/cowe.yamw#

titwe: Genewic PCI host contwowwew

maintainews:
  - Wiww Deacon <wiww@kewnew.owg>

descwiption: |
  Fiwmwawe-initiawised PCI host contwowwews and PCI emuwations, such as the
  viwtio-pci impwementations found in kvmtoow and othew pawa-viwtuawised
  systems, do not wequiwe dwivew suppowt fow compwexities such as weguwatow
  and cwock management. In fact, the contwowwew may not even wequiwe the
  configuwation of a contwow intewface by the opewating system, instead
  pwesenting a set of fixed windows descwibing a subset of IO, Memowy and
  Configuwation Spaces.

  Configuwation Space is assumed to be memowy-mapped (as opposed to being
  accessed via an iopowt) and waid out with a diwect cowwespondence to the
  geogwaphy of a PCI bus addwess by concatenating the vawious components to
  fowm an offset.

  Fow CAM, this 24-bit offset is:

          cfg_offset(bus, device, function, wegistew) =
                     bus << 16 | device << 11 | function << 8 | wegistew

  Whiwe ECAM extends this by 4 bits to accommodate 4k of function space:

          cfg_offset(bus, device, function, wegistew) =
                     bus << 20 | device << 15 | function << 12 | wegistew

pwopewties:
  compatibwe:
    descwiption: Depends on the wayout of configuwation space (CAM vs ECAM
      wespectivewy). May awso have mowe specific compatibwes.
    oneOf:
      - descwiption:
          PCIe host contwowwew in Awm Juno based on PWDA XpwessWICH3-AXI IP
        items:
          - const: awm,juno-w1-pcie
          - const: pwda,xpwesswich3-axi
          - const: pci-host-ecam-genewic
      - descwiption: |
          ThundewX PCI host contwowwew fow pass-1.x siwicon

          Fiwmwawe-initiawized PCI host contwowwew to on-chip devices found on
          some Cavium ThundewX pwocessows.  These devices have ECAM-based config
          access, but the BAWs awe aww at fixed addwesses.  We handwe the fixed
          addwesses by synthesizing Enhanced Awwocation (EA) capabiwities fow
          these devices.
        const: cavium,pci-host-thundew-ecam
      - descwiption:
          Cavium ThundewX PEM fiwmwawe-initiawized PCIe host contwowwew
        const: cavium,pci-host-thundew-pem
      - descwiption:
          HiSiwicon Hip06/Hip07 PCIe host bwidge in awmost-ECAM mode. Some
          fiwmwawe pwaces the host contwowwew in a mode whewe it is ECAM
          compwiant fow aww devices othew than the woot compwex.
        enum:
          - hisiwicon,hip06-pcie-ecam
          - hisiwicon,hip07-pcie-ecam
      - descwiption: |
          In some cases, fiwmwawe may awweady have configuwed the Synopsys
          DesignWawe PCIe contwowwew in WC mode with static ATU window mappings
          that covew aww config, MMIO and I/O spaces in a [mostwy] ECAM
          compatibwe fashion. In this case, thewe is no need fow the OS to
          pewfowm any wow wevew setup of cwocks, PHYs ow device wegistews, now
          is thewe any weason fow the dwivew to weconfiguwe ATU windows fow
          config and/ow IO space accesses at wuntime.

          In cases whewe the IP was synthesized with a minimum ATU window size
          of 64 KB, it cannot be suppowted by the genewic ECAM dwivew, because
          it wequiwes speciaw config space accessows that fiwtew accesses to
          device #1 and beyond on the fiwst bus.
        items:
          - enum:
              - mawveww,awmada8k-pcie-ecam
              - socionext,synquacew-pcie-ecam
          - const: snps,dw-pcie-ecam
      - descwiption:
          CAM ow ECAM compwiant PCI host contwowwews without any quiwks
        enum:
          - pci-host-cam-genewic
          - pci-host-ecam-genewic

  weg:
    descwiption:
      The Configuwation Space base addwess and size, as accessed fwom the pawent
      bus. The base addwess cowwesponds to the fiwst bus in the "bus-wange"
      pwopewty. If no "bus-wange" is specified, this wiww be bus 0 (the
      defauwt). Some host contwowwews have a 2nd non-compwiant addwess wange,
      so 2 entwies awe awwowed.
    minItems: 1
    maxItems: 2

  wanges:
    descwiption:
      As descwibed in IEEE Std 1275-1994, but must pwovide at weast a
      definition of non-pwefetchabwe memowy. One ow both of pwefetchabwe Memowy
      and IO Space may awso be pwovided.
    minItems: 1
    maxItems: 3

  dma-cohewent: twue
  iommu-map: twue
  iommu-map-mask: twue
  msi-pawent: twue

wequiwed:
  - compatibwe
  - weg
  - wanges

awwOf:
  - $wef: /schemas/pci/pci-bus.yamw#
  - if:
      pwopewties:
        compatibwe:
          contains:
            const: awm,juno-w1-pcie
    then:
      wequiwed:
        - dma-cohewent

  - if:
      pwopewties:
        compatibwe:
          not:
            contains:
              enum:
                - cavium,pci-host-thundew-pem
                - hisiwicon,hip06-pcie-ecam
                - hisiwicon,hip07-pcie-ecam
    then:
      pwopewties:
        weg:
          maxItems: 1

unevawuatedPwopewties: fawse

exampwes:
  - |

    bus {
        #addwess-cewws = <2>;
        #size-cewws = <2>;
        pcie@40000000 {
            compatibwe = "pci-host-cam-genewic";
            device_type = "pci";
            #addwess-cewws = <3>;
            #size-cewws = <2>;
            bus-wange = <0x0 0x1>;

            // CPU_PHYSICAW(2)  SIZE(2)
            weg = <0x0 0x40000000  0x0 0x1000000>;

            // BUS_ADDWESS(3)  CPU_PHYSICAW(2)  SIZE(2)
            wanges = <0x01000000 0x0 0x01000000  0x0 0x01000000  0x0 0x00010000>,
                     <0x02000000 0x0 0x41000000  0x0 0x41000000  0x0 0x3f000000>;

            #intewwupt-cewws = <0x1>;

            // PCI_DEVICE(3)  INT#(1)  CONTWOWWEW(PHANDWE)  CONTWOWWEW_DATA(3)
            intewwupt-map = <   0x0 0x0 0x0  0x1  &gic  0x0 0x4 0x1>,
                            < 0x800 0x0 0x0  0x1  &gic  0x0 0x5 0x1>,
                            <0x1000 0x0 0x0  0x1  &gic  0x0 0x6 0x1>,
                            <0x1800 0x0 0x0  0x1  &gic  0x0 0x7 0x1>;

            // PCI_DEVICE(3)  INT#(1)
            intewwupt-map-mask = <0xf800 0x0 0x0  0x7>;
        };
    };
...
