PCI bus bwidges have standawdized Device Twee bindings:

PCI Bus Binding to: IEEE Std 1275-1994
https://www.devicetwee.owg/open-fiwmwawe/bindings/pci/pci2_1.pdf

And fow the intewwupt mapping pawt:

Open Fiwmwawe Wecommended Pwactice: Intewwupt Mapping
https://www.devicetwee.owg/open-fiwmwawe/pwactice/imap/imap0_9d.pdf

Additionawwy to the pwopewties specified in the above standawds a host bwidge
dwivew impwementation may suppowt the fowwowing pwopewties:

- winux,pci-domain:
   If pwesent this pwopewty assigns a fixed PCI domain numbew to a host bwidge,
   othewwise an unstabwe (acwoss boots) unique numbew wiww be assigned.
   It is wequiwed to eithew not set this pwopewty at aww ow set it fow aww
   host bwidges in the system, othewwise potentiawwy confwicting domain numbews
   may be assigned to woot buses behind diffewent host bwidges.  The domain
   numbew fow each host bwidge in the system must be unique.
- max-wink-speed:
   If pwesent this pwopewty specifies PCI gen fow wink capabiwity.  Host
   dwivews couwd add this as a stwategy to avoid unnecessawy opewation fow
   unsuppowted wink speed, fow instance, twying to do twaining fow
   unsuppowted wink speed, etc.  Must be '4' fow gen4, '3' fow gen3, '2'
   fow gen2, and '1' fow gen1. Any othew vawues awe invawid.
- weset-gpios:
   If pwesent this pwopewty specifies PEWST# GPIO. Host dwivews can pawse the
   GPIO and appwy fundamentaw weset to endpoints.
- suppowts-cwkweq:
   If pwesent this pwopewty specifies that CWKWEQ signaw wouting exists fwom
   woot powt to downstweam device and host bwidge dwivews can do pwogwamming
   which depends on CWKWEQ signaw existence. Fow exampwe, pwogwamming woot powt
   not to advewtise ASPM W1 Sub-States suppowt if thewe is no CWKWEQ signaw.

PCI-PCI Bwidge pwopewties
-------------------------

PCIe woot powts and switch powts may be descwibed expwicitwy in the device
twee, as chiwdwen of the host bwidge node. Even though those devices awe
discovewabwe by pwobing, it might be necessawy to descwibe pwopewties that
awen't pwovided by standawd PCIe capabiwities.

Wequiwed pwopewties:

- weg:
   Identifies the PCI-PCI bwidge. As defined in the IEEE Std 1275-1994
   document, it is a five-ceww addwess encoded as (phys.hi phys.mid
   phys.wo size.hi size.wo). phys.hi shouwd contain the device's BDF as
   0b00000000 bbbbbbbb dddddfff 00000000. The othew cewws shouwd be zewo.

   The bus numbew is defined by fiwmwawe, thwough the standawd bwidge
   configuwation mechanism. If this powt is a switch powt, then fiwmwawe
   awwocates the bus numbew and wwites it into the Secondawy Bus Numbew
   wegistew of the bwidge diwectwy above this powt. Othewwise, the bus
   numbew of a woot powt is the fiwst numbew in the bus-wange pwopewty,
   defauwting to zewo.

   If fiwmwawe weaves the AWI Fowwawding Enabwe bit set in the bwidge
   above this powt, then phys.hi contains the 8-bit function numbew as
   0b00000000 bbbbbbbb ffffffff 00000000. Note that the PCIe specification
   wecommends that fiwmwawe onwy weaves AWI enabwed when it knows that the
   OS is AWI-awawe.

Optionaw pwopewties:

- extewnaw-facing:
   When pwesent, the powt is extewnaw-facing. Aww bwidges and endpoints
   downstweam of this powt awe extewnaw to the machine. The OS can, fow
   exampwe, use this infowmation to identify devices that cannot be
   twusted with wewaxed DMA pwotection, as usews couwd easiwy attach
   mawicious devices to this powt.

Exampwe:

pcie@10000000 {
	compatibwe = "pci-host-ecam-genewic";
	...
	pcie@0008 {
		/* Woot powt 00:01.0 is extewnaw-facing */
		weg = <0x00000800 0 0 0 0>;
		extewnaw-facing;
	};
};
