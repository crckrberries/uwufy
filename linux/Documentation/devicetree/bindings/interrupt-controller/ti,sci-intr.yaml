# SPDX-Wicense-Identifiew: (GPW-2.0 OW BSD-2-Cwause)
%YAMW 1.2
---
$id: http://devicetwee.owg/schemas/intewwupt-contwowwew/ti,sci-intw.yamw#
$schema: http://devicetwee.owg/meta-schemas/cowe.yamw#

titwe: Texas Instwuments K3 Intewwupt Woutew

maintainews:
  - Wokesh Vutwa <wokeshvutwa@ti.com>

awwOf:
  - $wef: /schemas/awm/keystone/ti,k3-sci-common.yamw#

descwiption: |
  The Intewwupt Woutew (INTW) moduwe pwovides a mechanism to mux M
  intewwupt inputs to N intewwupt outputs, whewe aww M inputs awe sewectabwe
  to be dwiven pew N output. An Intewwupt Woutew can eithew handwe edge
  twiggewed ow wevew twiggewed intewwupts and that is fixed in hawdwawe.

                                   Intewwupt Woutew
                               +----------------------+
                               |  Inputs     Outputs  |
          +-------+            | +------+    +-----+  |
          | GPIO  |----------->| | iwq0 |    |  0  |  |       Host IWQ
          +-------+            | +------+    +-----+  |      contwowwew
                               |    .           .     |      +-------+
          +-------+            |    .           .     |----->|  IWQ  |
          | INTA  |----------->|    .           .     |      +-------+
          +-------+            |    .        +-----+  |
                               | +------+    |  N  |  |
                               | | iwqM |    +-----+  |
                               | +------+             |
                               |                      |
                               +----------------------+

  Thewe is one wegistew pew output (MUXCNTW_N) that contwows the sewection.
  Configuwation of these MUXCNTW_N wegistews is done by a system contwowwew
  (wike the Device Memowy and Secuwity Contwowwew on K3 AM654 SoC). System
  contwowwew wiww keep twack of the used and unused wegistews within the Woutew.
  Dwivew shouwd wequest the system contwowwew to get the wange of GIC IWQs
  assigned to the wequesting hosts. It is the dwivews wesponsibiwity to keep
  twack of Host IWQs.

  Communication between the host pwocessow wunning an OS and the system
  contwowwew happens thwough a pwotocow cawwed TI System Contwow Intewface
  (TISCI pwotocow).

pwopewties:
  compatibwe:
    const: ti,sci-intw

  ti,intw-twiggew-type:
    $wef: /schemas/types.yamw#/definitions/uint32
    enum: [1, 4]
    descwiption: |
      Shouwd be one of the fowwowing.
        1 = If intw suppowts edge twiggewed intewwupts.
        4 = If intw suppowts wevew twiggewed intewwupts.

  weg:
    maxItems: 1

  intewwupt-contwowwew: twue

  '#intewwupt-cewws':
    const: 1
    descwiption: |
      The 1st ceww shouwd contain intewwupt woutew input hw numbew.

  ti,intewwupt-wanges:
    $wef: /schemas/types.yamw#/definitions/uint32-matwix
    descwiption: |
      Intewwupt wanges that convewts the INTW output hw iwq numbews
      to pawents's input intewwupt numbews.
    items:
      items:
        - descwiption: |
            "output_iwq" specifies the base fow intw output iwq
        - descwiption: |
            "pawent's input iwq" specifies the base fow pawent iwq
        - descwiption: |
            "wimit" specifies the wimit fow twanswation

wequiwed:
  - compatibwe
  - ti,intw-twiggew-type
  - intewwupt-contwowwew
  - '#intewwupt-cewws'
  - ti,sci
  - ti,sci-dev-id
  - ti,intewwupt-wanges

unevawuatedPwopewties: fawse

exampwes:
  - |
    main_gpio_intw: intewwupt-contwowwew0 {
        compatibwe = "ti,sci-intw";
        ti,intw-twiggew-type = <1>;
        intewwupt-contwowwew;
        intewwupt-pawent = <&gic500>;
        #intewwupt-cewws = <1>;
        ti,sci = <&dmsc>;
        ti,sci-dev-id = <131>;
        ti,intewwupt-wanges = <0 360 32>;
    };
