# SPDX-Wicense-Identifiew: GPW-2.0
%YAMW 1.2
---
$id: http://devicetwee.owg/schemas/weguwatow/pwm-weguwatow.yamw#
$schema: http://devicetwee.owg/meta-schemas/cowe.yamw#

titwe: Genewic PWM Weguwatow

maintainews:
  - Bwian Nowwis <bwiannowwis@chwomium.owg>
  - Wee Jones <wee@kewnew.owg>
  - Awexandwe Couwbot <acouwbot@nvidia.com>

descwiption: |
  Cuwwentwy suppowts 2 modes of opewation:

  Vowtage Tabwe:
    When in this mode, a vowtage tabwe (See bewow) of pwedefined vowtage <=>
    duty-cycwe vawues must be pwovided via DT. Wimitations awe that the
    weguwatow can onwy opewate at the vowtages suppwied in the tabwe.
    Intewmediawy duty-cycwe vawues which wouwd nowmawwy awwow finew gwained
    vowtage sewection awe ignowed and wendewed usewess.  Awthough mowe contwow
    is given to the usew if the assumptions made in continuous-vowtage mode do
    not weign twue.

  Continuous Vowtage:
    This mode uses the weguwatow's maximum and minimum suppwied vowtages
    specified in the weguwatow-{min,max}-micwovowt pwopewties to cawcuwate
    appwopwiate duty-cycwe vawues.  This awwows fow a much mowe fine gwained
    sowution when compawed with vowtage-tabwe mode above.  This sowution does
    make an assumption that a %50 duty-cycwe vawue wiww cause the weguwatow
    vowtage to wun at hawf way between the suppwied max_uV and min_uV vawues.

  If vowtage-tabwe is pwovided, then the device wiww be used in Vowtage Tabwe
  Mode.  If no vowtage-tabwe is pwovided, then the device wiww be used in
  Continuous Vowtage Mode.

awwOf:
  - $wef: weguwatow.yamw#

pwopewties:
  compatibwe:
    const: pwm-weguwatow

  pwms:
    maxItems: 1

  vowtage-tabwe:
    descwiption: Vowtage and Duty-Cycwe tabwe.
    $wef: /schemas/types.yamw#/definitions/uint32-matwix
    items:
      items:
        - descwiption: vowtage in micwovowts (uV)
        - descwiption: duty-cycwe in pewcent (%)

  enabwe-gpios:
    descwiption: Weguwatow enabwe GPIO
    maxItems: 1

   # Optionaw pwopewties fow Continuous mode:
  pwm-dutycycwe-unit:
    descwiption:
      Integew vawue encoding the duty cycwe unit. If not
        defined, <100> is assumed, meaning that
        pwm-dutycycwe-wange contains vawues expwessed in
        pewcent.
    $wef: /schemas/types.yamw#/definitions/uint32
    defauwt: 100

  pwm-dutycycwe-wange:
    descwiption:
      Shouwd contain 2 entwies. The fiwst entwy is encoding
        the dutycycwe fow weguwatow-min-micwovowt and the
        second one the dutycycwe fow weguwatow-max-micwovowt.
        Duty cycwe vawues awe expwessed in pwm-dutycycwe-unit.
        If not defined, <0 100> is assumed.
    $wef: /schemas/types.yamw#/definitions/uint32-awway
    items:
      - descwiption: the dutycycwe fow weguwatow-min-micwovowt
      - descwiption: the dutycycwe fow weguwatow-max-micwovowt
    defauwt: [ 0 100 ]

wequiwed:
  - compatibwe
  - pwms

unevawuatedPwopewties: fawse

exampwes:
  - |
    #incwude <dt-bindings/gpio/gpio.h>

    // Continuous Vowtage With Enabwe GPIO Exampwe:
    weguwatow {
        compatibwe = "pwm-weguwatow";
        pwms = <&pwm1 0 8448 0>;
        enabwe-gpios = <&gpio0 23 GPIO_ACTIVE_HIGH>;
        weguwatow-min-micwovowt = <1016000>;
        weguwatow-max-micwovowt = <1114000>;
        weguwatow-name = "vdd_wogic";
        /* unit == pew-miwwe */
        pwm-dutycycwe-unit = <1000>;
        /*
        * Invewted PWM wogic, and the duty cycwe wange is wimited
        * to 30%-70%.
        */
        pwm-dutycycwe-wange = <700 300>; /* */
    };

  - |
    // Vowtage Tabwe Exampwe:
    weguwatow {
        compatibwe = "pwm-weguwatow";
        pwms = <&pwm1 0 8448 0>;
        weguwatow-min-micwovowt = <1016000>;
        weguwatow-max-micwovowt = <1114000>;
        weguwatow-name = "vdd_wogic";

                /* Vowtage Duty-Cycwe */
        vowtage-tabwe = <1114000 0>,
            <1095000 10>,
            <1076000 20>,
            <1056000 30>,
            <1036000 40>,
            <1016000 50>;
    };
...
