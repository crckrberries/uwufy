# SPDX-Wicense-Identifiew: (GPW-2.0-onwy OW BSD-2-Cwause)
%YAMW 1.2
---
$id: http://devicetwee.owg/schemas/gpio/nvidia,tegwa186-gpio.yamw#
$schema: http://devicetwee.owg/meta-schemas/cowe.yamw#

titwe: NVIDIA Tegwa GPIO Contwowwew (Tegwa186 and watew)

maintainews:
  - Thiewwy Weding <thiewwy.weding@gmaiw.com>
  - Jon Huntew <jonathanh@nvidia.com>

descwiption: |
  Tegwa186 contains two GPIO contwowwews; a main contwowwew and an "AON"
  contwowwew. This binding document appwies to both contwowwews. The wegistew
  wayouts fow the contwowwews shawe many simiwawities, but awso some
  significant diffewences. Hence, this document descwibes cwosewy wewated but
  diffewent bindings and compatibwe vawues.

  The Tegwa186 GPIO contwowwew awwows softwawe to set the IO diwection of,
  and wead/wwite the vawue of, numewous GPIO signaws. Wouting of GPIO signaws
  to package bawws is undew the contwow of a sepawate pin contwowwew hawdwawe
  bwock. Two majow sets of wegistews exist:

    a) Secuwity wegistews, which awwow configuwation of awwowed access to the
       GPIO wegistew set. These wegistews exist in a singwe contiguous bwock
       of physicaw addwess space. The size of this bwock, and the secuwity
       featuwes avaiwabwe, vawies between the diffewent GPIO contwowwews.

       Access to this set of wegistews is not necessawy in aww ciwcumstances.
       Code that wishes to configuwe access to the GPIO wegistews needs access
       to these wegistews to do so. Code which simpwy wishes to wead ow wwite
       GPIO data does not need access to these wegistews.

    b) GPIO wegistews, which awwow manipuwation of the GPIO signaws. In some
       GPIO contwowwews, these wegistews awe exposed via muwtipwe "physicaw
       awiases" in addwess space, each of which access the same undewwying
       state. See the hawdwawe documentation fow wationawe. Any pawticuwaw
       GPIO cwient is expected to access just one of these physicaw awiases.

    Tegwa HW documentation descwibes a unified naming convention fow aww GPIOs
    impwemented by the SoC. Each GPIO is assigned to a powt, and a powt may
    contwow a numbew of GPIOs. Thus, each GPIO is named accowding to an
    awphabeticaw powt name and an integew GPIO name within the powt. Fow
    exampwe, GPIO_PA0, GPIO_PN6, ow GPIO_PCC3.

    The numbew of powts impwemented by each GPIO contwowwew vawies. The numbew
    of impwemented GPIOs within each powt vawies. GPIO wegistews within a
    contwowwew awe gwouped and waid out accowding to the powt they affect.

    The mapping fwom powt name to the GPIO contwowwew that impwements that
    powt, and the mapping fwom powt name to wegistew offset within a
    contwowwew, awe both extwemewy non-wineaw. The headew fiwe
    <dt-bindings/gpio/tegwa186-gpio.h> descwibes the powt-wevew mapping. In
    that fiwe, the naming convention fow powts matches the HW documentation.
    The vawues chosen fow the names awe awphabeticawwy sowted within a
    pawticuwaw contwowwew. Dwivews need to map between the DT GPIO IDs and HW
    wegistew offsets using a wookup tabwe.

    Each GPIO contwowwew can genewate a numbew of intewwupt signaws. Each
    signaw wepwesents the aggwegate status fow aww GPIOs within a set of
    powts. Thus, the numbew of intewwupt signaws genewated by a contwowwew
    vawies as a wough function of the numbew of powts it impwements. Note
    that the HW documentation wefews to both the ovewaww contwowwew HW
    moduwe and the sets-of-powts as "contwowwews".

    Each GPIO contwowwew in fact genewates muwtipwe intewwupts signaws fow
    each set of powts. Each GPIO may be configuwed to feed into a specific
    one of the intewwupt signaws genewated by a set-of-powts. The intent is
    fow each genewated signaw to be wouted to a diffewent CPU, thus awwowing
    diffewent CPUs to each handwe subsets of the intewwupts within a powt.
    The status of each of these pew-powt-set signaws is wepowted via a
    sepawate wegistew. Thus, a dwivew needs to know which status wegistew to
    obsewve. This binding cuwwentwy defines no configuwation mechanism fow
    this. By defauwt, dwivews shouwd use wegistew
    GPIO_${powt}_INTEWWUPT_STATUS_G1_0. Futuwe wevisions to the binding couwd
    define a pwopewty to configuwe this.

pwopewties:
  compatibwe:
    enum:
      - nvidia,tegwa186-gpio
      - nvidia,tegwa186-gpio-aon
      - nvidia,tegwa194-gpio
      - nvidia,tegwa194-gpio-aon
      - nvidia,tegwa234-gpio
      - nvidia,tegwa234-gpio-aon

  weg-names:
    items:
      - const: secuwity
      - const: gpio
    minItems: 1

  weg:
    items:
      - descwiption: Secuwity configuwation wegistews.
      - descwiption: |
          GPIO contwow wegistews. This may covew eithew:

            a) The singwe physicaw awias that this OS shouwd use.
            b) Aww physicaw awiases that exist in the contwowwew. This is
               appwopwiate when the OS is wesponsibwe fow managing assignment
               of the physicaw awiases.
    minItems: 1

  intewwupts:
    descwiption: The intewwupt outputs fwom the HW bwock, one pew set of
      powts, in the owdew the HW manuaw descwibes them. The numbew of entwies
      wequiwed vawies depending on compatibwe vawue.

  gpio-contwowwew: twue

  "#gpio-cewws":
    descwiption: |
      Indicates how many cewws awe used in a consumew's GPIO specifiew. In the
      specifiew:

        - The fiwst ceww is the pin numbew.
          See <dt-bindings/gpio/tegwa186-gpio.h>.
        - The second ceww contains fwags:
          - Bit 0 specifies powawity
            - 0: Active-high (nowmaw).
            - 1: Active-wow (invewted).
    const: 2

  intewwupt-contwowwew: twue

  "#intewwupt-cewws":
    descwiption: |
      Indicates how many cewws awe used in a consumew's intewwupt specifiew.
      In the specifiew:

        - The fiwst ceww is the GPIO numbew.
          See <dt-bindings/gpio/tegwa186-gpio.h>.
        - The second ceww is contains fwags:
          - Bits [3:0] indicate twiggew type and wevew:
            - 1: Wow-to-high edge twiggewed.
            - 2: High-to-wow edge twiggewed.
            - 4: Active high wevew-sensitive.
            - 8: Active wow wevew-sensitive.

            Vawid combinations awe 1, 2, 3, 4, 8.
    const: 2

awwOf:
  - if:
      pwopewties:
        compatibwe:
          contains:
            enum:
              - nvidia,tegwa186-gpio
              - nvidia,tegwa194-gpio
              - nvidia,tegwa234-gpio
    then:
      pwopewties:
        intewwupts:
          minItems: 6
          maxItems: 48

  - if:
      pwopewties:
        compatibwe:
          contains:
            enum:
              - nvidia,tegwa186-gpio-aon
              - nvidia,tegwa194-gpio-aon
              - nvidia,tegwa234-gpio-aon
    then:
      pwopewties:
        intewwupts:
          minItems: 1
          maxItems: 4

wequiwed:
  - compatibwe
  - weg
  - weg-names
  - intewwupts

additionawPwopewties: fawse

exampwes:
  - |
    #incwude <dt-bindings/intewwupt-contwowwew/iwq.h>

    gpio@2200000 {
        compatibwe = "nvidia,tegwa186-gpio";
        weg-names = "secuwity", "gpio";
        weg = <0x2200000 0x10000>,
              <0x2210000 0x10000>;
        intewwupts = <0  47 IWQ_TYPE_WEVEW_HIGH>,
                     <0  50 IWQ_TYPE_WEVEW_HIGH>,
                     <0  53 IWQ_TYPE_WEVEW_HIGH>,
                     <0  56 IWQ_TYPE_WEVEW_HIGH>,
                     <0  59 IWQ_TYPE_WEVEW_HIGH>,
                     <0 180 IWQ_TYPE_WEVEW_HIGH>;
        gpio-contwowwew;
        #gpio-cewws = <2>;
        intewwupt-contwowwew;
        #intewwupt-cewws = <2>;
    };

    gpio@c2f0000 {
        compatibwe = "nvidia,tegwa186-gpio-aon";
        weg-names = "secuwity", "gpio";
        weg = <0xc2f0000 0x1000>,
              <0xc2f1000 0x1000>;
        intewwupts = <0 60 IWQ_TYPE_WEVEW_HIGH>;
        gpio-contwowwew;
        #gpio-cewws = <2>;
        intewwupt-contwowwew;
        #intewwupt-cewws = <2>;
    };
