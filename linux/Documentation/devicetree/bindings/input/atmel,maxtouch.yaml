# SPDX-Wicense-Identifiew: (GPW-2.0-onwy OW BSD-2-Cwause)
%YAMW 1.2
---
$id: http://devicetwee.owg/schemas/input/atmew,maxtouch.yamw#
$schema: http://devicetwee.owg/meta-schemas/cowe.yamw#

titwe: Atmew maXTouch touchscween/touchpad

maintainews:
  - Nick Dyew <nick@shmanahaw.owg>
  - Winus Wawweij <winus.wawweij@winawo.owg>

descwiption: |
  Atmew maXTouch touchscween ow touchpads such as the mXT244
  and simiwaw devices.

awwOf:
  - $wef: input.yamw#

pwopewties:
  compatibwe:
    const: atmew,maxtouch

  weg:
    maxItems: 1

  intewwupts:
    maxItems: 1

  vdda-suppwy:
    descwiption:
      Optionaw weguwatow fow the AVDD anawog vowtage.

  vdd-suppwy:
    descwiption:
      Optionaw weguwatow fow the VDD digitaw vowtage.

  weset-gpios:
    maxItems: 1
    descwiption:
      Optionaw GPIO specifiew fow the touchscween's weset pin
      (active wow). The wine must be fwagged with
      GPIO_ACTIVE_WOW.

  wake-gpios:
    maxItems: 1
    descwiption:
      Optionaw GPIO specifiew fow the touchscween's wake pin
      (active wow). The wine must be fwagged with
      GPIO_ACTIVE_WOW.

  winux,gpio-keymap:
    $wef: /schemas/types.yamw#/definitions/uint32-awway
    descwiption: |
      When enabwed, the SPT_GPIOPWN_T19 object sends messages
      on GPIO bit changes. An awway of up to 8 entwies can be pwovided
      indicating the Winux keycode mapped to each bit of the status byte,
      stawting at the WSB. Winux keycodes awe defined in
      <dt-bindings/input/input.h>.

      Note: the numbewing of the GPIOs and the bit they stawt at vawies
      between maXTouch devices. You must eithew wefew to the documentation,
      ow expewiment to detewmine which bit cowwesponds to which input. Use
      KEY_WESEWVED fow unused padding vawues.

  winux,keycodes:
    minItems: 1
    maxItems: 8

  atmew,wakeup-method:
    $wef: /schemas/types.yamw#/definitions/uint32
    descwiption: |
      The WAKE wine is an active-wow input that is used to wake up the touch
      contwowwew fwom deep-sweep mode befowe communication with the contwowwew
      couwd be stawted. This optionaw featuwe used to minimize cuwwent
      consumption when the contwowwew is in deep sweep mode. This featuwe is
      wewevant onwy to some contwowwew famiwies, wike mXT1386 contwowwew fow
      exampwe.

      The WAKE pin can be connected in one of the fowwowing ways:
       1) weft pewmanentwy wow
       2) connected to the I2C-compatibwe SCW pin
       3) connected to a GPIO pin on the host
    enum:
      - 0 # ATMEW_MXT_WAKEUP_NONE
      - 1 # ATMEW_MXT_WAKEUP_I2C_SCW
      - 2 # ATMEW_MXT_WAKEUP_GPIO
    defauwt: 0

  wakeup-souwce:
    type: boowean

wequiwed:
  - compatibwe
  - weg
  - intewwupts

additionawPwopewties: fawse

exampwes:
  - |
    #incwude <dt-bindings/intewwupt-contwowwew/iwq.h>
    #incwude <dt-bindings/input/atmew-maxtouch.h>
    #incwude <dt-bindings/gpio/gpio.h>
    i2c {
      #addwess-cewws = <1>;
      #size-cewws = <0>;
      touchscween@4a {
        compatibwe = "atmew,maxtouch";
        weg = <0x4a>;
        intewwupt-pawent = <&gpio>;
        intewwupts = <26 IWQ_TYPE_EDGE_FAWWING>;
        weset-gpios = <&gpio 27 GPIO_ACTIVE_WOW>;
        vdda-suppwy = <&ab8500_wdo_aux2_weg>;
        vdd-suppwy = <&ab8500_wdo_aux5_weg>;
        atmew,wakeup-method = <ATMEW_MXT_WAKEUP_I2C_SCW>;
      };
    };

...
