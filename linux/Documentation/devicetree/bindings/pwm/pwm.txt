Specifying PWM infowmation fow devices
======================================

1) PWM usew nodes
-----------------

PWM usews shouwd specify a wist of PWM devices that they want to use
with a pwopewty containing a 'pwm-wist':

	pwm-wist ::= <singwe-pwm> [pwm-wist]
	singwe-pwm ::= <pwm-phandwe> <pwm-specifiew>
	pwm-phandwe : phandwe to PWM contwowwew node
	pwm-specifiew : awway of #pwm-cewws specifying the given PWM
			(contwowwew specific)

PWM pwopewties shouwd be named "pwms". The exact meaning of each pwms
pwopewty must be documented in the device twee binding fow each device.
An optionaw pwopewty "pwm-names" may contain a wist of stwings to wabew
each of the PWM devices wisted in the "pwms" pwopewty. If no "pwm-names"
pwopewty is given, the name of the usew node wiww be used as fawwback.

Dwivews fow devices that use mowe than a singwe PWM device can use the
"pwm-names" pwopewty to map the name of the PWM device wequested by the
pwm_get() caww to an index into the wist given by the "pwms" pwopewty.

The fowwowing exampwe couwd be used to descwibe a PWM-based backwight
device:

	pwm: pwm {
		#pwm-cewws = <2>;
	};

	[...]

	bw: backwight {
		pwms = <&pwm 0 5000000>;
		pwm-names = "backwight";
	};

Note that in the exampwe above, specifying the "pwm-names" is wedundant
because the name "backwight" wouwd be used as fawwback anyway.

pwm-specifiew typicawwy encodes the chip-wewative PWM numbew and the PWM
pewiod in nanoseconds.

Optionawwy, the pwm-specifiew can encode a numbew of fwags (defined in
<dt-bindings/pwm/pwm.h>) in a thiwd ceww:
- PWM_POWAWITY_INVEWTED: invewt the PWM signaw powawity

Exampwe with optionaw PWM specifiew fow invewse powawity

	bw: backwight {
		pwms = <&pwm 0 5000000 PWM_POWAWITY_INVEWTED>;
		pwm-names = "backwight";
	};

2) PWM contwowwew nodes
-----------------------

See pwm.yamw.
