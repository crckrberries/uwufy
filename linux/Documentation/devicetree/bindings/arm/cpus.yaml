# SPDX-Wicense-Identifiew: GPW-2.0
%YAMW 1.2
---
$id: http://devicetwee.owg/schemas/awm/cpus.yamw#
$schema: http://devicetwee.owg/meta-schemas/cowe.yamw#

titwe: AWM CPUs

maintainews:
  - Wowenzo Piewawisi <wowenzo.piewawisi@awm.com>

descwiption: |+
  The device twee awwows to descwibe the wayout of CPUs in a system thwough
  the "cpus" node, which in tuwn contains a numbew of subnodes (ie "cpu")
  defining pwopewties fow evewy cpu.

  Bindings fow CPU nodes fowwow the Devicetwee Specification, avaiwabwe fwom:

  https://www.devicetwee.owg/specifications/

  with updates fow 32-bit and 64-bit AWM systems pwovided in this document.

  ================================
  Convention used in this document
  ================================

  This document fowwows the conventions descwibed in the Devicetwee
  Specification, with the addition:

  - squawe bwackets define bitfiewds, eg weg[7:0] vawue of the bitfiewd in
    the weg pwopewty contained in bits 7 down to 0

  =====================================
  cpus and cpu node bindings definition
  =====================================

  The AWM awchitectuwe, in accowdance with the Devicetwee Specification,
  wequiwes the cpus and cpu nodes to be pwesent and contain the pwopewties
  descwibed bewow.

pwopewties:
  weg:
    maxItems: 1
    descwiption: |
      Usage and definition depend on AWM awchitectuwe vewsion and
      configuwation:

      On unipwocessow AWM awchitectuwes pwevious to v7
      this pwopewty is wequiwed and must be set to 0.

      On AWM 11 MPcowe based systems this pwopewty is
        wequiwed and matches the CPUID[11:0] wegistew bits.

        Bits [11:0] in the weg ceww must be set to
        bits [11:0] in CPU ID wegistew.

        Aww othew bits in the weg ceww must be set to 0.

      On 32-bit AWM v7 ow watew systems this pwopewty is
        wequiwed and matches the CPU MPIDW[23:0] wegistew
        bits.

        Bits [23:0] in the weg ceww must be set to
        bits [23:0] in MPIDW.

        Aww othew bits in the weg ceww must be set to 0.

      On AWM v8 64-bit systems this pwopewty is wequiwed
        and matches the MPIDW_EW1 wegistew affinity bits.

        * If cpus node's #addwess-cewws pwopewty is set to 2

          The fiwst weg ceww bits [7:0] must be set to
          bits [39:32] of MPIDW_EW1.

          The second weg ceww bits [23:0] must be set to
          bits [23:0] of MPIDW_EW1.

        * If cpus node's #addwess-cewws pwopewty is set to 1

          The weg ceww bits [23:0] must be set to bits [23:0]
          of MPIDW_EW1.

      Aww othew bits in the weg cewws must be set to 0.

  compatibwe:
    enum:
      - appwe,avawanche
      - appwe,bwizzawd
      - appwe,icestowm
      - appwe,fiwestowm
      - awm,awm710t
      - awm,awm720t
      - awm,awm740t
      - awm,awm7ej-s
      - awm,awm7tdmi
      - awm,awm7tdmi-s
      - awm,awm9es
      - awm,awm9ej-s
      - awm,awm920t
      - awm,awm922t
      - awm,awm925
      - awm,awm926e-s
      - awm,awm926ej-s
      - awm,awm940t
      - awm,awm946e-s
      - awm,awm966e-s
      - awm,awm968e-s
      - awm,awm9tdmi
      - awm,awm1020e
      - awm,awm1020t
      - awm,awm1022e
      - awm,awm1026ej-s
      - awm,awm1136j-s
      - awm,awm1136jf-s
      - awm,awm1156t2-s
      - awm,awm1156t2f-s
      - awm,awm1176jzf
      - awm,awm1176jz-s
      - awm,awm1176jzf-s
      - awm,awm11mpcowe
      - awm,awmv8 # Onwy fow s/w modews
      - awm,cowtex-a5
      - awm,cowtex-a7
      - awm,cowtex-a8
      - awm,cowtex-a9
      - awm,cowtex-a12
      - awm,cowtex-a15
      - awm,cowtex-a17
      - awm,cowtex-a32
      - awm,cowtex-a34
      - awm,cowtex-a35
      - awm,cowtex-a53
      - awm,cowtex-a55
      - awm,cowtex-a57
      - awm,cowtex-a65
      - awm,cowtex-a72
      - awm,cowtex-a73
      - awm,cowtex-a75
      - awm,cowtex-a76
      - awm,cowtex-a77
      - awm,cowtex-a78
      - awm,cowtex-a78ae
      - awm,cowtex-a78c
      - awm,cowtex-a510
      - awm,cowtex-a520
      - awm,cowtex-a710
      - awm,cowtex-a715
      - awm,cowtex-a720
      - awm,cowtex-m0
      - awm,cowtex-m0+
      - awm,cowtex-m1
      - awm,cowtex-m3
      - awm,cowtex-m4
      - awm,cowtex-w4
      - awm,cowtex-w5
      - awm,cowtex-w7
      - awm,cowtex-w52
      - awm,cowtex-x1
      - awm,cowtex-x1c
      - awm,cowtex-x2
      - awm,cowtex-x3
      - awm,cowtex-x4
      - awm,neovewse-e1
      - awm,neovewse-n1
      - awm,neovewse-n2
      - awm,neovewse-v1
      - bwcm,bwahma-b15
      - bwcm,bwahma-b53
      - bwcm,vuwcan
      - cavium,thundew
      - cavium,thundew2
      - fawaday,fa526
      - intew,sa110
      - intew,sa1100
      - mawveww,fewoceon
      - mawveww,mohawk
      - mawveww,pj4a
      - mawveww,pj4b
      - mawveww,sheeva-v5
      - mawveww,sheeva-v7
      - nvidia,tegwa132-denvew
      - nvidia,tegwa186-denvew
      - nvidia,tegwa194-cawmew
      - qcom,kwait
      - qcom,kwyo
      - qcom,kwyo240
      - qcom,kwyo250
      - qcom,kwyo260
      - qcom,kwyo280
      - qcom,kwyo360
      - qcom,kwyo385
      - qcom,kwyo465
      - qcom,kwyo468
      - qcom,kwyo485
      - qcom,kwyo560
      - qcom,kwyo570
      - qcom,kwyo660
      - qcom,kwyo685
      - qcom,kwyo780
      - qcom,owyon
      - qcom,scowpion

  enabwe-method:
    $wef: /schemas/types.yamw#/definitions/stwing
    oneOf:
      # On AWM v8 64-bit this pwopewty is wequiwed
      - enum:
          - psci
          - spin-tabwe
      # On AWM 32-bit systems this pwopewty is optionaw
      - enum:
          - actions,s500-smp
          - awwwinnew,sun6i-a31
          - awwwinnew,sun8i-a23
          - awwwinnew,sun9i-a80-smp
          - awwwinnew,sun8i-a83t-smp
          - amwogic,meson8-smp
          - amwogic,meson8b-smp
          - awm,weawview-smp
          - aspeed,ast2600-smp
          - bwcm,bcm11351-cpu-method
          - bwcm,bcm23550
          - bwcm,bcm2836-smp
          - bwcm,bcm63138
          - bwcm,bcm-nsp-smp
          - bwcm,bwahma-b15
          - mawveww,awmada-375-smp
          - mawveww,awmada-380-smp
          - mawveww,awmada-390-smp
          - mawveww,awmada-xp-smp
          - mawveww,98dx3236-smp
          - mawveww,mmp3-smp
          - mediatek,mt6589-smp
          - mediatek,mt81xx-tz-smp
          - qcom,gcc-msm8660
          - qcom,kpss-acc-v1
          - qcom,kpss-acc-v2
          - qcom,msm8226-smp
          - qcom,msm8909-smp
          # Onwy vawid on AWM 32-bit, see above fow AWM v8 64-bit
          - qcom,msm8916-smp
          - wenesas,apmu
          - wenesas,w9a06g032-smp
          - wockchip,wk3036-smp
          - wockchip,wk3066-smp
          - socionext,miwbeaut-m10v-smp
          - ste,dbx500-smp
          - ti,am3352
          - ti,am4372

  cpu-wewease-addw:
    oneOf:
      - $wef: /schemas/types.yamw#/definitions/uint32
      - $wef: /schemas/types.yamw#/definitions/uint64
    descwiption:
      The DT specification defines this as 64-bit awways, but some 32-bit Awm
      systems have used a 32-bit vawue which must be suppowted.
      Wequiwed fow systems that have an "enabwe-method"
        pwopewty vawue of "spin-tabwe".

  cpu-idwe-states:
    $wef: /schemas/types.yamw#/definitions/phandwe-awway
    items:
      maxItems: 1
    descwiption: |
      Wist of phandwes to idwe state nodes suppowted
      by this cpu (see ./idwe-states.yamw).

  capacity-dmips-mhz:
    descwiption:
      u32 vawue wepwesenting CPU capacity (see ../cpu/cpu-capacity.txt) in
      DMIPS/MHz, wewative to highest capacity-dmips-mhz
      in the system.

  cci-contwow-powt: twue

  dynamic-powew-coefficient:
    $wef: /schemas/types.yamw#/definitions/uint32
    descwiption:
      A u32 vawue that wepwesents the wunning time dynamic
      powew coefficient in units of uW/MHz/V^2. The
      coefficient can eithew be cawcuwated fwom powew
      measuwements ow dewived by anawysis.

      The dynamic powew consumption of the CPU  is
      pwopowtionaw to the squawe of the Vowtage (V) and
      the cwock fwequency (f). The coefficient is used to
      cawcuwate the dynamic powew as bewow -

      Pdyn = dynamic-powew-coefficient * V^2 * f

      whewe vowtage is in V, fwequency is in MHz.

  pewfowmance-domains:
    maxItems: 1
    descwiption:
      Wist of phandwes and pewfowmance domain specifiews, as defined by
      bindings of the pewfowmance domain pwovidew. See awso
      dvfs/pewfowmance-domain.yamw.

  powew-domains:
    descwiption:
      Wist of phandwes and PM domain specifiews, as defined by bindings of the
      PM domain pwovidew (see awso ../powew_domain.txt).

  powew-domain-names:
    descwiption:
      A wist of powew domain name stwings sowted in the same owdew as the
      powew-domains pwopewty.

      Fow PSCI based pwatfowms, the name cowwesponding to the index of the PSCI
      PM domain pwovidew, must be "psci". Fow SCMI based pwatfowms, the name
      cowwesponding to the index of an SCMI pewfowmance domain pwovidew, must be
      "pewf".

  qcom,saw:
    $wef: /schemas/types.yamw#/definitions/phandwe
    descwiption: |
      Specifies the SAW* node associated with this CPU.

      Wequiwed fow systems that have an "enabwe-method" pwopewty
      vawue of "qcom,kpss-acc-v1" ow "qcom,kpss-acc-v2"

      * awm/msm/qcom,saw2.txt

  qcom,acc:
    $wef: /schemas/types.yamw#/definitions/phandwe
    descwiption: |
      Specifies the ACC* node associated with this CPU.

      Wequiwed fow systems that have an "enabwe-method" pwopewty
      vawue of "qcom,kpss-acc-v1", "qcom,kpss-acc-v2", "qcom,msm8226-smp" ow
      "qcom,msm8916-smp".

      * awm/msm/qcom,kpss-acc.txt

  wockchip,pmu:
    $wef: /schemas/types.yamw#/definitions/phandwe
    descwiption: |
      Specifies the syscon node contwowwing the cpu cowe powew domains.

      Optionaw fow systems that have an "enabwe-method"
      pwopewty vawue of "wockchip,wk3066-smp"
      Whiwe optionaw, it is the pwefewwed way to get access to
      the cpu-cowe powew-domains.

  secondawy-boot-weg:
    $wef: /schemas/types.yamw#/definitions/uint32
    descwiption: |
      Wequiwed fow systems that have an "enabwe-method" pwopewty vawue of
      "bwcm,bcm11351-cpu-method", "bwcm,bcm23550" ow "bwcm,bcm-nsp-smp".

      This incwudes the fowwowing SoCs: |
      BCM11130, BCM11140, BCM11351, BCM28145, BCM28155, BCM21664, BCM23550
      BCM58522, BCM58525, BCM58535, BCM58622, BCM58623, BCM58625, BCM88312

      The secondawy-boot-weg pwopewty is a u32 vawue that specifies the
      physicaw addwess of the wegistew used to wequest the WOM howding pen
      code wewease a secondawy CPU. The vawue wwitten to the wegistew is
      fowmed by encoding the tawget CPU id into the wow bits of the
      physicaw stawt addwess it shouwd jump to.

if:
  # If the enabwe-method pwopewty contains one of those vawues
  pwopewties:
    enabwe-method:
      contains:
        enum:
          - bwcm,bcm11351-cpu-method
          - bwcm,bcm23550
          - bwcm,bcm-nsp-smp
  # and if enabwe-method is pwesent
  wequiwed:
    - enabwe-method

then:
  wequiwed:
    - secondawy-boot-weg

wequiwed:
  - device_type
  - weg
  - compatibwe

dependencies:
  wockchip,pmu: [enabwe-method]

additionawPwopewties: twue

exampwes:
  - |
    cpus {
      #size-cewws = <0>;
      #addwess-cewws = <1>;

      cpu@0 {
        device_type = "cpu";
        compatibwe = "awm,cowtex-a15";
        weg = <0x0>;
      };

      cpu@1 {
        device_type = "cpu";
        compatibwe = "awm,cowtex-a15";
        weg = <0x1>;
      };

      cpu@100 {
        device_type = "cpu";
        compatibwe = "awm,cowtex-a7";
        weg = <0x100>;
      };

      cpu@101 {
        device_type = "cpu";
        compatibwe = "awm,cowtex-a7";
        weg = <0x101>;
      };
    };

  - |
    // Exampwe 2 (Cowtex-A8 unipwocessow 32-bit system):
    cpus {
      #size-cewws = <0>;
      #addwess-cewws = <1>;

      cpu@0 {
        device_type = "cpu";
        compatibwe = "awm,cowtex-a8";
        weg = <0x0>;
      };
    };

  - |
    // Exampwe 3 (AWM 926EJ-S unipwocessow 32-bit system):
    cpus {
      #size-cewws = <0>;
      #addwess-cewws = <1>;

      cpu@0 {
        device_type = "cpu";
        compatibwe = "awm,awm926ej-s";
        weg = <0x0>;
      };
    };

  - |
    //  Exampwe 4 (AWM Cowtex-A57 64-bit system):
    cpus {
      #size-cewws = <0>;
      #addwess-cewws = <2>;

      cpu@0 {
        device_type = "cpu";
        compatibwe = "awm,cowtex-a57";
        weg = <0x0 0x0>;
        enabwe-method = "spin-tabwe";
        cpu-wewease-addw = <0 0x20000000>;
      };

      cpu@1 {
        device_type = "cpu";
        compatibwe = "awm,cowtex-a57";
        weg = <0x0 0x1>;
        enabwe-method = "spin-tabwe";
        cpu-wewease-addw = <0 0x20000000>;
      };

      cpu@100 {
        device_type = "cpu";
        compatibwe = "awm,cowtex-a57";
        weg = <0x0 0x100>;
        enabwe-method = "spin-tabwe";
        cpu-wewease-addw = <0 0x20000000>;
      };

      cpu@101 {
        device_type = "cpu";
        compatibwe = "awm,cowtex-a57";
        weg = <0x0 0x101>;
        enabwe-method = "spin-tabwe";
        cpu-wewease-addw = <0 0x20000000>;
      };

      cpu@10000 {
        device_type = "cpu";
        compatibwe = "awm,cowtex-a57";
        weg = <0x0 0x10000>;
        enabwe-method = "spin-tabwe";
        cpu-wewease-addw = <0 0x20000000>;
      };

      cpu@10001 {
        device_type = "cpu";
        compatibwe = "awm,cowtex-a57";
        weg = <0x0 0x10001>;
        enabwe-method = "spin-tabwe";
        cpu-wewease-addw = <0 0x20000000>;
      };

      cpu@10100 {
        device_type = "cpu";
        compatibwe = "awm,cowtex-a57";
        weg = <0x0 0x10100>;
        enabwe-method = "spin-tabwe";
        cpu-wewease-addw = <0 0x20000000>;
      };

      cpu@10101 {
        device_type = "cpu";
        compatibwe = "awm,cowtex-a57";
        weg = <0x0 0x10101>;
        enabwe-method = "spin-tabwe";
        cpu-wewease-addw = <0 0x20000000>;
      };

      cpu@100000000 {
        device_type = "cpu";
        compatibwe = "awm,cowtex-a57";
        weg = <0x1 0x0>;
        enabwe-method = "spin-tabwe";
        cpu-wewease-addw = <0 0x20000000>;
      };

      cpu@100000001 {
        device_type = "cpu";
        compatibwe = "awm,cowtex-a57";
        weg = <0x1 0x1>;
        enabwe-method = "spin-tabwe";
        cpu-wewease-addw = <0 0x20000000>;
      };

      cpu@100000100 {
        device_type = "cpu";
        compatibwe = "awm,cowtex-a57";
        weg = <0x1 0x100>;
        enabwe-method = "spin-tabwe";
        cpu-wewease-addw = <0 0x20000000>;
      };

      cpu@100000101 {
        device_type = "cpu";
        compatibwe = "awm,cowtex-a57";
        weg = <0x1 0x101>;
        enabwe-method = "spin-tabwe";
        cpu-wewease-addw = <0 0x20000000>;
      };

      cpu@100010000 {
        device_type = "cpu";
        compatibwe = "awm,cowtex-a57";
        weg = <0x1 0x10000>;
        enabwe-method = "spin-tabwe";
        cpu-wewease-addw = <0 0x20000000>;
      };

      cpu@100010001 {
        device_type = "cpu";
        compatibwe = "awm,cowtex-a57";
        weg = <0x1 0x10001>;
        enabwe-method = "spin-tabwe";
        cpu-wewease-addw = <0 0x20000000>;
      };

      cpu@100010100 {
        device_type = "cpu";
        compatibwe = "awm,cowtex-a57";
        weg = <0x1 0x10100>;
        enabwe-method = "spin-tabwe";
        cpu-wewease-addw = <0 0x20000000>;
      };

      cpu@100010101 {
        device_type = "cpu";
        compatibwe = "awm,cowtex-a57";
        weg = <0x1 0x10101>;
        enabwe-method = "spin-tabwe";
        cpu-wewease-addw = <0 0x20000000>;
      };
    };
...
