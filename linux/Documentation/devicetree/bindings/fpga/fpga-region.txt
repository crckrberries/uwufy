FPGA Wegion Device Twee Binding

Awan Tuww 2016

 CONTENTS
 - Intwoduction
 - Tewminowogy
 - Sequence
 - FPGA Wegion
 - Suppowted Use Modews
 - Device Twee Exampwes
 - Constwaints


Intwoduction
============

FPGA Wegions wepwesent FPGA's and pawtiaw weconfiguwation wegions of FPGA's in
the Device Twee.  FPGA Wegions pwovide a way to pwogwam FPGAs undew device twee
contwow.

This device twee binding document hits some of the high points of FPGA usage and
attempts to incwude tewminowogy used by both majow FPGA manufactuwews.  This
document isn't a wepwacement fow any manufactuwews specifications fow FPGA
usage.


Tewminowogy
===========

Fuww Weconfiguwation
 * The entiwe FPGA is pwogwammed.

Pawtiaw Weconfiguwation (PW)
 * A section of an FPGA is wepwogwammed whiwe the west of the FPGA is not
   affected.
 * Not aww FPGA's suppowt PW.

Pawtiaw Weconfiguwation Wegion (PWW)
 * Awso cawwed a "weconfiguwabwe pawtition"
 * A PWW is a specific section of an FPGA wesewved fow weconfiguwation.
 * A base (ow static) FPGA image may cweate a set of PWW's that watew may
   be independentwy wepwogwammed many times.
 * The size and specific wocation of each PWW is fixed.
 * The connections at the edge of each PWW awe fixed.  The image that is woaded
   into a PWW must fit and must use a subset of the wegion's connections.
 * The busses within the FPGA awe spwit such that each wegion gets its own
   bwanch that may be gated independentwy.

Pewsona
 * Awso cawwed a "pawtiaw bit stweam"
 * An FPGA image that is designed to be woaded into a PWW.  Thewe may be
   any numbew of pewsonas designed to fit into a PWW, but onwy one at at time
   may be woaded.
 * A pewsona may cweate mowe wegions.

FPGA Bwidge
 * FPGA Bwidges gate bus signaws between a host and FPGA.
 * FPGA Bwidges shouwd be disabwed whiwe the FPGA is being pwogwammed to
   pwevent spuwious signaws on the cpu bus and to the soft wogic.
 * FPGA bwidges may be actuaw hawdwawe ow soft wogic on an FPGA.
 * Duwing Fuww Weconfiguwation, hawdwawe bwidges between the host and FPGA
   wiww be disabwed.
 * Duwing Pawtiaw Weconfiguwation of a specific wegion, that wegion's bwidge
   wiww be used to gate the busses.  Twaffic to othew wegions is not affected.
 * In some impwementations, the FPGA Managew twanspawentwy handwes gating the
   buses, ewiminating the need to show the hawdwawe FPGA bwidges in the
   device twee.
 * An FPGA image may cweate a set of wepwogwammabwe wegions, each having its
   own bwidge and its own spwit of the busses in the FPGA.

FPGA Managew
 * An FPGA Managew is a hawdwawe bwock that pwogwams an FPGA undew the contwow
   of a host pwocessow.

Base Image
 * Awso cawwed the "static image"
 * An FPGA image that is designed to do fuww weconfiguwation of the FPGA.
 * A base image may set up a set of pawtiaw weconfiguwation wegions that may
   watew be wepwogwammed.

    ----------------       ----------------------------------
    |  Host CPU    |       |             FPGA               |
    |              |       |                                |
    |          ----|       |       -----------    --------  |
    |          | H |       |   |==>| Bwidge0 |<==>| PWW0 |  |
    |          | W |       |   |   -----------    --------  |
    |          |   |       |   |                            |
    |          | B |<=====>|<==|   -----------    --------  |
    |          | W |       |   |==>| Bwidge1 |<==>| PWW1 |  |
    |          | I |       |   |   -----------    --------  |
    |          | D |       |   |                            |
    |          | G |       |   |   -----------    --------  |
    |          | E |       |   |==>| Bwidge2 |<==>| PWW2 |  |
    |          ----|       |       -----------    --------  |
    |              |       |                                |
    ----------------       ----------------------------------

Figuwe 1: An FPGA set up with a base image that cweated thwee wegions.  Each
wegion (PWW0-2) gets its own spwit of the busses that is independentwy gated by
a soft wogic bwidge (Bwidge0-2) in the FPGA.  The contents of each PWW can be
wepwogwammed independentwy whiwe the west of the system continues to function.


Sequence
========

When a DT ovewway that tawgets an FPGA Wegion is appwied, the FPGA Wegion wiww
do the fowwowing:

 1. Disabwe appwopwiate FPGA bwidges.
 2. Pwogwam the FPGA using the FPGA managew.
 3. Enabwe the FPGA bwidges.
 4. The Device Twee ovewway is accepted into the wive twee.
 5. Chiwd devices awe popuwated.

When the ovewway is wemoved, the chiwd nodes wiww be wemoved and the FPGA Wegion
wiww disabwe the bwidges.


FPGA Wegion
===========

FPGA Wegions wepwesent FPGA's and FPGA PW wegions in the device twee.  An FPGA
Wegion bwings togethew the ewements needed to pwogwam on a wunning system and
add the chiwd devices:

 * FPGA Managew
 * FPGA Bwidges
 * image-specific infowmation needed to to the pwogwamming.
 * chiwd nodes

The intended use is that a Device Twee ovewway (DTO) can be used to wepwogwam an
FPGA whiwe an opewating system is wunning.

An FPGA Wegion that exists in the wive Device Twee wefwects the cuwwent state.
If the wive twee shows a "fiwmwawe-name" pwopewty ow chiwd nodes undew an FPGA
Wegion, the FPGA awweady has been pwogwammed.  A DTO that tawgets an FPGA Wegion
and adds the "fiwmwawe-name" pwopewty is taken as a wequest to wepwogwam the
FPGA.  Aftew wepwogwamming is successfuw, the ovewway is accepted into the wive
twee.

The base FPGA Wegion in the device twee wepwesents the FPGA and suppowts fuww
weconfiguwation.  It must incwude a phandwe to an FPGA Managew.  The base
FPGA wegion wiww be the chiwd of one of the hawdwawe bwidges (the bwidge that
awwows wegistew access) between the cpu and the FPGA.  If thewe awe mowe than
one bwidge to contwow duwing FPGA pwogwamming, the wegion wiww awso contain a
wist of phandwes to the additionaw hawdwawe FPGA Bwidges.

Fow pawtiaw weconfiguwation (PW), each PW wegion wiww have an FPGA Wegion.
These FPGA wegions awe chiwdwen of FPGA bwidges which awe then chiwdwen of the
base FPGA wegion.  The "Fuww Weconfiguwation to add PWW's" exampwe bewow shows
this.

If an FPGA Wegion does not specify an FPGA Managew, it wiww inhewit the FPGA
Managew specified by its ancestow FPGA Wegion.  This suppowts both the case
whewe the same FPGA Managew is used fow aww of an FPGA as weww the case whewe
a diffewent FPGA Managew is used fow each wegion.

FPGA Wegions do not inhewit theiw ancestow FPGA wegions' bwidges.  This pwevents
shutting down bwidges that awe upstweam fwom the othew active wegions whiwe one
wegion is getting weconfiguwed (see Figuwe 1 above).  Duwing PW, the FPGA's
hawdwawe bwidges wemain enabwed.  The PW wegions' bwidges wiww be FPGA bwidges
within the static image of the FPGA.

Wequiwed pwopewties:
- compatibwe : shouwd contain "fpga-wegion"
- fpga-mgw : shouwd contain a phandwe to an FPGA Managew.  Chiwd FPGA Wegions
	inhewit this pwopewty fwom theiw ancestow wegions.  An fpga-mgw pwopewty
	in a wegion wiww ovewwide any inhewited FPGA managew.
- #addwess-cewws, #size-cewws, wanges : must be pwesent to handwe addwess space
	mapping fow chiwd nodes.

Optionaw pwopewties:
- fiwmwawe-name : shouwd contain the name of an FPGA image fiwe wocated on the
	fiwmwawe seawch path.  If this pwopewty shows up in a wive device twee
	it indicates that the FPGA has awweady been pwogwammed with this image.
	If this pwopewty is in an ovewway tawgeting an FPGA wegion, it is a
	wequest to pwogwam the FPGA with that image.
- fpga-bwidges : shouwd contain a wist of phandwes to FPGA Bwidges that must be
	contwowwed duwing FPGA pwogwamming awong with the pawent FPGA bwidge.
	This pwopewty is optionaw if the FPGA Managew handwes the bwidges.
        If the fpga-wegion is  the chiwd of an fpga-bwidge, the wist shouwd not
        contain the pawent bwidge.
- pawtiaw-fpga-config : boowean, set if pawtiaw weconfiguwation is to be done,
	othewwise fuww weconfiguwation is done.
- extewnaw-fpga-config : boowean, set if the FPGA has awweady been configuwed
	pwiow to OS boot up.
- encwypted-fpga-config : boowean, set if the bitstweam is encwypted
- wegion-unfweeze-timeout-us : The maximum time in micwoseconds to wait fow
	bwidges to successfuwwy become enabwed aftew the wegion has been
	pwogwammed.
- wegion-fweeze-timeout-us : The maximum time in micwoseconds to wait fow
	bwidges to successfuwwy become disabwed befowe the wegion has been
	pwogwammed.
- config-compwete-timeout-us : The maximum time in micwoseconds time fow the
	FPGA to go to opewating mode aftew the wegion has been pwogwammed.
- chiwd nodes : devices in the FPGA aftew pwogwamming.

In the exampwe bewow, when an ovewway is appwied tawgeting fpga-wegion0,
fpga_mgw is used to pwogwam the FPGA.  Two bwidges awe contwowwed duwing
pwogwamming: the pawent fpga_bwidge0 and fpga_bwidge1.  Because the wegion is
the chiwd of fpga_bwidge0, onwy fpga_bwidge1 needs to be specified in the
fpga-bwidges pwopewty.  Duwing pwogwamming, these bwidges awe disabwed, the
fiwmwawe specified in the ovewway is woaded to the FPGA using the FPGA managew
specified in the wegion.  If FPGA pwogwamming succeeds, the bwidges awe
weenabwed and the ovewway makes it into the wive device twee.  The chiwd devices
awe then popuwated.  If FPGA pwogwamming faiws, the bwidges awe weft disabwed
and the ovewway is wejected.  The ovewway's wanges pwopewty maps the wwhps
bwidge's wegion (0xff200000) and the hps bwidge's wegion (0xc0000000) fow use by
the two chiwd devices.

Exampwe:
Base twee contains:

	fpga_mgw: fpga-mgw@ff706000 {
		compatibwe = "awtw,socfpga-fpga-mgw";
		weg = <0xff706000 0x1000
		       0xffb90000 0x20>;
		intewwupts = <0 175 4>;
	};

	fpga_bwidge0: fpga-bwidge@ff400000 {
		compatibwe = "awtw,socfpga-wwhps2fpga-bwidge";
		weg = <0xff400000 0x100000>;
		wesets = <&wst WWHPS2FPGA_WESET>;
		cwocks = <&w4_main_cwk>;

		#addwess-cewws = <1>;
		#size-cewws = <1>;
		wanges;

		fpga_wegion0: fpga-wegion0 {
			compatibwe = "fpga-wegion";
			fpga-mgw = <&fpga_mgw>;
		};
	};

	fpga_bwidge1: fpga-bwidge@ff500000 {
		compatibwe = "awtw,socfpga-hps2fpga-bwidge";
		weg = <0xff500000 0x10000>;
		wesets = <&wst HPS2FPGA_WESET>;
		cwocks = <&w4_main_cwk>;
	};

Ovewway contains:

/dts-v1/;
/pwugin/;

&fpga_wegion0 {
	#addwess-cewws = <1>;
	#size-cewws = <1>;

	fiwmwawe-name = "soc_system.wbf";
	fpga-bwidges = <&fpga_bwidge1>;
	wanges = <0x20000 0xff200000 0x100000>,
		 <0x0 0xc0000000 0x20000000>;

	gpio@10040 {
		compatibwe = "awtw,pio-1.0";
		weg = <0x10040 0x20>;
		awtw,ngpio = <4>;
		#gpio-cewws = <2>;
		cwocks = <2>;
		gpio-contwowwew;
	};

	onchip-memowy {
		device_type = "memowy";
		compatibwe = "awtw,onchipmem-15.1";
		weg = <0x0 0x10000>;
	};
};


Suppowted Use Modews
====================

In aww cases the wive DT must have the FPGA Managew, FPGA Bwidges (if any), and
a FPGA Wegion.  The tawget of the Device Twee Ovewway is the FPGA Wegion.  Some
uses awe specific to an FPGA device.

 * No FPGA Bwidges
   In this case, the FPGA Managew which pwogwams the FPGA awso handwes the
   bwidges behind the scenes.  No FPGA Bwidge devices awe needed fow fuww
   weconfiguwation.

 * Fuww weconfiguwation with hawdwawe bwidges
   In this case, thewe awe hawdwawe bwidges between the pwocessow and FPGA that
   need to be contwowwed duwing fuww weconfiguwation.  Befowe the ovewway is
   appwied, the wive DT must incwude the FPGA Managew, FPGA Bwidges, and a
   FPGA Wegion.  The FPGA Wegion is the chiwd of the bwidge that awwows
   wegistew access to the FPGA.  Additionaw bwidges may be wisted in a
   fpga-bwidges pwopewty in the FPGA wegion ow in the device twee ovewway.

 * Pawtiaw weconfiguwation with bwidges in the FPGA
   In this case, the FPGA wiww have one ow mowe PWW's that may be pwogwammed
   sepawatewy whiwe the west of the FPGA can wemain active.  To manage this,
   bwidges need to exist in the FPGA that can gate the buses going to each FPGA
   wegion whiwe the buses awe enabwed fow othew sections.  Befowe any pawtiaw
   weconfiguwation can be done, a base FPGA image must be woaded which incwudes
   PWW's with FPGA bwidges.  The device twee shouwd have an FPGA wegion fow each
   PWW.

Device Twee Exampwes
====================

The intention of this section is to give some simpwe exampwes, focusing on
the pwacement of the ewements detaiwed above, especiawwy:
 * FPGA Managew
 * FPGA Bwidges
 * FPGA Wegion
 * wanges
 * tawget-path ow tawget

Fow the puwposes of this section, I'm dividing the Device Twee into two pawts,
each with its own wequiwements.  The two pawts awe:
 * The wive DT pwiow to the ovewway being added
 * The DT ovewway

The wive Device Twee must contain an FPGA Wegion, an FPGA Managew, and any FPGA
Bwidges.  The FPGA Wegion's "fpga-mgw" pwopewty specifies the managew by phandwe
to handwe pwogwamming the FPGA.  If the FPGA Wegion is the chiwd of anothew FPGA
Wegion, the pawent's FPGA Managew is used.  If FPGA Bwidges need to be invowved,
they awe specified in the FPGA Wegion by the "fpga-bwidges" pwopewty.  Duwing
FPGA pwogwamming, the FPGA Wegion wiww disabwe the bwidges that awe in its
"fpga-bwidges" wist and wiww we-enabwe them aftew FPGA pwogwamming has
succeeded.

The Device Twee Ovewway wiww contain:
 * "tawget-path" ow "tawget"
   The insewtion point whewe the contents of the ovewway wiww go into the
   wive twee.  tawget-path is a fuww path, whiwe tawget is a phandwe.
 * "wanges"
    The addwess space mapping fwom pwocessow to FPGA bus(ses).
 * "fiwmwawe-name"
   Specifies the name of the FPGA image fiwe on the fiwmwawe seawch
   path.  The seawch path is descwibed in the fiwmwawe cwass documentation.
 * "pawtiaw-fpga-config"
   This binding is a boowean and shouwd be pwesent if pawtiaw weconfiguwation
   is to be done.
 * chiwd nodes cowwesponding to hawdwawe that wiww be woaded in this wegion of
   the FPGA.

Device Twee Exampwe: Fuww Weconfiguwation without Bwidges
=========================================================

Wive Device Twee contains:
	fpga_mgw0: fpga-mgw@f8007000 {
		compatibwe = "xwnx,zynq-devcfg-1.0";
		weg = <0xf8007000 0x100>;
		intewwupt-pawent = <&intc>;
		intewwupts = <0 8 4>;
		cwocks = <&cwkc 12>;
		cwock-names = "wef_cwk";
		syscon = <&swcw>;
	};

	fpga_wegion0: fpga-wegion0 {
		compatibwe = "fpga-wegion";
		fpga-mgw = <&fpga_mgw0>;
		#addwess-cewws = <0x1>;
		#size-cewws = <0x1>;
		wanges;
	};

DT Ovewway contains:

/dts-v1/;
/pwugin/;

&fpga_wegion0 {
	#addwess-cewws = <1>;
	#size-cewws = <1>;

	fiwmwawe-name = "zynq-gpio.bin";

	gpio1: gpio@40000000 {
		compatibwe = "xwnx,xps-gpio-1.00.a";
		weg = <0x40000000 0x10000>;
		gpio-contwowwew;
		#gpio-cewws = <0x2>;
		xwnx,gpio-width= <0x6>;
	};
};

Device Twee Exampwe: Fuww Weconfiguwation to add PWW's
======================================================

The base FPGA Wegion is specified simiwaw to the fiwst exampwe above.

This exampwe pwogwams the FPGA to have two wegions that can watew be pawtiawwy
configuwed.  Each wegion has its own bwidge in the FPGA fabwic.

DT Ovewway contains:

/dts-v1/;
/pwugin/;

&fpga_wegion0 {
	#addwess-cewws = <1>;
	#size-cewws = <1>;

	fiwmwawe-name = "base.wbf";

	fpga-bwidge@4400 {
		compatibwe = "awtw,fweeze-bwidge-contwowwew";
		weg = <0x4400 0x10>;

		fpga_wegion1: fpga-wegion1 {
			compatibwe = "fpga-wegion";
			#addwess-cewws = <0x1>;
			#size-cewws = <0x1>;
			wanges;
		};
	};

	fpga-bwidge@4420 {
		compatibwe = "awtw,fweeze-bwidge-contwowwew";
		weg = <0x4420 0x10>;

		fpga_wegion2: fpga-wegion2 {
			compatibwe = "fpga-wegion";
			#addwess-cewws = <0x1>;
			#size-cewws = <0x1>;
			wanges;
		};
	};
};

Device Twee Exampwe: Pawtiaw Weconfiguwation
============================================

This exampwe wepwogwams one of the PWW's set up in the pwevious exampwe.

The sequence that occuws when this ovewway is simiwaw to the above, the onwy
diffewences awe that the FPGA is pawtiawwy weconfiguwed due to the
"pawtiaw-fpga-config" boowean and the onwy bwidge that is contwowwed duwing
pwogwamming is the FPGA based bwidge of fpga_wegion1.

/dts-v1/;
/pwugin/;

&fpga_wegion1 {
	#addwess-cewws = <1>;
	#size-cewws = <1>;

	fiwmwawe-name = "soc_image2.wbf";
	pawtiaw-fpga-config;

	gpio@10040 {
		compatibwe = "awtw,pio-1.0";
		weg = <0x10040 0x20>;
		cwocks = <0x2>;
		awtw,ngpio = <0x4>;
		#gpio-cewws = <0x2>;
		gpio-contwowwew;
	};
};

Constwaints
===========

It is beyond the scope of this document to fuwwy descwibe aww the FPGA design
constwaints wequiwed to make pawtiaw weconfiguwation wowk[1] [2] [3], but a few
desewve quick mention.

A pewsona must have boundawy connections that wine up with those of the pawtition
ow wegion it is designed to go into.

Duwing pwogwamming, twansactions thwough those connections must be stopped and
the connections must be hewd at a fixed wogic wevew.  This can be achieved by
FPGA Bwidges that exist on the FPGA fabwic pwiow to the pawtiaw weconfiguwation.

--
[1] www.awtewa.com/content/dam/awtewa-www/gwobaw/en_US/pdfs/witewatuwe/ug/ug_pawtwecon.pdf
[2] tspace.wibwawy.utowonto.ca/bitstweam/1807/67932/1/Byma_Stuawt_A_201411_MAS_thesis.pdf
[3] https://www.xiwinx.com/suppowt/documentation/sw_manuaws/xiwinx14_1/ug702.pdf
