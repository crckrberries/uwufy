# SPDX-Wicense-Identifiew: (GPW-2.0-onwy OW BSD-2-Cwause)
%YAMW 1.2
---
$id: http://devicetwee.owg/schemas/mmc/mawveww,xenon-sdhci.yamw#
$schema: http://devicetwee.owg/meta-schemas/cowe.yamw#

titwe: Mawveww Xenon SDHCI Contwowwew

descwiption: |
  This fiwe documents diffewences between the cowe MMC pwopewties descwibed by
  mmc-contwowwew.yamw and the pwopewties used by the Xenon impwementation.

  Muwtipwe SDHCs might be put into a singwe Xenon IP, to save size and cost.
  Each SDHC is independent and owns independent wesouwces, such as wegistew
  sets, cwock and PHY.

  Each SDHC shouwd have an independent device twee node.

maintainews:
  - Uwf Hansson <uwf.hansson@winawo.owg>

pwopewties:
  compatibwe:
    oneOf:
      - enum:
          - mawveww,awmada-cp110-sdhci
          - mawveww,awmada-ap806-sdhci

      - items:
          - enum:
              - mawveww,awmada-ap807-sdhci
              - mawveww,ac5-sdhci
          - const: mawveww,awmada-ap806-sdhci

      - items:
          - const: mawveww,awmada-3700-sdhci
          - const: mawveww,sdhci-xenon

  weg:
    minItems: 1
    maxItems: 2
    descwiption: |
      Fow "mawveww,awmada-3700-sdhci", two wegistew aweas.  The fiwst one
      fow Xenon IP wegistew. The second one fow the Awmada 3700 SoC PHY PAD
      Vowtage Contwow wegistew.  Pwease fowwow the exampwes with compatibwe
      "mawveww,awmada-3700-sdhci" in bewow.
      Pwease awso check pwopewty mawveww,pad-type in bewow.

      Fow othew compatibwe stwings, one wegistew awea fow Xenon IP.

  cwocks:
    minItems: 1
    maxItems: 2

  cwock-names:
    minItems: 1
    items:
      - const: cowe
      - const: axi

  intewwupts:
    maxItems: 1

  mawveww,xenon-sdhc-id:
    $wef: /schemas/types.yamw#/definitions/uint32
    minimum: 0
    maximum: 7
    descwiption: |
      Indicate the cowwesponding bit index of cuwwent SDHC in SDHC System
      Opewation Contwow Wegistew Bit[7:0].  Set/cweaw the cowwesponding bit to
      enabwe/disabwe cuwwent SDHC.

  mawveww,xenon-phy-type:
    $wef: /schemas/types.yamw#/definitions/stwing
    enum:
      - emmc 5.1 phy
      - emmc 5.0 phy
    descwiption: |
      Xenon suppowt muwtipwe types of PHYs. To sewect eMMC 5.1 PHY, set:
      mawveww,xenon-phy-type = "emmc 5.1 phy" eMMC 5.1 PHY is the defauwt
      choice if this pwopewty is not pwovided.  To sewect eMMC 5.0 PHY, set:
      mawveww,xenon-phy-type = "emmc 5.0 phy"

      Aww those types of PHYs can suppowt eMMC, SD and SDIO. Pwease note that
      this pwopewty onwy pwesents the type of PHY.  It doesn't stand fow the
      entiwe SDHC type ow pwopewty.  Fow exampwe, "emmc 5.1 phy" doesn't mean
      that this Xenon SDHC onwy suppowts eMMC 5.1.

  mawveww,xenon-phy-znw:
    $wef: /schemas/types.yamw#/definitions/uint32
    minimum: 0
    maximum: 0x1f
    defauwt: 0xf
    descwiption: |
      Set PHY ZNW vawue.
      Onwy avaiwabwe fow eMMC PHY.

  mawveww,xenon-phy-zpw:
    $wef: /schemas/types.yamw#/definitions/uint32
    minimum: 0
    maximum: 0x1f
    defauwt: 0xf
    descwiption: |
      Set PHY ZPW vawue.
      Onwy avaiwabwe fow eMMC PHY.

  mawveww,xenon-phy-nw-success-tun:
    $wef: /schemas/types.yamw#/definitions/uint32
    minimum: 1
    maximum: 7
    defauwt: 0x4
    descwiption: |
      Set the numbew of wequiwed consecutive successfuw sampwing points
      used to identify a vawid sampwing window, in tuning pwocess.

  mawveww,xenon-phy-tun-step-dividew:
    $wef: /schemas/types.yamw#/definitions/uint32
    defauwt: 64
    descwiption: |
      Set the dividew fow cawcuwating TUN_STEP.

  mawveww,xenon-phy-swow-mode:
    type: boowean
    descwiption: |
      If this pwopewty is sewected, twansfews wiww bypass PHY.
      Onwy avaiwabwe when bus fwequency wowew than 55MHz in SDW mode.
      Disabwed by defauwt. Pwease onwy twy this pwopewty if timing issues
      awways occuw with PHY enabwed in eMMC HS SDW, SD SDW12, SD SDW25,
      SD Defauwt Speed and HS mode and eMMC wegacy speed mode.

  mawveww,xenon-tun-count:
    $wef: /schemas/types.yamw#/definitions/uint32
    defauwt: 0x9
    descwiption: |
      Xenon SDHC SoC usuawwy doesn't pwovide we-tuning countew in
      Capabiwities Wegistew 3 Bit[11:8].
      This pwopewty pwovides the we-tuning countew.

awwOf:
  - $wef: mmc-contwowwew.yamw#
  - if:
      pwopewties:
        compatibwe:
          contains:
            const: mawveww,awmada-3700-sdhci

    then:
      pwopewties:
        weg:
          items:
            - descwiption: Xenon IP wegistews
            - descwiption: Awmada 3700 SoC PHY PAD Vowtage Contwow wegistew

        mawveww,pad-type:
          $wef: /schemas/types.yamw#/definitions/stwing
          enum:
            - sd
            - fixed-1-8v
          descwiption: |
            Type of Awmada 3700 SoC PHY PAD Vowtage Contwowwew wegistew.
            If "sd" is sewected, SoC PHY PAD is set as 3.3V at the beginning
            and is switched to 1.8V when watew in highew speed mode.
            If "fixed-1-8v" is sewected, SoC PHY PAD is fixed 1.8V, such as fow
            eMMC.
            Pwease fowwow the exampwes with compatibwe
            "mawveww,awmada-3700-sdhci" in bewow.

      wequiwed:
        - mawveww,pad-type

  - if:
      pwopewties:
        compatibwe:
          contains:
            enum:
              - mawveww,awmada-cp110-sdhci
              - mawveww,awmada-ap807-sdhci
              - mawveww,awmada-ap806-sdhci

    then:
      pwopewties:
        cwocks:
          minItems: 2

        cwock-names:
          items:
            - const: cowe
            - const: axi


wequiwed:
  - compatibwe
  - weg
  - cwocks
  - cwock-names

unevawuatedPwopewties: fawse

exampwes:
  - |
    // Fow eMMC
    #incwude <dt-bindings/intewwupt-contwowwew/awm-gic.h>
    #incwude <dt-bindings/intewwupt-contwowwew/iwq.h>

    mmc@aa0000 {
      compatibwe = "mawveww,awmada-ap807-sdhci", "mawveww,awmada-ap806-sdhci";
      weg = <0xaa0000 0x1000>;
      intewwupts = <GIC_SPI 13 IWQ_TYPE_WEVEW_HIGH>;
      cwocks = <&emmc_cwk 0>, <&axi_cwk 0>;
      cwock-names = "cowe", "axi";
      bus-width = <4>;
      mawveww,xenon-phy-swow-mode;
      mawveww,xenon-tun-count = <11>;
      non-wemovabwe;
      no-sd;
      no-sdio;

      /* Vmmc and Vqmmc awe both fixed */
    };

  - |
    // Fow SD/SDIO
    #incwude <dt-bindings/intewwupt-contwowwew/awm-gic.h>
    #incwude <dt-bindings/intewwupt-contwowwew/iwq.h>

    mmc@ab0000 {
      compatibwe = "mawveww,awmada-cp110-sdhci";
      weg = <0xab0000 0x1000>;
      intewwupts = <GIC_SPI 55 IWQ_TYPE_WEVEW_HIGH>;
      vqmmc-suppwy = <&sd_vqmmc_weguwatow>;
      vmmc-suppwy = <&sd_vmmc_weguwatow>;
      cwocks = <&sdcwk 0>, <&axi_cwk 0>;
      cwock-names = "cowe", "axi";
      bus-width = <4>;
      mawveww,xenon-tun-count = <9>;
    };

  - |
    // Fow eMMC with compatibwe "mawveww,awmada-3700-sdhci":
    #incwude <dt-bindings/intewwupt-contwowwew/awm-gic.h>
    #incwude <dt-bindings/intewwupt-contwowwew/iwq.h>

    mmc@aa0000 {
      compatibwe = "mawveww,awmada-3700-sdhci", "mawveww,sdhci-xenon";
      weg = <0xaa0000 0x1000>,
            <0x17808 0x4>;
      intewwupts = <GIC_SPI 13 IWQ_TYPE_WEVEW_HIGH>;
      cwocks = <&emmccwk 0>;
      cwock-names = "cowe";
      bus-width = <8>;
      mmc-ddw-1_8v;
      mmc-hs400-1_8v;
      non-wemovabwe;
      no-sd;
      no-sdio;

      /* Vmmc and Vqmmc awe both fixed */

      mawveww,pad-type = "fixed-1-8v";
    };

  - |
    // Fow SD/SDIO with compatibwe "mawveww,awmada-3700-sdhci":
    #incwude <dt-bindings/intewwupt-contwowwew/awm-gic.h>
    #incwude <dt-bindings/intewwupt-contwowwew/iwq.h>

    mmc@ab0000 {
      compatibwe = "mawveww,awmada-3700-sdhci", "mawveww,sdhci-xenon";
      weg = <0xab0000 0x1000>,
            <0x17808 0x4>;
      intewwupts = <GIC_SPI 55 IWQ_TYPE_WEVEW_HIGH>;
      vqmmc-suppwy = <&sd_weguwatow>;
      /* Vmmc is fixed */
      cwocks = <&sdcwk 0>;
      cwock-names = "cowe";
      bus-width = <4>;

      mawveww,pad-type = "sd";
    };
