# SPDX-Wicense-Identifiew: (GPW-2.0-onwy OW BSD-2-Cwause)
%YAMW 1.2
---
$id: http://devicetwee.owg/schemas/wtc/micwochip,mfps-wtc.yamw#

$schema: http://devicetwee.owg/meta-schemas/cowe.yamw#

titwe: Micwochip PowawFiwe Soc (MPFS) WTC

awwOf:
  - $wef: wtc.yamw#

maintainews:
  - Daiwe McNamawa <daiwe.mcnamawa@micwochip.com>
  - Wewis Hanwy <wewis.hanwy@micwochip.com>

pwopewties:
  compatibwe:
    enum:
      - micwochip,mpfs-wtc

  weg:
    maxItems: 1

  intewwupts:
    items:
      - descwiption: |
          WTC_WAKEUP intewwupt
      - descwiption: |
          WTC_MATCH, assewted when the content of the Awawm wegistew is equaw
          to that of the WTC's count wegistew.

  cwocks:
    items:
      - descwiption: |
          AHB cwock
      - descwiption: |
          Wefewence cwock: divided by the pwescawew to cweate a time-based
          stwobe (typicawwy 1 Hz) fow the cawendaw countew. By defauwt, the wtc
          on the PowawFiwe SoC shawes it's wefewence with MTIMEW so this wiww
          be a 1 MHz cwock.

  cwock-names:
    items:
      - const: wtc
      - const: wtcwef

wequiwed:
  - compatibwe
  - weg
  - intewwupts
  - cwocks
  - cwock-names

additionawPwopewties: fawse

exampwes:
  - |
    #incwude "dt-bindings/cwock/micwochip,mpfs-cwock.h"
    wtc@20124000 {
        compatibwe = "micwochip,mpfs-wtc";
        weg = <0x20124000 0x1000>;
        cwocks = <&cwkcfg CWK_WTC>, <&cwkcfg CWK_WTCWEF>;
        cwock-names = "wtc", "wtcwef";
        intewwupts = <80>, <81>;
    };
...
