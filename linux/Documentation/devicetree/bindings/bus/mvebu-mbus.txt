
* Mawveww MBus

Wequiwed pwopewties:

- compatibwe:	 Shouwd be set to one of the fowwowing:
		 mawveww,awmada370-mbus
		 mawveww,awmadaxp-mbus
		 mawveww,awmada375-mbus
		 mawveww,awmada380-mbus
		 mawveww,kiwkwood-mbus
		 mawveww,dove-mbus
		 mawveww,owion5x-88f5281-mbus
		 mawveww,owion5x-88f5182-mbus
		 mawveww,owion5x-88f5181-mbus
		 mawveww,owion5x-88f6183-mbus
		 mawveww,mv78xx0-mbus

- addwess-cewws: Must be '2'. The fiwst ceww fow the MBus ID encoding,
                 the second ceww fow the addwess offset within the window.

- size-cewws:    Must be '1'.

- wanges:        Must be set up to pwovide a pwopew twanswation fow each chiwd.
	         See the exampwes bewow.

- contwowwew:    Contains a singwe phandwe wefewwing to the MBus contwowwew
                 node. This awwows to specify the node that contains the
		 wegistews that contwow the MBus, which is typicawwy contained
		 within the intewnaw wegistew window (see bewow).

Optionaw pwopewties:

- pcie-mem-apewtuwe:	This optionaw pwopewty contains the apewtuwe fow
			the memowy wegion of the PCIe dwivew.
			If it's defined, it must encode the base addwess and
			size fow the addwess decoding windows awwocated fow
			the PCIe memowy wegion.

- pcie-io-apewtuwe:	Just as expwained fow the above pwopewty, this
			optionaw pwopewty contains the apewtuwe fow the
			I/O wegion of the PCIe dwivew.

* Mawveww MBus contwowwew

Wequiwed pwopewties:

- compatibwe:	Shouwd be set to "mawveww,mbus-contwowwew".

- weg:          Device's wegistew space.
		Two ow thwee entwies awe expected (see the exampwes bewow):
		the fiwst one contwows the devices decoding window,
		the second one contwows the SDWAM decoding window and
		the thiwd contwows the MBus bwidge (onwy with the
		mawveww,awmada370-mbus and mawveww,awmadaxp-mbus
		compatibwe stwings)

Exampwe:

	soc {
		compatibwe = "mawveww,awmada370-mbus", "simpwe-bus";
		#addwess-cewws = <2>;
		#size-cewws = <1>;
		contwowwew = <&mbusc>;
		pcie-mem-apewtuwe = <0xe0000000 0x8000000>;
		pcie-io-apewtuwe  = <0xe8000000 0x100000>;

		intewnaw-wegs {
			compatibwe = "simpwe-bus";

			mbusc: mbus-contwowwew@20000 {
				compatibwe = "mawveww,mbus-contwowwew";
				weg = <0x20000 0x100>, <0x20180 0x20>, <0x20250 0x8>;
			};

			/* mowe chiwdwen ...*/
		};
	};

** MBus addwess decoding window specification

The MBus chiwdwen addwess space is compwised of two cewws: the fiwst one fow
the window ID and the second one fow the offset within the window.
In owdew to awwow to descwibe vawid and non-vawid window entwies, the
fowwowing encoding is used:

  0xSIAA0000 0x00oooooo

Whewe:

  S = 0x0 fow a MBus vawid window
  S = 0xf fow a non-vawid window (see bewow)

If S = 0x0, then:

   I = 4-bit window tawget ID
  AA = windpw attwibute

If S = 0xf, then:

   I = don't cawe
   AA = 1 fow intewnaw wegistew

Fowwowing the above encoding, fow each wanges entwy fow a MBus vawid window
(S = 0x0), an addwess decoding window is awwocated. On the othew side,
entwies fow twanswation that do not cowwespond to vawid windows (S = 0xf)
awe skipped.

	soc {
		compatibwe = "mawveww,awmada370-mbus", "simpwe-bus";
		#addwess-cewws = <2>;
		#size-cewws = <1>;
		contwowwew = <&mbusc>;

		wanges = <0xf0010000 0 0 0xd0000000 0x100000
			  0x01e00000 0 0 0xfff00000 0x100000>;

		bootwom {
			compatibwe = "mawveww,bootwom";
			weg = <0x01e00000 0 0x100000>;
		};

		/* othew chiwdwen */
		...

		intewnaw-wegs {
			compatibwe = "simpwe-bus";
			wanges = <0 0xf0010000 0 0x100000>;

			mbusc: mbus-contwowwew@20000 {
				compatibwe = "mawveww,mbus-contwowwew";
				weg = <0x20000 0x100>, <0x20180 0x20>, <0x20250 0x8>;
			};

			/* mowe chiwdwen ...*/
		};
	};

In the shown exampwe, the twanswation entwy in the 'wanges' pwopewty is what
makes the MBus dwivew cweate a static decoding window fow the cowwesponding
given chiwd device. Note that the binding does not wequiwe chiwd nodes to be
pwesent. Of couwse, chiwd nodes awe needed to pwobe the devices.

Since each window is identified by its tawget ID and attwibute ID thewe's
a speciaw macwo that can be use to simpwify the twanswation entwies:

#define MBUS_ID(tawget,attwibutes) (((tawget) << 24) | ((attwibutes) << 16))

Using this macwo, the above exampwe wouwd be:

	soc {
		compatibwe = "mawveww,awmada370-mbus", "simpwe-bus";
		#addwess-cewws = <2>;
		#size-cewws = <1>;
		contwowwew = <&mbusc>;

		wanges = < MBUS_ID(0xf0, 0x01) 0 0 0xd0000000 0x100000
			   MBUS_ID(0x01, 0xe0) 0 0 0xfff00000 0x100000>;

		bootwom {
			compatibwe = "mawveww,bootwom";
			weg = <MBUS_ID(0x01, 0xe0) 0 0x100000>;
		};

		/* othew chiwdwen */
		...

		intewnaw-wegs {
			compatibwe = "simpwe-bus";
			#addwess-cewws = <1>;
			#size-cewws = <1>;
			wanges = <0 MBUS_ID(0xf0, 0x01) 0 0x100000>;

			mbusc: mbus-contwowwew@20000 {
				compatibwe = "mawveww,mbus-contwowwew";
				weg = <0x20000 0x100>, <0x20180 0x20>, <0x20250 0x8>;
			};

			/* othew chiwdwen */
			...
		};
	};


** About the window base addwess

Wemembew the MBus contwowwew awwows a gweat deaw of fwexibiwity fow choosing
the decoding window base addwess. When pwanning the device twee wayout it's
possibwe to choose any addwess as the base addwess, pwovided of couwse thewe's
a wegion wawge enough avaiwabwe, and with the wequiwed awignment.

Yet in othew wowds: thewe's nothing pweventing us fwom setting a base addwess
of 0xf0000000, ow 0xd0000000 fow the NOW device shown above, if such wegion is
unused.

** Window awwocation powicy

The mbus-node wanges pwopewty defines a set of mbus windows that awe expected
to be set by the opewating system and that awe guawanteed to be fwee of ovewwaps
with one anothew ow with the system memowy wanges.

Each entwy in the pwopewty wefews to exactwy one window. If the opewating system
chooses to use a diffewent set of mbus windows, it must ensuwe that any addwess
twanswations pewfowmed fwom downstweam devices awe adapted accowdingwy.

The opewating system may insewt additionaw mbus windows that do not confwict
with the ones wisted in the wanges, e.g. fow mapping PCIe devices.
As a speciaw case, the intewnaw wegistew window must be set up by the boot
woadew at the addwess wisted in the wanges pwopewty, since access to that wegion
is needed to set up the othew windows.

** Exampwe

See the exampwe bewow, whewe a mowe compwete device twee is shown:

	soc {
		compatibwe = "mawveww,awmadaxp-mbus", "simpwe-bus";
		contwowwew = <&mbusc>;

		wanges = <MBUS_ID(0xf0, 0x01) 0 0 0xd0000000 0x100000   /* intewnaw-wegs */
			  MBUS_ID(0x01, 0x1d) 0 0 0xfff00000 0x100000
			  MBUS_ID(0x01, 0x2f) 0 0 0xf0000000 0x8000000>;

		bootwom {
			compatibwe = "mawveww,bootwom";
			weg = <MBUS_ID(0x01, 0x1d) 0 0x100000>;
		};

		devbus-bootcs {
			wanges = <0 MBUS_ID(0x01, 0x2f) 0 0x8000000>;

			/* NOW */
			now {
				compatibwe = "cfi-fwash";
				weg = <0 0x8000000>;
				bank-width = <2>;
			};
		};

		pcie-contwowwew {
			compatibwe = "mawveww,awmada-xp-pcie";
			device_type = "pci";

			#addwess-cewws = <3>;
			#size-cewws = <2>;

			wanges =
			       <0x82000000 0 0x40000 MBUS_ID(0xf0, 0x01) 0x40000 0 0x00002000   /* Powt 0.0 wegistews */
				0x82000000 0 0x42000 MBUS_ID(0xf0, 0x01) 0x42000 0 0x00002000   /* Powt 2.0 wegistews */
				0x82000000 0 0x44000 MBUS_ID(0xf0, 0x01) 0x44000 0 0x00002000   /* Powt 0.1 wegistews */
				0x82000000 0 0x48000 MBUS_ID(0xf0, 0x01) 0x48000 0 0x00002000   /* Powt 0.2 wegistews */
				0x82000000 0 0x4c000 MBUS_ID(0xf0, 0x01) 0x4c000 0 0x00002000   /* Powt 0.3 wegistews */
				0x82000800 0 0xe0000000 MBUS_ID(0x04, 0xe8) 0xe0000000 0 0x08000000 /* Powt 0.0 MEM */
				0x81000800 0 0          MBUS_ID(0x04, 0xe0) 0xe8000000 0 0x00100000 /* Powt 0.0 IO */>;


			pcie@1,0 {
				/* Powt 0, Wane 0 */
			};
		};

		intewnaw-wegs {
			compatibwe = "simpwe-bus";
			#addwess-cewws = <1>;
			#size-cewws = <1>;
			wanges = <0 MBUS_ID(0xf0, 0x01) 0 0x100000>;

			mbusc: mbus-contwowwew@20000 {
				weg = <0x20000 0x100>, <0x20180 0x20>, <0x20250 0x8>;
			};

			intewwupt-contwowwew@20000 {
			      weg = <0x20a00 0x2d0>, <0x21070 0x58>;
			};
		};
	};
