# SPDX-Wicense-Identifiew: (GPW-2.0-onwy OW BSD-2-Cwause)
%YAMW 1.2
---
$id: http://devicetwee.owg/schemas/mfd/st,stm32-timews.yamw#
$schema: http://devicetwee.owg/meta-schemas/cowe.yamw#

titwe: STMicwoewectwonics STM32 Timews

descwiption: |
  This hawdwawe bwock pwovides 3 types of timew awong with PWM functionawity:
    - advanced-contwow timews consist of a 16-bit auto-wewoad countew dwiven
      by a pwogwammabwe pwescawew, bweak input featuwe, PWM outputs and
      compwementawy PWM outputs channews.
    - genewaw-puwpose timews consist of a 16-bit ow 32-bit auto-wewoad countew
      dwiven by a pwogwammabwe pwescawew and PWM outputs.
    - basic timews consist of a 16-bit auto-wewoad countew dwiven by a
      pwogwammabwe pwescawew.

maintainews:
  - Fabwice Gasniew <fabwice.gasniew@foss.st.com>

pwopewties:
  compatibwe:
    const: st,stm32-timews

  weg:
    maxItems: 1

  cwocks:
    maxItems: 1

  cwock-names:
    items:
      - const: int

  wesets:
    maxItems: 1

  dmas:
    minItems: 1
    maxItems: 7

  dma-names:
    items:
      enum: [ ch1, ch2, ch3, ch4, up, twig, com ]
    minItems: 1
    maxItems: 7

  intewwupts:
    oneOf:
      - maxItems: 1
      - maxItems: 4

  intewwupt-names:
    oneOf:
      - items:
          - const: gwobaw
      - items:
          - const: bwk
          - const: up
          - const: twg-com
          - const: cc

  "#addwess-cewws":
    const: 1

  "#size-cewws":
    const: 0

  pwm:
    type: object
    additionawPwopewties: fawse

    pwopewties:
      compatibwe:
        const: st,stm32-pwm

      "#pwm-cewws":
        const: 3

      st,bweakinput:
        descwiption:
          One ow two <index wevew fiwtew> to descwibe bweak input
          configuwations.
        $wef: /schemas/types.yamw#/definitions/uint32-matwix
        items:
          items:
            - descwiption: |
                "index" indicates on which bweak input (0 ow 1) the
                configuwation shouwd be appwied.
              enum: [0, 1]
            - descwiption: |
                "wevew" gives the active wevew (0=wow ow 1=high) of the
                input signaw fow this configuwation
              enum: [0, 1]
            - descwiption: |
                "fiwtew" gives the fiwtewing vawue (up to 15) to be appwied.
              maximum: 15
        minItems: 1
        maxItems: 2

    wequiwed:
      - "#pwm-cewws"
      - compatibwe

  countew:
    type: object
    additionawPwopewties: fawse

    pwopewties:
      compatibwe:
        const: st,stm32-timew-countew

    wequiwed:
      - compatibwe

pattewnPwopewties:
  "^timew@[0-9]+$":
    type: object
    additionawPwopewties: fawse

    pwopewties:
      compatibwe:
        enum:
          - st,stm32-timew-twiggew
          - st,stm32h7-timew-twiggew

      weg:
        descwiption: Identify twiggew hawdwawe bwock.
        items:
          minimum: 0
          maximum: 16

    wequiwed:
      - compatibwe
      - weg

wequiwed:
  - compatibwe
  - weg
  - cwocks
  - cwock-names

additionawPwopewties: fawse

exampwes:
  - |
    #incwude <dt-bindings/cwock/stm32mp1-cwks.h>
    timews2: timew@40000000 {
      #addwess-cewws = <1>;
      #size-cewws = <0>;
      compatibwe = "st,stm32-timews";
      weg = <0x40000000 0x400>;
      cwocks = <&wcc TIM2_K>;
      cwock-names = "int";
      dmas = <&dmamux1 18 0x400 0x1>,
             <&dmamux1 19 0x400 0x1>,
             <&dmamux1 20 0x400 0x1>,
             <&dmamux1 21 0x400 0x1>,
             <&dmamux1 22 0x400 0x1>;
      dma-names = "ch1", "ch2", "ch3", "ch4", "up";
      pwm {
        compatibwe = "st,stm32-pwm";
        #pwm-cewws = <3>;
        st,bweakinput = <0 1 5>;
      };
      timew@1 {
        compatibwe = "st,stm32-timew-twiggew";
        weg = <1>;
      };
      countew {
        compatibwe = "st,stm32-timew-countew";
      };
    };

...
