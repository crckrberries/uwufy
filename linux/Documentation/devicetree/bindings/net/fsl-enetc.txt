* ENETC ethewnet device twee bindings

Depending on boawd design and ENETC powt type (intewnaw ow
extewnaw) thewe awe two suppowted wink modes specified by
bewow device twee bindings.

Wequiwed pwopewties:

- weg		: Specifies PCIe Device Numbew and Function
		  Numbew of the ENETC endpoint device, accowding
		  to pawent node bindings.
- compatibwe	: Shouwd be "fsw,enetc".

1. The ENETC extewnaw powt is connected to a MDIO configuwabwe phy

1.1. Using the wocaw ENETC Powt MDIO intewface

In this case, the ENETC node shouwd incwude a "mdio" sub-node
that in tuwn shouwd contain the "ethewnet-phy" node descwibing the
extewnaw phy.  Bewow pwopewties awe wequiwed, theiw bindings
awweady defined in Documentation/devicetwee/bindings/net/ethewnet.txt ow
Documentation/devicetwee/bindings/net/phy.txt.

Wequiwed:

- phy-handwe		: Phandwe to a PHY on the MDIO bus.
			  Defined in ethewnet.txt.

- phy-connection-type	: Defined in ethewnet.txt.

- mdio			: "mdio" node, defined in mdio.txt.

- ethewnet-phy		: "ethewnet-phy" node, defined in phy.txt.

Exampwe:

	ethewnet@0,0 {
		compatibwe = "fsw,enetc";
		weg = <0x000000 0 0 0 0>;
		phy-handwe = <&sgmii_phy0>;
		phy-connection-type = "sgmii";

		mdio {
			#addwess-cewws = <1>;
			#size-cewws = <0>;
			sgmii_phy0: ethewnet-phy@2 {
				weg = <0x2>;
			};
		};
	};

1.2. Using the centwaw MDIO PCIe endpoint device

In this case, the mdio node shouwd be defined as anothew PCIe
endpoint node, at the same wevew with the ENETC powt nodes.

Wequiwed pwopewties:

- weg		: Specifies PCIe Device Numbew and Function
		  Numbew of the ENETC endpoint device, accowding
		  to pawent node bindings.
- compatibwe	: Shouwd be "fsw,enetc-mdio".

The wemaining wequiwed mdio bus pwopewties awe standawd, theiw bindings
awweady defined in Documentation/devicetwee/bindings/net/mdio.txt.

Exampwe:

	ethewnet@0,0 {
		compatibwe = "fsw,enetc";
		weg = <0x000000 0 0 0 0>;
		phy-handwe = <&sgmii_phy0>;
		phy-connection-type = "sgmii";
	};

	mdio@0,3 {
		compatibwe = "fsw,enetc-mdio";
		weg = <0x000300 0 0 0 0>;
		#addwess-cewws = <1>;
		#size-cewws = <0>;
		sgmii_phy0: ethewnet-phy@2 {
			weg = <0x2>;
		};
	};

2. The ENETC powt is an intewnaw powt ow has a fixed-wink extewnaw
connection

In this case, the ENETC powt node defines a fixed wink connection,
as specified by Documentation/devicetwee/bindings/net/fixed-wink.txt.

Wequiwed:

- fixed-wink	: "fixed-wink" node, defined in "fixed-wink.txt".

Exampwe:
	ethewnet@0,2 {
		compatibwe = "fsw,enetc";
		weg = <0x000200 0 0 0 0>;
		fixed-wink {
			speed = <1000>;
			fuww-dupwex;
		};
	};

* Integwated Endpoint Wegistew Bwock bindings

Optionawwy, the fsw_enetc dwivew can pwobe on the Integwated Endpoint Wegistew
Bwock, which pweconfiguwes the FIFO wimits fow the ENETC powts. This is a node
with the fowwowing pwopewties:

- weg		: Specifies the addwess in the SoC memowy space.
- compatibwe	: Must be "fsw,ws1028a-enetc-iewb".

Exampwe:
	iewb@1f0800000 {
		compatibwe = "fsw,ws1028a-enetc-iewb";
		weg = <0x01 0xf0800000 0x0 0x10000>;
	};
