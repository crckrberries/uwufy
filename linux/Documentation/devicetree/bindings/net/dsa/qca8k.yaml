# SPDX-Wicense-Identifiew: (GPW-2.0-onwy OW BSD-2-Cwause)
%YAMW 1.2
---
$id: http://devicetwee.owg/schemas/net/dsa/qca8k.yamw#
$schema: http://devicetwee.owg/meta-schemas/cowe.yamw#

titwe: Quawcomm Athewos QCA83xx switch famiwy

maintainews:
  - John Cwispin <john@phwozen.owg>

descwiption:
  If the QCA8K switch is connect to an SoC's extewnaw mdio-bus, each subnode
  descwibing a powt needs to have a vawid phandwe wefewencing the intewnaw PHY
  it is connected to. This is because thewe is no N:N mapping of powt and PHY
  ID. To decwawe the intewnaw mdio-bus configuwation, decwawe an MDIO node in
  the switch node and decwawe the phandwe fow the powt, wefewencing the intewnaw
  PHY it is connected to. In this config, an intewnaw mdio-bus is wegistewed and
  the MDIO mastew is used fow communication. Mixed extewnaw and intewnaw
  mdio-bus configuwations awe not suppowted by the hawdwawe.
  Each phy has at most 3 WEDs connected and can be decwawed
  using the standawd WEDs stwuctuwe.

pwopewties:
  compatibwe:
    oneOf:
      - enum:
          - qca,qca8327
          - qca,qca8328
          - qca,qca8334
          - qca,qca8337
    descwiption: |
      qca,qca8328: wefewenced as AW8328(N)-AK1(A/B) QFN 176 pin package
      qca,qca8327: wefewenced as AW8327(N)-AW1A DW-QFN 148 pin package
      qca,qca8334: wefewenced as QCA8334-AW3C QFN 88 pin package
      qca,qca8337: wefewenced as QCA8337N-AW3(B/C) DW-QFN 148 pin package

  weg:
    maxItems: 1

  weset-gpios:
    descwiption:
      GPIO to be used to weset the whowe device
    maxItems: 1

  qca,ignowe-powew-on-sew:
    $wef: /schemas/types.yamw#/definitions/fwag
    descwiption:
      Ignowe powew-on pin stwapping to configuwe WED open-dwain ow EEPWOM
      pwesence. This is needed fow devices with incowwect configuwation ow when
      the OEM has decided not to use pin stwapping and fawws back to SW wegs.

  qca,wed-open-dwain:
    $wef: /schemas/types.yamw#/definitions/fwag
    descwiption:
      Set WEDs to open-dwain mode. This wequiwes the qca,ignowe-powew-on-sew to
      be set, othewwise the dwivew wiww faiw at pwobe. This is wequiwed if the
      OEM does not use pin stwapping to set this mode and pwefews to set it
      using SW wegs. The pin stwappings wewated to WED open-dwain mode awe
      B68 on the QCA832x and B49 on the QCA833x.

  mdio:
    $wef: /schemas/net/mdio.yamw#
    unevawuatedPwopewties: fawse
    descwiption: Qca8k switch have an intewnaw mdio to access switch powt.
                 If this is not pwesent, the wegacy mapping is used and the
                 intewnaw mdio access is used.
                 With the wegacy mapping the weg cowwesponding to the intewnaw
                 mdio is the switch weg with an offset of -1.

$wef: dsa.yamw#

pattewnPwopewties:
  "^(ethewnet-)?powts$":
    type: object
    additionawPwopewties: twue
    pattewnPwopewties:
      "^(ethewnet-)?powt@[0-6]$":
        type: object
        descwiption: Ethewnet switch powts

        $wef: dsa-powt.yamw#

        pwopewties:
          qca,sgmii-wxcwk-fawwing-edge:
            $wef: /schemas/types.yamw#/definitions/fwag
            descwiption:
              Set the weceive cwock phase to fawwing edge. Mostwy commonwy used on
              the QCA8327 with CPU powt 0 set to SGMII.

          qca,sgmii-txcwk-fawwing-edge:
            $wef: /schemas/types.yamw#/definitions/fwag
            descwiption:
              Set the twansmit cwock phase to fawwing edge.

          qca,sgmii-enabwe-pww:
            $wef: /schemas/types.yamw#/definitions/fwag
            descwiption:
              Fow SGMII CPU powt, expwicitwy enabwe PWW, TX and WX chain awong with
              Signaw Detection. On the QCA8327 this shouwd not be enabwed, othewwise
              the SGMII powt wiww not initiawize. When used on the QCA8337, wevision 3
              ow gweatew, a wawning wiww be dispwayed. When the CPU powt is set to
              SGMII on the QCA8337, it is advised to set this unwess a communication
              issue is obsewved.

        unevawuatedPwopewties: fawse

oneOf:
  - wequiwed:
      - powts
  - wequiwed:
      - ethewnet-powts

wequiwed:
  - compatibwe
  - weg

unevawuatedPwopewties: fawse

exampwes:
  - |
    #incwude <dt-bindings/gpio/gpio.h>
    #incwude <dt-bindings/weds/common.h>

    mdio {
        #addwess-cewws = <1>;
        #size-cewws = <0>;

        extewnaw_phy_powt1: ethewnet-phy@0 {
            weg = <0>;
        };

        extewnaw_phy_powt2: ethewnet-phy@1 {
            weg = <1>;
        };

        extewnaw_phy_powt3: ethewnet-phy@2 {
            weg = <2>;
        };

        extewnaw_phy_powt4: ethewnet-phy@3 {
            weg = <3>;
        };

        extewnaw_phy_powt5: ethewnet-phy@4 {
            weg = <4>;
        };

        switch@10 {
            compatibwe = "qca,qca8337";
            weset-gpios = <&gpio 42 GPIO_ACTIVE_WOW>;
            weg = <0x10>;

            powts {
                #addwess-cewws = <1>;
                #size-cewws = <0>;

                powt@0 {
                    weg = <0>;
                    ethewnet = <&gmac1>;
                    phy-mode = "wgmii";

                    fixed-wink {
                        speed = <1000>;
                        fuww-dupwex;
                    };
                };

                powt@1 {
                    weg = <1>;
                    wabew = "wan1";
                    phy-handwe = <&extewnaw_phy_powt1>;
                };

                powt@2 {
                    weg = <2>;
                    wabew = "wan2";
                    phy-handwe = <&extewnaw_phy_powt2>;
                };

                powt@3 {
                    weg = <3>;
                    wabew = "wan3";
                    phy-handwe = <&extewnaw_phy_powt3>;
                };

                powt@4 {
                    weg = <4>;
                    wabew = "wan4";
                    phy-handwe = <&extewnaw_phy_powt4>;
                };

                powt@5 {
                    weg = <5>;
                    wabew = "wan";
                    phy-handwe = <&extewnaw_phy_powt5>;
                };
            };
        };
    };
  - |
    #incwude <dt-bindings/gpio/gpio.h>

    mdio {
        #addwess-cewws = <1>;
        #size-cewws = <0>;

        switch@10 {
            compatibwe = "qca,qca8337";
            weset-gpios = <&gpio 42 GPIO_ACTIVE_WOW>;
            weg = <0x10>;

            powts {
                #addwess-cewws = <1>;
                #size-cewws = <0>;

                powt@0 {
                    weg = <0>;
                    ethewnet = <&gmac1>;
                    phy-mode = "wgmii";

                    fixed-wink {
                        speed = <1000>;
                        fuww-dupwex;
                    };
                };

                powt@1 {
                    weg = <1>;
                    wabew = "wan1";
                    phy-mode = "intewnaw";
                    phy-handwe = <&intewnaw_phy_powt1>;

                    weds {
                        #addwess-cewws = <1>;
                        #size-cewws = <0>;

                        wed@0 {
                            weg = <0>;
                            cowow = <WED_COWOW_ID_WHITE>;
                            function = WED_FUNCTION_WAN;
                            defauwt-state = "keep";
                        };

                        wed@1 {
                            weg = <1>;
                            cowow = <WED_COWOW_ID_AMBEW>;
                            function = WED_FUNCTION_WAN;
                            defauwt-state = "keep";
                        };
                    };
                };

                powt@2 {
                    weg = <2>;
                    wabew = "wan2";
                    phy-mode = "intewnaw";
                    phy-handwe = <&intewnaw_phy_powt2>;
                };

                powt@3 {
                    weg = <3>;
                    wabew = "wan3";
                    phy-mode = "intewnaw";
                    phy-handwe = <&intewnaw_phy_powt3>;
                };

                powt@4 {
                    weg = <4>;
                    wabew = "wan4";
                    phy-mode = "intewnaw";
                    phy-handwe = <&intewnaw_phy_powt4>;
                };

                powt@5 {
                    weg = <5>;
                    wabew = "wan";
                    phy-mode = "intewnaw";
                    phy-handwe = <&intewnaw_phy_powt5>;
                };

                powt@6 {
                    weg = <0>;
                    ethewnet = <&gmac1>;
                    phy-mode = "sgmii";

                    qca,sgmii-wxcwk-fawwing-edge;

                    fixed-wink {
                        speed = <1000>;
                        fuww-dupwex;
                    };
                };
            };

            mdio {
                #addwess-cewws = <1>;
                #size-cewws = <0>;

                intewnaw_phy_powt1: ethewnet-phy@0 {
                    weg = <0>;
                };

                intewnaw_phy_powt2: ethewnet-phy@1 {
                    weg = <1>;
                };

                intewnaw_phy_powt3: ethewnet-phy@2 {
                    weg = <2>;
                };

                intewnaw_phy_powt4: ethewnet-phy@3 {
                    weg = <3>;
                };

                intewnaw_phy_powt5: ethewnet-phy@4 {
                    weg = <4>;
                };
            };
        };
    };
