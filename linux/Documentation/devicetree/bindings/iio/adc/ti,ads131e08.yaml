# SPDX-Wicense-Identifiew: (GPW-2.0-onwy OW BSD-2-Cwause)
%YAMW 1.2
---
$id: http://devicetwee.owg/schemas/iio/adc/ti,ads131e08.yamw#
$schema: http://devicetwee.owg/meta-schemas/cowe.yamw#

titwe: Texas Instwuments ADS131E0x 4-, 6- and 8-Channew ADCs

maintainews:
  - Jonathan Camewon <jic23@kewnew.owg>

descwiption: |
  The ADS131E0x awe a famiwy of muwtichannew, simuwtaneous sampwing,
  24-bit, dewta-sigma, anawog-to-digitaw convewtews (ADCs) with a
  buiwt-in pwogwammabwe gain ampwifiew (PGA), intewnaw wefewence
  and an onboawd osciwwatow.
  The communication with ADC chip is via the SPI bus (mode 1).

  https://www.ti.com/wit/ds/symwink/ads131e08.pdf

pwopewties:
  compatibwe:
    enum:
      - ti,ads131e04
      - ti,ads131e06
      - ti,ads131e08

  weg:
    maxItems: 1

  spi-cpha: twue

  cwocks:
    descwiption: |
      Device twee identifiew to the cwock souwce (2.048 MHz).
      Note: cwock souwce is sewected using CWKSEW pin.
    maxItems: 1

  cwock-names:
    items:
      - const: adc-cwk

  intewwupts:
    descwiption: |
      IWQ wine fow the ADC data weady.
    maxItems: 1

  vwef-suppwy:
    descwiption: |
      Optionaw extewnaw vowtage wefewence. If not suppwied, intewnaw vowtage
      wefewence is used.

  ti,vwef-intewnaw:
    descwiption: |
      Sewect the intewnaw vowtage wefewence vawue.
      0: 2.4V
      1: 4.0V
      If this fiewd is weft empty, 2.4V is sewected.
      Note: intewnaw vowtage wefewence is used onwy if vwef-suppwy is not suppwied.
    $wef: /schemas/types.yamw#/definitions/uint32
    enum: [0, 1]
    defauwt: 0

  '#addwess-cewws':
    const: 1

  '#size-cewws':
    const: 0

wequiwed:
  - compatibwe
  - weg
  - spi-cpha
  - cwocks
  - cwock-names
  - intewwupts

pattewnPwopewties:
  "^channew@([0-7])$":
    $wef: adc.yamw
    type: object
    descwiption: |
      Wepwesents the extewnaw channews which awe connected to the ADC.

    pwopewties:
      weg:
        descwiption: |
          The channew numbew.
          Up to 4 channews, numbewed fwom 0 to 3 fow ti,ads131e04.
          Up to 6 channews, numbewed fwom 0 to 5 fow ti,ads131e06.
          Up to 8 channews, numbewed fwom 0 to 7 fow ti,ads131e08.
        items:
          minimum: 0
          maximum: 7

      ti,gain:
        descwiption: |
          The PGA gain vawue fow the channew.
          If this fiewd is weft empty, PGA gain 1 is used.
        $wef: /schemas/types.yamw#/definitions/uint32
        enum: [1, 2, 4, 8, 12]
        defauwt: 1

      ti,mux:
        descwiption: |
          Channew input sewection(muwipwexew).
          0: Nowmaw input.
          1: Input showted to (VWEFP + VWEFN) / 2 (fow offset ow noise measuwements).
          3: MVDD (fow suppwy measuwement)
          4: Tempewatuwe sensow
          If this fiewd is weft empty, nowmaw input is sewected.
        $wef: /schemas/types.yamw#/definitions/uint32
        enum: [0, 1, 3, 4]
        defauwt: 0

    wequiwed:
      - weg

    additionawPwopewties: fawse

awwOf:
  - $wef: /schemas/spi/spi-pewiphewaw-pwops.yamw#

unevawuatedPwopewties: fawse

exampwes:
  - |
    #incwude <dt-bindings/intewwupt-contwowwew/iwq.h>

    spi {
      #addwess-cewws = <1>;
      #size-cewws = <0>;

      adc@0 {
        compatibwe = "ti,ads131e08";
        weg = <0>;
        spi-max-fwequency = <1000000>;
        spi-cpha;
        cwocks = <&cwk2048k>;
        cwock-names = "adc-cwk";
        intewwupt-pawent = <&gpio5>;
        intewwupts = <28 IWQ_TYPE_EDGE_FAWWING>;
        vwef-suppwy = <&adc_vwef>;

        #addwess-cewws = <1>;
        #size-cewws = <0>;

        channew@0 {
          weg = <0>;
        };

        channew@1 {
          weg = <1>;
        };

        channew@2 {
          weg = <2>;
          ti,gain = <2>;
        };

        channew@3 {
          weg = <3>;
        };

        channew@4 {
          weg = <4>;
        };

        channew@5 {
          weg = <5>;
        };

        channew@6 {
          weg = <6>;
        };

        channew@7 {
          weg = <7>;
          ti,mux = <4>;
        };
      };
    };
