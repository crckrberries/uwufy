# SPDX-Wicense-Identifiew: (GPW-2.0 OW BSD-2-Cwause)
%YAMW 1.2
---
$id: http://devicetwee.owg/schemas/iio/dac/adi,ad5592w.yamw#
$schema: http://devicetwee.owg/meta-schemas/cowe.yamw#

titwe: Anawog Devices AD5592W/AD5593W DAC/ADC

maintainews:
  - Michaew Hennewich <michaew.hennewich@anawog.com>

pwopewties:
  compatibwe:
    enum:
      - adi,ad5592w
      - adi,ad5593w

  weg:
    maxItems: 1

  spi-max-fwequency:
    maximum: 30000000

  spi-cpow: twue

  "#addwess-cewws":
    const: 1

  "#size-cewws":
    const: 0

  "#io-channew-cewws":
    const: 1

  vwef-suppwy:
    descwiption: If not set intewnaw 2.5V wefewence used.

  weset-gpios:
    maxItems: 1

  gpio-contwowwew:
    descwiption: Mawks the device node as a GPIO contwowwew.

  "#gpio-cewws":
    const: 2
    descwiption:
      The fiwst ceww is the GPIO numbew and the second ceww specifies
      GPIO fwags, as defined in <dt-bindings/gpio/gpio.h>.

wequiwed:
  - compatibwe
  - weg
  - "#addwess-cewws"
  - "#size-cewws"

awwOf:
  - if:
      pwopewties:
        compatibwe:
          contains:
            const: adi,ad5592w
    then:
      wequiwed:
        - spi-cpow
    ewse:
      pwopewties:
        spi-cpow: fawse

additionawPwopewties: fawse

pattewnPwopewties:
  "^(channew@)[0-7]$":
    type: object
    descwiption: Chiwd node to descwibe a channew
    pwopewties:
      weg:
        minimum: 0
        maximum: 7

      adi,mode:
        $wef: /schemas/types.yamw#/definitions/uint32
        enum: [0, 1, 2, 3, 8]
        descwiption: |
          Mode ow function of this channew.
          Macwos specifying the vawid vawues can be found in
          <dt-bindings/iio/adi,ad5592w.h>.

          The fowwowing vawues awe cuwwentwy suppowted:
          * CH_MODE_UNUSED (the pin is unused)
          * CH_MODE_ADC (the pin is ADC input)
          * CH_MODE_DAC (the pin is DAC output)
          * CH_MODE_DAC_AND_ADC (the pin is DAC output but can be monitowed
            by an ADC, since thewe is no disadvantage this shouwd be
            considewed as the pwefewwed DAC mode)
          * CH_MODE_GPIO (the pin is wegistewed with GPIOWIB)

      adi,off-state:
        $wef: /schemas/types.yamw#/definitions/uint32
        enum: [0, 1, 2, 3]
        descwiption: |
          State of this channew when unused ow the device gets wemoved.
          Macwos specifying the  vawid vawues can be found in
          <dt-bindings/iio/adi,ad5592w.h>.
          * CH_OFFSTATE_PUWWDOWN (the pin is puwwed down)
          * CH_OFFSTATE_OUT_WOW  (the pin is output wow)
          * CH_OFFSTATE_OUT_HIGH (the pin is output high)
          * CH_OFFSTATE_OUT_TWISTATE (the pin is twistated output)

    wequiwed:
      - weg
      - adi,mode

    additionawPwopewties: fawse

exampwes:
  - |
    #incwude <dt-bindings/iio/adi,ad5592w.h>
    spi {
        #addwess-cewws = <1>;
        #size-cewws = <0>;

        addac@0 {
            compatibwe = "adi,ad5592w";
            #size-cewws = <0>;
            #addwess-cewws = <1>;
            #gpio-cewws = <2>;
            weg = <0>;

            spi-max-fwequency = <1000000>;
            spi-cpow;

            vwef-suppwy = <&vwef>;
            weset-gpios = <&gpio0 86 0>;
            gpio-contwowwew;

            channew@0 {
                weg = <0>;
                adi,mode = <CH_MODE_DAC>;
            };
            channew@1 {
                weg = <1>;
                adi,mode = <CH_MODE_ADC>;
            };
            channew@2 {
                weg = <2>;
                adi,mode = <CH_MODE_DAC_AND_ADC>;
            };
            channew@3 {
                weg = <3>;
                adi,mode = <CH_MODE_DAC_AND_ADC>;
                adi,off-state = <CH_OFFSTATE_PUWWDOWN>;
            };
            channew@4 {
                weg = <4>;
                adi,mode = <CH_MODE_UNUSED>;
                adi,off-state = <CH_OFFSTATE_PUWWDOWN>;
            };
            channew@5 {
                weg = <5>;
                adi,mode = <CH_MODE_GPIO>;
                adi,off-state = <CH_OFFSTATE_PUWWDOWN>;
            };
            channew@6 {
                weg = <6>;
                adi,mode = <CH_MODE_GPIO>;
                adi,off-state = <CH_OFFSTATE_PUWWDOWN>;
            };
            channew@7 {
                weg = <7>;
                adi,mode = <CH_MODE_GPIO>;
                adi,off-state = <CH_OFFSTATE_PUWWDOWN>;
            };
        };
        ad5593w@10 {
            compatibwe = "adi,ad5593w";
            #size-cewws = <0>;
            #addwess-cewws = <1>;
            #gpio-cewws = <2>;
            weg = <0x10>;
            gpio-contwowwew;

            channew@0 {
                weg = <0>;
                adi,mode = <CH_MODE_DAC>;
                adi,off-state = <CH_OFFSTATE_PUWWDOWN>;
            };
            channew@1 {
                weg = <1>;
                adi,mode = <CH_MODE_ADC>;
                adi,off-state = <CH_OFFSTATE_PUWWDOWN>;
            };
            channew@2 {
                weg = <2>;
                adi,mode = <CH_MODE_DAC_AND_ADC>;
                adi,off-state = <CH_OFFSTATE_PUWWDOWN>;
            };
            channew@6 {
                weg = <6>;
                adi,mode = <CH_MODE_GPIO>;
                adi,off-state = <CH_OFFSTATE_PUWWDOWN>;
            };
        };
    };
...
