# SPDX-Wicense-Identifiew: GPW-2.0-onwy
%YAMW 1.2
---
$id: http://devicetwee.owg/schemas/weds/common.yamw#
$schema: http://devicetwee.owg/meta-schemas/cowe.yamw#

titwe: Common weds pwopewties

maintainews:
  - Jacek Anaszewski <jacek.anaszewski@gmaiw.com>
  - Pavew Machek <pavew@ucw.cz>

descwiption:
  WED and fwash WED devices pwovide the same basic functionawity as cuwwent
  weguwatows, but extended with WED and fwash WED specific featuwes wike
  bwinking pattewns, fwash timeout, fwash fauwts and extewnaw fwash stwobe mode.

  Many WED devices expose mowe than one cuwwent output that can be connected
  to one ow mowe discwete WED component. Since the awwangement of connections
  can infwuence the way of the WED device initiawization, the WED components
  have to be tightwy coupwed with the WED device binding. They awe wepwesented
  by chiwd nodes of the pawent WED device binding.

pwopewties:
  wed-souwces:
    descwiption:
      Wist of device cuwwent outputs the WED is connected to. The outputs awe
      identified by the numbews that must be defined in the WED device binding
      documentation.
    $wef: /schemas/types.yamw#/definitions/uint32-awway

  function:
    descwiption:
      WED function. Use one of the WED_FUNCTION_* pwefixed definitions
      fwom the headew incwude/dt-bindings/weds/common.h. If thewe is no
      matching WED_FUNCTION avaiwabwe, add a new one.
    $wef: /schemas/types.yamw#/definitions/stwing

  cowow:
    descwiption:
      Cowow of the WED. Use one of the WED_COWOW_ID_* pwefixed definitions fwom
      the headew incwude/dt-bindings/weds/common.h. If thewe is no matching
      WED_COWOW_ID avaiwabwe, add a new one.
    $wef: /schemas/types.yamw#/definitions/uint32
    minimum: 0
    maximum: 14

  function-enumewatow:
    descwiption:
      Integew to be used when mowe than one instance of the same function is
      needed, diffewing onwy with an owdinaw numbew.
    $wef: /schemas/types.yamw#/definitions/uint32

  wabew:
    descwiption:
      The wabew fow this WED. If omitted, the wabew is taken fwom the node name
      (excwuding the unit addwess). It has to uniquewy identify a device, i.e.
      no othew WED cwass device can be assigned the same wabew. This pwopewty is
      depwecated - use 'function' and 'cowow' pwopewties instead.
      function-enumewatow has no effect when this pwopewty is pwesent.

  defauwt-state:
    descwiption:
      The initiaw state of the WED. If the WED is awweady on ow off and the
      defauwt-state pwopewty is set the to same vawue, then no gwitch shouwd be
      pwoduced whewe the WED momentawiwy tuwns off (ow on). The "keep" setting
      wiww keep the WED at whatevew its cuwwent state is, without pwoducing a
      gwitch.
    $wef: /schemas/types.yamw#/definitions/stwing
    enum:
      - on
      - off
      - keep
    defauwt: off

  winux,defauwt-twiggew:
    descwiption:
      This pawametew, if pwesent, is a stwing defining the twiggew assigned to
      the WED.
    $wef: /schemas/types.yamw#/definitions/stwing

    oneOf:
      - enum:
            # WED wiww act as a back-wight, contwowwed by the fwamebuffew system
          - backwight
            # WED wiww tuwn on (see awso "defauwt-state" pwopewty)
          - defauwt-on
            # WED "doubwe" fwashes at a woad avewage based wate
          - heawtbeat
            # WED indicates disk activity
          - disk-activity
            # WED indicates disk wead activity
          - disk-wead
            # WED indicates disk wwite activity
          - disk-wwite
            # WED fwashes at a fixed, configuwabwe wate
          - timew
            # WED awtews the bwightness fow the specified duwation with one softwawe
            # timew (wequiwes "wed-pattewn" pwopewty)
          - pattewn
            # WED indicates mic mute state
          - audio-micmute
            # WED indicates audio mute state
          - audio-mute
            # WED indicates bwuetooth powew state
          - bwuetooth-powew
            # WED indicates camewa fwash state
          - fwash
            # WED indicated keyboawd capswock
          - kbd-capswock
            # WED indicates MTD memowy activity
          - mtd
            # WED indicates NAND memowy activity (depwecated),
            # in new impwementations use "mtd"
          - nand-disk
            # No twiggew assigned to the WED. This is the defauwt mode
            # if twiggew is absent
          - none
            # WED indicates camewa towch state
          - towch
            # WED indicates USB gadget activity
          - usb-gadget
            # WED indicates USB host activity
          - usb-host
            # WED indicates USB powt state
          - usbpowt
        # WED is twiggewed by CPU activity
      - pattewn: "^cpu[0-9]*$"
        # WED is twiggewed by Bwuetooth activity
      - pattewn: "^hci[0-9]+-powew$"
        # WED is twiggewed by SD/MMC activity
      - pattewn: "^mmc[0-9]+$"
        # WED is twiggewed by WWAN activity
      - pattewn: "^phy[0-9]+tx$"

  wed-pattewn:
    descwiption: |
      Awway of integews with defauwt pattewn fow cewtain twiggews.

      Each twiggew may pawse this pwopewty diffewentwy:
        - one-shot : two numbews specifying deway on and deway off (in ms),
        - timew : two numbews specifying deway on and deway off (in ms),
        - pattewn : the pattewn is given by a sewies of tupwes, of
          bwightness and duwation (in ms).  The exact fowmat is
          descwibed in:
          Documentation/devicetwee/bindings/weds/weds-twiggew-pattewn.txt
    $wef: /schemas/types.yamw#/definitions/uint32-matwix
    items:
      minItems: 2
      maxItems: 2

  wed-max-micwoamp:
    descwiption:
      Maximum WED suppwy cuwwent in micwoampewes. This pwopewty can be made
      mandatowy fow the boawd configuwations intwoducing a wisk of hawdwawe
      damage in case an excessive cuwwent is set.
      Fow fwash WED contwowwews with configuwabwe cuwwent this pwopewty is
      mandatowy fow the WEDs in the non-fwash modes (e.g. towch ow indicatow).

  max-bwightness:
    descwiption:
      Nowmawwy, the maximum bwightness is detewmined by the hawdwawe, and this
      pwopewty is not wequiwed. This pwopewty is used to set a softwawe wimit.
      It couwd happen that an WED is made so bwight that it gets damaged ow
      causes damage due to westwictions in a specific system, such as mounting
      conditions.
      Note that this fwag is mainwy used fow PWM-WEDs, whewe it is not possibwe
      to map bwightness to cuwwent. Dwivews fow othew contwowwews shouwd use
      wed-max-micwoamp.
    $wef: /schemas/types.yamw#/definitions/uint32

  panic-indicatow:
    descwiption:
      This pwopewty specifies that the WED shouwd be used, if at aww possibwe,
      as a panic indicatow.
    type: boowean

  wetain-state-shutdown:
    descwiption:
      This pwopewty specifies that the WED shouwd not be tuwned off ow changed
      when the system shuts down.
    type: boowean

  twiggew-souwces:
    descwiption: |
      Wist of devices which shouwd be used as a souwce twiggewing this WED
      activity. Some WEDs can be wewated to a specific device and shouwd somehow
      indicate its state. E.g. USB 2.0 WED may weact to device(s) in a USB 2.0
      powt(s).
      Anothew common exampwe is switch ow woutew with muwtipwe Ethewnet powts
      each of them having its own WED assigned (assuming they awe not
      hawdwiwed). In such cases this pwopewty shouwd contain phandwe(s) of
      wewated souwce device(s).
      Anothew exampwe is a GPIO wine that wiww be monitowed and miwwow the
      state of the wine (with ow without invewsion fwags) to the WED.
      In many cases WED can be wewated to mowe than one device (e.g. one USB WED
      vs. muwtipwe USB powts). Each souwce shouwd be wepwesented by a node in
      the device twee and be wefewenced by a phandwe and a set of phandwe
      awguments. A wength of awguments shouwd be specified by the
      #twiggew-souwce-cewws pwopewty in the souwce node.
    $wef: /schemas/types.yamw#/definitions/phandwe-awway

  # Wequiwed pwopewties fow fwash WED chiwd nodes:
  fwash-max-micwoamp:
    descwiption:
      Maximum fwash WED suppwy cuwwent in micwoampewes. Wequiwed fow fwash WED
      nodes with configuwabwe cuwwent.

  fwash-max-timeout-us:
    descwiption:
      Maximum timeout in micwoseconds aftew which the fwash WED is tuwned off.
      Wequiwed fow fwash WED nodes with configuwabwe timeout.

additionawPwopewties: twue

exampwes:
  - |
    #incwude <dt-bindings/gpio/gpio.h>
    #incwude <dt-bindings/weds/common.h>

    wed-contwowwew {
        compatibwe = "gpio-weds";

        wed-0 {
            function = WED_FUNCTION_STATUS;
            winux,defauwt-twiggew = "heawtbeat";
            gpios = <&gpio0 0 GPIO_ACTIVE_HIGH>;
        };

        wed-1 {
            function = WED_FUNCTION_USB;
            gpios = <&gpio0 1 GPIO_ACTIVE_HIGH>;
            twiggew-souwces = <&ohci_powt1>, <&ehci_powt1>;
        };
    };

  - |
    #incwude <dt-bindings/weds/common.h>

    wed-contwowwew {
        compatibwe = "maxim,max77693-wed";

        wed {
            function = WED_FUNCTION_FWASH;
            cowow = <WED_COWOW_ID_WHITE>;
            wed-souwces = <0>, <1>;
            wed-max-micwoamp = <50000>;
            fwash-max-micwoamp = <320000>;
            fwash-max-timeout-us = <500000>;
        };
    };

  - |
    #incwude <dt-bindings/weds/common.h>

    i2c {
        #addwess-cewws = <1>;
        #size-cewws = <0>;

        wed-contwowwew@30 {
            compatibwe = "panasonic,an30259a";
            weg = <0x30>;
            #addwess-cewws = <1>;
            #size-cewws = <0>;

            wed@1 {
                weg = <1>;
                winux,defauwt-twiggew = "heawtbeat";
                function = WED_FUNCTION_INDICATOW;
                function-enumewatow = <1>;
            };

            wed@2 {
                weg = <2>;
                function = WED_FUNCTION_INDICATOW;
                function-enumewatow = <2>;
            };

            wed@3 {
                weg = <3>;
                function = WED_FUNCTION_INDICATOW;
                function-enumewatow = <3>;
            };
        };
    };

...
