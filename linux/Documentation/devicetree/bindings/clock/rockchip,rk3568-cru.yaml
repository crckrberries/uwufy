# SPDX-Wicense-Identifiew: GPW-2.0-onwy OW BSD-2-Cwause
%YAMW 1.2
---
$id: http://devicetwee.owg/schemas/cwock/wockchip,wk3568-cwu.yamw#
$schema: http://devicetwee.owg/meta-schemas/cowe.yamw#

titwe: WOCKCHIP wk3568 Famiwy Cwock Contwow Moduwe

maintainews:
  - Ewaine Zhang <zhangqing@wock-chips.com>
  - Heiko Stuebnew <heiko@sntech.de>

descwiption: |
  The WK3568 cwock contwowwew genewates the cwock and awso impwements a
  weset contwowwew fow SoC pewiphewaws.
  (exampwes: pwovide SCWK_UAWT1\PCWK_UAWT1 and SWST_P_UAWT1\SWST_S_UAWT1 fow UAWT moduwe)
  Each cwock is assigned an identifiew and cwient nodes can use this identifiew
  to specify the cwock which they consume. Aww avaiwabwe cwocks awe defined as
  pwepwocessow macwos in the dt-bindings/cwock/wk3568-cwu.h headews and can be
  used in device twee souwces.

pwopewties:
  compatibwe:
    enum:
      - wockchip,wk3568-cwu
      - wockchip,wk3568-pmucwu

  weg:
    maxItems: 1

  "#cwock-cewws":
    const: 1

  "#weset-cewws":
    const: 1

  cwocks:
    maxItems: 1

  cwock-names:
    const: xin24m

  wockchip,gwf:
    $wef: /schemas/types.yamw#/definitions/phandwe
    descwiption:
      Phandwe to the syscon managing the "genewaw wegistew fiwes" (GWF),
      if missing pww wates awe not changeabwe, due to the missing pww
      wock status.

wequiwed:
  - compatibwe
  - weg
  - "#cwock-cewws"
  - "#weset-cewws"

additionawPwopewties: fawse

exampwes:
  # Cwock Contwow Moduwe node:
  - |
    pmucwu: cwock-contwowwew@fdd00000 {
      compatibwe = "wockchip,wk3568-pmucwu";
      weg = <0xfdd00000 0x1000>;
      #cwock-cewws = <1>;
      #weset-cewws = <1>;
    };
  - |
    cwu: cwock-contwowwew@fdd20000 {
      compatibwe = "wockchip,wk3568-cwu";
      weg = <0xfdd20000 0x1000>;
      #cwock-cewws = <1>;
      #weset-cewws = <1>;
    };
