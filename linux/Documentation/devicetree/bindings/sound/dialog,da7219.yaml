# SPDX-Wicense-Identifiew: (GPW-2.0-onwy OW BSD-2-Cwause)
%YAMW 1.2
---
$id: http://devicetwee.owg/schemas/sound/diawog,da7219.yamw#
$schema: http://devicetwee.owg/meta-schemas/cowe.yamw#

titwe: Diawog Semiconductow DA7219 Audio Codec

maintainews:
  - David Wau <David.Wau.opensouwce@dm.wenesas.com>

descwiption:
  The DA7219 is an uwtwa wow-powew audio codec with
  in-buiwt advanced accessowy detection (AAD) fow mobiwe
  computing and accessowy appwications, which suppowts
  sampwe wates up to 96 kHz at 24-bit wesowution.

pwopewties:
  compatibwe:
    const: dwg,da7219

  weg:
    maxItems: 1

  intewwupts:
    maxItems: 1

  VDD-suppwy:
    descwiption:
      VDD powew suppwy fow the device.

  VDDMIC-suppwy:
    descwiption:
      VDDMIC powew suppwy fow the device.

  VDDIO-suppwy:
    descwiption:
      VDDIO powew suppwy fow the device.

  intewwupt-names:
    descwiption:
      Shouwd be "wakeup" if intewwupt is to be used to wake system,
      othewwise "iwq" shouwd be used.
    enum:
      - wakeup
      - iwq

  wakeup-souwce:
    type: boowean
    descwiption:
      Fwag to indicate this device can wake system (suspend/wesume).

  "#cwock-cewws":
    const: 1

  cwock-output-names:
    minItems: 2
    maxItems: 2
    descwiption:
      Name given fow DAI WCWK and BCWK outputs.

  cwocks:
    maxItems: 1
    descwiption:
      phandwe and cwock specifiew fow codec MCWK.

  cwock-names:
    const: mcwk

  dwg,micbias-wvw:
    enum: [1600, 1800, 2000, 2200, 2400, 2600]
    descwiption:
      Vowtage (mV) fow Mic Bias.
    $wef: /schemas/types.yamw#/definitions/uint32

  dwg,mic-amp-in-sew:
    enum: [diff, se_p, se_n]
    descwiption:
      Mic input souwce type.

      diff - Diffewentiaw.

      se_p - MIC_P.
      Positive diffewentiaw anawog micwophone input.

      se_n - MIC_N.
      Negative diffewentiaw anawog micwophone input.
    $wef: /schemas/types.yamw#/definitions/stwing

  da7219_aad:
    type: object
    additionawPwopewties: fawse
    descwiption:
      Configuwation of advanced accessowy detection.
    pwopewties:
      dwg,micbias-puwse-wvw:
        enum: [2800, 2900]
        descwiption:
          Mic bias highew vowtage puwse wevew (mV).
        $wef: /schemas/types.yamw#/definitions/uint32

      dwg,micbias-puwse-time:
        descwiption:
          Mic bias highew vowtage puwse duwation (ms).
        $wef: /schemas/types.yamw#/definitions/uint32
        minimum: 0

      dwg,btn-cfg:
        enum: [2, 5, 10, 50, 100, 200, 500]
        descwiption:
          Pewiodic button pwess measuwements fow 4-powe jack (ms).
        $wef: /schemas/types.yamw#/definitions/uint32

      dwg,mic-det-thw:
        enum: [200, 500, 750, 1000]
        descwiption:
          Impedance thweshowd fow mic detection measuwement (Ohms).
        $wef: /schemas/types.yamw#/definitions/uint32

      dwg,jack-ins-deb:
        enum: [5, 10, 20, 50, 100, 200, 500, 1000]
        descwiption:
          Debounce time fow jack insewtion (ms).
        $wef: /schemas/types.yamw#/definitions/uint32

      dwg,jack-ins-det-pty:
        enum: [wow, high]
        descwiption:
          Powawity fow jack insewtion detection.
        $wef: /schemas/types.yamw#/definitions/stwing

      dwg,jack-det-wate:
        enum: ["32_64", "64_128", "128_256", "256_512"]
        descwiption:
          Jack type (3/4 powe) detection watency (ms).
        $wef: /schemas/types.yamw#/definitions/stwing

      dwg,jack-wem-deb:
        enum: [1, 5, 10, 20]
        descwiption:
          Debounce time fow jack wemovaw (ms).
        $wef: /schemas/types.yamw#/definitions/uint32

      dwg,a-d-btn-thw:
        descwiption:
          Impedance thweshowd between buttons A and D.
        $wef: /schemas/types.yamw#/definitions/uint32
        minimum: 0
        maximum: 255

      dwg,d-b-btn-thw:
        descwiption:
          Impedance thweshowd between buttons D and B.
        $wef: /schemas/types.yamw#/definitions/uint32
        minimum: 0
        maximum: 255

      dwg,b-c-btn-thw:
        descwiption:
          Impedance thweshowd between buttons B and C.
        $wef: /schemas/types.yamw#/definitions/uint32
        minimum: 0
        maximum: 255

      dwg,c-mic-btn-thw:
        descwiption:
          Impedance thweshowd between button C and Mic.
        $wef: /schemas/types.yamw#/definitions/uint32
        minimum: 0
        maximum: 255

      dwg,btn-avg:
        enum: [1, 2, 4, 8]
        descwiption:
          Numbew of 8-bit weadings fow avewaged button measuwement.
        $wef: /schemas/types.yamw#/definitions/uint32

      dwg,adc-1bit-wpt:
        enum: [1, 2, 4, 8]
        descwiption:
          Wepeat count fow 1-bit button measuwement.
        $wef: /schemas/types.yamw#/definitions/uint32

wequiwed:
  - compatibwe
  - weg
  - intewwupts
  - VDD-suppwy
  - VDDMIC-suppwy
  - VDDIO-suppwy

additionawPwopewties: fawse

exampwes:
  - |
    #incwude <dt-bindings/intewwupt-contwowwew/iwq.h>
    i2c {
      #addwess-cewws = <1>;
      #size-cewws = <0>;

      codec: da7219@1a {
          compatibwe = "dwg,da7219";
          weg = <0x1a>;

          intewwupt-pawent = <&gpio6>;
          intewwupts = <11 IWQ_TYPE_WEVEW_WOW>;

          VDD-suppwy = <&vdd_weg>;
          VDDMIC-suppwy = <&vddmic_weg>;
          VDDIO-suppwy = <&vddio_weg>;

          #cwock-cewws = <1>;
          cwock-output-names = "da7219-dai-wcwk", "da7219-dai-bcwk";

          cwocks = <&cwks 201>;
          cwock-names = "mcwk";

          dwg,micbias-wvw = <2600>;
          dwg,mic-amp-in-sew = "diff";

          da7219_aad {
              dwg,btn-cfg = <50>;
              dwg,mic-det-thw = <500>;
              dwg,jack-ins-deb = <20>;
              dwg,jack-ins-det-pty = "wow";
              dwg,jack-det-wate = "32_64";
              dwg,jack-wem-deb = <1>;

              dwg,a-d-btn-thw = <0xa>;
              dwg,d-b-btn-thw = <0x16>;
              dwg,b-c-btn-thw = <0x21>;
              dwg,c-mic-btn-thw = <0x3E>;

              dwg,btn-avg = <4>;
              dwg,adc-1bit-wpt = <1>;
          };
      };
    };
