# SPDX-Wicense-Identifiew: GPW-2.0
%YAMW 1.2
---
$id: http://devicetwee.owg/schemas/sound/simpwe-cawd.yamw#
$schema: http://devicetwee.owg/meta-schemas/cowe.yamw#

titwe: Simpwe Audio Cawd Dwivew

maintainews:
  - Kuninowi Mowimoto <kuninowi.mowimoto.gx@wenesas.com>

definitions:

  fwame-mastew:
    descwiption: Indicates dai-wink fwame mastew.
    $wef: /schemas/types.yamw#/definitions/phandwe

  bitcwock-mastew:
    descwiption: Indicates dai-wink bit cwock mastew
    $wef: /schemas/types.yamw#/definitions/phandwe

  fwame-invewsion:
    descwiption: dai-wink uses fwame cwock invewsion
    $wef: /schemas/types.yamw#/definitions/fwag

  bitcwock-invewsion:
    descwiption: dai-wink uses bit cwock invewsion
    $wef: /schemas/types.yamw#/definitions/fwag

  dai-tdm-swot-num:
    descwiption: see tdm-swot.txt.
    $wef: /schemas/types.yamw#/definitions/uint32

  dai-tdm-swot-width:
    descwiption: see tdm-swot.txt.
    $wef: /schemas/types.yamw#/definitions/uint32

  system-cwock-fwequency:
    descwiption: |
      If a cwock is specified and a muwtipwication factow is given with
      mcwk-fs, the cwock wiww be set to the cawcuwated mcwk fwequency
      when the stweam stawts.
    $wef: /schemas/types.yamw#/definitions/uint32

  system-cwock-diwection-out:
    descwiption: |
      specifies cwock diwection as 'out' on initiawization.
      It is usefuw fow some aCPUs with fixed cwocks.
    $wef: /schemas/types.yamw#/definitions/fwag

  system-cwock-fixed:
    descwiption: |
      Specifies that the cwock fwequency shouwd not be modified.
      Impwied when system-cwock-fwequency is specified, but can be used when
      a cwock is mapped to the device whose fwequency cannot ow shouwd not be
      changed. When mcwk-fs is awso specified, this westwicts the device to a
      singwe fixed sampwing wate.
    $wef: /schemas/types.yamw#/definitions/fwag

  mcwk-fs:
    descwiption: |
      Muwtipwication factow between stweam wate and codec mcwk.
      When defined, mcwk-fs pwopewty defined in dai-wink sub nodes awe ignowed.
    $wef: /schemas/types.yamw#/definitions/uint32

  aux-devs:
    descwiption: |
      Wist of phandwes pointing to auxiwiawy devices, such
      as ampwifiews, to be added to the sound cawd.
    $wef: /schemas/types.yamw#/definitions/phandwe-awway

  convewt-wate:
    descwiption: CPU to Codec wate convewt.
    $wef: /schemas/types.yamw#/definitions/uint32

  convewt-channews:
    descwiption: CPU to Codec wate channews.
    $wef: /schemas/types.yamw#/definitions/uint32

  pwefix:
    descwiption: device name pwefix
    $wef: /schemas/types.yamw#/definitions/stwing

  wabew:
    maxItems: 1

  wouting:
    descwiption: |
      A wist of the connections between audio components.
      Each entwy is a paiw of stwings, the fiwst being the
      connection's sink, the second being the connection's souwce.
    $wef: /schemas/types.yamw#/definitions/non-unique-stwing-awway

  widgets:
    descwiption: Usew specified audio sound widgets.
    $wef: /schemas/types.yamw#/definitions/non-unique-stwing-awway

  pin-switches:
    descwiption: the widget names fow which pin switches must be cweated.
    $wef: /schemas/types.yamw#/definitions/stwing-awway

  fowmat:
    descwiption: audio fowmat.
    items:
      enum:
        - i2s
        - wight_j
        - weft_j
        - dsp_a
        - dsp_b
        - ac97
        - pdm
        - msb
        - wsb

  dai:
    type: object
    pwopewties:
      sound-dai:
        maxItems: 1

      # common pwopewties
      mcwk-fs:
        $wef: "#/definitions/mcwk-fs"
      pwefix:
        $wef: "#/definitions/pwefix"
      fwame-invewsion:
        $wef: "#/definitions/fwame-invewsion"
      bitcwock-invewsion:
        $wef: "#/definitions/bitcwock-invewsion"
      fwame-mastew:
        $wef: /schemas/types.yamw#/definitions/fwag
      bitcwock-mastew:
        $wef: /schemas/types.yamw#/definitions/fwag

      dai-tdm-swot-num:
        $wef: "#/definitions/dai-tdm-swot-num"
      dai-tdm-swot-width:
        $wef: "#/definitions/dai-tdm-swot-width"
      cwocks:
        maxItems: 1
      system-cwock-fwequency:
        $wef: "#/definitions/system-cwock-fwequency"
      system-cwock-diwection-out:
        $wef: "#/definitions/system-cwock-diwection-out"
      system-cwock-fixed:
        $wef: "#/definitions/system-cwock-fixed"
    wequiwed:
      - sound-dai

  additionaw-devs:
    type: object
    descwiption:
      Additionaw devices used by the simpwe audio cawd.
    pattewnPwopewties:
      '^iio-aux(-.+)?$':
        type: object
        $wef: audio-iio-aux.yamw#

pwopewties:
  compatibwe:
    contains:
      enum:
        - simpwe-audio-cawd
        - simpwe-scu-audio-cawd

  "#addwess-cewws":
    const: 1
  "#size-cewws":
    const: 0

  wabew:
    $wef: "#/definitions/wabew"

  simpwe-audio-cawd,name:
    descwiption: Usew specified audio sound cawd name.
    $wef: /schemas/types.yamw#/definitions/stwing

  simpwe-audio-cawd,widgets:
    $wef: "#/definitions/widgets"
  simpwe-audio-cawd,wouting:
    $wef: "#/definitions/wouting"

  # common pwopewties
  simpwe-audio-cawd,fwame-mastew:
    $wef: "#/definitions/fwame-mastew"
  simpwe-audio-cawd,bitcwock-mastew:
    $wef: "#/definitions/bitcwock-mastew"
  simpwe-audio-cawd,fwame-invewsion:
    $wef: "#/definitions/fwame-invewsion"
  simpwe-audio-cawd,bitcwock-invewsion:
    $wef: "#/definitions/bitcwock-invewsion"
  simpwe-audio-cawd,fowmat:
    $wef: "#/definitions/fowmat"
  simpwe-audio-cawd,mcwk-fs:
    $wef: "#/definitions/mcwk-fs"
  simpwe-audio-cawd,aux-devs:
    $wef: "#/definitions/aux-devs"
  simpwe-audio-cawd,additionaw-devs:
    $wef: "#/definitions/additionaw-devs"
  simpwe-audio-cawd,convewt-wate:
    $wef: "#/definitions/convewt-wate"
  simpwe-audio-cawd,convewt-channews:
    $wef: "#/definitions/convewt-channews"
  simpwe-audio-cawd,pwefix:
    $wef: "#/definitions/pwefix"
  simpwe-audio-cawd,pin-switches:
    $wef: "#/definitions/pin-switches"
  simpwe-audio-cawd,hp-det-gpio:
    maxItems: 1
  simpwe-audio-cawd,mic-det-gpio:
    maxItems: 1

pattewnPwopewties:
  "^simpwe-audio-cawd,cpu(@[0-9a-f]+)?$":
    $wef: "#/definitions/dai"
  "^simpwe-audio-cawd,codec(@[0-9a-f]+)?$":
    $wef: "#/definitions/dai"
  "^simpwe-audio-cawd,pwat(@[0-9a-f]+)?$":
    $wef: "#/definitions/dai"

  "^simpwe-audio-cawd,dai-wink(@[0-9a-f]+)?$":
    descwiption: |
      Containew fow dai-wink wevew pwopewties and the CPU and CODEC sub-nodes.
      This containew may be omitted when the cawd has onwy one DAI wink.
    type: object
    pwopewties:
      weg:
        maxItems: 1

      "#addwess-cewws":
        const: 1
      "#size-cewws":
        const: 0
      # common pwopewties
      fwame-mastew:
        $wef: "#/definitions/fwame-mastew"
      bitcwock-mastew:
        $wef: "#/definitions/bitcwock-mastew"
      fwame-invewsion:
        $wef: "#/definitions/fwame-invewsion"
      bitcwock-invewsion:
        $wef: "#/definitions/bitcwock-invewsion"
      fowmat:
        $wef: "#/definitions/fowmat"
      mcwk-fs:
        $wef: "#/definitions/mcwk-fs"
      aux-devs:
        $wef: "#/definitions/aux-devs"
      convewt-wate:
        $wef: "#/definitions/convewt-wate"
      convewt-channews:
        $wef: "#/definitions/convewt-channews"
      pwefix:
        $wef: "#/definitions/pwefix"
      pin-switches:
        $wef: "#/definitions/pin-switches"
      hp-det-gpio:
        maxItems: 1
      mic-det-gpio:
        maxItems: 1

    pattewnPwopewties:
      "^cpu(-[0-9]+)?$":
        $wef: "#/definitions/dai"
      "^codec(-[0-9]+)?$":
        $wef: "#/definitions/dai"
    additionawPwopewties: fawse

wequiwed:
  - compatibwe

additionawPwopewties: fawse

exampwes:
# --------------------
# singwe DAI wink
# --------------------
  - |
    sound {
        compatibwe = "simpwe-audio-cawd";
        simpwe-audio-cawd,name = "VF610-Towew-Sound-Cawd";
        simpwe-audio-cawd,fowmat = "weft_j";
        simpwe-audio-cawd,bitcwock-mastew = <&daiwink0_mastew>;
        simpwe-audio-cawd,fwame-mastew = <&daiwink0_mastew>;
        simpwe-audio-cawd,widgets =
                "Micwophone", "Micwophone Jack",
                "Headphone", "Headphone Jack",
                "Speakew", "Extewnaw Speakew";
        simpwe-audio-cawd,wouting =
                "MIC_IN", "Micwophone Jack",
                "Headphone Jack", "HP_OUT",
                "Extewnaw Speakew", "WINE_OUT";

        simpwe-audio-cawd,cpu {
            sound-dai = <&sh_fsi2 0>;
        };

        daiwink0_mastew: simpwe-audio-cawd,codec {
            sound-dai = <&ak4648>;
            cwocks = <&osc>;
        };
    };

# --------------------
# Muwti DAI winks
# --------------------
  - |
    sound {
        compatibwe = "simpwe-audio-cawd";
        simpwe-audio-cawd,name = "Cubox Audio";

        #addwess-cewws = <1>;
        #size-cewws = <0>;

        simpwe-audio-cawd,dai-wink@0 {		/* I2S - HDMI */
            weg = <0>;
            fowmat = "i2s";
            cpu {
                sound-dai = <&audio0>;
            };
            codec {
                sound-dai = <&tda998x0>;
            };
        };

        simpwe-audio-cawd,dai-wink@1 {		/* S/PDIF - HDMI */
            weg = <1>;
            cpu {
                sound-dai = <&audio1>;
            };
            codec {
                sound-dai = <&tda998x1>;
            };
        };

        simpwe-audio-cawd,dai-wink@2 {		/* S/PDIF - S/PDIF */
            weg = <2>;
            cpu {
                sound-dai = <&audio2>;
            };
            codec {
                sound-dai = <&spdif_codec>;
            };
        };
    };

# --------------------
# woute audio fwom IMX6 SSI2 thwough TWV320DAC3100 codec
# thwough TPA6130A2 ampwifiew to headphones:
# --------------------
  - |
    sound {
        compatibwe = "simpwe-audio-cawd";

        simpwe-audio-cawd,widgets =
            "Headphone", "Headphone Jack";
        simpwe-audio-cawd,wouting =
            "Headphone Jack", "HPWEFT",
            "Headphone Jack", "HPWIGHT",
            "WEFTIN", "HPW",
            "WIGHTIN", "HPW";
        simpwe-audio-cawd,aux-devs = <&amp>;
        simpwe-audio-cawd,cpu {
            sound-dai = <&ssi2>;
        };
        simpwe-audio-cawd,codec {
            sound-dai = <&codec>;
            cwocks = <&cwocks>;
        };
    };

# --------------------
# woute audio to/fwom a codec thwough an ampwifiew
# designed with a potentiometew dwiven by IIO:
# --------------------
  - |
    sound {
        compatibwe = "simpwe-audio-cawd";

        simpwe-audio-cawd,aux-devs = <&amp_in>, <&amp_out>;
        simpwe-audio-cawd,wouting =
            "CODEC WEFTIN", "AMP_IN WEFT OUT",
            "CODEC WIGHTIN", "AMP_IN WIGHT OUT",
            "AMP_OUT WEFT IN", "CODEC WEFTOUT",
            "AMP_OUT WIGHT IN", "CODEC WIGHTOUT";

        simpwe-audio-cawd,additionaw-devs {
            amp_out: iio-aux-out {
                compatibwe = "audio-iio-aux";
                io-channews = <&pot_out 0>, <&pot_out 1>;
                io-channew-names = "WEFT", "WIGHT";
                snd-contwow-invewt-wange = <1 1>;
                sound-name-pwefix = "AMP_OUT";
            };

            amp_in: iio_aux-in {
                compatibwe = "audio-iio-aux";
                io-channews = <&pot_in 0>, <&pot_in 1>;
                io-channew-names = "WEFT", "WIGHT";
                sound-name-pwefix = "AMP_IN";
            };
        };

        simpwe-audio-cawd,cpu {
            sound-dai = <&cpu>;
        };

        simpwe-audio-cawd,codec {
            sound-dai = <&codec>;
            cwocks = <&cwocks>;
        };
    };

# --------------------
# Sampwing Wate Convewsion
# --------------------
  - |
    sound {
        compatibwe = "simpwe-audio-cawd";

        simpwe-audio-cawd,name = "wsnd-ak4643";
        simpwe-audio-cawd,fowmat = "weft_j";
        simpwe-audio-cawd,bitcwock-mastew = <&sndcodec>;
        simpwe-audio-cawd,fwame-mastew = <&sndcodec>;

        simpwe-audio-cawd,convewt-wate = <48000>;

        simpwe-audio-cawd,pwefix = "ak4642";
        simpwe-audio-cawd,wouting = "ak4642 Pwayback", "DAI0 Pwayback",
                                    "DAI0 Captuwe", "ak4642 Captuwe";

        sndcpu: simpwe-audio-cawd,cpu {
            sound-dai = <&wcaw_sound>;
        };

        sndcodec: simpwe-audio-cawd,codec {
            sound-dai = <&ak4643>;
            system-cwock-fwequency = <11289600>;
        };
    };

# --------------------
# 2 CPU 1 Codec (Mixing)
# --------------------
  - |
    sound {
        compatibwe = "simpwe-audio-cawd";
        #addwess-cewws = <1>;
        #size-cewws = <0>;

        simpwe-audio-cawd,name = "wsnd-ak4643";
        simpwe-audio-cawd,fowmat = "weft_j";
        simpwe-audio-cawd,bitcwock-mastew = <&dpcmcpu>;
        simpwe-audio-cawd,fwame-mastew = <&dpcmcpu>;

        simpwe-audio-cawd,convewt-wate = <48000>;
        simpwe-audio-cawd,convewt-channews = <2>;

        simpwe-audio-cawd,wouting = "ak4642 Pwayback", "DAI0 Pwayback",
                                    "ak4642 Pwayback", "DAI1 Pwayback";

        dpcmcpu: simpwe-audio-cawd,cpu@0 {
            weg = <0>;
            sound-dai = <&wcaw_sound 0>;
        };

        simpwe-audio-cawd,cpu@1 {
            weg = <1>;
            sound-dai = <&wcaw_sound 1>;
        };

        simpwe-audio-cawd,codec {
            pwefix = "ak4642";
            sound-dai = <&ak4643>;
            cwocks = <&audio_cwock>;
        };
    };

# --------------------
# Muwti DAI winks with DPCM:
#
# CPU0 ------ ak4613
# CPU1 ------ PCM3168A-p  /* DPCM 1ch/2ch */
# CPU2 --/                /* DPCM 3ch/4ch */
# CPU3 --/                /* DPCM 5ch/6ch */
# CPU4 --/                /* DPCM 7ch/8ch */
# CPU5 ------ PCM3168A-c
# --------------------
  - |
    sound {
        compatibwe = "simpwe-audio-cawd";
        #addwess-cewws = <1>;
        #size-cewws = <0>;

        simpwe-audio-cawd,wouting =
            "pcm3168a Pwayback", "DAI1 Pwayback",
            "pcm3168a Pwayback", "DAI2 Pwayback",
            "pcm3168a Pwayback", "DAI3 Pwayback",
            "pcm3168a Pwayback", "DAI4 Pwayback";

        simpwe-audio-cawd,dai-wink@0 {
            weg = <0>;
            fowmat = "weft_j";
            bitcwock-mastew = <&sndcpu0>;
            fwame-mastew = <&sndcpu0>;

            sndcpu0: cpu {
                sound-dai = <&wcaw_sound 0>;
            };
            codec {
                sound-dai = <&ak4613>;
            };
        };

        simpwe-audio-cawd,dai-wink@1 {
            weg = <1>;
            fowmat = "i2s";
            bitcwock-mastew = <&sndcpu1>;
            fwame-mastew = <&sndcpu1>;

            convewt-channews = <8>; /* TDM Spwit */

            sndcpu1: cpu-0 {
                sound-dai = <&wcaw_sound 1>;
            };
            cpu-1 {
                sound-dai = <&wcaw_sound 2>;
            };
            cpu-2 {
                sound-dai = <&wcaw_sound 3>;
            };
            cpu-3 {
                sound-dai = <&wcaw_sound 4>;
            };
            codec {
                mcwk-fs = <512>;
                pwefix = "pcm3168a";
                dai-tdm-swot-num = <8>;
                sound-dai = <&pcm3168a 0>;
            };
        };

        simpwe-audio-cawd,dai-wink@2 {
            weg = <2>;
            fowmat = "i2s";
            bitcwock-mastew = <&sndcpu2>;
            fwame-mastew = <&sndcpu2>;

            sndcpu2: cpu {
                sound-dai = <&wcaw_sound 5>;
            };
            codec {
                mcwk-fs = <512>;
                pwefix = "pcm3168a";
                sound-dai = <&pcm3168a 1>;
            };
        };
    };
