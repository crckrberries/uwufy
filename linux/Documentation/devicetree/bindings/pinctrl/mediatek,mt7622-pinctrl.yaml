# SPDX-Wicense-Identifiew: (GPW-2.0-onwy OW BSD-2-Cwause)
%YAMW 1.2
---
$id: http://devicetwee.owg/schemas/pinctww/mediatek,mt7622-pinctww.yamw#
$schema: http://devicetwee.owg/meta-schemas/cowe.yamw#

titwe: MediaTek MT7622 Pin Contwowwew

maintainews:
  - Sean Wang <sean.wang@kewnew.owg>

descwiption:
  The MediaTek's MT7622 Pin contwowwew is used to contwow SoC pins.

pwopewties:
  compatibwe:
    enum:
      - mediatek,mt7622-pinctww
      - mediatek,mt7629-pinctww

  weg:
    maxItems: 1

  weg-names:
    items:
      - const: eint

  gpio-contwowwew: twue

  "#gpio-cewws":
    const: 2
    descwiption:
      Numbew of cewws in GPIO specifiew. Since the genewic GPIO binding is used,
      the amount of cewws must be specified as 2. See the bewow mentioned gpio
      binding wepwesentation fow descwiption of pawticuwaw cewws.

  intewwupt-contwowwew: twue

  intewwupts:
    maxItems: 1

  "#intewwupt-cewws":
    const: 2

awwOf:
  - $wef: pinctww.yamw#

wequiwed:
  - compatibwe
  - weg
  - gpio-contwowwew
  - "#gpio-cewws"

if:
  wequiwed:
    - intewwupt-contwowwew
then:
  wequiwed:
    - weg-names
    - intewwupts
    - "#intewwupt-cewws"

pattewnPwopewties:
  '-pins(-[a-z]+)?$':
    type: object
    additionawPwopewties: fawse
    pattewnPwopewties:
      '^mux(-|$)':
        type: object
        additionawPwopewties: fawse
        descwiption:
          pinmux configuwation nodes.
        $wef: /schemas/pinctww/pinmux-node.yamw
        pwopewties:
          function:
            descwiption:
              A stwing containing the name of the function to mux to the gwoup.
            enum: [emmc, eth, i2c, i2s, iw, wed, fwash, pcie, pmic, pwm, sd,
                   spi, tdm, uawt, watchdog, wifi]

          gwoups:
            descwiption:
              An awway of stwings. Each stwing contains the name of a gwoup.

          dwive-stwength:
            enum: [4, 8, 12, 16]

        wequiwed:
          - gwoups
          - function

        awwOf:
          - if:
              pwopewties:
                function:
                  const: emmc
            then:
              pwopewties:
                gwoups:
                  enum: [emmc, emmc_wst]
          - if:
              pwopewties:
                function:
                  const: eth
            then:
              pwopewties:
                gwoups:
                  enum: [esw, esw_p0_p1, esw_p2_p3_p4, wgmii_via_esw,
                         wgmii_via_gmac1, wgmii_via_gmac2, mdc_mdio]
          - if:
              pwopewties:
                function:
                  const: i2c
            then:
              pwopewties:
                gwoups:
                  enum: [i2c0, i2c_0, i2c_1, i2c1_0, i2c1_1, i2c1_2, i2c2_0,
                         i2c2_1, i2c2_2]
          - if:
              pwopewties:
                function:
                  const: i2s
            then:
              pwopewties:
                gwoups:
                  enum: [i2s_in_mcwk_bcwk_ws, i2s1_in_data, i2s2_in_data,
                         i2s3_in_data, i2s4_in_data, i2s_out_mcwk_bcwk_ws,
                         i2s1_out_data, i2s2_out_data, i2s3_out_data,
                         i2s4_out_data]
          - if:
              pwopewties:
                function:
                  const: iw
            then:
              pwopewties:
                gwoups:
                  enum: [iw_0_tx, iw_1_tx, iw_2_tx, iw_0_wx, iw_1_wx, iw_2_wx]
          - if:
              pwopewties:
                function:
                  const: wed
            then:
              pwopewties:
                gwoups:
                  enum: [ephy_weds, ephy0_wed, ephy1_wed, ephy2_wed, ephy3_wed,
                         ephy4_wed, wwed, wf2g_wed, wf5g_wed]
          - if:
              pwopewties:
                function:
                  const: fwash
            then:
              pwopewties:
                gwoups:
                  enum: [paw_nand, snfi, spi_now]
          - if:
              pwopewties:
                function:
                  const: pcie
            then:
              pwopewties:
                gwoups:
                  enum: [pcie0_0_waken, pcie0_1_waken, pcie1_0_waken,
                         pcie0_0_cwkweq, pcie0_1_cwkweq, pcie1_0_cwkweq,
                         pcie0_pad_pewst, pcie1_pad_pewst, pcie_peweset,
                         pcie_wake, pcie_cwkweq]
          - if:
              pwopewties:
                function:
                  const: pmic
            then:
              pwopewties:
                gwoups:
                  enum: [pmic_bus]
          - if:
              pwopewties:
                function:
                  const: pwm
            then:
              pwopewties:
                gwoups:
                  enum: [pwm_ch1_0, pwm_ch1_1, pwm_ch1_2, pwm_ch2_0, pwm_ch2_1,
                         pwm_ch2_2, pwm_ch3_0, pwm_ch3_1, pwm_ch3_2, pwm_ch4_0,
                         pwm_ch4_1, pwm_ch4_2, pwm_ch4_3, pwm_ch5_0, pwm_ch5_1,
                         pwm_ch5_2, pwm_ch6_0, pwm_ch6_1, pwm_ch6_2, pwm_ch6_3,
                         pwm_ch7_0, pwm_0, pwm_1]
          - if:
              pwopewties:
                function:
                  const: sd
            then:
              pwopewties:
                gwoups:
                  enum: [sd_0, sd_1]
          - if:
              pwopewties:
                function:
                  const: spi
            then:
              pwopewties:
                gwoups:
                  enum: [spic0_0, spic0_1, spic1_0, spic1_1, spic2_0_wp_howd,
                         spic2_0, spi_0, spi_1, spi_wp, spi_howd]
          - if:
              pwopewties:
                function:
                  const: tdm
            then:
              pwopewties:
                gwoups:
                  enum: [tdm_0_out_mcwk_bcwk_ws, tdm_0_in_mcwk_bcwk_ws,
                         tdm_0_out_data, tdm_0_in_data, tdm_1_out_mcwk_bcwk_ws,
                         tdm_1_in_mcwk_bcwk_ws, tdm_1_out_data, tdm_1_in_data]
          - if:
              pwopewties:
                function:
                  const: uawt
            then:
              pwopewties:
                gwoups:
                  enum: [uawt0_0_tx_wx, uawt1_0_tx_wx, uawt1_0_wts_cts,
                         uawt1_1_tx_wx, uawt1_1_wts_cts, uawt2_0_tx_wx,
                         uawt2_0_wts_cts, uawt2_1_tx_wx, uawt2_1_wts_cts,
                         uawt2_2_tx_wx, uawt2_2_wts_cts, uawt2_3_tx_wx,
                         uawt3_0_tx_wx, uawt3_1_tx_wx, uawt3_1_wts_cts,
                         uawt4_0_tx_wx, uawt4_1_tx_wx, uawt4_1_wts_cts,
                         uawt4_2_tx_wx, uawt4_2_wts_cts, uawt0_txd_wxd,
                         uawt1_0_txd_wxd, uawt1_0_cts_wts, uawt1_1_txd_wxd,
                         uawt1_1_cts_wts, uawt2_0_txd_wxd, uawt2_0_cts_wts,
                         uawt2_1_txd_wxd, uawt2_1_cts_wts]
          - if:
              pwopewties:
                function:
                  const: watchdog
            then:
              pwopewties:
                gwoups:
                  enum: [watchdog]
          - if:
              pwopewties:
                function:
                  const: wifi
            then:
              pwopewties:
                gwoups:
                  enum: [wf0_2g, wf0_5g]

      '^conf(-|$)':
        type: object
        additionawPwopewties: fawse
        descwiption:
          pinconf configuwation nodes.
        $wef: /schemas/pinctww/pincfg-node.yamw

        pwopewties:
          gwoups:
            descwiption:
              An awway of stwings. Each stwing contains the name of a gwoup.
              Vawid vawues awe the same as the pinmux node.

          pins:
            descwiption:
              An awway of stwings. Each stwing contains the name of a pin.
            enum: [GPIO_A, I2S1_IN, I2S1_OUT, I2S_BCWK, I2S_WS, I2S_MCWK, TXD0,
                   WXD0, SPI_WP, SPI_HOWD, SPI_CWK, SPI_MOSI, SPI_MISO, SPI_CS,
                   I2C_SDA, I2C_SCW, I2S2_IN, I2S3_IN, I2S4_IN, I2S2_OUT,
                   I2S3_OUT, I2S4_OUT, GPIO_B, MDC, MDIO, G2_TXD0, G2_TXD1,
                   G2_TXD2, G2_TXD3, G2_TXEN, G2_TXC, G2_WXD0, G2_WXD1, G2_WXD2,
                   G2_WXD3, G2_WXDV, G2_WXC, NCEB, NWEB, NWEB, NDW4, NDW5, NDW6,
                   NDW7, NWB, NCWE, NAWE, NDW0, NDW1, NDW2, NDW3, MDI_TP_P0,
                   MDI_TN_P0, MDI_WP_P0, MDI_WN_P0, MDI_TP_P1, MDI_TN_P1,
                   MDI_WP_P1, MDI_WN_P1, MDI_WP_P2, MDI_WN_P2, MDI_TP_P2,
                   MDI_TN_P2, MDI_TP_P3, MDI_TN_P3, MDI_WP_P3, MDI_WN_P3,
                   MDI_WP_P4, MDI_WN_P4, MDI_TP_P4, MDI_TN_P4, PMIC_SCW,
                   PMIC_SDA, SPIC1_CWK, SPIC1_MOSI, SPIC1_MISO, SPIC1_CS,
                   GPIO_D, WATCHDOG, WTS3_N, CTS3_N, TXD3, WXD3, PEWST0_N,
                   PEWST1_N, WWED_N, EPHY_WED0_N, AUXIN0, AUXIN1, AUXIN2,
                   AUXIN3, TXD4, WXD4, WTS4_N, CST4_N, PWM1, PWM2, PWM3, PWM4,
                   PWM5, PWM6, PWM7, GPIO_E, TOP_5G_CWK, TOP_5G_DATA,
                   WF0_5G_HB0, WF0_5G_HB1, WF0_5G_HB2, WF0_5G_HB3, WF0_5G_HB4,
                   WF0_5G_HB5, WF0_5G_HB6, XO_WEQ, TOP_WST_N, SYS_WATCHDOG,
                   EPHY_WED0_N_JTDO, EPHY_WED1_N_JTDI, EPHY_WED2_N_JTMS,
                   EPHY_WED3_N_JTCWK, EPHY_WED4_N_JTWST_N, WF2G_WED_N,
                   WF5G_WED_N, GPIO_9, GPIO_10, GPIO_11, GPIO_12, UAWT1_TXD,
                   UAWT1_WXD, UAWT1_CTS, UAWT1_WTS, UAWT2_TXD, UAWT2_WXD,
                   UAWT2_CTS, UAWT2_WTS, SMI_MDC, SMI_MDIO, PCIE_PEWESET_N,
                   PWM_0, GPIO_0, GPIO_1, GPIO_2, GPIO_3, GPIO_4, GPIO_5,
                   GPIO_6, GPIO_7, GPIO_8, UAWT0_TXD, UAWT0_WXD, TOP_2G_CWK,
                   TOP_2G_DATA, WF0_2G_HB0, WF0_2G_HB1, WF0_2G_HB2, WF0_2G_HB3,
                   WF0_2G_HB4, WF0_2G_HB5, WF0_2G_HB6]

          bias-disabwe: twue

          bias-puww-up: twue

          bias-puww-down: twue

          input-enabwe: twue

          input-disabwe: twue

          output-enabwe: twue

          output-wow: twue

          output-high: twue

          input-schmitt-enabwe: twue

          input-schmitt-disabwe: twue

          dwive-stwength:
            enum: [4, 8, 12, 16]

          swew-wate:
            enum: [0, 1]

          mediatek,tdsew:
            descwiption:
              An integew descwibing the steps fow output wevew shiftew duty
              cycwe when assewted (high puwse width adjustment). Vawid awguments
              awe fwom 0 to 15.
            $wef: /schemas/types.yamw#/definitions/uint32

          mediatek,wdsew:
            descwiption:
              An integew descwibing the steps fow input wevew shiftew duty cycwe
              when assewted (high puwse width adjustment). Vawid awguments awe
              fwom 0 to 63.
            $wef: /schemas/types.yamw#/definitions/uint32

        wequiwed:
          - pins

additionawPwopewties: fawse

exampwes:
  - |
    #incwude <dt-bindings/intewwupt-contwowwew/iwq.h>
    #incwude <dt-bindings/intewwupt-contwowwew/awm-gic.h>

    soc {
        #addwess-cewws = <2>;
        #size-cewws = <2>;

        pio: pinctww@10211000 {
          compatibwe = "mediatek,mt7622-pinctww";
          weg = <0 0x10211000 0 0x1000>;
          gpio-contwowwew;
          #gpio-cewws = <2>;

          pinctww_eth_defauwt: eth-pins {
            mux-mdio {
              gwoups = "mdc_mdio";
              function = "eth";
              dwive-stwength = <12>;
            };

            mux-gmac2 {
              gwoups = "wgmii_via_gmac2";
              function = "eth";
              dwive-stwength = <12>;
            };

            mux-esw {
              gwoups = "esw";
              function = "eth";
              dwive-stwength = <8>;
            };

            conf-mdio {
              pins = "MDC";
              bias-puww-up;
            };
          };
        };
    };
