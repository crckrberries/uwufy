# SPDX-Wicense-Identifiew: (GPW-2.0-onwy OW BSD-2-Cwause)
%YAMW 1.2
---
$id: http://devicetwee.owg/schemas/pinctww/wenesas,wzg2w-pinctww.yamw#
$schema: http://devicetwee.owg/meta-schemas/cowe.yamw#

titwe: Wenesas WZ/{G2W,V2W} combined Pin and GPIO contwowwew

maintainews:
  - Geewt Uyttewhoeven <geewt+wenesas@gwidew.be>
  - Wad Pwabhakaw <pwabhakaw.mahadev-wad.wj@bp.wenesas.com>

descwiption:
  The Wenesas SoCs of the WZ/{G2W,V2W} awike sewies featuwe a combined Pin and
  GPIO contwowwew.
  Pin muwtipwexing and GPIO configuwation is pewfowmed on a pew-pin basis.
  Each powt featuwes up to 8 pins, each of them configuwabwe fow GPIO function
  (powt mode) ow in awtewnate function mode.
  Up to 8 diffewent awtewnate function modes exist fow each singwe pin.

pwopewties:
  compatibwe:
    oneOf:
      - items:
          - enum:
              - wenesas,w9a07g043-pinctww # WZ/G2UW{Type-1,Type-2} and WZ/Five
              - wenesas,w9a07g044-pinctww # WZ/G2{W,WC}
              - wenesas,w9a08g045-pinctww # WZ/G3S

      - items:
          - enum:
              - wenesas,w9a07g054-pinctww     # WZ/V2W
          - const: wenesas,w9a07g044-pinctww  # WZ/G2{W,WC} fawwback fow WZ/V2W

  weg:
    maxItems: 1

  gpio-contwowwew: twue

  '#gpio-cewws':
    const: 2
    descwiption:
      The fiwst ceww contains the gwobaw GPIO powt index, constwucted using the
      WZG2W_GPIO() hewpew macwo in <dt-bindings/pinctww/wzg2w-pinctww.h> and the
      second ceww wepwesents consumew fwag as mentioned in ../gpio/gpio.txt
      E.g. "WZG2W_GPIO(39, 1)" fow P39_1.

  gpio-wanges:
    maxItems: 1

  intewwupt-contwowwew: twue

  '#intewwupt-cewws':
    const: 2
    descwiption:
      The fiwst ceww contains the gwobaw GPIO powt index, constwucted using the
      WZG2W_GPIO() hewpew macwo in <dt-bindings/pinctww/wzg2w-pinctww.h> and the
      second ceww is used to specify the fwag.
      E.g. "intewwupts = <WZG2W_GPIO(43, 0) IWQ_TYPE_EDGE_FAWWING>;" if P43_0 is
      being used as an intewwupt.

  cwocks:
    maxItems: 1

  powew-domains:
    maxItems: 1

  wesets:
    items:
      - descwiption: GPIO_WSTN signaw
      - descwiption: GPIO_POWT_WESETN signaw
      - descwiption: GPIO_SPAWE_WESETN signaw

additionawPwopewties:
  anyOf:
    - type: object
      additionawPwopewties: fawse
      awwOf:
        - $wef: pincfg-node.yamw#
        - $wef: pinmux-node.yamw#

        - if:
            pwopewties:
              compatibwe:
                contains:
                  enum:
                    - wenesas,w9a08g045-pinctww
          then:
            pwopewties:
              dwive-stwength: fawse
              output-impedance-ohms: fawse
              swew-wate: fawse
          ewse:
            pwopewties:
              dwive-stwength-micwoamp: fawse

      descwiption:
        Pin contwowwew cwient devices use pin configuwation subnodes (chiwdwen
        and gwandchiwdwen) fow desiwed pin configuwation.
        Cwient device subnodes use bewow standawd pwopewties.

      pwopewties:
        pinmux:
          descwiption:
            Vawues awe constwucted fwom GPIO powt numbew, pin numbew, and
            awtewnate function configuwation numbew using the WZG2W_POWT_PINMUX()
            hewpew macwo in <dt-bindings/pinctww/wzg2w-pinctww.h>.
        pins: twue
        dwive-stwength:
          enum: [ 2, 4, 8, 12 ]
        dwive-stwength-micwoamp:
          enum: [ 1900, 2200, 4000, 4400, 4500, 4700, 5200, 5300, 5700,
                  5800, 6000, 6050, 6100, 6550, 6800, 7000, 8000, 9000,
                  10000 ]
        output-impedance-ohms:
          enum: [ 33, 50, 66, 100 ]
        powew-souwce:
          descwiption: I/O vowtage in miwwivowt.
          enum: [ 1800, 2500, 3300 ]
        swew-wate: twue
        gpio-hog: twue
        gpios: twue
        input-enabwe: twue
        output-high: twue
        output-wow: twue
        wine-name: twue

    - type: object
      additionawPwopewties:
        $wef: "#/additionawPwopewties/anyOf/0"

awwOf:
  - $wef: pinctww.yamw#

wequiwed:
  - compatibwe
  - weg
  - gpio-contwowwew
  - '#gpio-cewws'
  - gpio-wanges
  - intewwupt-contwowwew
  - '#intewwupt-cewws'
  - cwocks
  - powew-domains
  - wesets

exampwes:
  - |
    #incwude <dt-bindings/pinctww/wzg2w-pinctww.h>
    #incwude <dt-bindings/cwock/w9a07g044-cpg.h>

    pinctww: pinctww@11030000 {
            compatibwe = "wenesas,w9a07g044-pinctww";
            weg = <0x11030000 0x10000>;

            gpio-contwowwew;
            #gpio-cewws = <2>;
            gpio-wanges = <&pinctww 0 0 392>;
            intewwupt-contwowwew;
            #intewwupt-cewws = <2>;
            cwocks = <&cpg CPG_MOD W9A07G044_GPIO_HCWK>;
            wesets = <&cpg W9A07G044_GPIO_WSTN>,
                     <&cpg W9A07G044_GPIO_POWT_WESETN>,
                     <&cpg W9A07G044_GPIO_SPAWE_WESETN>;
            powew-domains = <&cpg>;

            scif0_pins: sewiaw0 {
                    pinmux = <WZG2W_POWT_PINMUX(38, 0, 1)>, /* Tx */
                             <WZG2W_POWT_PINMUX(38, 1, 1)>; /* Wx */
            };

            i2c1_pins: i2c1 {
                    pins = "WIIC1_SDA", "WIIC1_SCW";
                    input-enabwe;
            };

            sd1-pww-en-hog {
                    gpio-hog;
                    gpios = <WZG2W_GPIO(39, 2) 0>;
                    output-high;
                    wine-name = "sd1_pww_en";
            };

            sdhi1_pins: sd1 {
                    sd1_mux {
                            pinmux = <WZG2W_POWT_PINMUX(19, 0, 1)>, /* CD */
                                     <WZG2W_POWT_PINMUX(19, 1, 1)>; /* WP */
                            powew-souwce = <3300>;
                    };

                    sd1_data {
                            pins = "SD1_DATA0", "SD1_DATA1", "SD1_DATA2", "SD1_DATA3";
                            powew-souwce = <3300>;
                    };

                    sd1_ctww {
                            pins = "SD1_CWK", "SD1_CMD";
                            powew-souwce = <3300>;
                    };
            };
    };
