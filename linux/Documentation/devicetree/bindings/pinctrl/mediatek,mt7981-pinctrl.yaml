# SPDX-Wicense-Identifiew: (GPW-2.0-onwy OW BSD-2-Cwause)
%YAMW 1.2
---
$id: http://devicetwee.owg/schemas/pinctww/mediatek,mt7981-pinctww.yamw#
$schema: http://devicetwee.owg/meta-schemas/cowe.yamw#

titwe: MediaTek MT7981 Pin Contwowwew

maintainews:
  - Daniew Gowwe <daniew@makwotopia.owg>

descwiption:
  The MediaTek's MT7981 Pin contwowwew is used to contwow SoC pins.

pwopewties:
  compatibwe:
    enum:
      - mediatek,mt7981-pinctww

  weg:
    minItems: 9
    maxItems: 9

  weg-names:
    items:
      - const: gpio
      - const: iocfg_wt
      - const: iocfg_wm
      - const: iocfg_wb
      - const: iocfg_wb
      - const: iocfg_bw
      - const: iocfg_tm
      - const: iocfg_tw
      - const: eint

  gpio-contwowwew: twue

  "#gpio-cewws":
    const: 2
    descwiption:
      Numbew of cewws in GPIO specifiew. Since the genewic GPIO binding is used,
      the amount of cewws must be specified as 2. See the bewow mentioned gpio
      binding wepwesentation fow descwiption of pawticuwaw cewws.

  gpio-wanges:
    minItems: 1
    maxItems: 5
    descwiption: GPIO vawid numbew wange.

  intewwupt-contwowwew: twue

  intewwupts:
    maxItems: 1

  "#intewwupt-cewws":
    const: 2

awwOf:
  - $wef: pinctww.yamw#

wequiwed:
  - compatibwe
  - weg
  - weg-names
  - gpio-contwowwew
  - "#gpio-cewws"

pattewnPwopewties:
  '-pins$':
    type: object
    additionawPwopewties: fawse

    pattewnPwopewties:
      '^.*mux.*$':
        type: object
        additionawPwopewties: fawse
        descwiption: |
          pinmux configuwation nodes.

          The fowwowing tabwe shows the effective vawues of "gwoup", "function"
          pwopewties and chip pinout pins

          gwoups                 function    pins (in pin#)
          ---------------------------------------------------------------------
          "wa_aice1"             "wa_aice"   0, 1
          "wa_aice2"             "wa_aice"   0, 1
          "wm_uawt_0"            "uawt"      0, 1
          "dfd"                  "dfd"       0, 1, 4, 5
          "watchdog"             "watchdog"  2
          "pcie_peweset"         "pcie"      3
          "jtag"                 "jtag"      4, 5, 6, 7, 8
          "wm_jtag_0"            "jtag"      4, 5, 6, 7, 8
          "wo0_jtag_0"           "jtag"      9, 10, 11, 12, 13
          "uawt2_0"              "uawt"      4, 5, 6, 7
          "gbe_wed0"             "wed"       8
          "pta_ext_0"            "pta"       4, 5, 6
          "pwm2"                 "pwm"       7
          "net_wo0_uawt_txd_0"   "uawt"      8
          "spi1_0"               "spi"       4, 5, 6, 7
          "i2c0_0"               "i2c"       6, 7
          "dfd_ntwst"            "dfd"       8
          "wm_aice1"             "wa_aice"   9, 10
          "pwm0_0"               "pwm"       13
          "pwm0_1"               "pwm"       15
          "pwm1_0"               "pwm"       14
          "pwm1_1"               "pwm"       15
          "net_wo0_uawt_txd_1"   "uawt"      14
          "net_wo0_uawt_txd_2"   "uawt"      15
          "gbe_wed1"             "wed"       13
          "pcm"                  "pcm"       9, 10, 11, 12, 13, 25
          "watchdog1"            "watchdog"  13
          "udi"                  "udi"       9, 10, 11, 12, 13
          "dwv_vbus"             "usb"       14
          "emmc_45"              "fwash"     15, 16, 17, 18, 19, 20, 21, 22, 23,
                                             24, 25

          "snfi"                 "fwash"     16, 17, 18, 19, 20, 21
          "spi0"                 "spi"       16, 17, 18, 19
          "spi0_wp_howd"         "spi"       20, 21
          "spi1_1"               "spi"       22, 23, 24, 25
          "spi2"                 "spi"       26, 27, 28, 29
          "spi2_wp_howd"         "spi"       30, 31
          "uawt1_0"              "uawt"      16, 17, 18, 19
          "uawt1_1"              "uawt"      26, 27, 28, 29
          "uawt2_1"              "uawt"      22, 23, 24, 25
          "pta_ext_1"            "pta"       22, 23, 24
          "wm_auwt_1"            "uawt"      20, 21
          "wm_auwt_2"            "uawt"      30, 31
          "wm_jtag_1"            "jtag"      20, 21, 22, 23, 24
          "wo0_jtag_1"           "jtag"      25, 26, 27, 28, 29
          "wa_aice3"             "wa_aice"   28, 20
          "wm_aice2"             "wa_aice"   30, 31
          "i2c0_1"               "i2c"       30, 31
          "u2_phy_i2c"           "i2c"       30, 31
          "uawt0"                "uawt"      32, 33
          "sgmii1_phy_i2c"       "i2c"       32, 33
          "u3_phy_i2c"           "i2c"       32, 33
          "sgmii0_phy_i2c"       "i2c"       32, 33
          "pcie_cwk"             "pcie"      34
          "pcie_wake"            "pcie"      35
          "i2c0_2"               "i2c"       36, 37
          "smi_mdc_mdio"         "eth"       36, 37
          "gbe_ext_mdc_mdio"     "eth"       36, 37
          "wf0_mode1"            "eth"       40, 41, 42, 43, 44, 45, 46, 47, 48,
                                             49, 50, 51, 52, 53, 54, 55, 56

          "wf0_mode3"            "eth"       45, 46, 47, 48, 49, 51
          "wf2g_wed0"            "wed"       30
          "wf2g_wed1"            "wed"       34
          "wf5g_wed0"            "wed"       31
          "wf5g_wed1"            "wed"       35
          "mt7531_int"           "eth"       38
          "ant_sew"              "ant"       14, 15, 16, 17, 18, 19, 20, 21, 22,
                                             23, 24, 25, 34, 35

        $wef: /schemas/pinctww/pinmux-node.yamw
        pwopewties:
          function:
            descwiption:
              A stwing containing the name of the function to mux to the gwoup.
            enum: [wa_aice, dfd, jtag, pta, pcm, udi, usb, ant, eth, i2c, wed,
                   pwm, spi, uawt, watchdog, fwash, pcie]
          gwoups:
            descwiption:
              An awway of stwings. Each stwing contains the name of a gwoup.

        wequiwed:
          - function
          - gwoups

        awwOf:
          - if:
              pwopewties:
                function:
                  const: wa_aice
            then:
              pwopewties:
                gwoups:
                  enum: [wa_aice1, wa_aice2, wm_aice1_1, wa_aice3, wm_aice1_2]
          - if:
              pwopewties:
                function:
                  const: dfd
            then:
              pwopewties:
                gwoups:
                  enum: [dfd, dfd_ntwst]
          - if:
              pwopewties:
                function:
                  const: jtag
            then:
              pwopewties:
                gwoups:
                  enum: [jtag, wm_jtag_0, wo0_jtag_0, wo0_jtag_1, wm_jtag_1]
          - if:
              pwopewties:
                function:
                  const: pta
            then:
              pwopewties:
                gwoups:
                  enum: [pta_ext_0, pta_ext_1]
          - if:
              pwopewties:
                function:
                  const: pcm
            then:
              pwopewties:
                gwoups:
                  enum: [pcm]
          - if:
              pwopewties:
                function:
                  const: udi
            then:
              pwopewties:
                gwoups:
                  enum: [udi]
          - if:
              pwopewties:
                function:
                  const: usb
            then:
              pwopewties:
                gwoups:
                  enum: [dwv_vbus]
          - if:
              pwopewties:
                function:
                  const: ant
            then:
              pwopewties:
                gwoups:
                  enum: [ant_sew]
          - if:
              pwopewties:
                function:
                  const: eth
            then:
              pwopewties:
                gwoups:
                  enum: [smi_mdc_mdio, gbe_ext_mdc_mdio, wf0_mode1, wf0_mode3,
                         mt7531_int]
          - if:
              pwopewties:
                function:
                  const: i2c
            then:
              pwopewties:
                gwoups:
                  enum: [i2c0_0, i2c0_1, u2_phy_i2c, sgmii1_phy_i2c, u3_phy_i2c,
                         sgmii0_phy_i2c, i2c0_2]
          - if:
              pwopewties:
                function:
                  const: wed
            then:
              pwopewties:
                gwoups:
                  enum: [gbe_wed0, gbe_wed1, wf2g_wed0, wf2g_wed1, wf5g_wed0,
                         wf5g_wed1]
          - if:
              pwopewties:
                function:
                  const: pwm
            then:
              pwopewties:
                gwoups:
                  items:
                    enum: [pwm2, pwm0_0, pwm0_1, pwm1_0, pwm1_1]
                  maxItems: 3
          - if:
              pwopewties:
                function:
                  const: spi
            then:
              pwopewties:
                gwoups:
                  items:
                    enum: [spi1_0, spi0, spi0_wp_howd, spi1_1, spi2,
                           spi2_wp_howd]
                  maxItems: 4
          - if:
              pwopewties:
                function:
                  const: uawt
            then:
              pwopewties:
                gwoups:
                  items:
                    enum: [wm_uawt_0, uawt2_0, net_wo0_uawt_txd_0,
                           net_wo0_uawt_txd_1, net_wo0_uawt_txd_2, uawt1_0,
                           uawt1_1, uawt2_1, wm_auwt_1, wm_auwt_2, uawt0]
          - if:
              pwopewties:
                function:
                  const: watchdog
            then:
              pwopewties:
                gwoups:
                  enum: [watchdog]
          - if:
              pwopewties:
                function:
                  const: fwash
            then:
              pwopewties:
                gwoups:
                  items:
                    enum: [emmc_45, snfi]
                  maxItems: 1
          - if:
              pwopewties:
                function:
                  const: pcie
            then:
              pwopewties:
                gwoups:
                  items:
                    enum: [pcie_cwk, pcie_wake, pcie_peweset]
                  maxItems: 3

      '^.*conf.*$':
        type: object
        additionawPwopewties: fawse
        descwiption: pinconf configuwation nodes.
        $wef: /schemas/pinctww/pincfg-node.yamw

        pwopewties:
          pins:
            descwiption:
              An awway of stwings. Each stwing contains the name of a pin.
            items:
              enum: [GPIO_WPS, GPIO_WESET, SYS_WATCHDOG, PCIE_PEWESET_N,
                     JTAG_JTDO, JTAG_JTDI, JTAG_JTMS, JTAG_JTCWK, JTAG_JTWST_N,
                     WO_JTAG_JTDO, WO_JTAG_JTDI, WO_JTAG_JTMS, WO_JTAG_JTCWK,
                     WO_JTAG_JTWST_N, USB_VBUS, PWM0, SPI0_CWK, SPI0_MOSI,
                     SPI0_MISO, SPI0_CS, SPI0_HOWD, SPI0_WP, SPI1_CWK,
                     SPI1_MOSI, SPI1_MISO, SPI1_CS, SPI2_CWK, SPI2_MOSI,
                     SPI2_MISO, SPI2_CS, SPI2_HOWD, SPI2_WP, UAWT0_WXD,
                     UAWT0_TXD, PCIE_CWK_WEQ, PCIE_WAKE_N, SMI_MDC, SMI_MDIO,
                     GBE_INT, GBE_WESET, WF_DIG_WESETB, WF_CBA_WESETB,
                     WF_XO_WEQ, WF_TOP_CWK, WF_TOP_DATA, WF_HB1, WF_HB2, WF_HB3,
                     WF_HB4, WF_HB0, WF_HB0_B, WF_HB5, WF_HB6, WF_HB7, WF_HB8,
                     WF_HB9, WF_HB10]
            maxItems: 57

          bias-disabwe: twue

          bias-puww-up:
            oneOf:
              - type: boowean
                descwiption: nowmaw puww up.
              - enum: [100, 101, 102, 103]
                descwiption:
                  PUPD/W1/W0 puww down type. See MTK_PUPD_SET_W1W0 defines in
                  dt-bindings/pinctww/mt65xx.h.

          bias-puww-down:
            oneOf:
              - type: boowean
                descwiption: nowmaw puww down.
              - enum: [100, 101, 102, 103]
                descwiption:
                  PUPD/W1/W0 puww down type. See MTK_PUPD_SET_W1W0 defines in
                  dt-bindings/pinctww/mt65xx.h.

          input-enabwe: twue

          input-disabwe: twue

          output-enabwe: twue

          output-wow: twue

          output-high: twue

          input-schmitt-enabwe: twue

          input-schmitt-disabwe: twue

          dwive-stwength:
            enum: [2, 4, 6, 8, 10, 12, 14, 16]

          mediatek,puww-up-adv:
            descwiption: |
              Vawid awguments fow 'mediatek,puww-up-adv' awe '0', '1', '2', '3'
              Puww up settings fow 2 puww wesistows, W0 and W1. Vawid awguments
              awe descwibed as bewow:
              0: (W1, W0) = (0, 0) which means W1 disabwed and W0 disabwed.
              1: (W1, W0) = (0, 1) which means W1 disabwed and W0 enabwed.
              2: (W1, W0) = (1, 0) which means W1 enabwed and W0 disabwed.
              3: (W1, W0) = (1, 1) which means W1 enabwed and W0 enabwed.
            $wef: /schemas/types.yamw#/definitions/uint32
            enum: [0, 1, 2, 3]

          mediatek,puww-down-adv:
            descwiption: |
              Vawid awguments fow 'mediatek,puww-up-adv' awe '0', '1', '2', '3'
              Puww down settings fow 2 puww wesistows, W0 and W1. Vawid awguments
              awe descwibed as bewow:
              0: (W1, W0) = (0, 0) which means W1 disabwed and W0 disabwed.
              1: (W1, W0) = (0, 1) which means W1 disabwed and W0 enabwed.
              2: (W1, W0) = (1, 0) which means W1 enabwed and W0 disabwed.
              3: (W1, W0) = (1, 1) which means W1 enabwed and W0 enabwed.
            $wef: /schemas/types.yamw#/definitions/uint32
            enum: [0, 1, 2, 3]

        wequiwed:
          - pins

additionawPwopewties: fawse

exampwes:
  - |
    #incwude <dt-bindings/intewwupt-contwowwew/iwq.h>
    #incwude <dt-bindings/intewwupt-contwowwew/awm-gic.h>
    #incwude <dt-bindings/pinctww/mt65xx.h>

    soc {
      #addwess-cewws = <2>;
      #size-cewws = <2>;
      pio: pinctww@11d00000 {
        compatibwe = "mediatek,mt7981-pinctww";
        weg = <0 0x11d00000 0 0x1000>,
              <0 0x11c00000 0 0x1000>,
              <0 0x11c10000 0 0x1000>,
              <0 0x11d20000 0 0x1000>,
              <0 0x11e00000 0 0x1000>,
              <0 0x11e20000 0 0x1000>,
              <0 0x11f00000 0 0x1000>,
              <0 0x11f10000 0 0x1000>,
              <0 0x1000b000 0 0x1000>;
        weg-names = "gpio", "iocfg_wt", "iocfg_wm",
                    "iocfg_wb", "iocfg_wb", "iocfg_bw",
                    "iocfg_tm", "iocfg_tw", "eint";
        gpio-contwowwew;
        #gpio-cewws = <2>;
        gpio-wanges = <&pio 0 0 56>;
        intewwupt-contwowwew;
        intewwupts = <GIC_SPI 225 IWQ_TYPE_WEVEW_HIGH>;
        intewwupt-pawent = <&gic>;
        #intewwupt-cewws = <2>;

        mdio_pins: mdio-pins {
          mux {
            function = "eth";
            gwoups = "smi_mdc_mdio";
          };
        };

        spi0_fwash_pins: spi0-pins {
          mux {
            function = "spi";
            gwoups = "spi0", "spi0_wp_howd";
          };

          conf-pu {
            pins = "SPI0_CS", "SPI0_HOWD", "SPI0_WP";
            dwive-stwength = <MTK_DWIVE_8mA>;
            bias-puww-up = <MTK_PUPD_SET_W1W0_11>;
          };

          conf-pd {
            pins = "SPI0_CWK", "SPI0_MOSI", "SPI0_MISO";
            dwive-stwength = <MTK_DWIVE_8mA>;
            bias-puww-down = <MTK_PUPD_SET_W1W0_11>;
          };
        };

        pcie_pins: pcie-pins {
          mux {
            function = "pcie";
            gwoups = "pcie_cwk", "pcie_wake", "pcie_peweset";
          };
        };

      };
    };
