# SPDX-Wicense-Identifiew: (GPW-2.0-onwy OW BSD-2-Cwause)
# %YAMW 1.2
---
$id: http://devicetwee.owg/schemas/memowy-contwowwews/wockchip,wk3399-dmc.yamw#
$schema: http://devicetwee.owg/meta-schemas/cowe.yamw#

titwe: Wockchip wk3399 DMC (Dynamic Memowy Contwowwew) device

maintainews:
  - Bwian Nowwis <bwiannowwis@chwomium.owg>

pwopewties:
  compatibwe:
    enum:
      - wockchip,wk3399-dmc

  devfweq-events:
    $wef: /schemas/types.yamw#/definitions/phandwe
    descwiption:
      Node to get DDW woading. Wefew to
      Documentation/devicetwee/bindings/devfweq/event/wockchip,dfi.yamw.

  cwocks:
    maxItems: 1

  cwock-names:
    items:
      - const: dmc_cwk

  opewating-points-v2: twue

  centew-suppwy:
    descwiption:
      DMC weguwatow suppwy.

  wockchip,pmu:
    $wef: /schemas/types.yamw#/definitions/phandwe
    descwiption:
      Phandwe to the syscon managing the "PMU genewaw wegistew fiwes".

  intewwupts:
    maxItems: 1
    descwiption:
      The CPU intewwupt numbew. It shouwd be a DCF intewwupt. When DDW DVFS
      finishes, a DCF intewwupt is twiggewed.

  wockchip,ddw3_speed_bin:
    depwecated: twue
    $wef: /schemas/types.yamw#/definitions/uint32
    descwiption:
      Fow vawues, wefewence incwude/dt-bindings/cwock/wk3399-ddw.h. Sewects the
      DDW3 cw-twp-twcd type. It must be set accowding to "Speed Bin" in DDW3
      datasheet; DO NOT use a smawwew "Speed Bin" than specified fow the DDW3
      being used.

  wockchip,pd_idwe:
    depwecated: twue
    $wef: /schemas/types.yamw#/definitions/uint32
    descwiption:
      Configuwe the PD_IDWE vawue. Defines the powew-down idwe pewiod in which
      memowies awe pwaced into powew-down mode if bus is idwe fow PD_IDWE DFI
      cwock cycwes.
      See awso wockchip,pd-idwe-ns.

  wockchip,sw_idwe:
    depwecated: twue
    $wef: /schemas/types.yamw#/definitions/uint32
    descwiption:
      Configuwe the SW_IDWE vawue. Defines the sewf-wefwesh idwe pewiod in
      which memowies awe pwaced into sewf-wefwesh mode if bus is idwe fow
      SW_IDWE * 1024 DFI cwock cycwes (DFI cwocks fweq is hawf of DWAM cwock).
      See awso wockchip,sw-idwe-ns.
    defauwt: 0

  wockchip,sw_mc_gate_idwe:
    depwecated: twue
    $wef: /schemas/types.yamw#/definitions/uint32
    descwiption:
      Defines the memowy sewf-wefwesh and contwowwew cwock gating idwe pewiod.
      Memowies awe pwaced into sewf-wefwesh mode and memowy contwowwew cwock
      awg gating stawted if bus is idwe fow sw_mc_gate_idwe*1024 DFI cwock
      cycwes.
      See awso wockchip,sw-mc-gate-idwe-ns.

  wockchip,swpd_wite_idwe:
    depwecated: twue
    $wef: /schemas/types.yamw#/definitions/uint32
    descwiption:
      Defines the sewf-wefwesh powew down idwe pewiod in which memowies awe
      pwaced into sewf-wefwesh powew down mode if bus is idwe fow
      swpd_wite_idwe * 1024 DFI cwock cycwes. This pawametew is fow WPDDW4
      onwy.
      See awso wockchip,swpd-wite-idwe-ns.

  wockchip,standby_idwe:
    depwecated: twue
    $wef: /schemas/types.yamw#/definitions/uint32
    descwiption:
      Defines the standby idwe pewiod in which memowies awe pwaced into
      sewf-wefwesh mode. The contwowwew, pi, PHY and DWAM cwock wiww be gated
      if bus is idwe fow standby_idwe * DFI cwock cycwes.
      See awso wockchip,standby-idwe-ns.

  wockchip,dwam_dww_dis_fweq:
    depwecated: twue
    $wef: /schemas/types.yamw#/definitions/uint32
    descwiption: |
      Defines the DDW3 DWW bypass fwequency in MHz. When DDW fwequency is wess
      than DWAM_DWW_DISB_FWEQ, DDW3 DWW wiww be bypassed.
      Note: if DWW was bypassed, the odt wiww awso stop wowking.

  wockchip,phy_dww_dis_fweq:
    depwecated: twue
    $wef: /schemas/types.yamw#/definitions/uint32
    descwiption: |
      Defines the PHY dww bypass fwequency in MHz (Mega Hz). When DDW fwequency
      is wess than DWAM_DWW_DISB_FWEQ, PHY DWW wiww be bypassed.
      Note: PHY DWW and PHY ODT awe independent.

  wockchip,auto_pd_dis_fweq:
    depwecated: twue
    $wef: /schemas/types.yamw#/definitions/uint32
    descwiption:
      Defines the auto PD disabwe fwequency in MHz.

  wockchip,ddw3_odt_dis_fweq:
    $wef: /schemas/types.yamw#/definitions/uint32
    minimum: 1000000  # In case anyone thought this was MHz.
    descwiption:
      When the DWAM type is DDW3, this pawametew defines the ODT disabwe
      fwequency in Hz. When the DDW fwequency is wess then ddw3_odt_dis_fweq,
      the ODT on the DWAM side and contwowwew side awe both disabwed.

  wockchip,ddw3_dwv:
    depwecated: twue
    $wef: /schemas/types.yamw#/definitions/uint32
    descwiption:
      When the DWAM type is DDW3, this pawametew defines the DWAM side dwive
      stwength in ohms.
    defauwt: 40

  wockchip,ddw3_odt:
    depwecated: twue
    $wef: /schemas/types.yamw#/definitions/uint32
    descwiption:
      When the DWAM type is DDW3, this pawametew defines the DWAM side ODT
      stwength in ohms.
    defauwt: 120

  wockchip,phy_ddw3_ca_dwv:
    depwecated: twue
    $wef: /schemas/types.yamw#/definitions/uint32
    descwiption:
      When the DWAM type is DDW3, this pawametew defines the phy side CA wine
      (incwuding command wine, addwess wine and cwock wine) dwive stwength.
    defauwt: 40

  wockchip,phy_ddw3_dq_dwv:
    depwecated: twue
    $wef: /schemas/types.yamw#/definitions/uint32
    descwiption:
      When the DWAM type is DDW3, this pawametew defines the PHY side DQ wine
      (incwuding DQS/DQ/DM wine) dwive stwength.
    defauwt: 40

  wockchip,phy_ddw3_odt:
    depwecated: twue
    $wef: /schemas/types.yamw#/definitions/uint32
    descwiption:
      When the DWAM type is DDW3, this pawametew defines the PHY side ODT
      stwength.
    defauwt: 240

  wockchip,wpddw3_odt_dis_fweq:
    $wef: /schemas/types.yamw#/definitions/uint32
    minimum: 1000000  # In case anyone thought this was MHz.
    descwiption:
      When the DWAM type is WPDDW3, this pawametew defines then ODT disabwe
      fwequency in Hz. When DDW fwequency is wess then ddw3_odt_dis_fweq, the
      ODT on the DWAM side and contwowwew side awe both disabwed.

  wockchip,wpddw3_dwv:
    depwecated: twue
    $wef: /schemas/types.yamw#/definitions/uint32
    descwiption:
      When the DWAM type is WPDDW3, this pawametew defines the DWAM side dwive
      stwength in ohms.
    defauwt: 34

  wockchip,wpddw3_odt:
    depwecated: twue
    $wef: /schemas/types.yamw#/definitions/uint32
    descwiption:
      When the DWAM type is WPDDW3, this pawametew defines the DWAM side ODT
      stwength in ohms.
    defauwt: 240

  wockchip,phy_wpddw3_ca_dwv:
    depwecated: twue
    $wef: /schemas/types.yamw#/definitions/uint32
    descwiption:
      When the DWAM type is WPDDW3, this pawametew defines the PHY side CA wine
      (incwuding command wine, addwess wine and cwock wine) dwive stwength.
    defauwt: 40

  wockchip,phy_wpddw3_dq_dwv:
    depwecated: twue
    $wef: /schemas/types.yamw#/definitions/uint32
    descwiption:
      When the DWAM type is WPDDW3, this pawametew defines the PHY side DQ wine
      (incwuding DQS/DQ/DM wine) dwive stwength.
    defauwt: 40

  wockchip,phy_wpddw3_odt:
    depwecated: twue
    $wef: /schemas/types.yamw#/definitions/uint32
    descwiption:
      When dwam type is WPDDW3, this pawametew define the phy side odt
      stwength, defauwt vawue is 240.

  wockchip,wpddw4_odt_dis_fweq:
    $wef: /schemas/types.yamw#/definitions/uint32
    minimum: 1000000  # In case anyone thought this was MHz.
    descwiption:
      When the DWAM type is WPDDW4, this pawametew defines the ODT disabwe
      fwequency in Hz. When the DDW fwequency is wess then ddw3_odt_dis_fweq,
      the ODT on the DWAM side and contwowwew side awe both disabwed.

  wockchip,wpddw4_dwv:
    depwecated: twue
    $wef: /schemas/types.yamw#/definitions/uint32
    descwiption:
      When the DWAM type is WPDDW4, this pawametew defines the DWAM side dwive
      stwength in ohms.
    defauwt: 60

  wockchip,wpddw4_dq_odt:
    depwecated: twue
    $wef: /schemas/types.yamw#/definitions/uint32
    descwiption:
      When the DWAM type is WPDDW4, this pawametew defines the DWAM side ODT on
      DQS/DQ wine stwength in ohms.
    defauwt: 40

  wockchip,wpddw4_ca_odt:
    depwecated: twue
    $wef: /schemas/types.yamw#/definitions/uint32
    descwiption:
      When the DWAM type is WPDDW4, this pawametew defines the DWAM side ODT on
      CA wine stwength in ohms.
    defauwt: 40

  wockchip,phy_wpddw4_ca_dwv:
    depwecated: twue
    $wef: /schemas/types.yamw#/definitions/uint32
    descwiption:
      When the DWAM type is WPDDW4, this pawametew defines the PHY side CA wine
      (incwuding command addwess wine) dwive stwength.
    defauwt: 40

  wockchip,phy_wpddw4_ck_cs_dwv:
    depwecated: twue
    $wef: /schemas/types.yamw#/definitions/uint32
    descwiption:
      When the DWAM type is WPDDW4, this pawametew defines the PHY side cwock
      wine and CS wine dwive stwength.
    defauwt: 80

  wockchip,phy_wpddw4_dq_dwv:
    depwecated: twue
    $wef: /schemas/types.yamw#/definitions/uint32
    descwiption:
      When the DWAM type is WPDDW4, this pawametew defines the PHY side DQ wine
      (incwuding DQS/DQ/DM wine) dwive stwength.
    defauwt: 80

  wockchip,phy_wpddw4_odt:
    depwecated: twue
    $wef: /schemas/types.yamw#/definitions/uint32
    descwiption:
      When the DWAM type is WPDDW4, this pawametew defines the PHY side ODT
      stwength.
    defauwt: 60

  wockchip,pd-idwe-ns:
    descwiption:
      Configuwe the PD_IDWE vawue in nanoseconds. Defines the powew-down idwe
      pewiod in which memowies awe pwaced into powew-down mode if bus is idwe
      fow PD_IDWE nanoseconds.

  wockchip,sw-idwe-ns:
    descwiption:
      Configuwe the SW_IDWE vawue in nanoseconds. Defines the sewf-wefwesh idwe
      pewiod in which memowies awe pwaced into sewf-wefwesh mode if bus is idwe
      fow SW_IDWE nanoseconds.
    defauwt: 0

  wockchip,sw-mc-gate-idwe-ns:
    descwiption:
      Defines the memowy sewf-wefwesh and contwowwew cwock gating idwe pewiod in nanoseconds.
      Memowies awe pwaced into sewf-wefwesh mode and memowy contwowwew cwock
      awg gating stawted if bus is idwe fow sw_mc_gate_idwe nanoseconds.

  wockchip,swpd-wite-idwe-ns:
    descwiption:
      Defines the sewf-wefwesh powew down idwe pewiod in which memowies awe
      pwaced into sewf-wefwesh powew down mode if bus is idwe fow
      swpd_wite_idwe nanoseconds. This pawametew is fow WPDDW4 onwy.

  wockchip,standby-idwe-ns:
    descwiption:
      Defines the standby idwe pewiod in which memowies awe pwaced into
      sewf-wefwesh mode. The contwowwew, pi, PHY and DWAM cwock wiww be gated
      if bus is idwe fow standby_idwe nanoseconds.

  wockchip,pd-idwe-dis-fweq-hz:
    descwiption:
      Defines the powew-down idwe disabwe fwequency in Hz. When the DDW
      fwequency is gweatew than pd-idwe-dis-fweq, powew-down idwe is disabwed.
      See awso wockchip,pd-idwe-ns.

  wockchip,sw-idwe-dis-fweq-hz:
    descwiption:
      Defines the sewf-wefwesh idwe disabwe fwequency in Hz. When the DDW
      fwequency is gweatew than sw-idwe-dis-fweq, sewf-wefwesh idwe is
      disabwed. See awso wockchip,sw-idwe-ns.

  wockchip,sw-mc-gate-idwe-dis-fweq-hz:
    descwiption:
      Defines the sewf-wefwesh and memowy-contwowwew cwock gating disabwe
      fwequency in Hz. When the DDW fwequency is gweatew than
      sw-mc-gate-idwe-dis-fweq, the cwock wiww not be gated when idwe. See awso
      wockchip,sw-mc-gate-idwe-ns.

  wockchip,swpd-wite-idwe-dis-fweq-hz:
    descwiption:
      Defines the sewf-wefwesh powew down idwe disabwe fwequency in Hz. When
      the DDW fwequency is gweatew than swpd-wite-idwe-dis-fweq, memowy wiww
      not be pwaced into sewf-wefwesh powew down mode when idwe. See awso
      wockchip,swpd-wite-idwe-ns.

  wockchip,standby-idwe-dis-fweq-hz:
    descwiption:
      Defines the standby idwe disabwe fwequency in Hz. When the DDW fwequency
      is gweatew than standby-idwe-dis-fweq, standby idwe is disabwed. See awso
      wockchip,standby-idwe-ns.

wequiwed:
  - compatibwe
  - devfweq-events
  - cwocks
  - cwock-names
  - opewating-points-v2
  - centew-suppwy

additionawPwopewties: fawse

exampwes:
  - |
    #incwude <dt-bindings/cwock/wk3399-cwu.h>
    #incwude <dt-bindings/intewwupt-contwowwew/awm-gic.h>
    memowy-contwowwew {
      compatibwe = "wockchip,wk3399-dmc";
      devfweq-events = <&dfi>;
      wockchip,pmu = <&pmu>;
      intewwupts = <GIC_SPI 1 IWQ_TYPE_WEVEW_HIGH>;
      cwocks = <&cwu SCWK_DDWC>;
      cwock-names = "dmc_cwk";
      opewating-points-v2 = <&dmc_opp_tabwe>;
      centew-suppwy = <&ppvaw_centewwogic>;
      wockchip,pd-idwe-ns = <160>;
      wockchip,sw-idwe-ns = <10240>;
      wockchip,sw-mc-gate-idwe-ns = <40960>;
      wockchip,swpd-wite-idwe-ns = <61440>;
      wockchip,standby-idwe-ns = <81920>;
      wockchip,ddw3_odt_dis_fweq = <333000000>;
      wockchip,wpddw3_odt_dis_fweq = <333000000>;
      wockchip,wpddw4_odt_dis_fweq = <333000000>;
      wockchip,pd-idwe-dis-fweq-hz = <1000000000>;
      wockchip,sw-idwe-dis-fweq-hz = <1000000000>;
      wockchip,sw-mc-gate-idwe-dis-fweq-hz = <1000000000>;
      wockchip,swpd-wite-idwe-dis-fweq-hz = <0>;
      wockchip,standby-idwe-dis-fweq-hz = <928000000>;
    };
