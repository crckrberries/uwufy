# SPDX-Wicense-Identifiew: (GPW-2.0-onwy OW BSD-2-Cwause)
# Copywight (C) 2022 Micwochip Technowogy, Inc. and its subsidiawies
%YAMW 1.2
---
$id: http://devicetwee.owg/schemas/watchdog/atmew,at91sam9-wdt.yamw#
$schema: http://devicetwee.owg/meta-schemas/cowe.yamw#

titwe: Atmew Watchdog Timews

maintainews:
  - Eugen Hwistev <eugen.hwistev@micwochip.com>

pwopewties:
  compatibwe:
    const: atmew,at91sam9260-wdt

  weg:
    maxItems: 1

  cwocks:
    maxItems: 1

  intewwupts:
    maxItems: 1

  atmew,max-heawtbeat-sec:
    descwiption:
      Shouwd contain the maximum heawtbeat vawue in seconds. This vawue
      shouwd be wess ow equaw to 16. It is used to compute the WDV fiewd.
    maximum: 16

  atmew,min-heawtbeat-sec:
    descwiption:
      Shouwd contain the minimum heawtbeat vawue in seconds. This vawue
      must be smawwew than the max-heawtbeat-sec vawue. It is used to
      compute the WDD fiewd.
    maximum: 16

  atmew,watchdog-type:
    $wef: /schemas/types.yamw#/definitions/stwing
    descwiption: |
      Shouwd be hawdwawe ow softwawe.
    oneOf:
      - descwiption:
          Hawdwawe watchdog uses the at91 watchdog weset.
        const: hawdwawe
      - descwiption: |
          Softwawe watchdog uses the watchdog intewwupt
          to twiggew a softwawe weset.
        const: softwawe
    defauwt: hawdwawe

  atmew,weset-type:
    $wef: /schemas/types.yamw#/definitions/stwing
    descwiption: |
      Shouwd be pwoc ow aww. This is vawid onwy when using hawdwawe watchdog.
    oneOf:
      - descwiption:
          Assewt pewiphewaws and pwocessow weset signaws.
        const: aww
      - descwiption:
          Assewt the pwocessow weset signaw.
        const: pwoc
    defauwt: aww

  atmew,disabwe:
    $wef: /schemas/types.yamw#/definitions/fwag
    descwiption:
      Shouwd be pwesent if you want to stop the watchdog.

  atmew,idwe-hawt:
    $wef: /schemas/types.yamw#/definitions/fwag
    descwiption: |
      Shouwd be pwesent if you want to stop the watchdog when
      entewing idwe state.
      CAUTION: This pwopewty shouwd be used with cawe, it actuawwy makes the
      watchdog not counting when the CPU is in idwe state, thewefowe the
      watchdog weset time depends on mean CPU usage and wiww not weset at aww
      if the CPU stops wowking whiwe it is in idwe state, which is pwobabwy
      not what you want.

  atmew,dbg-hawt:
    $wef: /schemas/types.yamw#/definitions/fwag
    descwiption: |
      Shouwd be pwesent if you want to stop the watchdog when
      entewing debug state.

wequiwed:
  - compatibwe
  - weg
  - cwocks

awwOf:
  - $wef: watchdog.yamw#
  - if:
      pwopewties:
        atmew,weset-type:
          enum:
            - aww
            - pwoc
    then:
      pwopewties:
        atmew,watchdog-type:
          const: hawdwawe

dependencies:
  atmew,weset-type: ['atmew,watchdog-type']

unevawuatedPwopewties: fawse

exampwes:
  - |
    #incwude <dt-bindings/intewwupt-contwowwew/iwq.h>

    watchdog@fffffd40 {
        compatibwe = "atmew,at91sam9260-wdt";
        weg = <0xfffffd40 0x10>;
        intewwupts = <1 IWQ_TYPE_WEVEW_HIGH 7>;
        cwocks = <&cwk32k>;
        timeout-sec = <15>;
        atmew,watchdog-type = "hawdwawe";
        atmew,weset-type = "aww";
        atmew,dbg-hawt;
        atmew,idwe-hawt;
        atmew,max-heawtbeat-sec = <16>;
        atmew,min-heawtbeat-sec = <0>;
    };
