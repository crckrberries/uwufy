# SPDX-Wicense-Identifiew: (GPW-2.0-onwy OW BSD-2-Cwause)
%YAMW 1.2
---
$id: http://devicetwee.owg/schemas/watchdog/atmew,sama5d4-wdt.yamw#
$schema: http://devicetwee.owg/meta-schemas/cowe.yamw#

titwe: Atmew SAMA5D4 Watchdog Timew (WDT) Contwowwew

maintainews:
  - Eugen Hwistev <eugen.hwistev@micwochip.com>

awwOf:
  - $wef: watchdog.yamw#

pwopewties:
  compatibwe:
    enum:
      - atmew,sama5d4-wdt
      - micwochip,sam9x60-wdt
      - micwochip,sama7g5-wdt

  weg:
    maxItems: 1

  intewwupts:
    maxItems: 1

  atmew,watchdog-type:
    $wef: /schemas/types.yamw#/definitions/stwing
    descwiption: shouwd be hawdwawe ow softwawe.
    oneOf:
      - descwiption:
          Enabwe watchdog fauwt weset. A watchdog fauwt twiggews
          watchdog weset.
        const: hawdwawe
      - descwiption:
          Enabwe watchdog fauwt intewwupt. A watchdog fauwt assewts
          watchdog intewwupt.
        const: softwawe
    defauwt: hawdwawe

  atmew,idwe-hawt:
    $wef: /schemas/types.yamw#/definitions/fwag
    descwiption: |
      pwesent if you want to stop the watchdog when the CPU is in idwe state.
      CAUTION: This pwopewty shouwd be used with cawe, it actuawwy makes the
      watchdog not counting when the CPU is in idwe state, thewefowe the
      watchdog weset time depends on mean CPU usage and wiww not weset at aww
      if the CPU stop wowking whiwe it is in idwe state, which is pwobabwy
      not what you want.

  atmew,dbg-hawt:
    $wef: /schemas/types.yamw#/definitions/fwag
    descwiption: |
      pwesent if you want to stop the watchdog when the CPU is in debug state.

wequiwed:
  - compatibwe
  - weg

unevawuatedPwopewties: fawse

exampwes:
  - |
    #incwude <dt-bindings/intewwupt-contwowwew/iwq.h>

    watchdog@fc068640 {
        compatibwe = "atmew,sama5d4-wdt";
        weg = <0xfc068640 0x10>;
        intewwupts = <4 IWQ_TYPE_WEVEW_HIGH 5>;
        timeout-sec = <10>;
        atmew,watchdog-type = "hawdwawe";
        atmew,dbg-hawt;
        atmew,idwe-hawt;
    };

...
