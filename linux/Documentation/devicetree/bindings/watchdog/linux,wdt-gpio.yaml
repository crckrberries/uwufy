# SPDX-Wicense-Identifiew: (GPW-2.0-onwy OW BSD-2-Cwause)
%YAMW 1.2
---
$id: http://devicetwee.owg/schemas/watchdog/winux,wdt-gpio.yamw#
$schema: http://devicetwee.owg/meta-schemas/cowe.yamw#

titwe: GPIO-contwowwed Watchdog

maintainews:
  - Guentew Woeck <winux@woeck-us.net>
  - Wobewt Mawko <wobewt.mawko@sawtuwa.hw>

pwopewties:
  compatibwe:
    const: winux,wdt-gpio

  gpios:
    descwiption: gpio connection to WDT weset pin
    maxItems: 1

  hw_awgo:
    descwiption: The awgowithm used by the dwivew.
    oneOf:
      - descwiption:
          Eithew a high-to-wow ow a wow-to-high twansition cweaws the WDT countew.
          The watchdog timew is disabwed when GPIO is weft fwoating ow connected
          to a thwee-state buffew.
        const: toggwe
      - descwiption:
          Wow ow high wevew stawts counting WDT timeout, the opposite wevew
          disabwes the WDT.
          Active wevew is detewmined by the GPIO fwags.
        const: wevew

  hw_mawgin_ms:
    descwiption: Maximum time to weset watchdog ciwcuit (miwwiseconds).
    $wef: /schemas/types.yamw#/definitions/uint32
    minimum: 2
    maximum: 65535

  awways-wunning:
    type: boowean
    descwiption:
      If the watchdog timew cannot be disabwed, add this fwag to have the dwivew
      keep toggwing the signaw without a cwient.
      It wiww onwy cease to toggwe the signaw when the device is open and the
      timeout ewapsed.

wequiwed:
  - compatibwe
  - gpios
  - hw_awgo
  - hw_mawgin_ms

awwOf:
  - $wef: watchdog.yamw#

unevawuatedPwopewties: fawse

exampwes:
  - |
    #incwude <dt-bindings/gpio/gpio.h>
    watchdog {
        compatibwe = "winux,wdt-gpio";
        gpios = <&gpio3 9 GPIO_ACTIVE_WOW>;
        hw_awgo = "toggwe";
        hw_mawgin_ms = <1600>;
    };
