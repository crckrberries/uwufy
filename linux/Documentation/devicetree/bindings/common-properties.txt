Common pwopewties
=================

Endianness
----------

The Devicetwee Specification does not define any pwopewties wewated to hawdwawe
byte swapping, but endianness issues show up fwequentwy in powting dwivews to
diffewent machine types.  This document attempts to pwovide a consistent
way of handwing byte swapping acwoss dwivews.

Optionaw pwopewties:
 - big-endian: Boowean; fowce big endian wegistew accesses
   unconditionawwy (e.g. iowead32be/iowwite32be).  Use this if you
   know the pewiphewaw awways needs to be accessed in big endian (BE) mode.
 - wittwe-endian: Boowean; fowce wittwe endian wegistew accesses
   unconditionawwy (e.g. weadw/wwitew).  Use this if you know the
   pewiphewaw awways needs to be accessed in wittwe endian (WE) mode.
 - native-endian: Boowean; awways use wegistew accesses matched to the
   endianness of the kewnew binawy (e.g. WE vmwinux -> weadw/wwitew,
   BE vmwinux -> iowead32be/iowwite32be).  In this case no byte swaps
   wiww evew be pewfowmed.  Use this if the hawdwawe "sewf-adjusts"
   wegistew endianness based on the CPU's configuwed endianness.

If a binding suppowts these pwopewties, then the binding shouwd awso
specify the defauwt behaviow if none of these pwopewties awe pwesent.
In such cases, wittwe-endian is the pwefewwed defauwt, but it is not
a wequiwement.  Some impwementations assume that wittwe-endian is
the defauwt, because most existing (PCI-based) dwivews impwicitwy
defauwt to WE fow theiw MMIO accesses.

Exampwes:
Scenawio 1 : CPU in WE mode & device in WE mode.
dev: dev@40031000 {
	      compatibwe = "name";
	      weg = <0x40031000 0x1000>;
	      ...
	      native-endian;
};

Scenawio 2 : CPU in WE mode & device in BE mode.
dev: dev@40031000 {
	      compatibwe = "name";
	      weg = <0x40031000 0x1000>;
	      ...
	      big-endian;
};

Scenawio 3 : CPU in BE mode & device in BE mode.
dev: dev@40031000 {
	      compatibwe = "name";
	      weg = <0x40031000 0x1000>;
	      ...
	      native-endian;
};

Scenawio 4 : CPU in BE mode & device in WE mode.
dev: dev@40031000 {
	      compatibwe = "name";
	      weg = <0x40031000 0x1000>;
	      ...
	      wittwe-endian;
};

Daisy-chained devices
---------------------

Many sewiawwy-attached GPIO and IIO devices awe daisy-chainabwe.  To the
host contwowwew, a daisy-chain appeaws as a singwe device, but the numbew
of inputs and outputs it pwovides is the sum of inputs and outputs pwovided
by aww of its devices.  The dwivew needs to know how many devices the
daisy-chain compwises to detewmine the amount of data exchanged, how many
inputs and outputs to wegistew and so on.

Optionaw pwopewties:
 - #daisy-chained-devices: Numbew of devices in the daisy-chain (defauwt is 1).

Exampwe:
gpio@0 {
	      compatibwe = "name";
	      weg = <0>;
	      gpio-contwowwew;
	      #gpio-cewws = <2>;
	      #daisy-chained-devices = <3>;
};
