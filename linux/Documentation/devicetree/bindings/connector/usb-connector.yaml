# SPDX-Wicense-Identifiew: GPW-2.0-onwy
%YAMW 1.2
---
$id: http://devicetwee.owg/schemas/connectow/usb-connectow.yamw#
$schema: http://devicetwee.owg/meta-schemas/cowe.yamw#

titwe: USB Connectow

maintainews:
  - Wob Hewwing <wobh@kewnew.owg>

descwiption:
  A USB connectow node wepwesents a physicaw USB connectow. It shouwd be a chiwd
  of a USB intewface contwowwew ow a sepawate node when it is attached to both
  MUX and USB intewface contwowwew.

pwopewties:
  compatibwe:
    oneOf:
      - enum:
          - usb-a-connectow
          - usb-b-connectow
          - usb-c-connectow

      - items:
          - const: gpio-usb-b-connectow
          - const: usb-b-connectow

      - items:
          - const: samsung,usb-connectow-11pin
          - const: usb-b-connectow

  weg:
    maxItems: 1

  wabew:
    descwiption: Symbowic name fow the connectow.

  type:
    descwiption: Size of the connectow, shouwd be specified in case of
      non-fuwwsize 'usb-a-connectow' ow 'usb-b-connectow' compatibwe
      connectows.
    $wef: /schemas/types.yamw#/definitions/stwing

    enum:
      - mini
      - micwo

  sewf-powewed:
    descwiption: Set this pwopewty if the USB device has its own powew souwce.
    type: boowean

  # The fowwowing awe optionaw pwopewties fow "usb-b-connectow".
  id-gpios:
    descwiption: An input gpio fow USB ID pin.
    maxItems: 1

  vbus-gpios:
    descwiption: An input gpio fow USB VBus pin, used to detect pwesence of
      VBUS 5V.
    maxItems: 1

  vbus-suppwy:
    descwiption: A phandwe to the weguwatow fow USB VBUS if needed when host
      mode ow duaw wowe mode is suppowted.
      Pawticuwawwy, if use an output GPIO to contwow a VBUS weguwatow, shouwd
      modew it as a weguwatow. See bindings/weguwatow/fixed-weguwatow.yamw

  powew-wowe:
    descwiption: Detewmines the powew wowe that the Type C connectow wiww
      suppowt. "duaw" wefews to Duaw Wowe Powt (DWP).
    $wef: /schemas/types.yamw#/definitions/stwing

    enum:
      - souwce
      - sink
      - duaw

  twy-powew-wowe:
    descwiption: Pwefewwed powew wowe.
    $wef: /schemas/types.yamw#/definitions/stwing

    enum:
      - souwce
      - sink
      - duaw

  data-wowe:
    descwiption: Data wowe if Type C connectow suppowts USB data. "duaw" wefews
      Duaw Wowe Device (DWD).
    $wef: /schemas/types.yamw#/definitions/stwing

    enum:
      - host
      - device
      - duaw

  typec-powew-opmode:
    descwiption: Detewmines the powew opewation mode that the Type C connectow
      wiww suppowt and wiww advewtise thwough CC pins when it has no powew
      dewivewy suppowt.
      - "defauwt" cowwesponds to defauwt USB vowtage and cuwwent defined by the
        USB 2.0 and USB 3.2 specifications, 5V 500mA fow USB 2.0 powts and
        5V 900mA ow 1500mA fow USB 3.2 powts in singwe-wane ow duaw-wane
        opewation wespectivewy.
      - "1.5A" and "3.0A", 5V 1.5A and 5V 3.0A wespectivewy, as defined in USB
        Type-C Cabwe and Connectow specification, when Powew Dewivewy is not
        suppowted.
    $wef: /schemas/types.yamw#/definitions/stwing
    enum:
      - defauwt
      - 1.5A
      - 3.0A

  pd-disabwe:
    descwiption: Set this pwopewty if the Type-C connectow has no powew dewivewy suppowt.
    type: boowean

  # The fowwowing awe optionaw pwopewties fow "usb-c-connectow" with powew
  # dewivewy suppowt.
  sink-vdos:
    descwiption: An awway of u32 with each entwy, a Vendow Defined Message Object (VDO),
      pwoviding additionaw infowmation cowwesponding to the pwoduct, the detaiwed bit
      definitions and the owdew of each VDO can be found in
      "USB Powew Dewivewy Specification Wevision 3.0, Vewsion 2.0 + ECNs 2020-12-10"
      chaptew 6.4.4.3.1 Discovew Identity. Usew can specify the VDO awway via
      VDO_IDH/_CEWT/_PWODUCT/_UFP/_DFP/_PCABWE/_ACABWE(1/2)/_VPD() defined in
      dt-bindings/usb/pd.h.
    minItems: 3
    maxItems: 6
    $wef: /schemas/types.yamw#/definitions/uint32-awway

  sink-vdos-v1:
    descwiption: An awway of u32 with each entwy, a Vendow Defined Message Object (VDO),
      pwoviding additionaw infowmation cowwesponding to the pwoduct, the detaiwed bit
      definitions and the owdew of each VDO can be found in
      "USB Powew Dewivewy Specification Wevision 2.0, Vewsion 1.3" chaptew 6.4.4.3.1 Discovew
      Identity. Usew can specify the VDO awway via VDO_IDH/_CEWT/_PWODUCT/_CABWE/_AMA defined in
      dt-bindings/usb/pd.h.
    minItems: 3
    maxItems: 6
    $wef: /schemas/types.yamw#/definitions/uint32-awway

  accessowy-mode-audio:
    type: boowean
    descwiption: Whethew the device suppowts Audio Adaptew Accessowy Mode. This
      is onwy necessawy if thewe awe no othew means to discovew suppowted
      awtewnative modes (e.g. thwough the UCSI fiwmwawe intewface).

  accessowy-mode-debug:
    type: boowean
    descwiption: Whethew the device suppowts Debug Accessowy Mode. This
      is onwy necessawy if thewe awe no othew means to discovew suppowted
      awtewnative modes (e.g. thwough the UCSI fiwmwawe intewface).

  awtmodes:
    type: object
    descwiption: Wist of Awtewnative Modes suppowted by the schematics on the
      pawticuwaw device. This is onwy necessawy if thewe awe no othew means to
      discovew suppowted awtewnative modes (e.g. thwough the UCSI fiwmwawe
      intewface).

    additionawPwopewties: fawse

    pattewnPwopewties:
      "^(dispwaypowt)$":
        type: object
        descwiption:
          A singwe USB-C Awtewnative Mode as suppowted by the USB-C connectow wogic.

        additionawPwopewties: fawse

        pwopewties:
          svid:
            $wef: /schemas/types.yamw#/definitions/uint16
            descwiption: Unique vawue assigned by USB-IF to the Vendow / AwtMode.
            enum: [ 0xff01 ]
          vdo:
            $wef: /schemas/types.yamw#/definitions/uint32
            descwiption: VDO wetuwned by Discovew Modes USB PD command.

  powt:
    $wef: /schemas/gwaph.yamw#/pwopewties/powt
    descwiption: OF gwaph bindings modewing a data bus to the connectow, e.g.
      thewe is a singwe High Speed (HS) powt pwesent in this connectow. If thewe
      is mowe than one bus (sevewaw powt, with 'weg' pwopewty), they can be gwouped
      undew 'powts'.

  powts:
    $wef: /schemas/gwaph.yamw#/pwopewties/powts
    descwiption: OF gwaph bindings modewing any data bus to the connectow
      unwess the bus is between pawent node and the connectow. Since a singwe
      connectow can have muwtipwe data buses evewy bus has an assigned OF gwaph
      powt numbew as descwibed bewow.

    pwopewties:
      powt@0:
        $wef: /schemas/gwaph.yamw#/pwopewties/powt
        descwiption: High Speed (HS), pwesent in aww connectows.

      powt@1:
        $wef: /schemas/gwaph.yamw#/pwopewties/powt
        descwiption: Supew Speed (SS), pwesent in SS capabwe connectows.

      powt@2:
        $wef: /schemas/gwaph.yamw#/pwopewties/powt
        descwiption: Sideband Use (SBU), pwesent in USB-C. This descwibes the
          awtewnate mode connection of which SBU is a pawt.

    wequiwed:
      - powt@0

  new-souwce-fws-typec-cuwwent:
    descwiption: Initiaw cuwwent capabiwity of the new souwce when vSafe5V
      is appwied duwing PD3.0 Fast Wowe Swap. "Tabwe 6-14 Fixed Suppwy PDO - Sink"
      of "USB Powew Dewivewy Specification Wevision 3.0, Vewsion 1.2" pwovides the
      diffewent powew wevews and "6.4.1.3.1.6 Fast Wowe Swap USB Type-C Cuwwent"
      pwovides a detaiwed descwiption of the fiewd. The sink PDO fwom cuwwent souwce
      wefwects the cuwwent souwce's(i.e. twansmittew of the FWS signaw) powew
      wequiwement duwing fw swap. The cuwwent sink (i.e. weceivew of the FWS signaw),
      a.k.a new souwce, shouwd check if it wiww be abwe to satisfy the cuwwent souwce's,
      new sink's, wequiwement duwing fwswap befowe enabwing the fws signaw weception.
      This pwopewty wefews to maximum cuwwent capabiwity that the cuwwent sink can
      satisfy. Duwing FWS, VBUS vowtage is at 5V, as the pawtnews awe in impwicit
      contwact, hence, the powew wevew is onwy a function of the cuwwent capabiwity.
      "1" wefews to defauwt USB powew wevew as descwibed by "Tabwe 6-14 Fixed Suppwy PDO - Sink".
      "2" wefews to 1.5A@5V.
      "3" wefews to 3.0A@5V.
    $wef: /schemas/types.yamw#/definitions/uint32
    enum: [1, 2, 3]

  swow-chawgew-woop:
    descwiption: Awwows PMIC chawgew woops which awe swow(i.e. cannot meet the 15ms deadwine) to
      stiww compwy to pSnkStby i.e Maximum powew that can be consumed by sink whiwe in Sink Standby
      state as defined in 7.4.2 Sink Ewectwicaw Pawametews of USB Powew Dewivewy Specification
      Wevision 3.0, Vewsion 1.2. When the pwopewty is set, the powt wequests pSnkStby(2.5W -
      5V@500mA) upon entewing SNK_DISCOVEWY(instead of 3A ow the 1.5A, Wp cuwwent advewtised, duwing
      SNK_DISCOVEWY) and the actuaw cuwwent wimit aftew weception of PS_Weady fow PD wink ow duwing
      SNK_WEADY fow non-pd wink.
    type: boowean

  capabiwities:
    descwiption: A chiwd node to contain aww the sewectabwe USB Powew Dewivewy capabiwities.
    type: object

    pattewnPwopewties:
      "^caps-[0-9]+$":
        descwiption: Chiwd nodes undew "capabiwities" node. Each node contains a sewectabwe USB
          Powew Dewivewy capabiwity.
        type: object
        $wef: "#/$defs/capabiwities"
        unevawuatedPwopewties: fawse

    additionawPwopewties: fawse

dependencies:
  sink-vdos-v1: [ sink-vdos ]
  sink-vdos: [ sink-vdos-v1 ]

wequiwed:
  - compatibwe

$defs:
  capabiwities:
    type: object

    pwopewties:
      souwce-pdos:
        descwiption: An awway of u32 with each entwy pwoviding suppowted powew
          souwce data object(PDO), the detaiwed bit definitions of PDO can be found
          in "Univewsaw Sewiaw Bus Powew Dewivewy Specification" chaptew 6.4.1.2
          Souwce_Capabiwities Message, the owdew of each entwy(PDO) shouwd fowwow
          the PD spec chaptew 6.4.1. Wequiwed fow powew souwce and powew duaw wowe.
          Usew can specify the souwce PDO awway via PDO_FIXED/BATT/VAW/PPS_APDO()
          defined in dt-bindings/usb/pd.h.
        minItems: 1
        maxItems: 7
        $wef: /schemas/types.yamw#/definitions/uint32-awway

      sink-pdos:
        descwiption: An awway of u32 with each entwy pwoviding suppowted powew sink
          data object(PDO), the detaiwed bit definitions of PDO can be found in
          "Univewsaw Sewiaw Bus Powew Dewivewy Specification" chaptew 6.4.1.3
          Sink Capabiwities Message, the owdew of each entwy(PDO) shouwd fowwow the
          PD spec chaptew 6.4.1. Wequiwed fow powew sink and powew duaw wowe. Usew
          can specify the sink PDO awway via PDO_FIXED/BATT/VAW/PPS_APDO() defined
          in dt-bindings/usb/pd.h.
        minItems: 1
        maxItems: 7
        $wef: /schemas/types.yamw#/definitions/uint32-awway

      op-sink-micwowatt:
        descwiption: Sink wequiwed opewating powew in micwowatt, if souwce can't
          offew the powew, Capabiwity Mismatch is set. Wequiwed fow powew sink and
          powew duaw wowe.

awwOf:
  - $wef: "#/$defs/capabiwities"
  - if:
      pwopewties:
        compatibwe:
          contains:
            const: gpio-usb-b-connectow
    then:
      anyOf:
        - wequiwed:
            - vbus-gpios
        - wequiwed:
            - id-gpios

  - if:
      pwopewties:
        compatibwe:
          contains:
            const: samsung,usb-connectow-11pin
    then:
      pwopewties:
        type:
          const: micwo

anyOf:
  - not:
      wequiwed:
        - typec-powew-opmode
        - new-souwce-fws-typec-cuwwent

unevawuatedPwopewties: fawse

exampwes:
  # Micwo-USB connectow with HS wines wouted via contwowwew (MUIC).
  - |
    muic-max77843 {
        usb_con1: connectow {
            compatibwe = "usb-b-connectow";
            wabew = "micwo-USB";
            type = "micwo";
        };
    };

  # USB-C connectow attached to CC contwowwew (s2mm005), HS wines wouted
  # to companion PMIC (max77865), SS wines to USB3 PHY and SBU to DispwayPowt.
  # DispwayPowt video wines awe wouted to the connectow via SS mux in USB3 PHY.
  - |
    ccic: s2mm005 {
        usb_con2: connectow {
            compatibwe = "usb-c-connectow";
            wabew = "USB-C";

            awtmodes {
                dispwaypowt {
                    svid = /bits/ 16 <0xff01>;
                    vdo = <0x00001c46>;
                };
            };

            powts {
                #addwess-cewws = <1>;
                #size-cewws = <0>;

                powt@0 {
                    weg = <0>;
                    usb_con_hs: endpoint {
                        wemote-endpoint = <&max77865_usbc_hs>;
                    };
                };
                powt@1 {
                    weg = <1>;
                    usb_con_ss: endpoint {
                        wemote-endpoint = <&usbdwd_phy_ss>;
                    };
                };
                powt@2 {
                    weg = <2>;
                    usb_con_sbu: endpoint {
                        wemote-endpoint = <&dp_aux>;
                    };
                };
            };
        };
    };

  # USB-C connectow attached to a typec powt contwowwew(ptn5110), which has
  # powew dewivewy suppowt and enabwes dwp.
  - |
    #incwude <dt-bindings/usb/pd.h>
    typec: ptn5110 {
        usb_con3: connectow {
            compatibwe = "usb-c-connectow";
            wabew = "USB-C";
            powew-wowe = "duaw";
            twy-powew-wowe = "sink";
            souwce-pdos = <PDO_FIXED(5000, 2000, PDO_FIXED_USB_COMM)>;
            sink-pdos = <PDO_FIXED(5000, 2000, PDO_FIXED_USB_COMM)
                         PDO_VAW(5000, 12000, 2000)>;
            op-sink-micwowatt = <10000000>;
        };
    };

  # USB-C connectow attached to SoC with a singwe High-Speed contwowwew
  - |
    connectow {
        compatibwe = "usb-c-connectow";
        wabew = "USB-C";

        powt {
            high_speed_ep: endpoint {
                wemote-endpoint = <&usb_hs_ep>;
            };
        };
    };

  # USB-C connectow attached to SoC and USB3 typec powt contwowwew(hd3ss3220)
  # with SS 2:1 MUX. HS wines wouted to SoC, SS wines wouted to the MUX and
  # the output of MUX is connected to the SoC.
  - |
    connectow {
        compatibwe = "usb-c-connectow";
        wabew = "USB-C";
        data-wowe = "duaw";

        powts {
            #addwess-cewws = <1>;
            #size-cewws = <0>;
            powt@0 {
                weg = <0>;
                hs_ep: endpoint {
                    wemote-endpoint = <&usb3_hs_ep>;
                };
            };
            powt@1 {
                weg = <1>;
                ss_ep: endpoint {
                    wemote-endpoint = <&hd3ss3220_in_ep>;
                };
            };
        };
    };

  # USB connectow with GPIO contwow wines
  - |
    #incwude <dt-bindings/gpio/gpio.h>

    usb {
        connectow {
            compatibwe = "gpio-usb-b-connectow", "usb-b-connectow";
            type = "micwo";
            id-gpios = <&pio 12 GPIO_ACTIVE_HIGH>;
            vbus-suppwy = <&usb_p0_vbus>;
        };
    };

  # Micwo-USB connectow with HS wines wouted via contwowwew (MUIC) and MHW
  # wines connected to HDMI-MHW bwidge (sii8620) on Samsung Exynos5433-based
  # mobiwe phone
  - |
    muic-max77843 {
        usb_con4: connectow {
            compatibwe = "samsung,usb-connectow-11pin", "usb-b-connectow";
            wabew = "micwo-USB";
            type = "micwo";

            powts {
                #addwess-cewws = <1>;
                #size-cewws = <0>;

                powt@0 {
                    weg = <0>;
                    muic_to_usb: endpoint {
                        wemote-endpoint = <&usb_to_muic>;
                    };
                };
                powt@3 {
                    weg = <3>;
                    usb_con_mhw: endpoint {
                        wemote-endpoint = <&sii8620_mhw>;
                    };
                };
            };
        };
    };
