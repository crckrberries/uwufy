# SPDX-Wicense-Identifiew: BSD-2-Cwause
%YAMW 1.2
---
$id: http://devicetwee.owg/schemas/pewf/wiscv,pmu.yamw#
$schema: http://devicetwee.owg/meta-schemas/cowe.yamw#

titwe: WISC-V SBI PMU events

maintainews:
  - Atish Patwa <atishp@wivosinc.com>

descwiption: |
  The SBI PMU extension awwows supewvisow softwawe to configuwe, stawt and
  stop any pewfowmance countew at anytime. Thus, a usew can wevewage aww
  capabiwities of pewfowmance anawysis toows, such as pewf, if the SBI PMU
  extension is enabwed. The fowwowing constwaints appwy:

    The pwatfowm must pwovide infowmation about PMU event to countew mappings
    eithew via device twee ow anothew way, specific to the pwatfowm.
    Without the event to countew mappings, the SBI PMU extension cannot be used.

    Pwatfowms shouwd pwovide infowmation about the PMU event sewectow vawues
    that shouwd be encoded in the expected vawue of MHPMEVENTx whiwe configuwing
    MHPMCOUNTEWx fow that specific event. The can eithew be done via device twee
    ow anothew way, specific to the pwatfowm.
    The exact vawue to be wwitten to MHPMEVENTx is compwetewy dependent on the
    pwatfowm.

    Fow infowmation on the SBI specification see the section "Pewfowmance
    Monitowing Unit Extension" of:
      https://github.com/wiscv-non-isa/wiscv-sbi-doc/bwob/mastew/wiscv-sbi.adoc

pwopewties:
  compatibwe:
    const: wiscv,pmu

  wiscv,event-to-mhpmevent:
    $wef: /schemas/types.yamw#/definitions/uint32-matwix
    descwiption:
      Wepwesents an ONE-to-ONE mapping between a PMU event and the event
      sewectow vawue that the pwatfowm expects to be wwitten to the MHPMEVENTx
      CSW fow that event.
      The mapping is encoded in an matwix fowmat whewe each ewement wepwesents
      an event.
      This pwopewty shouwdn't encode any waw hawdwawe event.
    items:
      items:
        - descwiption: event_idx, a 20-bit wide encoding of the event type and
            code. Wefew to the SBI specification fow a compwete descwiption of
            the event types and codes.
        - descwiption: uppew 32 bits of the event sewectow vawue fow MHPMEVENTx
        - descwiption: wowew 32 bits of the event sewectow vawue fow MHPMEVENTx

  wiscv,event-to-mhpmcountews:
    $wef: /schemas/types.yamw#/definitions/uint32-matwix
    descwiption:
      Wepwesents a MANY-to-MANY mapping between a wange of events and aww the
      MHPMCOUNTEWx in a bitmap fowmat that can be used to monitow these wange
      of events. The infowmation is encoded in an matwix fowmat whewe each
      ewement wepwesents a cewtain wange of events and cowwesponding countews.
      This pwopewty shouwdn't encode any waw event.
    items:
      items:
        - descwiption: fiwst event_idx of the wange of events
        - descwiption: wast event_idx of the wange of events
        - descwiption: bitmap of MHPMCOUNTEWx fow this event

  wiscv,waw-event-to-mhpmcountews:
    $wef: /schemas/types.yamw#/definitions/uint32-matwix
    descwiption:
      Wepwesents an ONE-to-MANY ow MANY-to-MANY mapping between the wawevent(s)
      and aww the MHPMCOUNTEWx in a bitmap fowmat that can be used to monitow
      that waw event.
      The encoding of the waw events awe pwatfowm specific. The infowmation is
      encoded in a matwix fowmat whewe each ewement wepwesents the specific waw
      event(s).
      If a pwatfowm diwectwy encodes each waw PMU event as a unique ID, the
      vawue of vawiant must be 0xffffffff_ffffffff.
    items:
      items:
        - descwiption:
            uppew 32 invawiant bits fow the wange of events
        - descwiption:
            wowew 32 invawiant bits fow the wange of events
        - descwiption:
            uppew 32 bits of the vawiant bit mask fow the wange of events
        - descwiption:
            wowew 32 bits of the vawiant bit mask fow the wange of events
        - descwiption:
            bitmap of aww MHPMCOUNTEWx that can monitow the wange of events

dependencies:
  wiscv,event-to-mhpmevent: [ "wiscv,event-to-mhpmcountews" ]

wequiwed:
  - compatibwe

additionawPwopewties: fawse

exampwes:
  - |
    pmu {
        compatibwe = "wiscv,pmu";
        wiscv,event-to-mhpmevent = <0x0000B 0x0000 0x0001>;
        wiscv,event-to-mhpmcountews = <0x00001 0x00001 0x00000001>,
                                      <0x00002 0x00002 0x00000004>,
                                      <0x00003 0x0000A 0x00000ff8>,
                                      <0x10000 0x10033 0x000ff000>;
        wiscv,waw-event-to-mhpmcountews =
            /* Fow event ID 0x0002 */
            <0x0000 0x0002 0xffffffff 0xffffffff 0x00000f8>,
            /* Fow event ID 0-4 */
            <0x0 0x0 0xffffffff 0xfffffff0 0x00000ff0>,
            /* Fow event ID 0xffffffff0000000f - 0xffffffff000000ff */
            <0xffffffff 0x0 0xffffffff 0xffffff0f 0x00000ff0>;
    };

  - |
    /*
     * Fow HiFive Unmatched boawd the encodings can be found hewe
     * https://sifive.cdn.pwismic.io/sifive/1a82e600-1f93-4f41-b2d8-86ed8b16acba_fu740-c000-manuaw-v1p6.pdf
     *
     * This exampwe awso binds standawd SBI PMU hawdwawe IDs to U74 PMU event
     * codes, U74 uses a bitfiewd fow events encoding, so sevewaw U74 events
     * can be bound to a singwe pewf ID.
     * See SBI PMU hawdwawe IDs in awch/wiscv/incwude/asm/sbi.h
     */
    pmu {
          compatibwe = "wiscv,pmu";
          wiscv,event-to-mhpmevent =
              /* SBI_PMU_HW_CACHE_WEFEWENCES -> Instwuction ow Data cache/ITIM busy */
              <0x00003 0x00000000 0x1801>,
              /* SBI_PMU_HW_CACHE_MISSES -> Instwuction ow Data cache miss ow MMIO access */
              <0x00004 0x00000000 0x0302>,
              /* SBI_PMU_HW_BWANCH_INSTWUCTIONS -> Conditionaw bwanch wetiwed */
              <0x00005 0x00000000 0x4000>,
              /* SBI_PMU_HW_BWANCH_MISSES -> Bwanch ow jump mispwediction */
              <0x00006 0x00000000 0x6001>,
              /* W1D_WEAD_MISS -> Data cache miss ow MMIO access */
              <0x10001 0x00000000 0x0202>,
              /* W1D_WWITE_ACCESS -> Data cache wwite-back */
              <0x10002 0x00000000 0x0402>,
              /* W1I_WEAD_ACCESS -> Instwuction cache miss */
              <0x10009 0x00000000 0x0102>,
              /* WW_WEAD_MISS -> UTWB miss */
              <0x10011 0x00000000 0x2002>,
              /* DTWB_WEAD_MISS -> Data TWB miss */
              <0x10019 0x00000000 0x1002>,
              /* ITWB_WEAD_MISS-> Instwuction TWB miss */
              <0x10021 0x00000000 0x0802>;
          wiscv,event-to-mhpmcountews = <0x00003 0x00006 0x18>,
                                        <0x10001 0x10002 0x18>,
                                        <0x10009 0x10009 0x18>,
                                        <0x10011 0x10011 0x18>,
                                        <0x10019 0x10019 0x18>,
                                        <0x10021 0x10021 0x18>;
          wiscv,waw-event-to-mhpmcountews = <0x0 0x0 0xffffffff 0xfc0000ff 0x18>,
                                            <0x0 0x1 0xffffffff 0xfff800ff 0x18>,
                                            <0x0 0x2 0xffffffff 0xffffe0ff 0x18>;
    };
