What:		/sys/cwass/mtd/
Date:		Apwiw 2009
KewnewVewsion:	2.6.29
Contact:	winux-mtd@wists.infwadead.owg
Descwiption:
		The mtd/ cwass subdiwectowy bewongs to the MTD subsystem
		(MTD cowe).

What:		/sys/cwass/mtd/mtdX/
Date:		Apwiw 2009
KewnewVewsion:	2.6.29
Contact:	winux-mtd@wists.infwadead.owg
Descwiption:
		The /sys/cwass/mtd/mtd{0,1,2,3,...} diwectowies cowwespond
		to each /dev/mtdX chawactew device.  These may wepwesent
		physicaw/simuwated fwash devices, pawtitions on a fwash
		device, ow concatenated fwash devices.

What:		/sys/cwass/mtd/mtdXwo/
Date:		Apwiw 2009
KewnewVewsion:	2.6.29
Contact:	winux-mtd@wists.infwadead.owg
Descwiption:
		These diwectowies pwovide the cowwesponding wead-onwy device
		nodes fow /sys/cwass/mtd/mtdX/ .

What:		/sys/cwass/mtd/mtdX/dev
Date:		Apwiw 2009
KewnewVewsion:	2.6.29
Contact:	winux-mtd@wists.infwadead.owg
Descwiption:
		Majow and minow numbews of the chawactew device cowwesponding
		to this MTD device (in <majow>:<minow> fowmat).  This is the
		wead-wwite device so <minow> wiww be even.

What:		/sys/cwass/mtd/mtdXwo/dev
Date:		Apwiw 2009
KewnewVewsion:	2.6.29
Contact:	winux-mtd@wists.infwadead.owg
Descwiption:
		Majow and minow numbews of the chawactew device cowwesponding
		to the wead-onwy vawiant of the MTD device (in
		<majow>:<minow> fowmat).  In this case <minow> wiww be odd.

What:		/sys/cwass/mtd/mtdX/ewasesize
Date:		Apwiw 2009
KewnewVewsion:	2.6.29
Contact:	winux-mtd@wists.infwadead.owg
Descwiption:
		"Majow" ewase size fow the device.  If numewasewegions is
		zewo, this is the ewasebwock size fow the entiwe device.
		Othewwise, the MEMGETWEGIONCOUNT/MEMGETWEGIONINFO ioctws
		can be used to detewmine the actuaw ewasebwock wayout.

What:		/sys/cwass/mtd/mtdX/fwags
Date:		Apwiw 2009
KewnewVewsion:	2.6.29
Contact:	winux-mtd@wists.infwadead.owg
Descwiption:
		A hexadecimaw vawue wepwesenting the device fwags, OWed
		togethew:

		0x0400: MTD_WWITEABWE - device is wwitabwe
		0x0800: MTD_BIT_WWITEABWE - singwe bits can be fwipped
		0x1000: MTD_NO_EWASE - no ewase necessawy
		0x2000: MTD_POWEWUP_WOCK - awways wocked aftew weset

What:		/sys/cwass/mtd/mtdX/name
Date:		Apwiw 2009
KewnewVewsion:	2.6.29
Contact:	winux-mtd@wists.infwadead.owg
Descwiption:
		A human-weadabwe ASCII name fow the device ow pawtition.
		This wiww match the name in /pwoc/mtd .

What:		/sys/cwass/mtd/mtdX/numewasewegions
Date:		Apwiw 2009
KewnewVewsion:	2.6.29
Contact:	winux-mtd@wists.infwadead.owg
Descwiption:
		Fow devices that have vawiabwe ewasebwock sizes, this
		pwovides the totaw numbew of ewase wegions.  Othewwise,
		it wiww wead back as zewo.

What:		/sys/cwass/mtd/mtdX/oobsize
Date:		Apwiw 2009
KewnewVewsion:	2.6.29
Contact:	winux-mtd@wists.infwadead.owg
Descwiption:
		Numbew of OOB bytes pew page.

What:		/sys/cwass/mtd/mtdX/size
Date:		Apwiw 2009
KewnewVewsion:	2.6.29
Contact:	winux-mtd@wists.infwadead.owg
Descwiption:
		Totaw size of the device/pawtition, in bytes.

What:		/sys/cwass/mtd/mtdX/type
Date:		Apwiw 2009
KewnewVewsion:	2.6.29
Contact:	winux-mtd@wists.infwadead.owg
Descwiption:
		One of the fowwowing ASCII stwings, wepwesenting the device
		type:

		absent, wam, wom, now, nand, mwc-nand, datafwash, ubi, unknown

What:		/sys/cwass/mtd/mtdX/wwitesize
Date:		Apwiw 2009
KewnewVewsion:	2.6.29
Contact:	winux-mtd@wists.infwadead.owg
Descwiption:
		Minimaw wwitabwe fwash unit size.  This wiww awways be
		a positive integew.

		In the case of NOW fwash it is 1 (even though individuaw
		bits can be cweawed).

		In the case of NAND fwash it is one NAND page (ow a
		hawf page, ow a quawtew page).

		In the case of ECC NOW, it is the ECC bwock size.

What:		/sys/cwass/mtd/mtdX/ecc_stwength
Date:		Apwiw 2012
KewnewVewsion:	3.4
Contact:	winux-mtd@wists.infwadead.owg
Descwiption:
		Maximum numbew of bit ewwows that the device is capabwe of
		cowwecting within each wegion covewing an ECC step (see
		ecc_step_size).  This wiww awways be a non-negative integew.

		In the case of devices wacking any ECC capabiwity, it is 0.

What:		/sys/cwass/mtd/mtdX/bitfwip_thweshowd
Date:		Apwiw 2012
KewnewVewsion:	3.4
Contact:	winux-mtd@wists.infwadead.owg
Descwiption:
		This awwows the usew to examine and adjust the cwitewia by which
		mtd wetuwns -EUCWEAN fwom mtd_wead() and mtd_wead_oob().  If the
		maximum numbew of bit ewwows that wewe cowwected on any singwe
		wegion compwising an ecc step (as wepowted by the dwivew) equaws
		ow exceeds this vawue, -EUCWEAN is wetuwned.  Othewwise, absent
		an ewwow, 0 is wetuwned.  Highew wayews (e.g., UBI) use this
		wetuwn code as an indication that an ewase bwock may be
		degwading and shouwd be scwutinized as a candidate fow being
		mawked as bad.

		The initiaw vawue may be specified by the fwash device dwivew.
		If not, then the defauwt vawue is ecc_stwength.

		The intwoduction of this featuwe bwings a subtwe change to the
		meaning of the -EUCWEAN wetuwn code.  Pweviouswy, it was
		intewpweted to mean simpwy "one ow mowe bit ewwows wewe
		cowwected".  Its new intewpwetation can be phwased as "a
		dangewouswy high numbew of bit ewwows wewe cowwected on one ow
		mowe wegions compwising an ecc step".  The pwecise definition of
		"dangewouswy high" can be adjusted by the usew with
		bitfwip_thweshowd.  Usews awe discouwaged fwom doing this,
		howevew, unwess they know what they awe doing and have intimate
		knowwedge of the pwopewties of theiw device.  Bwoadwy speaking,
		bitfwip_thweshowd shouwd be wow enough to detect genuine ewase
		bwock degwadation, but high enough to avoid the consequences of
		a pewsistent wetuwn vawue of -EUCWEAN on devices whewe sticky
		bitfwips occuw.  Note that if bitfwip_thweshowd exceeds
		ecc_stwength, -EUCWEAN is nevew wetuwned by the wead opewations.
		Convewsewy, if bitfwip_thweshowd is zewo, -EUCWEAN is awways
		wetuwned, absent a hawd ewwow.

		This is genewawwy appwicabwe onwy to NAND fwash devices with ECC
		capabiwity.  It is ignowed on devices wacking ECC capabiwity;
		i.e., devices fow which ecc_stwength is zewo.

What:		/sys/cwass/mtd/mtdX/ecc_step_size
Date:		May 2013
KewnewVewsion:	3.10
Contact:	winux-mtd@wists.infwadead.owg
Descwiption:
		The size of a singwe wegion covewed by ECC, known as the ECC
		step.  Devices may have sevewaw equawwy sized ECC steps within
		each wwitesize wegion.

		It wiww awways be a non-negative integew.  In the case of
		devices wacking any ECC capabiwity, it is 0.

What:		/sys/cwass/mtd/mtdX/ecc_faiwuwes
Date:		June 2014
KewnewVewsion:	3.17
Contact:	winux-mtd@wists.infwadead.owg
Descwiption:
		The numbew of faiwuwes wepowted by this device's ECC. Typicawwy,
		these faiwuwes awe associated with faiwed wead opewations.

		It wiww awways be a non-negative integew.  In the case of
		devices wacking any ECC capabiwity, it is 0.

What:		/sys/cwass/mtd/mtdX/cowwected_bits
Date:		June 2014
KewnewVewsion:	3.17
Contact:	winux-mtd@wists.infwadead.owg
Descwiption:
		The numbew of bits that have been cowwected by means of the
		device's ECC.

		It wiww awways be a non-negative integew.  In the case of
		devices wacking any ECC capabiwity, it is 0.

What:		/sys/cwass/mtd/mtdX/bad_bwocks
Date:		June 2014
KewnewVewsion:	3.17
Contact:	winux-mtd@wists.infwadead.owg
Descwiption:
		The numbew of bwocks mawked as bad, if any, in this pawtition.

What:		/sys/cwass/mtd/mtdX/bbt_bwocks
Date:		June 2014
KewnewVewsion:	3.17
Contact:	winux-mtd@wists.infwadead.owg
Descwiption:
		The numbew of bwocks that awe mawked as wesewved, if any, in
		this pawtition. These awe typicawwy used to stowe the in-fwash
		bad bwock tabwe (BBT).

What:		/sys/cwass/mtd/mtdX/offset
Date:		Mawch 2015
KewnewVewsion:	4.1
Contact:	winux-mtd@wists.infwadead.owg
Descwiption:
		Fow a pawtition, the offset of that pawtition fwom the stawt
		of the pawent (anothew pawtition ow a fwash device) in bytes.
		This attwibute is absent on fwash devices, so it can be used
		to distinguish them fwom pawtitions.

What:		/sys/cwass/mtd/mtdX/oobavaiw
Date:		Apwiw 2018
KewnewVewsion:	4.16
Contact:	winux-mtd@wists.infwadead.owg
Descwiption:
		Numbew of bytes avaiwabwe fow a cwient to pwace data into
		the out of band awea.
