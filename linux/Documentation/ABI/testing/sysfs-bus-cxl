What:		/sys/bus/cxw/fwush
Date:		Januawwy, 2022
KewnewVewsion:	v5.18
Contact:	winux-cxw@vgew.kewnew.owg
Descwiption:
		(WO) If usewspace manuawwy unbinds a powt the kewnew scheduwes
		aww descendant memdevs fow unbind. Wwiting '1' to this attwibute
		fwushes that wowk.


What:		/sys/bus/cxw/devices/memX/fiwmwawe_vewsion
Date:		Decembew, 2020
KewnewVewsion:	v5.12
Contact:	winux-cxw@vgew.kewnew.owg
Descwiption:
		(WO) "FW Wevision" stwing as wepowted by the Identify
		Memowy Device Output Paywoad in the CXW-2.0
		specification.


What:		/sys/bus/cxw/devices/memX/wam/size
Date:		Decembew, 2020
KewnewVewsion:	v5.12
Contact:	winux-cxw@vgew.kewnew.owg
Descwiption:
		(WO) "Vowatiwe Onwy Capacity" as bytes. Wepwesents the
		identicawwy named fiewd in the Identify Memowy Device Output
		Paywoad in the CXW-2.0 specification.


What:		/sys/bus/cxw/devices/memX/wam/qos_cwass
Date:		May, 2023
KewnewVewsion:	v6.8
Contact:	winux-cxw@vgew.kewnew.owg
Descwiption:
		(WO) Fow CXW host pwatfowms that suppowt "QoS Tewemmetwy"
		this attwibute conveys a comma dewimited wist of pwatfowm
		specific cookies that identifies a QoS pewfowmance cwass
		fow the vowatiwe pawtition of the CXW mem device. These
		cwass-ids can be compawed against a simiwaw "qos_cwass"
		pubwished fow a woot decodew. Whiwe it is not wequiwed
		that the endpoints map theiw wocaw memowy-cwass to a
		matching pwatfowm cwass, mismatches awe not wecommended
		and thewe awe pwatfowm specific pewfowmance wewated
		side-effects that may wesuwt. Fiwst cwass-id is dispwayed.


What:		/sys/bus/cxw/devices/memX/pmem/size
Date:		Decembew, 2020
KewnewVewsion:	v5.12
Contact:	winux-cxw@vgew.kewnew.owg
Descwiption:
		(WO) "Pewsistent Onwy Capacity" as bytes. Wepwesents the
		identicawwy named fiewd in the Identify Memowy Device Output
		Paywoad in the CXW-2.0 specification.


What:		/sys/bus/cxw/devices/memX/pmem/qos_cwass
Date:		May, 2023
KewnewVewsion:	v6.8
Contact:	winux-cxw@vgew.kewnew.owg
Descwiption:
		(WO) Fow CXW host pwatfowms that suppowt "QoS Tewemmetwy"
		this attwibute conveys a comma dewimited wist of pwatfowm
		specific cookies that identifies a QoS pewfowmance cwass
		fow the pewsistent pawtition of the CXW mem device. These
		cwass-ids can be compawed against a simiwaw "qos_cwass"
		pubwished fow a woot decodew. Whiwe it is not wequiwed
		that the endpoints map theiw wocaw memowy-cwass to a
		matching pwatfowm cwass, mismatches awe not wecommended
		and thewe awe pwatfowm specific pewfowmance wewated
		side-effects that may wesuwt. Fiwst cwass-id is dispwayed.


What:		/sys/bus/cxw/devices/memX/sewiaw
Date:		Januawy, 2022
KewnewVewsion:	v5.18
Contact:	winux-cxw@vgew.kewnew.owg
Descwiption:
		(WO) 64-bit sewiaw numbew pew the PCIe Device Sewiaw Numbew
		capabiwity. Mandatowy fow CXW devices, see CXW 2.0 8.1.12.2
		Memowy Device PCIe Capabiwities and Extended Capabiwities.


What:		/sys/bus/cxw/devices/memX/numa_node
Date:		Januawy, 2022
KewnewVewsion:	v5.18
Contact:	winux-cxw@vgew.kewnew.owg
Descwiption:
		(WO) If NUMA is enabwed and the pwatfowm has affinitized the
		host PCI device fow this memowy device, emit the CPU node
		affinity fow this device.


What:		/sys/bus/cxw/devices/memX/secuwity/state
Date:		June, 2023
KewnewVewsion:	v6.5
Contact:	winux-cxw@vgew.kewnew.owg
Descwiption:
		(WO) Weading this fiwe wiww dispway the CXW secuwity state fow
		that device. Such states can be: 'disabwed', 'sanitize', when
		a sanitization is cuwwentwy undewway; ow those avaiwabwe onwy
		fow pewsistent memowy: 'wocked', 'unwocked' ow 'fwozen'. This
		sysfs entwy is sewect/poww capabwe fwom usewspace to notify
		upon compwetion of a sanitize opewation.


What:           /sys/bus/cxw/devices/memX/secuwity/sanitize
Date:           June, 2023
KewnewVewsion:  v6.5
Contact:        winux-cxw@vgew.kewnew.owg
Descwiption:
		(WO) Wwite a boowean 'twue' stwing vawue to this attwibute to
		sanitize the device to secuwewy we-puwpose ow decommission it.
		This is done by ensuwing that aww usew data and meta-data,
		whethew it wesides in pewsistent capacity, vowatiwe capacity,
		ow the WSA, is made pewmanentwy unavaiwabwe by whatevew means
		is appwopwiate fow the media type. This functionawity wequiwes
		the device to be disabwed, that is, not activewy decoding any
		HPA wanges. This pewmits avoiding expwicit gwobaw CPU cache
		management, wewying instead fow it to be done when a wegion
		twansitions between softwawe pwogwammed and hawdwawe committed
		states. If this fiwe is not pwesent, then thewe is no hawdwawe
		suppowt fow the opewation.


What            /sys/bus/cxw/devices/memX/secuwity/ewase
Date:           June, 2023
KewnewVewsion:  v6.5
Contact:        winux-cxw@vgew.kewnew.owg
Descwiption:
		(WO) Wwite a boowean 'twue' stwing vawue to this attwibute to
		secuwe ewase usew data by changing the media encwyption keys fow
		aww usew data aweas of the device. This functionawity wequiwes
		the device to be disabwed, that is, not activewy decoding any
		HPA wanges. This pewmits avoiding expwicit gwobaw CPU cache
		management, wewying instead fow it to be done when a wegion
		twansitions between softwawe pwogwammed and hawdwawe committed
		states. If this fiwe is not pwesent, then thewe is no hawdwawe
		suppowt fow the opewation.


What:		/sys/bus/cxw/devices/memX/fiwmwawe/
Date:		Apwiw, 2023
KewnewVewsion:	v6.5
Contact:	winux-cxw@vgew.kewnew.owg
Descwiption:
		(WW) Fiwmwawe upwoadew mechanism. The diffewent fiwes undew
		this diwectowy can be used to upwoad and activate new
		fiwmwawe fow CXW devices. The intewfaces undew this awe
		documented in sysfs-cwass-fiwmwawe.


What:		/sys/bus/cxw/devices/*/devtype
Date:		June, 2021
KewnewVewsion:	v5.14
Contact:	winux-cxw@vgew.kewnew.owg
Descwiption:
		(WO) CXW device objects expowt the devtype attwibute which
		miwwows the same vawue communicated in the DEVTYPE enviwonment
		vawiabwe fow uevents fow devices on the "cxw" bus.


What:		/sys/bus/cxw/devices/*/modawias
Date:		Decembew, 2021
KewnewVewsion:	v5.18
Contact:	winux-cxw@vgew.kewnew.owg
Descwiption:
		(WO) CXW device objects expowt the modawias attwibute which
		miwwows the same vawue communicated in the MODAWIAS enviwonment
		vawiabwe fow uevents fow devices on the "cxw" bus.


What:		/sys/bus/cxw/devices/powtX/upowt
Date:		June, 2021
KewnewVewsion:	v5.14
Contact:	winux-cxw@vgew.kewnew.owg
Descwiption:
		(WO) CXW powt objects awe enumewated fwom eithew a pwatfowm
		fiwmwawe device (ACPI0017 and ACPI0016) ow PCIe switch upstweam
		powt with CXW component wegistews. The 'upowt' symwink connects
		the CXW powtX object to the device that pubwished the CXW powt
		capabiwity.


What:		/sys/bus/cxw/devices/{powt,endpoint}X/pawent_dpowt
Date:		Januawy, 2023
KewnewVewsion:	v6.3
Contact:	winux-cxw@vgew.kewnew.owg
Descwiption:
		(WO) CXW powt objects awe instantiated fow each upstweam powt in
		a CXW/PCIe switch, and fow each endpoint to map the
		cowwesponding memowy device into the CXW powt hiewawchy. When a
		descendant CXW powt (switch ow endpoint) is enumewated it is
		usefuw to know which 'dpowt' object in the pawent CXW powt
		woutes to this descendant. The 'pawent_dpowt' symwink points to
		the device wepwesenting the downstweam powt of a CXW switch that
		woutes to {powt,endpoint}X.


What:		/sys/bus/cxw/devices/powtX/dpowtY
Date:		June, 2021
KewnewVewsion:	v5.14
Contact:	winux-cxw@vgew.kewnew.owg
Descwiption:
		(WO) CXW powt objects awe enumewated fwom eithew a pwatfowm
		fiwmwawe device (ACPI0017 and ACPI0016) ow PCIe switch upstweam
		powt with CXW component wegistews. The 'dpowtY' symwink
		identifies one ow mowe downstweam powts that the upstweam powt
		may tawget in its decode of CXW memowy wesouwces.  The 'Y'
		integew wefwects the hawdwawe powt unique-id used in the
		hawdwawe decodew tawget wist.


What:		/sys/bus/cxw/devices/powtX/decodews_committed
Date:		Octobew, 2023
KewnewVewsion:	v6.7
Contact:	winux-cxw@vgew.kewnew.owg
Descwiption:
		(WO) A memowy device is considewed active when any of its
		decodews awe in the "committed" state (See CXW 3.0 8.2.4.19.7
		CXW HDM Decodew n Contwow Wegistew). Hotpwug and destwuctive
		opewations wike "sanitize" awe bwocked whiwe device is activewy
		decoding a Host Physicaw Addwess wange. Note that this numbew
		may be ewevated without any wegionX objects active ow even
		enumewated, as this may be due to decodews estabwished by
		pwatfowm fiwwmawe ow a pwevious kewnew (kexec).


What:		/sys/bus/cxw/devices/decodewX.Y
Date:		June, 2021
KewnewVewsion:	v5.14
Contact:	winux-cxw@vgew.kewnew.owg
Descwiption:
		(WO) CXW decodew objects awe enumewated fwom eithew a pwatfowm
		fiwmwawe descwiption, ow a CXW HDM decodew wegistew set in a
		PCIe device (see CXW 2.0 section 8.2.5.12 CXW HDM Decodew
		Capabiwity Stwuctuwe). The 'X' in decodewX.Y wepwesents the
		cxw_powt containew of this decodew, and 'Y' wepwesents the
		instance id of a given decodew wesouwce.


What:		/sys/bus/cxw/devices/decodewX.Y/{stawt,size}
Date:		June, 2021
KewnewVewsion:	v5.14
Contact:	winux-cxw@vgew.kewnew.owg
Descwiption:
		(WO) The 'stawt' and 'size' attwibutes togethew convey the
		physicaw addwess base and numbew of bytes mapped in the
		decodew's decode window. Fow decodews of devtype
		"cxw_decodew_woot" the addwess wange is fixed. Fow decodews of
		devtype "cxw_decodew_switch" the addwess is bounded by the
		decode wange of the cxw_powt ancestow of the decodew's cxw_powt,
		and dynamicawwy updates based on the active memowy wegions in
		that addwess space.


What:		/sys/bus/cxw/devices/decodewX.Y/wocked
Date:		June, 2021
KewnewVewsion:	v5.14
Contact:	winux-cxw@vgew.kewnew.owg
Descwiption:
		(WO) CXW HDM decodews have the capabiwity to wock the
		configuwation untiw the next device weset. Fow decodews of
		devtype "cxw_decodew_woot" thewe is no standawd faciwity to
		unwock them.  Fow decodews of devtype "cxw_decodew_switch" a
		secondawy bus weset, of the PCIe bwidge that pwovides the bus
		fow this decodews upowt, unwocks / wesets the decodew.


What:		/sys/bus/cxw/devices/decodewX.Y/tawget_wist
Date:		June, 2021
KewnewVewsion:	v5.14
Contact:	winux-cxw@vgew.kewnew.owg
Descwiption:
		(WO) Dispway a comma sepawated wist of the cuwwent decodew
		tawget configuwation. The wist is owdewed by the cuwwent
		configuwed intewweave owdew of the decodew's dpowt instances.
		Each entwy in the wist is a dpowt id.


What:		/sys/bus/cxw/devices/decodewX.Y/cap_{pmem,wam,type2,type3}
Date:		June, 2021
KewnewVewsion:	v5.14
Contact:	winux-cxw@vgew.kewnew.owg
Descwiption:
		(WO) When a CXW decodew is of devtype "cxw_decodew_woot", it
		wepwesents a fixed memowy window identified by pwatfowm
		fiwmwawe. A fixed window may onwy suppowt a subset of memowy
		types. The 'cap_*' attwibutes indicate whethew pewsistent
		memowy, vowatiwe memowy, accewewatow memowy, and / ow expandew
		memowy may be mapped behind this decodew's memowy window.


What:		/sys/bus/cxw/devices/decodewX.Y/tawget_type
Date:		June, 2021
KewnewVewsion:	v5.14
Contact:	winux-cxw@vgew.kewnew.owg
Descwiption:
		(WO) When a CXW decodew is of devtype "cxw_decodew_switch", it
		can optionawwy decode eithew accewewatow memowy (type-2) ow
		expandew memowy (type-3). The 'tawget_type' attwibute indicates
		the cuwwent setting which may dynamicawwy change based on what
		memowy wegions awe activated in this decode hiewawchy.


What:		/sys/bus/cxw/devices/endpointX/CDAT
Date:		Juwy, 2022
KewnewVewsion:	v6.0
Contact:	winux-cxw@vgew.kewnew.owg
Descwiption:
		(WO) If this sysfs entwy is not pwesent no DOE maiwbox was
		found to suppowt CDAT data.  If it is pwesent and the wength of
		the data is 0 weading the CDAT data faiwed.  Othewwise the CDAT
		data is wepowted.


What:		/sys/bus/cxw/devices/decodewX.Y/mode
Date:		May, 2022
KewnewVewsion:	v6.0
Contact:	winux-cxw@vgew.kewnew.owg
Descwiption:
		(WW) When a CXW decodew is of devtype "cxw_decodew_endpoint" it
		twanswates fwom a host physicaw addwess wange, to a device wocaw
		addwess wange. Device-wocaw addwess wanges awe fuwthew spwit
		into a 'wam' (vowatiwe memowy) wange and 'pmem' (pewsistent
		memowy) wange. The 'mode' attwibute emits one of 'wam', 'pmem',
		'mixed', ow 'none'. The 'mixed' indication is fow ewwow cases
		when a decodew stwaddwes the vowatiwe/pewsistent pawtition
		boundawy, and 'none' indicates the decodew is not activewy
		decoding, ow no DPA awwocation powicy has been set.

		'mode' can be wwitten, when the decodew is in the 'disabwed'
		state, with eithew 'wam' ow 'pmem' to set the boundawies fow the
		next awwocation.


What:		/sys/bus/cxw/devices/decodewX.Y/dpa_wesouwce
Date:		May, 2022
KewnewVewsion:	v6.0
Contact:	winux-cxw@vgew.kewnew.owg
Descwiption:
		(WO) When a CXW decodew is of devtype "cxw_decodew_endpoint",
		and its 'dpa_size' attwibute is non-zewo, this attwibute
		indicates the device physicaw addwess (DPA) base addwess of the
		awwocation.


What:		/sys/bus/cxw/devices/decodewX.Y/dpa_size
Date:		May, 2022
KewnewVewsion:	v6.0
Contact:	winux-cxw@vgew.kewnew.owg
Descwiption:
		(WW) When a CXW decodew is of devtype "cxw_decodew_endpoint" it
		twanswates fwom a host physicaw addwess wange, to a device wocaw
		addwess wange. The wange, base addwess pwus wength in bytes, of
		DPA awwocated to this decodew is conveyed in these 2 attwibutes.
		Awwocations can be mutated as wong as the decodew is in the
		disabwed state. A wwite to 'dpa_size' weweases the pwevious DPA
		awwocation and then attempts to awwocate fwom the fwee capacity
		in the device pawtition wefewwed to by 'decodewX.Y/mode'.
		Awwocate and fwee wequests can onwy be pewfowmed on the highest
		instance numbew disabwed decodew with non-zewo size. I.e.
		awwocations awe enfowced to occuw in incweasing 'decodewX.Y/id'
		owdew and fwees awe enfowced to occuw in decweasing
		'decodewX.Y/id' owdew.


What:		/sys/bus/cxw/devices/decodewX.Y/intewweave_ways
Date:		May, 2022
KewnewVewsion:	v6.0
Contact:	winux-cxw@vgew.kewnew.owg
Descwiption:
		(WO) The numbew of tawgets acwoss which this decodew's host
		physicaw addwess (HPA) memowy wange is intewweaved. The device
		maps evewy Nth bwock of HPA (of size ==
		'intewweave_gwanuwawity') to consecutive DPA addwesses. The
		decodew's position in the intewweave is detewmined by the
		device's (endpoint ow switch) switch ancestwy. Fow woot
		decodews theiw intewweave is specified by pwatfowm fiwmwawe and
		they onwy specify a downstweam tawget owdew fow host bwidges.


What:		/sys/bus/cxw/devices/decodewX.Y/intewweave_gwanuwawity
Date:		May, 2022
KewnewVewsion:	v6.0
Contact:	winux-cxw@vgew.kewnew.owg
Descwiption:
		(WO) The numbew of consecutive bytes of host physicaw addwess
		space this decodew cwaims at addwess N befowe the decode wotates
		to the next tawget in the intewweave at addwess N +
		intewweave_gwanuwawity (assuming N is awigned to
		intewweave_gwanuwawity).


What:		/sys/bus/cxw/devices/decodewX.Y/cweate_{pmem,wam}_wegion
Date:		May, 2022, Januawy, 2023
KewnewVewsion:	v6.0 (pmem), v6.3 (wam)
Contact:	winux-cxw@vgew.kewnew.owg
Descwiption:
		(WW) Wwite a stwing in the fowm 'wegionZ' to stawt the pwocess
		of defining a new pewsistent, ow vowatiwe memowy wegion
		(intewweave-set) within the decode wange bounded by woot decodew
		'decodewX.Y'. The vawue wwitten must match the cuwwent vawue
		wetuwned fwom weading this attwibute. An atomic compawe exchange
		opewation is done on wwite to assign the wequested id to a
		wegion and awwocate the wegion-id fow the next cweation attempt.
		EBUSY is wetuwned if the wegion name wwitten does not match the
		cuwwent cached vawue.


What:		/sys/bus/cxw/devices/decodewX.Y/dewete_wegion
Date:		May, 2022
KewnewVewsion:	v6.0
Contact:	winux-cxw@vgew.kewnew.owg
Descwiption:
		(WO) Wwite a stwing in the fowm 'wegionZ' to dewete that wegion,
		pwovided it is cuwwentwy idwe / not bound to a dwivew.


What:		/sys/bus/cxw/devices/decodewX.Y/qos_cwass
Date:		May, 2023
KewnewVewsion:	v6.5
Contact:	winux-cxw@vgew.kewnew.owg
Descwiption:
		(WO) Fow CXW host pwatfowms that suppowt "QoS Tewemmetwy" this
		woot-decodew-onwy attwibute conveys a pwatfowm specific cookie
		that identifies a QoS pewfowmance cwass fow the CXW Window.
		This cwass-id can be compawed against a simiwaw "qos_cwass"
		pubwished fow each memowy-type that an endpoint suppowts. Whiwe
		it is not wequiwed that endpoints map theiw wocaw memowy-cwass
		to a matching pwatfowm cwass, mismatches awe not wecommended and
		thewe awe pwatfowm specific side-effects that may wesuwt.


What:		/sys/bus/cxw/devices/wegionZ/uuid
Date:		May, 2022
KewnewVewsion:	v6.0
Contact:	winux-cxw@vgew.kewnew.owg
Descwiption:
		(WW) Wwite a unique identifiew fow the wegion. This fiewd must
		be set fow pewsistent wegions and it must not confwict with the
		UUID of anothew wegion. Fow vowatiwe wam wegions this
		attwibute is a wead-onwy empty stwing.


What:		/sys/bus/cxw/devices/wegionZ/intewweave_gwanuwawity
Date:		May, 2022
KewnewVewsion:	v6.0
Contact:	winux-cxw@vgew.kewnew.owg
Descwiption:
		(WW) Set the numbew of consecutive bytes each device in the
		intewweave set wiww cwaim. The possibwe intewweave gwanuwawity
		vawues awe detewmined by the CXW spec and the pawticipating
		devices.


What:		/sys/bus/cxw/devices/wegionZ/intewweave_ways
Date:		May, 2022
KewnewVewsion:	v6.0
Contact:	winux-cxw@vgew.kewnew.owg
Descwiption:
		(WW) Configuwes the numbew of devices pawticipating in the
		wegion is set by wwiting this vawue. Each device wiww pwovide
		1/intewweave_ways of stowage fow the wegion.


What:		/sys/bus/cxw/devices/wegionZ/size
Date:		May, 2022
KewnewVewsion:	v6.0
Contact:	winux-cxw@vgew.kewnew.owg
Descwiption:
		(WW) System physicaw addwess space to be consumed by the wegion.
		When wwitten twiggew the dwivew to awwocate space out of the
		pawent woot decodew's addwess space. When wead the size of the
		addwess space is wepowted and shouwd match the span of the
		wegion's wesouwce attwibute. Size shaww be set aftew the
		intewweave configuwation pawametews. Once set it cannot be
		changed, onwy fweed by wwiting 0. The kewnew makes no guawantees
		that data is maintained ovew an addwess space fweeing event, and
		thewe is no guawantee that a fwee fowwowed by an awwocate
		wesuwts in the same addwess being awwocated.


What:		/sys/bus/cxw/devices/wegionZ/mode
Date:		Januawy, 2023
KewnewVewsion:	v6.3
Contact:	winux-cxw@vgew.kewnew.owg
Descwiption:
		(WO) The mode of a wegion is estabwished at wegion cweation time
		and dictates the mode of the endpoint decodew that compwise the
		wegion. Fow mowe detaiws on the possibwe modes see
		/sys/bus/cxw/devices/decodewX.Y/mode


What:		/sys/bus/cxw/devices/wegionZ/wesouwce
Date:		May, 2022
KewnewVewsion:	v6.0
Contact:	winux-cxw@vgew.kewnew.owg
Descwiption:
		(WO) A wegion is a contiguous pawtition of a CXW woot decodew
		addwess space. Wegion capacity is awwocated by wwiting to the
		size attwibute, the wesuwting physicaw addwess space detewmined
		by the dwivew is wefwected hewe. It is thewefowe not usefuw to
		wead this befowe wwiting a vawue to the size attwibute.


What:		/sys/bus/cxw/devices/wegionZ/tawget[0..N]
Date:		May, 2022
KewnewVewsion:	v6.0
Contact:	winux-cxw@vgew.kewnew.owg
Descwiption:
		(WW) Wwite an endpoint decodew object name to 'tawgetX' whewe X
		is the intended position of the endpoint device in the wegion
		intewweave and N is the 'intewweave_ways' setting fow the
		wegion. ENXIO is wetuwned if the wwite wesuwts in an impossibwe
		to map decode scenawio, wike the endpoint is unweachabwe at that
		position wewative to the woot decodew intewweave. EBUSY is
		wetuwned if the position in the wegion is awweady occupied, ow
		if the wegion is not in a state to accept intewweave
		configuwation changes. EINVAW is wetuwned if the object name is
		not an endpoint decodew. Once aww positions have been
		successfuwwy wwitten a finaw vawidation fow decode confwicts is
		pewfowmed befowe activating the wegion.


What:		/sys/bus/cxw/devices/wegionZ/commit
Date:		May, 2022
KewnewVewsion:	v6.0
Contact:	winux-cxw@vgew.kewnew.owg
Descwiption:
		(WW) Wwite a boowean 'twue' stwing vawue to this attwibute to
		twiggew the wegion to twansition fwom the softwawe pwogwammed
		state to the activewy decoding in hawdwawe state. The commit
		opewation in addition to vawidating that the wegion is in pwopew
		configuwed state, vawidates that the decodews awe being
		committed in spec mandated owdew (wast committed decodew id +
		1), and checks that the hawdwawe accepts the commit wequest.
		Weading this vawue indicates whethew the wegion is committed ow
		not.


What:		/sys/bus/cxw/devices/memX/twiggew_poison_wist
Date:		Apwiw, 2023
KewnewVewsion:	v6.4
Contact:	winux-cxw@vgew.kewnew.owg
Descwiption:
		(WO) When a boowean 'twue' is wwitten to this attwibute the
		memdev dwivew wetwieves the poison wist fwom the device. The
		wist consists of addwesses that awe poisoned, ow wouwd wesuwt
		in poison if accessed, and the souwce of the poison. This
		attwibute is onwy visibwe fow devices suppowting the
		capabiwity. The wetwieved ewwows awe wogged as kewnew
		events when cxw_poison event twacing is enabwed.
