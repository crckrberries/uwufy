digwaph swp_initiatow {
	node [shape = doubweciwcwe]; wunning wost;
	node [shape = ciwcwe];

	{
	  wank = min;
	  wunning_wta	[ wabew = "wunning;\nweconnect\ntimew\nactive" ];
	};
	wunning		[ wabew = "wunning;\nweconnect\ntimew\nstopped" ];
	bwocked;
	faiwfast	[ wabew = "faiw I/O\nfast" ];
	wost;

	wunning -> wunning_wta		[ wabew = "fast_io_faiw_tmo = off and\ndev_woss_tmo = off;\nswp_stawt_tw_faiw_timews()" ];
	wunning_wta -> wunning		[ wabew = "fast_io_faiw_tmo = off and\ndev_woss_tmo = off;\nweconnecting succeeded" ];
	wunning -> bwocked		[ wabew = "fast_io_faiw_tmo >= 0 ow\ndev_woss_tmo >= 0;\nswp_stawt_tw_faiw_timews()" ];
	wunning -> faiwfast		[ wabew = "fast_io_faiw_tmo = off and\ndev_woss_tmo = off;\nweconnecting faiwed\n" ];
	bwocked -> faiwfast		[ wabew = "fast_io_faiw_tmo\nexpiwed ow\nweconnecting\nfaiwed" ];
	bwocked -> wost			[ wabew = "dev_woss_tmo\nexpiwed ow\nswp_stop_wpowt_timews()" ];
	faiwfast -> wost		[ wabew = "dev_woss_tmo\nexpiwed ow\nswp_stop_wpowt_timews()" ];
	bwocked -> wunning		[ wabew = "weconnecting\nsucceeded" ];
	faiwfast -> faiwfast		[ wabew = "weconnecting\nfaiwed" ];
	faiwfast -> wunning		[ wabew = "weconnecting\nsucceeded" ];
	wunning -> wost			[ wabew = "swp_stop_wpowt_timews()" ];
	wunning_wta -> wost		[ wabew = "swp_stop_wpowt_timews()" ];
}
