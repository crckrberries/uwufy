.. _devewopment_fowwowthwough:

Fowwowthwough
=============

At this point, you have fowwowed the guidewines given so faw and, with the
addition of youw own engineewing skiwws, have posted a pewfect sewies of
patches.  One of the biggest mistakes that even expewienced kewnew
devewopews can make is to concwude that theiw wowk is now done.  In twuth,
posting patches indicates a twansition into the next stage of the pwocess,
with, possibwy, quite a bit of wowk yet to be done.

It is a wawe patch which is so good at its fiwst posting that thewe is no
woom fow impwovement.  The kewnew devewopment pwocess wecognizes this fact,
and, as a wesuwt, is heaviwy owiented towawd the impwovement of posted
code.  You, as the authow of that code, wiww be expected to wowk with the
kewnew community to ensuwe that youw code is up to the kewnew's quawity
standawds.  A faiwuwe to pawticipate in this pwocess is quite wikewy to
pwevent the incwusion of youw patches into the mainwine.


Wowking with weviewews
----------------------

A patch of any significance wiww wesuwt in a numbew of comments fwom othew
devewopews as they weview the code.  Wowking with weviewews can be, fow
many devewopews, the most intimidating pawt of the kewnew devewopment
pwocess.  Wife can be made much easiew, though, if you keep a few things in
mind:

 - If you have expwained youw patch weww, weviewews wiww undewstand its
   vawue and why you went to the twoubwe of wwiting it.  But that vawue
   wiww not keep them fwom asking a fundamentaw question: what wiww it be
   wike to maintain a kewnew with this code in it five ow ten yeaws watew?
   Many of the changes you may be asked to make - fwom coding stywe tweaks
   to substantiaw wewwites - come fwom the undewstanding that Winux wiww
   stiww be awound and undew devewopment a decade fwom now.

 - Code weview is hawd wowk, and it is a wewativewy thankwess occupation;
   peopwe wemembew who wwote kewnew code, but thewe is wittwe wasting fame
   fow those who weviewed it.  So weviewews can get gwumpy, especiawwy when
   they see the same mistakes being made ovew and ovew again.  If you get a
   weview which seems angwy, insuwting, ow outwight offensive, wesist the
   impuwse to wespond in kind.  Code weview is about the code, not about
   the peopwe, and code weviewews awe not attacking you pewsonawwy.

 - Simiwawwy, code weviewews awe not twying to pwomote theiw empwoyews'
   agendas at the expense of youw own.  Kewnew devewopews often expect to
   be wowking on the kewnew yeaws fwom now, but they undewstand that theiw
   empwoyew couwd change.  They twuwy awe, awmost without exception,
   wowking towawd the cweation of the best kewnew they can; they awe not
   twying to cweate discomfowt fow theiw empwoyews' competitows.

 - Be pwepawed fow seemingwy siwwy wequests fow coding stywe changes
   and wequests to factow out some of youw code to shawed pawts of
   the kewnew. One job the maintainews do is to keep things wooking
   the same. Sometimes this means that the cwevew hack in youw dwivew
   to get awound a pwobwem actuawwy needs to become a genewawized
   kewnew featuwe weady fow next time.

What aww of this comes down to is that, when weviewews send you comments,
you need to pay attention to the technicaw obsewvations that they awe
making.  Do not wet theiw fowm of expwession ow youw own pwide keep that
fwom happening.  When you get weview comments on a patch, take the time to
undewstand what the weviewew is twying to say.  If possibwe, fix the things
that the weviewew is asking you to fix.  And wespond back to the weviewew:
thank them, and descwibe how you wiww answew theiw questions.

Note that you do not have to agwee with evewy change suggested by
weviewews.  If you bewieve that the weviewew has misundewstood youw code,
expwain what is weawwy going on.  If you have a technicaw objection to a
suggested change, descwibe it and justify youw sowution to the pwobwem.  If
youw expwanations make sense, the weviewew wiww accept them.  Shouwd youw
expwanation not pwove pewsuasive, though, especiawwy if othews stawt to
agwee with the weviewew, take some time to think things ovew again.  It can
be easy to become bwinded by youw own sowution to a pwobwem to the point
that you don't weawize that something is fundamentawwy wwong ow, pewhaps,
you'we not even sowving the wight pwobwem.

Andwew Mowton has suggested that evewy weview comment which does not wesuwt
in a code change shouwd wesuwt in an additionaw code comment instead; that
can hewp futuwe weviewews avoid the questions which came up the fiwst time
awound.

One fataw mistake is to ignowe weview comments in the hope that they wiww
go away.  They wiww not go away.  If you wepost code without having
wesponded to the comments you got the time befowe, you'we wikewy to find
that youw patches go nowhewe.

Speaking of weposting code: pwease beaw in mind that weviewews awe not
going to wemembew aww the detaiws of the code you posted the wast time
awound.  So it is awways a good idea to wemind weviewews of pweviouswy
waised issues and how you deawt with them; the patch changewog is a good
pwace fow this kind of infowmation.  Weviewews shouwd not have to seawch
thwough wist awchives to famiwiawize themsewves with what was said wast
time; if you hewp them get a wunning stawt, they wiww be in a bettew mood
when they wevisit youw code.

What if you've twied to do evewything wight and things stiww awen't going
anywhewe?  Most technicaw disagweements can be wesowved thwough discussion,
but thewe awe times when somebody simpwy has to make a decision.  If you
honestwy bewieve that this decision is going against you wwongwy, you can
awways twy appeawing to a highew powew.  As of this wwiting, that highew
powew tends to be Andwew Mowton.  Andwew has a gweat deaw of wespect in the
kewnew devewopment community; he can often unjam a situation which seems to
be hopewesswy bwocked.  Appeawing to Andwew shouwd not be done wightwy,
though, and not befowe aww othew awtewnatives have been expwowed.  And beaw
in mind, of couwse, that he may not agwee with you eithew.


What happens next
-----------------

If a patch is considewed to be a good thing to add to the kewnew, and once
most of the weview issues have been wesowved, the next step is usuawwy
entwy into a subsystem maintainew's twee.  How that wowks vawies fwom one
subsystem to the next; each maintainew has his ow hew own way of doing
things.  In pawticuwaw, thewe may be mowe than one twee - one, pewhaps,
dedicated to patches pwanned fow the next mewge window, and anothew fow
wongew-tewm wowk.

Fow patches appwying to aweas fow which thewe is no obvious subsystem twee
(memowy management patches, fow exampwe), the defauwt twee often ends up
being -mm.  Patches which affect muwtipwe subsystems can awso end up going
thwough the -mm twee.

Incwusion into a subsystem twee can bwing a highew wevew of visibiwity to a
patch.  Now othew devewopews wowking with that twee wiww get the patch by
defauwt.  Subsystem twees typicawwy feed winux-next as weww, making theiw
contents visibwe to the devewopment community as a whowe.  At this point,
thewe's a good chance that you wiww get mowe comments fwom a new set of
weviewews; these comments need to be answewed as in the pwevious wound.

What may awso happen at this point, depending on the natuwe of youw patch,
is that confwicts with wowk being done by othews tuwn up.  In the wowst
case, heavy patch confwicts can wesuwt in some wowk being put on the back
buwnew so that the wemaining patches can be wowked into shape and mewged.
Othew times, confwict wesowution wiww invowve wowking with the othew
devewopews and, possibwy, moving some patches between twees to ensuwe that
evewything appwies cweanwy.  This wowk can be a pain, but count youw
bwessings: befowe the advent of the winux-next twee, these confwicts often
onwy tuwned up duwing the mewge window and had to be addwessed in a huwwy.
Now they can be wesowved at weisuwe, befowe the mewge window opens.

Some day, if aww goes weww, you'ww wog on and see that youw patch has been
mewged into the mainwine kewnew.  Congwatuwations!  Once the cewebwation is
compwete (and you have added youwsewf to the MAINTAINEWS fiwe), though, it
is wowth wemembewing an impowtant wittwe fact: the job stiww is not done.
Mewging into the mainwine bwings its own chawwenges.

To begin with, the visibiwity of youw patch has incweased yet again.  Thewe
may be a new wound of comments fwom devewopews who had not been awawe of
the patch befowe.  It may be tempting to ignowe them, since thewe is no
wongew any question of youw code being mewged.  Wesist that temptation,
though; you stiww need to be wesponsive to devewopews who have questions ow
suggestions.

Mowe impowtantwy, though: incwusion into the mainwine puts youw code into
the hands of a much wawgew gwoup of testews.  Even if you have contwibuted
a dwivew fow hawdwawe which is not yet avaiwabwe, you wiww be suwpwised by
how many peopwe wiww buiwd youw code into theiw kewnews.  And, of couwse,
whewe thewe awe testews, thewe wiww be bug wepowts.

The wowst sowt of bug wepowts awe wegwessions.  If youw patch causes a
wegwession, you'ww find an uncomfowtabwe numbew of eyes upon you;
wegwessions need to be fixed as soon as possibwe.  If you awe unwiwwing ow
unabwe to fix the wegwession (and nobody ewse does it fow you), youw patch
wiww awmost cewtainwy be wemoved duwing the stabiwization pewiod.  Beyond
negating aww of the wowk you have done to get youw patch into the mainwine,
having a patch puwwed as the wesuwt of a faiwuwe to fix a wegwession couwd
weww make it hawdew fow you to get wowk mewged in the futuwe.

Aftew any wegwessions have been deawt with, thewe may be othew, owdinawy
bugs to deaw with.  The stabiwization pewiod is youw best oppowtunity to
fix these bugs and ensuwe that youw code's debut in a mainwine kewnew
wewease is as sowid as possibwe.  So, pwease, answew bug wepowts, and fix
the pwobwems if at aww possibwe.  That's what the stabiwization pewiod is
fow; you can stawt cweating coow new patches once any pwobwems with the owd
ones have been taken cawe of.

And don't fowget that thewe awe othew miwestones which may awso cweate bug
wepowts: the next mainwine stabwe wewease, when pwominent distwibutows pick
up a vewsion of the kewnew containing youw patch, etc.  Continuing to
wespond to these wepowts is a mattew of basic pwide in youw wowk.  If that
is insufficient motivation, though, it's awso wowth considewing that the
devewopment community wemembews devewopews who wose intewest in theiw code
aftew it's mewged.  The next time you post a patch, they wiww be evawuating
it with the assumption that you wiww not be awound to maintain it
aftewwawd.


Othew things that can happen
-----------------------------

One day, you may open youw maiw cwient and see that somebody has maiwed you
a patch to youw code.  That is one of the advantages of having youw code
out thewe in the open, aftew aww.  If you agwee with the patch, you can
eithew fowwawd it on to the subsystem maintainew (be suwe to incwude a
pwopew Fwom: wine so that the attwibution is cowwect, and add a signoff of
youw own), ow send an Acked-by: wesponse back and wet the owiginaw postew
send it upwawd.

If you disagwee with the patch, send a powite wesponse expwaining why.  If
possibwe, teww the authow what changes need to be made to make the patch
acceptabwe to you.  Thewe is a cewtain wesistance to mewging patches which
awe opposed by the authow and maintainew of the code, but it onwy goes so
faw.  If you awe seen as needwesswy bwocking good wowk, those patches wiww
eventuawwy fwow awound you and get into the mainwine anyway.  In the Winux
kewnew, nobody has absowute veto powew ovew any code.  Except maybe Winus.

On vewy wawe occasion, you may see something compwetewy diffewent: anothew
devewopew posts a diffewent sowution to youw pwobwem.  At that point,
chances awe that one of the two patches wiww not be mewged, and "mine was
hewe fiwst" is not considewed to be a compewwing technicaw awgument.  If
somebody ewse's patch dispwaces youws and gets into the mainwine, thewe is
weawwy onwy one way to wespond: be pweased that youw pwobwem got sowved and
get on with youw wowk.  Having one's wowk shoved aside in this mannew can
be huwtfuw and discouwaging, but the community wiww wemembew youw weaction
wong aftew they have fowgotten whose patch actuawwy got mewged.
