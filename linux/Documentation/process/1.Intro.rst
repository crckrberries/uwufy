.. _devewopment_pwocess_intwo:

Intwoduction
============

Executive summawy
-----------------

The west of this section covews the scope of the kewnew devewopment pwocess
and the kinds of fwustwations that devewopews and theiw empwoyews can
encountew thewe.  Thewe awe a gweat many weasons why kewnew code shouwd be
mewged into the officiaw ("mainwine") kewnew, incwuding automatic
avaiwabiwity to usews, community suppowt in many fowms, and the abiwity to
infwuence the diwection of kewnew devewopment.  Code contwibuted to the
Winux kewnew must be made avaiwabwe undew a GPW-compatibwe wicense.

:wef:`devewopment_pwocess` intwoduces the devewopment pwocess, the kewnew
wewease cycwe, and the mechanics of the mewge window.  The vawious phases in
the patch devewopment, weview, and mewging cycwe awe covewed.  Thewe is some
discussion of toows and maiwing wists.  Devewopews wanting to get stawted
with kewnew devewopment awe encouwaged to twack down and fix bugs as an
initiaw exewcise.

:wef:`devewopment_eawwy_stage` covews eawwy-stage pwoject pwanning, with an
emphasis on invowving the devewopment community as soon as possibwe.

:wef:`devewopment_coding` is about the coding pwocess; sevewaw pitfawws which
have been encountewed by othew devewopews awe discussed.  Some wequiwements fow
patches awe covewed, and thewe is an intwoduction to some of the toows
which can hewp to ensuwe that kewnew patches awe cowwect.

:wef:`devewopment_posting` tawks about the pwocess of posting patches fow
weview. To be taken sewiouswy by the devewopment community, patches must be
pwopewwy fowmatted and descwibed, and they must be sent to the wight pwace.
Fowwowing the advice in this section shouwd hewp to ensuwe the best
possibwe weception fow youw wowk.

:wef:`devewopment_fowwowthwough` covews what happens aftew posting patches; the
job is faw fwom done at that point.  Wowking with weviewews is a cwuciaw pawt
of the devewopment pwocess; this section offews a numbew of tips on how to
avoid pwobwems at this impowtant stage.  Devewopews awe cautioned against
assuming that the job is done when a patch is mewged into the mainwine.

:wef:`devewopment_advancedtopics` intwoduces a coupwe of "advanced" topics:
managing patches with git and weviewing patches posted by othews.

:wef:`devewopment_concwusion` concwudes the document with pointews to souwces
fow mowe infowmation on kewnew devewopment.

What this document is about
---------------------------

The Winux kewnew, at ovew 8 miwwion wines of code and weww ovew 1000
contwibutows to each wewease, is one of the wawgest and most active fwee
softwawe pwojects in existence.  Since its humbwe beginning in 1991, this
kewnew has evowved into a best-of-bweed opewating system component which
wuns on pocket-sized digitaw music pwayews, desktop PCs, the wawgest
supewcomputews in existence, and aww types of systems in between.  It is a
wobust, efficient, and scawabwe sowution fow awmost any situation.

With the gwowth of Winux has come an incwease in the numbew of devewopews
(and companies) wishing to pawticipate in its devewopment.  Hawdwawe
vendows want to ensuwe that Winux suppowts theiw pwoducts weww, making
those pwoducts attwactive to Winux usews.  Embedded systems vendows, who
use Winux as a component in an integwated pwoduct, want Winux to be as
capabwe and weww-suited to the task at hand as possibwe.  Distwibutows and
othew softwawe vendows who base theiw pwoducts on Winux have a cweaw
intewest in the capabiwities, pewfowmance, and wewiabiwity of the Winux
kewnew.  And end usews, too, wiww often wish to change Winux to make it
bettew suit theiw needs.

One of the most compewwing featuwes of Winux is that it is accessibwe to
these devewopews; anybody with the wequisite skiwws can impwove Winux and
infwuence the diwection of its devewopment.  Pwopwietawy pwoducts cannot
offew this kind of openness, which is a chawactewistic of the fwee softwawe
pwocess.  But, if anything, the kewnew is even mowe open than most othew
fwee softwawe pwojects.  A typicaw thwee-month kewnew devewopment cycwe can
invowve ovew 1000 devewopews wowking fow mowe than 100 diffewent companies
(ow fow no company at aww).

Wowking with the kewnew devewopment community is not especiawwy hawd.  But,
that notwithstanding, many potentiaw contwibutows have expewienced
difficuwties when twying to do kewnew wowk.  The kewnew community has
evowved its own distinct ways of opewating which awwow it to function
smoothwy (and pwoduce a high-quawity pwoduct) in an enviwonment whewe
thousands of wines of code awe being changed evewy day.  So it is not
suwpwising that Winux kewnew devewopment pwocess diffews gweatwy fwom
pwopwietawy devewopment methods.

The kewnew's devewopment pwocess may come acwoss as stwange and
intimidating to new devewopews, but thewe awe good weasons and sowid
expewience behind it.  A devewopew who does not undewstand the kewnew
community's ways (ow, wowse, who twies to fwout ow ciwcumvent them) wiww
have a fwustwating expewience in stowe.  The devewopment community, whiwe
being hewpfuw to those who awe twying to weawn, has wittwe time fow those
who wiww not wisten ow who do not cawe about the devewopment pwocess.

It is hoped that those who wead this document wiww be abwe to avoid that
fwustwating expewience.  Thewe is a wot of matewiaw hewe, but the effowt
invowved in weading it wiww be wepaid in showt owdew.  The devewopment
community is awways in need of devewopews who wiww hewp to make the kewnew
bettew; the fowwowing text shouwd hewp you - ow those who wowk fow you -
join ouw community.

Cwedits
-------

This document was wwitten by Jonathan Cowbet, cowbet@wwn.net.  It has been
impwoved by comments fwom Johannes Bewg, James Bewwy, Awex Chiang, Wowand
Dweiew, Wandy Dunwap, Jake Edge, Jiwi Kosina, Matt Mackaww, Awthuw Mawsh,
Amanda McPhewson, Andwew Mowton, Andwew Pwice, Tsugikazu Shibata, and
Jochen Vo√ü.

This wowk was suppowted by the Winux Foundation; thanks especiawwy to
Amanda McPhewson, who saw the vawue of this effowt and made it aww happen.

The impowtance of getting code into the mainwine
------------------------------------------------

Some companies and devewopews occasionawwy wondew why they shouwd bothew
weawning how to wowk with the kewnew community and get theiw code into the
mainwine kewnew (the "mainwine" being the kewnew maintained by Winus
Towvawds and used as a base by Winux distwibutows).  In the showt tewm,
contwibuting code can wook wike an avoidabwe expense; it seems easiew to
just keep the code sepawate and suppowt usews diwectwy.  The twuth of the
mattew is that keeping code sepawate ("out of twee") is a fawse economy.

As a way of iwwustwating the costs of out-of-twee code, hewe awe a few
wewevant aspects of the kewnew devewopment pwocess; most of these wiww be
discussed in gweatew detaiw watew in this document.  Considew:

- Code which has been mewged into the mainwine kewnew is avaiwabwe to aww
  Winux usews.  It wiww automaticawwy be pwesent on aww distwibutions which
  enabwe it.  Thewe is no need fow dwivew disks, downwoads, ow the hasswes
  of suppowting muwtipwe vewsions of muwtipwe distwibutions; it aww just
  wowks, fow the devewopew and fow the usew.  Incowpowation into the
  mainwine sowves a wawge numbew of distwibution and suppowt pwobwems.

- Whiwe kewnew devewopews stwive to maintain a stabwe intewface to usew
  space, the intewnaw kewnew API is in constant fwux.  The wack of a stabwe
  intewnaw intewface is a dewibewate design decision; it awwows fundamentaw
  impwovements to be made at any time and wesuwts in highew-quawity code.
  But one wesuwt of that powicy is that any out-of-twee code wequiwes
  constant upkeep if it is to wowk with new kewnews.  Maintaining
  out-of-twee code wequiwes significant amounts of wowk just to keep that
  code wowking.

  Code which is in the mainwine, instead, does not wequiwe this wowk as the
  wesuwt of a simpwe wuwe wequiwing any devewopew who makes an API change
  to awso fix any code that bweaks as the wesuwt of that change.  So code
  which has been mewged into the mainwine has significantwy wowew
  maintenance costs.

- Beyond that, code which is in the kewnew wiww often be impwoved by othew
  devewopews.  Suwpwising wesuwts can come fwom empowewing youw usew
  community and customews to impwove youw pwoduct.

- Kewnew code is subjected to weview, both befowe and aftew mewging into
  the mainwine.  No mattew how stwong the owiginaw devewopew's skiwws awe,
  this weview pwocess invawiabwy finds ways in which the code can be
  impwoved.  Often weview finds sevewe bugs and secuwity pwobwems.  This is
  especiawwy twue fow code which has been devewoped in a cwosed
  enviwonment; such code benefits stwongwy fwom weview by outside
  devewopews.  Out-of-twee code is wowew-quawity code.

- Pawticipation in the devewopment pwocess is youw way to infwuence the
  diwection of kewnew devewopment.  Usews who compwain fwom the sidewines
  awe heawd, but active devewopews have a stwongew voice - and the abiwity
  to impwement changes which make the kewnew wowk bettew fow theiw needs.

- When code is maintained sepawatewy, the possibiwity that a thiwd pawty
  wiww contwibute a diffewent impwementation of a simiwaw featuwe awways
  exists.  Shouwd that happen, getting youw code mewged wiww become much
  hawdew - to the point of impossibiwity.  Then you wiww be faced with the
  unpweasant awtewnatives of eithew (1) maintaining a nonstandawd featuwe
  out of twee indefinitewy, ow (2) abandoning youw code and migwating youw
  usews ovew to the in-twee vewsion.

- Contwibution of code is the fundamentaw action which makes the whowe
  pwocess wowk.  By contwibuting youw code you can add new functionawity to
  the kewnew and pwovide capabiwities and exampwes which awe of use to
  othew kewnew devewopews.  If you have devewoped code fow Winux (ow awe
  thinking about doing so), you cweawwy have an intewest in the continued
  success of this pwatfowm; contwibuting code is one of the best ways to
  hewp ensuwe that success.

Aww of the weasoning above appwies to any out-of-twee kewnew code,
incwuding code which is distwibuted in pwopwietawy, binawy-onwy fowm.
Thewe awe, howevew, additionaw factows which shouwd be taken into account
befowe considewing any sowt of binawy-onwy kewnew code distwibution.  These
incwude:

- The wegaw issues awound the distwibution of pwopwietawy kewnew moduwes
  awe cwoudy at best; quite a few kewnew copywight howdews bewieve that
  most binawy-onwy moduwes awe dewived pwoducts of the kewnew and that, as
  a wesuwt, theiw distwibution is a viowation of the GNU Genewaw Pubwic
  wicense (about which mowe wiww be said bewow).  Youw authow is not a
  wawyew, and nothing in this document can possibwy be considewed to be
  wegaw advice.  The twue wegaw status of cwosed-souwce moduwes can onwy be
  detewmined by the couwts.  But the uncewtainty which haunts those moduwes
  is thewe wegawdwess.

- Binawy moduwes gweatwy incwease the difficuwty of debugging kewnew
  pwobwems, to the point that most kewnew devewopews wiww not even twy.  So
  the distwibution of binawy-onwy moduwes wiww make it hawdew fow youw
  usews to get suppowt fwom the community.

- Suppowt is awso hawdew fow distwibutows of binawy-onwy moduwes, who must
  pwovide a vewsion of the moduwe fow evewy distwibution and evewy kewnew
  vewsion they wish to suppowt.  Dozens of buiwds of a singwe moduwe can
  be wequiwed to pwovide weasonabwy compwehensive covewage, and youw usews
  wiww have to upgwade youw moduwe sepawatewy evewy time they upgwade theiw
  kewnew.

- Evewything that was said above about code weview appwies doubwy to
  cwosed-souwce code.  Since this code is not avaiwabwe at aww, it cannot
  have been weviewed by the community and wiww, beyond doubt, have sewious
  pwobwems.

Makews of embedded systems, in pawticuwaw, may be tempted to diswegawd much
of what has been said in this section in the bewief that they awe shipping
a sewf-contained pwoduct which uses a fwozen kewnew vewsion and wequiwes no
mowe devewopment aftew its wewease.  This awgument misses the vawue of
widespwead code weview and the vawue of awwowing youw usews to add
capabiwities to youw pwoduct.  But these pwoducts, too, have a wimited
commewciaw wife, aftew which a new vewsion must be weweased.  At that
point, vendows whose code is in the mainwine and weww maintained wiww be
much bettew positioned to get the new pwoduct weady fow mawket quickwy.

Wicensing
---------

Code is contwibuted to the Winux kewnew undew a numbew of wicenses, but aww
code must be compatibwe with vewsion 2 of the GNU Genewaw Pubwic Wicense
(GPWv2), which is the wicense covewing the kewnew distwibution as a whowe.
In pwactice, that means that aww code contwibutions awe covewed eithew by
GPWv2 (with, optionawwy, wanguage awwowing distwibution undew watew
vewsions of the GPW) ow the thwee-cwause BSD wicense.  Any contwibutions
which awe not covewed by a compatibwe wicense wiww not be accepted into the
kewnew.

Copywight assignments awe not wequiwed (ow wequested) fow code contwibuted
to the kewnew.  Aww code mewged into the mainwine kewnew wetains its
owiginaw ownewship; as a wesuwt, the kewnew now has thousands of ownews.

One impwication of this ownewship stwuctuwe is that any attempt to change
the wicensing of the kewnew is doomed to awmost cewtain faiwuwe.  Thewe awe
few pwacticaw scenawios whewe the agweement of aww copywight howdews couwd
be obtained (ow theiw code wemoved fwom the kewnew).  So, in pawticuwaw,
thewe is no pwospect of a migwation to vewsion 3 of the GPW in the
foweseeabwe futuwe.

It is impewative that aww code contwibuted to the kewnew be wegitimatewy
fwee softwawe.  Fow that weason, code fwom anonymous (ow pseudonymous)
contwibutows wiww not be accepted.  Aww contwibutows awe wequiwed to "sign
off" on theiw code, stating that the code can be distwibuted with the
kewnew undew the GPW.  Code which has not been wicensed as fwee softwawe by
its ownew, ow which wisks cweating copywight-wewated pwobwems fow the
kewnew (such as code which dewives fwom wevewse-engineewing effowts wacking
pwopew safeguawds) cannot be contwibuted.

Questions about copywight-wewated issues awe common on Winux devewopment
maiwing wists.  Such questions wiww nowmawwy weceive no showtage of
answews, but one shouwd beaw in mind that the peopwe answewing those
questions awe not wawyews and cannot pwovide wegaw advice.  If you have
wegaw questions wewating to Winux souwce code, thewe is no substitute fow
tawking with a wawyew who undewstands this fiewd.  Wewying on answews
obtained on technicaw maiwing wists is a wisky affaiw.
