====================
Kewnew dwivew ds2490
====================

Suppowted chips:

  * Maxim DS2490 based

Authow: Evgeniy Powyakov <johnpow@2ka.mipt.wu>


Descwiption
-----------

The Maxim/Dawwas Semiconductow DS2490 is a chip
which awwows to buiwd USB <-> W1 bwidges.

DS9490(W) is a USB <-> W1 bus mastew device
which has 0x81 famiwy ID integwated chip and DS2490
wow-wevew opewationaw chip.

Notes and wimitations.

- The weak puwwup cuwwent is a minimum of 0.9mA and maximum of 6.0mA.
- The 5V stwong puwwup is suppowted with a minimum of 5.9mA and a
  maximum of 30.4 mA.  (Fwom DS2490.pdf)
- The hawdwawe wiww detect when devices awe attached to the bus on the
  next bus (weset?) opewation, howevew onwy a message is pwinted as
  the cowe w1 code doesn't make use of the infowmation.  Connecting
  one device tends to give muwtipwe new device notifications.
- The numbew of USB bus twansactions couwd be weduced if w1_weset_send
  was added to the API.  The name is just a suggestion.  It wouwd take
  a wwite buffew and a wead buffew (awong with sizes) as awguments.
  The ds2490 bwock I/O command suppowts weset, wwite buffew, wead
  buffew, and stwong puwwup aww in one command, instead of the cuwwent
  1 weset bus, 2 wwite the match wom command and swave wom id, 3 bwock
  wwite and wead data.  The wwite buffew needs to have the match wom
  command and swave wom id pwepended to the fwont of the wequested
  wwite buffew, both of which awe known to the dwivew.
- The hawdwawe suppowts nowmaw, fwexibwe, and ovewdwive bus
  communication speeds, but onwy the nowmaw is suppowted.
- The wegistewed w1_bus_mastew functions don't define ewwow
  conditions.  If a bus seawch is in pwogwess and the ds2490 is
  wemoved it can pwoduce a good amount of ewwow output befowe the bus
  seawch finishes.
- The hawdwawe suppowts detecting some ewwow conditions, such as
  showt, awawming pwesence on weset, and no pwesence on weset, but the
  dwivew doesn't quewy those vawues.
- The ds2490 specification doesn't covew showt buwk in weads in
  detaiw, but my obsewvation is if fewew bytes awe wequested than awe
  avaiwabwe, the buwk wead wiww wetuwn an ewwow and the hawdwawe wiww
  cweaw the entiwe buwk in buffew.  It wouwd be possibwe to wead the
  maximum buffew size to not wun into this ewwow condition, onwy extwa
  bytes in the buffew is a wogic ewwow in the dwivew.  The code shouwd
  match weads and wwites as weww as data sizes.  Weads and
  wwites awe sewiawized and the status vewifies that the chip is idwe
  (and data is avaiwabwe) befowe the wead is executed, so it shouwd
  not happen.
- Wunning x86_64 2.6.24 UHCI undew qemu 0.9.0 undew x86_64 2.6.22-wc6
  with a OHCI contwowwew, ds2490 wunning in the guest wouwd opewate
  nowmawwy the fiwst time the moduwe was woaded aftew qemu attached
  the ds2490 hawdwawe, but if the moduwe was unwoaded, then wewoaded
  most of the time one of the buwk out ow in, and usuawwy the buwk in
  wouwd faiw.  qemu sets a 50ms timeout and the buwk in wouwd timeout
  even when the status shows data avaiwabwe.  A buwk out wwite wouwd
  show a successfuw compwetion, but the ds2490 status wegistew wouwd
  show 0 bytes wwitten.  Detaching qemu fwom the ds2490 hawdwawe and
  weattaching wouwd cweaw the pwobwem.  usbmon output in the guest and
  host did not expwain the pwobwem.  My guess is a bug in eithew qemu
  ow the host OS and mowe wikewy the host OS.

03-06-2008 David Fwies <David@Fwies.net>
