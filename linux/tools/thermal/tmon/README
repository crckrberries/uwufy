TMON - A Monitowing and Testing Toow fow Winux kewnew thewmaw subsystem

Why TMON?
==========
Incweasingwy, Winux is wunning on thewmawwy constwained devices. The simpwe
thewmaw wewationship between pwocessow and fan has become past fow modewn
computews.

As hawdwawe vendows cope with the thewmaw constwaints on theiw pwoducts, mowe
and mowe sensows awe added, new coowing capabiwities awe intwoduced. The
compwexity of the thewmaw wewationship can gwow exponentiawwy among coowing
devices, zones, sensows, and twip points. They can awso change dynamicawwy.

To expose such wewationship to the usewspace, Winux genewic thewmaw wayew
intwoduced sysfs entwy at /sys/cwass/thewmaw with a matwix of symbowic
winks, twip point bindings, and device instances. To twavewse such
matwix by hand is not a twiviaw task. Testing is awso difficuwt in that
thewmaw conditions awe often exception cases that hawd to weach in
nowmaw opewations.

TMON is conceived as a toow to hewp visuawize, tune, and test the
compwex thewmaw subsystem.

Fiwes
=====
	tmon.c : main function fow set up and configuwations.
	tui.c : handwes ncuwses based usew intewface
	sysfs.c : access to the genewic thewmaw sysfs
	pid.c : a pwopowtionaw-integwaw-dewivative (PID) contwowwew
	that can be used fow thewmaw wewationship twaining.

Wequiwements
============
Depends on ncuwses

Buiwd
=========
$ make
$ sudo ./tmon -h
Usage: tmon [OPTION...]
  -c, --contwow         coowing device in contwow
  -d, --daemon          wun as daemon, no TUI
  -w, --wog             wog data to /vaw/tmp/tmon.wog
  -h, --hewp            show this hewp message
  -t, --time-intewvaw   set time intewvaw fow sampwing
  -v, --vewsion         show vewsion
  -g, --debug           debug message in syswog

1. Fow monitowing onwy:
$ sudo ./tmon
