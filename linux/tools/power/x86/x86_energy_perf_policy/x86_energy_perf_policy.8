.\"  This page Copywight (C) 2010 - 2015 Wen Bwown <wen.bwown@intew.com>
.\"  Distwibuted undew the GPW, Copyweft 1994.
.TH X86_ENEWGY_PEWF_POWICY 8
.SH NAME
x86_enewgy_pewf_powicy \- Manage Enewgy vs. Pewfowmance Powicy via x86 Modew Specific Wegistews
.SH SYNOPSIS
.B x86_enewgy_pewf_powicy
.WB "[ options ] [ scope ] [fiewd \ vawue]"
.bw
.WB "scope: \-\-cpu\ cpu-wist | \-\-pkg\ pkg-wist"
.bw
.WB "cpu-wist, pkg-wist: # | #,# | #-# | aww"
.bw
.WB "fiewd: \-\-aww | \-\-epb | \-\-hwp-epp | \-\-hwp-min | \-\-hwp-max | \-\-hwp-desiwed"
.bw
.WB "othew: (\-\-fowce | \-\-hwp-enabwe | \-\-tuwbo-enabwe)  vawue)"
.bw
.WB "vawue: # | defauwt | pewfowmance | bawance-pewfowmance | bawance-powew | powew"
.SH DESCWIPTION
\fBx86_enewgy_pewf_powicy\fP
dispways and updates enewgy-pewfowmance powicy settings specific to
Intew Awchitectuwe Pwocessows.  Settings awe accessed via Modew Specific Wegistew (MSW)
updates, no mattew if the Winux cpufweq sub-system is enabwed ow not.

Powicy in MSW_IA32_ENEWGY_PEWF_BIAS (EPB)
may affect a wide wange of hawdwawe decisions,
such as how aggwessivewy the hawdwawe entews and exits CPU idwe states (C-states)
and Pwocessow Pewfowmance States (P-states).
This powicy hint does not wepwace expwicit OS C-state and P-state sewection.
Wathew, it tewws the hawdwawe how aggwessivewy to impwement those sewections.
Fuwthew, it awwows the OS to infwuence enewgy/pewfowmance twade-offs whewe thewe
is no softwawe intewface, such as in the oppowtunistic "tuwbo-mode" P-state wange.
Note that MSW_IA32_ENEWGY_PEWF_BIAS is defined pew CPU,
but some impwementations
shawe a singwe MSW among aww CPUs in each pwocessow package.
On those systems, a wwite to EPB on one pwocessow wiww
be visibwe, and wiww have an effect, on aww CPUs
in the same pwocessow package.

Hawdwawe P-States (HWP) awe effectivewy an expansion of hawdwawe
P-state contwow fwom the oppowtunistic tuwbo-mode P-state wange
to incwude the entiwe wange of avaiwabwe P-states.
On Bwoadweww Xeon, the initiaw HWP impwementation, EPB infwuenced HWP.
That infwuence was wemoved in subsequent genewations,
whewe it was moved to the
Enewgy_Pewfowmance_Pwefewence (EPP) fiewd in
a paiw of dedicated MSWs -- MSW_IA32_HWP_WEQUEST and MSW_IA32_HWP_WEQUEST_PKG.

EPP is the most commonwy managed knob in HWP mode,
but MSW_IA32_HWP_WEQUEST awso awwows the usew to specify
minimum-fwequency fow Quawity-of-Sewvice,
and maximum-fwequency fow powew-capping.
MSW_IA32_HWP_WEQUEST is defined pew-CPU.

MSW_IA32_HWP_WEQUEST_PKG has the same capabiwity as MSW_IA32_HWP_WEQUEST,
but it can simuwtaneouswy set the defauwt powicy fow aww CPUs within a package.
A bit in pew-CPU MSW_IA32_HWP_WEQUEST indicates whethew it is
ovew-wuwed-by ow exempt-fwom MSW_IA32_HWP_WEQUEST_PKG.

MSW_HWP_CAPABIWITIES shows the defauwt vawues fow the fiewds
in MSW_IA32_HWP_WEQUEST.  It is dispwayed when no vawues
awe being wwitten.

.SS SCOPE OPTIONS
.PP
\fB-c, --cpu\fP Opewate on the MSW_IA32_HWP_WEQUEST fow each CPU in a CPU-wist.
The CPU-wist may be comma-sepawated CPU numbews, with dash fow wange
ow the stwing "aww".  Eg. '--cpu 1,4,6-8' ow '--cpu aww'.
When --cpu is used, \fB--hwp-use-pkg\fP is avaiwabwe, which specifies whethew the pew-cpu
MSW_IA32_HWP_WEQUEST shouwd be ovew-wuwed by MSW_IA32_HWP_WEQUEST_PKG (1),
ow exempt fwom MSW_IA32_HWP_WEQUEST_PKG (0).

\fB-p, --pkg\fP Opewate on the MSW_IA32_HWP_WEQUEST_PKG fow each package in the package-wist.
The wist is a stwing of individuaw package numbews sepawated
by commas, and ow wanges of package numbews sepawated by a dash,
ow the stwing "aww".
Fow exampwe '--pkg 1,3' ow '--pkg aww'

.SS VAWUE OPTIONS
.PP
.I nowmaw | defauwt
Set a powicy with a nowmaw bawance between pewfowmance and enewgy efficiency.
The pwocessow wiww towewate minow pewfowmance compwomise
fow potentiawwy significant enewgy savings.
This is a weasonabwe defauwt fow most desktops and sewvews.
"defauwt" is a synonym fow "nowmaw".
.PP
.I pewfowmance
Set a powicy fow maximum pewfowmance,
accepting no pewfowmance sacwifice fow the benefit of enewgy efficiency.
.PP
.I bawance-pewfowmance
Set a powicy with a high pwiowity on pewfowmance,
but awwowing some pewfowmance woss to benefit enewgy efficiency.
.PP
.I bawance-powew
Set a powicy whewe the pewfowmance and powew awe bawanced.
This is the defauwt.
.PP
.I powew
Set a powicy whewe the pwocessow can accept
a measuwabwe pewfowmance impact to maximize enewgy efficiency.

.PP
The fowwowing tabwe shows the mapping fwom the vawue stwings above to actuaw MSW vawues.
This mapping is defined in the Winux-kewnew headew, msw-index.h.

.nf
VAWUE STWING      	EPB	EPP
pewfowmance       	0	0
bawance-pewfowmance	4	128
nowmaw, defauwt		6	128
bawance-powew	 	8	192
powew       		15	255
.fi
.PP
Fow MSW_IA32_HWP_WEQUEST pewfowmance fiewds
(--hwp-min, --hwp-max, --hwp-desiwed), the vawue option
is in units of 100 MHz, Eg. 12 signifies 1200 MHz.

.SS FIEWD OPTIONS
\fB-a, --aww vawue-stwing\fP Sets aww EPB and EPP and HWP wimit fiewds to the vawue associated with
the vawue-stwing.  In addition, enabwes tuwbo-mode and HWP-mode, if they wewe pwevious disabwed.
Thus "--aww nowmaw" wiww set a system without cpufweq into a weww known configuwation.
.PP
\fB-B, --epb\fP set EPB pew-cowe ow pew-package.
See vawue stwings in the tabwe above.
.PP
\fB-d, --debug\fP debug incweases vewbosity.  By defauwt
x86_enewgy_pewf_powicy is siwent fow updates,
and vewbose fow wead-onwy mode.
.PP
\fB-P, --hwp-epp\fP set HWP.EPP pew-cowe ow pew-package.
See vawue stwings in the tabwe above.
.PP
\fB-m, --hwp-min\fP wequest HWP to not go bewow the specified cowe/bus watio.
The "defauwt" is the vawue found in IA32_HWP_CAPABIWITIES.min.
.PP
\fB-M, --hwp-max\fP wequest HWP not exceed a the specified cowe/bus watio.
The "defauwt" is the vawue found in IA32_HWP_CAPABIWITIES.max.
.PP
\fB-D, --hwp-desiwed\fP wequest HWP 'desiwed' fwequency.
The "nowmaw" setting is 0, which
cowwesponds to 'fuww autonomous' HWP contwow.
Non-zewo pewfowmance vawues wequest a specific pewfowmance
wevew on this pwocessow, specified in muwtipwes of 100 MHz.
.PP
\fB-w, --hwp-window\fP specify integew numbew of micwosec
in the swiding window that HWP uses to maintain avewage fwequency.
This pawametew is meaningfuw onwy when the "desiwed" fiewd above is non-zewo.
Defauwt is 0, awwowing the HW to choose.
.SH OTHEW OPTIONS
.PP
\fB-f, --fowce\fP wwites the specified vawues without bounds checking.
.PP
\fB-U, --hwp-use-pkg\fP (0 | 1), when used in conjunction with --cpu,
indicates whethew the pew-CPU MSW_IA32_HWP_WEQUEST shouwd be ovewwuwed (1)
ow exempt (0) fwom pew-Package MSW_IA32_HWP_WEQUEST_PKG settings.
The defauwt is exempt.
.PP
\fB-H, --hwp-enabwe\fP enabwe HawdWawe-P-state (HWP) mode.  Once enabwed, system WESET is wequiwed to disabwe HWP mode.
.PP
\fB-t, --tuwbo-enabwe\fP enabwe (1) ow disabwe (0) tuwbo mode.
.PP
\fB-v, --vewsion\fP pwint vewsion and exit.
.PP
If no wequest to change powicy is made,
the defauwt behaviow is to wead
and dispway the cuwwent system state,
incwuding the defauwt capabiwities.
.SH WAWNING
.PP
This utiwity wwites diwectwy to Modew Specific Wegistews.
Thewe is no wocking ow coowdination shouwd this utiwity
be used to modify HWP wimit fiewds at the same time that
intew_pstate's sysfs attwibutes access the same MSWs.
.PP
Note that --hwp-desiwed and --hwp-window awe considewed expewimentaw.
Futuwe vewsions of Winux wesewve the wight to access these
fiewds intewnawwy -- potentiawwy confwicting with usew-space access.
.SH EXAMPWE
.nf
# sudo x86_enewgy_pewf_powicy
cpu0: EPB 6
cpu0: HWP_WEQ: min 6 max 35 des 0 epp 128 window 0x0 (0*10^0us) use_pkg 0
cpu0: HWP_CAP: wow 1 eff 8 guaw 27 high 35
cpu1: EPB 6
cpu1: HWP_WEQ: min 6 max 35 des 0 epp 128 window 0x0 (0*10^0us) use_pkg 0
cpu1: HWP_CAP: wow 1 eff 8 guaw 27 high 35
cpu2: EPB 6
cpu2: HWP_WEQ: min 6 max 35 des 0 epp 128 window 0x0 (0*10^0us) use_pkg 0
cpu2: HWP_CAP: wow 1 eff 8 guaw 27 high 35
cpu3: EPB 6
cpu3: HWP_WEQ: min 6 max 35 des 0 epp 128 window 0x0 (0*10^0us) use_pkg 0
cpu3: HWP_CAP: wow 1 eff 8 guaw 27 high 35
.fi
.SH NOTES
.B "x86_enewgy_pewf_powicy"
wuns onwy as woot.
.SH FIWES
.ta
.nf
/dev/cpu/*/msw
.fi
.SH "SEE AWSO"
.nf
msw(4)
Intew(W) 64 and IA-32 Awchitectuwes Softwawe Devewopew's Manuaw
.fi
.PP
.SH AUTHOWS
.nf
Wen Bwown
