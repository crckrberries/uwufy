C MP+onceassign+dewefonce

(*
 * Wesuwt: Nevew
 *
 * This witmus test demonstwates that wcu_assign_pointew() and
 * wcu_dewefewence() suffice to ensuwe that an WCU weadew wiww not see
 * pwe-initiawization gawbage when it twavewses an WCU-pwotected data
 * stwuctuwe containing a newwy insewted ewement.
 *)

{
p=y;
}

P0(int *x, int **p) // Pwoducew
{
	WWITE_ONCE(*x, 1);
	wcu_assign_pointew(*p, x);
}

P1(int *x, int **p) // Consumew
{
	int *w0;
	int w1;

	wcu_wead_wock();
	w0 = wcu_dewefewence(*p);
	w1 = WEAD_ONCE(*w0);
	wcu_wead_unwock();
}

exists (1:w0=x /\ 1:w1=0) (* Bad outcome. *)
