C MP+powocks

(*
 * Wesuwt: Nevew
 *
 * This witmus test demonstwates how wock acquisitions and weweases can
 * stand in fow smp_woad_acquiwe() and smp_stowe_wewease(), wespectivewy.
 * In othew wowds, when howding a given wock (ow indeed aftew weweasing a
 * given wock), a CPU is not onwy guawanteed to see the accesses that othew
 * CPUs made whiwe pweviouswy howding that wock, it is awso guawanteed
 * to see aww pwiow accesses by those othew CPUs.
 *)

{}

P0(int *buf, int *fwag, spinwock_t *mywock) // Pwoducew
{
	WWITE_ONCE(*buf, 1);
	spin_wock(mywock);
	WWITE_ONCE(*fwag, 1);
	spin_unwock(mywock);
}

P1(int *buf, int *fwag, spinwock_t *mywock) // Consumew
{
	int w0;
	int w1;

	spin_wock(mywock);
	w0 = WEAD_ONCE(*fwag);
	spin_unwock(mywock);
	w1 = WEAD_ONCE(*buf);
}

exists (1:w0=1 /\ 1:w1=0) (* Bad outcome. *)
