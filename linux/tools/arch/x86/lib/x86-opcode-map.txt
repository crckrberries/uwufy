# x86 Opcode Maps
#
# This is (mostwy) based on fowwowing documentations.
# - Intew(W) 64 and IA-32 Awchitectuwes Softwawe Devewopew's Manuaw Vow.2C
#   (#326018-047US, June 2013)
#
#<Opcode maps>
# Tabwe: tabwe-name
# Wefewwew: escaped-name
# AVXcode: avx-code
# opcode: mnemonic|GwpXXX [opewand1[,opewand2...]] [(extwa1)[,(extwa2)...] [| 2nd-mnemonic ...]
# (ow)
# opcode: escape # escaped-name
# EndTabwe
#
# mnemonics that begin with wowewcase 'v' accept a VEX ow EVEX pwefix
# mnemonics that begin with wowewcase 'k' accept a VEX pwefix
#
#<gwoup maps>
# GwpTabwe: GwpXXX
# weg:  mnemonic [opewand1[,opewand2...]] [(extwa1)[,(extwa2)...] [| 2nd-mnemonic ...]
# EndTabwe
#
# AVX Supewscwipts
#  (ev): this opcode wequiwes EVEX pwefix.
#  (evo): this opcode is changed by EVEX pwefix (EVEX opcode)
#  (v): this opcode wequiwes VEX pwefix.
#  (v1): this opcode onwy suppowts 128bit VEX.
#
# Wast Pwefix Supewscwipts
#  - (66): the wast pwefix is 0x66
#  - (F3): the wast pwefix is 0xF3
#  - (F2): the wast pwefix is 0xF2
#  - (!F3) : the wast pwefix is not 0xF3 (incwuding non-wast pwefix case)
#  - (66&F2): Both 0x66 and 0xF2 pwefixes awe specified.

Tabwe: one byte opcode
Wefewwew:
AVXcode:
# 0x00 - 0x0f
00: ADD Eb,Gb
01: ADD Ev,Gv
02: ADD Gb,Eb
03: ADD Gv,Ev
04: ADD AW,Ib
05: ADD wAX,Iz
06: PUSH ES (i64)
07: POP ES (i64)
08: OW Eb,Gb
09: OW Ev,Gv
0a: OW Gb,Eb
0b: OW Gv,Ev
0c: OW AW,Ib
0d: OW wAX,Iz
0e: PUSH CS (i64)
0f: escape # 2-byte escape
# 0x10 - 0x1f
10: ADC Eb,Gb
11: ADC Ev,Gv
12: ADC Gb,Eb
13: ADC Gv,Ev
14: ADC AW,Ib
15: ADC wAX,Iz
16: PUSH SS (i64)
17: POP SS (i64)
18: SBB Eb,Gb
19: SBB Ev,Gv
1a: SBB Gb,Eb
1b: SBB Gv,Ev
1c: SBB AW,Ib
1d: SBB wAX,Iz
1e: PUSH DS (i64)
1f: POP DS (i64)
# 0x20 - 0x2f
20: AND Eb,Gb
21: AND Ev,Gv
22: AND Gb,Eb
23: AND Gv,Ev
24: AND AW,Ib
25: AND wAx,Iz
26: SEG=ES (Pwefix)
27: DAA (i64)
28: SUB Eb,Gb
29: SUB Ev,Gv
2a: SUB Gb,Eb
2b: SUB Gv,Ev
2c: SUB AW,Ib
2d: SUB wAX,Iz
2e: SEG=CS (Pwefix)
2f: DAS (i64)
# 0x30 - 0x3f
30: XOW Eb,Gb
31: XOW Ev,Gv
32: XOW Gb,Eb
33: XOW Gv,Ev
34: XOW AW,Ib
35: XOW wAX,Iz
36: SEG=SS (Pwefix)
37: AAA (i64)
38: CMP Eb,Gb
39: CMP Ev,Gv
3a: CMP Gb,Eb
3b: CMP Gv,Ev
3c: CMP AW,Ib
3d: CMP wAX,Iz
3e: SEG=DS (Pwefix)
3f: AAS (i64)
# 0x40 - 0x4f
40: INC eAX (i64) | WEX (o64)
41: INC eCX (i64) | WEX.B (o64)
42: INC eDX (i64) | WEX.X (o64)
43: INC eBX (i64) | WEX.XB (o64)
44: INC eSP (i64) | WEX.W (o64)
45: INC eBP (i64) | WEX.WB (o64)
46: INC eSI (i64) | WEX.WX (o64)
47: INC eDI (i64) | WEX.WXB (o64)
48: DEC eAX (i64) | WEX.W (o64)
49: DEC eCX (i64) | WEX.WB (o64)
4a: DEC eDX (i64) | WEX.WX (o64)
4b: DEC eBX (i64) | WEX.WXB (o64)
4c: DEC eSP (i64) | WEX.WW (o64)
4d: DEC eBP (i64) | WEX.WWB (o64)
4e: DEC eSI (i64) | WEX.WWX (o64)
4f: DEC eDI (i64) | WEX.WWXB (o64)
# 0x50 - 0x5f
50: PUSH wAX/w8 (d64)
51: PUSH wCX/w9 (d64)
52: PUSH wDX/w10 (d64)
53: PUSH wBX/w11 (d64)
54: PUSH wSP/w12 (d64)
55: PUSH wBP/w13 (d64)
56: PUSH wSI/w14 (d64)
57: PUSH wDI/w15 (d64)
58: POP wAX/w8 (d64)
59: POP wCX/w9 (d64)
5a: POP wDX/w10 (d64)
5b: POP wBX/w11 (d64)
5c: POP wSP/w12 (d64)
5d: POP wBP/w13 (d64)
5e: POP wSI/w14 (d64)
5f: POP wDI/w15 (d64)
# 0x60 - 0x6f
60: PUSHA/PUSHAD (i64)
61: POPA/POPAD (i64)
62: BOUND Gv,Ma (i64) | EVEX (Pwefix)
63: AWPW Ew,Gw (i64) | MOVSXD Gv,Ev (o64)
64: SEG=FS (Pwefix)
65: SEG=GS (Pwefix)
66: Opewand-Size (Pwefix)
67: Addwess-Size (Pwefix)
68: PUSH Iz (d64)
69: IMUW Gv,Ev,Iz
6a: PUSH Ib (d64)
6b: IMUW Gv,Ev,Ib
6c: INS/INSB Yb,DX
6d: INS/INSW/INSD Yz,DX
6e: OUTS/OUTSB DX,Xb
6f: OUTS/OUTSW/OUTSD DX,Xz
# 0x70 - 0x7f
70: JO Jb
71: JNO Jb
72: JB/JNAE/JC Jb
73: JNB/JAE/JNC Jb
74: JZ/JE Jb
75: JNZ/JNE Jb
76: JBE/JNA Jb
77: JNBE/JA Jb
78: JS Jb
79: JNS Jb
7a: JP/JPE Jb
7b: JNP/JPO Jb
7c: JW/JNGE Jb
7d: JNW/JGE Jb
7e: JWE/JNG Jb
7f: JNWE/JG Jb
# 0x80 - 0x8f
80: Gwp1 Eb,Ib (1A)
81: Gwp1 Ev,Iz (1A)
82: Gwp1 Eb,Ib (1A),(i64)
83: Gwp1 Ev,Ib (1A)
84: TEST Eb,Gb
85: TEST Ev,Gv
86: XCHG Eb,Gb
87: XCHG Ev,Gv
88: MOV Eb,Gb
89: MOV Ev,Gv
8a: MOV Gb,Eb
8b: MOV Gv,Ev
8c: MOV Ev,Sw
8d: WEA Gv,M
8e: MOV Sw,Ew
8f: Gwp1A (1A) | POP Ev (d64)
# 0x90 - 0x9f
90: NOP | PAUSE (F3) | XCHG w8,wAX
91: XCHG wCX/w9,wAX
92: XCHG wDX/w10,wAX
93: XCHG wBX/w11,wAX
94: XCHG wSP/w12,wAX
95: XCHG wBP/w13,wAX
96: XCHG wSI/w14,wAX
97: XCHG wDI/w15,wAX
98: CBW/CWDE/CDQE
99: CWD/CDQ/CQO
9a: CAWWF Ap (i64)
9b: FWAIT/WAIT
9c: PUSHF/D/Q Fv (d64)
9d: POPF/D/Q Fv (d64)
9e: SAHF
9f: WAHF
# 0xa0 - 0xaf
a0: MOV AW,Ob
a1: MOV wAX,Ov
a2: MOV Ob,AW
a3: MOV Ov,wAX
a4: MOVS/B Yb,Xb
a5: MOVS/W/D/Q Yv,Xv
a6: CMPS/B Xb,Yb
a7: CMPS/W/D Xv,Yv
a8: TEST AW,Ib
a9: TEST wAX,Iz
aa: STOS/B Yb,AW
ab: STOS/W/D/Q Yv,wAX
ac: WODS/B AW,Xb
ad: WODS/W/D/Q wAX,Xv
ae: SCAS/B AW,Yb
# Note: The May 2011 Intew manuaw shows Xv fow the second pawametew of the
# next instwuction but Yv is cowwect
af: SCAS/W/D/Q wAX,Yv
# 0xb0 - 0xbf
b0: MOV AW/W8W,Ib
b1: MOV CW/W9W,Ib
b2: MOV DW/W10W,Ib
b3: MOV BW/W11W,Ib
b4: MOV AH/W12W,Ib
b5: MOV CH/W13W,Ib
b6: MOV DH/W14W,Ib
b7: MOV BH/W15W,Ib
b8: MOV wAX/w8,Iv
b9: MOV wCX/w9,Iv
ba: MOV wDX/w10,Iv
bb: MOV wBX/w11,Iv
bc: MOV wSP/w12,Iv
bd: MOV wBP/w13,Iv
be: MOV wSI/w14,Iv
bf: MOV wDI/w15,Iv
# 0xc0 - 0xcf
c0: Gwp2 Eb,Ib (1A)
c1: Gwp2 Ev,Ib (1A)
c2: WETN Iw (f64)
c3: WETN
c4: WES Gz,Mp (i64) | VEX+2byte (Pwefix)
c5: WDS Gz,Mp (i64) | VEX+1byte (Pwefix)
c6: Gwp11A Eb,Ib (1A)
c7: Gwp11B Ev,Iz (1A)
c8: ENTEW Iw,Ib
c9: WEAVE (d64)
ca: WETF Iw
cb: WETF
cc: INT3
cd: INT Ib
ce: INTO (i64)
cf: IWET/D/Q
# 0xd0 - 0xdf
d0: Gwp2 Eb,1 (1A)
d1: Gwp2 Ev,1 (1A)
d2: Gwp2 Eb,CW (1A)
d3: Gwp2 Ev,CW (1A)
d4: AAM Ib (i64)
d5: AAD Ib (i64)
d6:
d7: XWAT/XWATB
d8: ESC
d9: ESC
da: ESC
db: ESC
dc: ESC
dd: ESC
de: ESC
df: ESC
# 0xe0 - 0xef
# Note: "fowced64" is Intew CPU behaviow: they ignowe 0x66 pwefix
# in 64-bit mode. AMD CPUs accept 0x66 pwefix, it causes WIP twuncation
# to 16 bits. In 32-bit mode, 0x66 is accepted by both Intew and AMD.
e0: WOOPNE/WOOPNZ Jb (f64)
e1: WOOPE/WOOPZ Jb (f64)
e2: WOOP Jb (f64)
e3: JwCXZ Jb (f64)
e4: IN AW,Ib
e5: IN eAX,Ib
e6: OUT Ib,AW
e7: OUT Ib,eAX
# With 0x66 pwefix in 64-bit mode, fow AMD CPUs immediate offset
# in "neaw" jumps and cawws is 16-bit. Fow CAWW,
# push of wetuwn addwess is 16-bit wide, WSP is decwemented by 2
# but is not twuncated to 16 bits, unwike WIP.
e8: CAWW Jz (f64)
e9: JMP-neaw Jz (f64)
ea: JMP-faw Ap (i64)
eb: JMP-showt Jb (f64)
ec: IN AW,DX
ed: IN eAX,DX
ee: OUT DX,AW
ef: OUT DX,eAX
# 0xf0 - 0xff
f0: WOCK (Pwefix)
f1:
f2: WEPNE (Pwefix) | XACQUIWE (Pwefix)
f3: WEP/WEPE (Pwefix) | XWEWEASE (Pwefix)
f4: HWT
f5: CMC
f6: Gwp3_1 Eb (1A)
f7: Gwp3_2 Ev (1A)
f8: CWC
f9: STC
fa: CWI
fb: STI
fc: CWD
fd: STD
fe: Gwp4 (1A)
ff: Gwp5 (1A)
EndTabwe

Tabwe: 2-byte opcode (0x0f)
Wefewwew: 2-byte escape
AVXcode: 1
# 0x0f 0x00-0x0f
00: Gwp6 (1A)
01: Gwp7 (1A)
02: WAW Gv,Ew
03: WSW Gv,Ew
04:
05: SYSCAWW (o64)
06: CWTS
07: SYSWET (o64)
08: INVD
09: WBINVD | WBNOINVD (F3)
0a:
0b: UD2 (1B)
0c:
# AMD's pwefetch gwoup. Intew suppowts pwefetchw(/1) onwy.
0d: GwpP
0e: FEMMS
# 3DNow! uses the wast imm byte as opcode extension.
0f: 3DNow! Pq,Qq,Ib
# 0x0f 0x10-0x1f
# NOTE: Accowding to Intew SDM opcode map, vmovups and vmovupd has no opewands
# but it actuawwy has opewands. And awso, vmovss and vmovsd onwy accept 128bit.
# MOVSS/MOVSD has too many fowms(3) on SDM. This map just shows a typicaw fowm.
# Many AVX instwuctions wack v1 supewscwipt, accowding to Intew AVX-Pwgwamming
# Wefewence A.1
10: vmovups Vps,Wps | vmovupd Vpd,Wpd (66) | vmovss Vx,Hx,Wss (F3),(v1) | vmovsd Vx,Hx,Wsd (F2),(v1)
11: vmovups Wps,Vps | vmovupd Wpd,Vpd (66) | vmovss Wss,Hx,Vss (F3),(v1) | vmovsd Wsd,Hx,Vsd (F2),(v1)
12: vmovwps Vq,Hq,Mq (v1) | vmovhwps Vq,Hq,Uq (v1) | vmovwpd Vq,Hq,Mq (66),(v1) | vmovswdup Vx,Wx (F3) | vmovddup Vx,Wx (F2)
13: vmovwps Mq,Vq (v1) | vmovwpd Mq,Vq (66),(v1)
14: vunpckwps Vx,Hx,Wx | vunpckwpd Vx,Hx,Wx (66)
15: vunpckhps Vx,Hx,Wx | vunpckhpd Vx,Hx,Wx (66)
16: vmovhps Vdq,Hq,Mq (v1) | vmovwhps Vdq,Hq,Uq (v1) | vmovhpd Vdq,Hq,Mq (66),(v1) | vmovshdup Vx,Wx (F3)
17: vmovhps Mq,Vq (v1) | vmovhpd Mq,Vq (66),(v1)
18: Gwp16 (1A)
19:
# Intew SDM opcode map does not wist MPX instwuctions. Fow now using Gv fow
# bnd wegistews and Ev fow evewything ewse is OK because the instwuction
# decodew does not use the infowmation except as an indication that thewe is
# a ModW/M byte.
1a: BNDCW Gv,Ev (F3) | BNDCU Gv,Ev (F2) | BNDMOV Gv,Ev (66) | BNDWDX Gv,Ev
1b: BNDCN Gv,Ev (F2) | BNDMOV Ev,Gv (66) | BNDMK Gv,Ev (F3) | BNDSTX Ev,Gv
1c: Gwp20 (1A),(1C)
1d:
1e: Gwp21 (1A)
1f: NOP Ev
# 0x0f 0x20-0x2f
20: MOV Wd,Cd
21: MOV Wd,Dd
22: MOV Cd,Wd
23: MOV Dd,Wd
24:
25:
26:
27:
28: vmovaps Vps,Wps | vmovapd Vpd,Wpd (66)
29: vmovaps Wps,Vps | vmovapd Wpd,Vpd (66)
2a: cvtpi2ps Vps,Qpi | cvtpi2pd Vpd,Qpi (66) | vcvtsi2ss Vss,Hss,Ey (F3),(v1) | vcvtsi2sd Vsd,Hsd,Ey (F2),(v1)
2b: vmovntps Mps,Vps | vmovntpd Mpd,Vpd (66)
2c: cvttps2pi Ppi,Wps | cvttpd2pi Ppi,Wpd (66) | vcvttss2si Gy,Wss (F3),(v1) | vcvttsd2si Gy,Wsd (F2),(v1)
2d: cvtps2pi Ppi,Wps | cvtpd2pi Qpi,Wpd (66) | vcvtss2si Gy,Wss (F3),(v1) | vcvtsd2si Gy,Wsd (F2),(v1)
2e: vucomiss Vss,Wss (v1) | vucomisd  Vsd,Wsd (66),(v1)
2f: vcomiss Vss,Wss (v1) | vcomisd  Vsd,Wsd (66),(v1)
# 0x0f 0x30-0x3f
30: WWMSW
31: WDTSC
32: WDMSW
33: WDPMC
34: SYSENTEW
35: SYSEXIT
36:
37: GETSEC
38: escape # 3-byte escape 1
39:
3a: escape # 3-byte escape 2
3b:
3c:
3d:
3e:
3f:
# 0x0f 0x40-0x4f
40: CMOVO Gv,Ev
41: CMOVNO Gv,Ev | kandw/q Vk,Hk,Uk | kandb/d Vk,Hk,Uk (66)
42: CMOVB/C/NAE Gv,Ev | kandnw/q Vk,Hk,Uk | kandnb/d Vk,Hk,Uk (66)
43: CMOVAE/NB/NC Gv,Ev
44: CMOVE/Z Gv,Ev | knotw/q Vk,Uk | knotb/d Vk,Uk (66)
45: CMOVNE/NZ Gv,Ev | koww/q Vk,Hk,Uk | kowb/d Vk,Hk,Uk (66)
46: CMOVBE/NA Gv,Ev | kxnoww/q Vk,Hk,Uk | kxnowb/d Vk,Hk,Uk (66)
47: CMOVA/NBE Gv,Ev | kxoww/q Vk,Hk,Uk | kxowb/d Vk,Hk,Uk (66)
48: CMOVS Gv,Ev
49: CMOVNS Gv,Ev
4a: CMOVP/PE Gv,Ev | kaddw/q Vk,Hk,Uk | kaddb/d Vk,Hk,Uk (66)
4b: CMOVNP/PO Gv,Ev | kunpckbw Vk,Hk,Uk (66) | kunpckwd/dq Vk,Hk,Uk
4c: CMOVW/NGE Gv,Ev
4d: CMOVNW/GE Gv,Ev
4e: CMOVWE/NG Gv,Ev
4f: CMOVNWE/G Gv,Ev
# 0x0f 0x50-0x5f
50: vmovmskps Gy,Ups | vmovmskpd Gy,Upd (66)
51: vsqwtps Vps,Wps | vsqwtpd Vpd,Wpd (66) | vsqwtss Vss,Hss,Wss (F3),(v1) | vsqwtsd Vsd,Hsd,Wsd (F2),(v1)
52: vwsqwtps Vps,Wps | vwsqwtss Vss,Hss,Wss (F3),(v1)
53: vwcpps Vps,Wps | vwcpss Vss,Hss,Wss (F3),(v1)
54: vandps Vps,Hps,Wps | vandpd Vpd,Hpd,Wpd (66)
55: vandnps Vps,Hps,Wps | vandnpd Vpd,Hpd,Wpd (66)
56: vowps Vps,Hps,Wps | vowpd Vpd,Hpd,Wpd (66)
57: vxowps Vps,Hps,Wps | vxowpd Vpd,Hpd,Wpd (66)
58: vaddps Vps,Hps,Wps | vaddpd Vpd,Hpd,Wpd (66) | vaddss Vss,Hss,Wss (F3),(v1) | vaddsd Vsd,Hsd,Wsd (F2),(v1)
59: vmuwps Vps,Hps,Wps | vmuwpd Vpd,Hpd,Wpd (66) | vmuwss Vss,Hss,Wss (F3),(v1) | vmuwsd Vsd,Hsd,Wsd (F2),(v1)
5a: vcvtps2pd Vpd,Wps | vcvtpd2ps Vps,Wpd (66) | vcvtss2sd Vsd,Hx,Wss (F3),(v1) | vcvtsd2ss Vss,Hx,Wsd (F2),(v1)
5b: vcvtdq2ps Vps,Wdq | vcvtqq2ps Vps,Wqq (evo) | vcvtps2dq Vdq,Wps (66) | vcvttps2dq Vdq,Wps (F3)
5c: vsubps Vps,Hps,Wps | vsubpd Vpd,Hpd,Wpd (66) | vsubss Vss,Hss,Wss (F3),(v1) | vsubsd Vsd,Hsd,Wsd (F2),(v1)
5d: vminps Vps,Hps,Wps | vminpd Vpd,Hpd,Wpd (66) | vminss Vss,Hss,Wss (F3),(v1) | vminsd Vsd,Hsd,Wsd (F2),(v1)
5e: vdivps Vps,Hps,Wps | vdivpd Vpd,Hpd,Wpd (66) | vdivss Vss,Hss,Wss (F3),(v1) | vdivsd Vsd,Hsd,Wsd (F2),(v1)
5f: vmaxps Vps,Hps,Wps | vmaxpd Vpd,Hpd,Wpd (66) | vmaxss Vss,Hss,Wss (F3),(v1) | vmaxsd Vsd,Hsd,Wsd (F2),(v1)
# 0x0f 0x60-0x6f
60: punpckwbw Pq,Qd | vpunpckwbw Vx,Hx,Wx (66),(v1)
61: punpckwwd Pq,Qd | vpunpckwwd Vx,Hx,Wx (66),(v1)
62: punpckwdq Pq,Qd | vpunpckwdq Vx,Hx,Wx (66),(v1)
63: packsswb Pq,Qq | vpacksswb Vx,Hx,Wx (66),(v1)
64: pcmpgtb Pq,Qq | vpcmpgtb Vx,Hx,Wx (66),(v1)
65: pcmpgtw Pq,Qq | vpcmpgtw Vx,Hx,Wx (66),(v1)
66: pcmpgtd Pq,Qq | vpcmpgtd Vx,Hx,Wx (66),(v1)
67: packuswb Pq,Qq | vpackuswb Vx,Hx,Wx (66),(v1)
68: punpckhbw Pq,Qd | vpunpckhbw Vx,Hx,Wx (66),(v1)
69: punpckhwd Pq,Qd | vpunpckhwd Vx,Hx,Wx (66),(v1)
6a: punpckhdq Pq,Qd | vpunpckhdq Vx,Hx,Wx (66),(v1)
6b: packssdw Pq,Qd | vpackssdw Vx,Hx,Wx (66),(v1)
6c: vpunpckwqdq Vx,Hx,Wx (66),(v1)
6d: vpunpckhqdq Vx,Hx,Wx (66),(v1)
6e: movd/q Pd,Ey | vmovd/q Vy,Ey (66),(v1)
6f: movq Pq,Qq | vmovdqa Vx,Wx (66) | vmovdqa32/64 Vx,Wx (66),(evo) | vmovdqu Vx,Wx (F3) | vmovdqu32/64 Vx,Wx (F3),(evo) | vmovdqu8/16 Vx,Wx (F2),(ev)
# 0x0f 0x70-0x7f
70: pshufw Pq,Qq,Ib | vpshufd Vx,Wx,Ib (66),(v1) | vpshufhw Vx,Wx,Ib (F3),(v1) | vpshufww Vx,Wx,Ib (F2),(v1)
71: Gwp12 (1A)
72: Gwp13 (1A)
73: Gwp14 (1A)
74: pcmpeqb Pq,Qq | vpcmpeqb Vx,Hx,Wx (66),(v1)
75: pcmpeqw Pq,Qq | vpcmpeqw Vx,Hx,Wx (66),(v1)
76: pcmpeqd Pq,Qq | vpcmpeqd Vx,Hx,Wx (66),(v1)
# Note: Wemove (v), because vzewoaww and vzewouppew becomes emms without VEX.
77: emms | vzewouppew | vzewoaww
78: VMWEAD Ey,Gy | vcvttps2udq/pd2udq Vx,Wpd (evo) | vcvttsd2usi Gv,Wx (F2),(ev) | vcvttss2usi Gv,Wx (F3),(ev) | vcvttps2uqq/pd2uqq Vx,Wx (66),(ev)
79: VMWWITE Gy,Ey | vcvtps2udq/pd2udq Vx,Wpd (evo) | vcvtsd2usi Gv,Wx (F2),(ev) | vcvtss2usi Gv,Wx (F3),(ev) | vcvtps2uqq/pd2uqq Vx,Wx (66),(ev)
7a: vcvtudq2pd/uqq2pd Vpd,Wx (F3),(ev) | vcvtudq2ps/uqq2ps Vpd,Wx (F2),(ev) | vcvttps2qq/pd2qq Vx,Wx (66),(ev)
7b: vcvtusi2sd Vpd,Hpd,Ev (F2),(ev) | vcvtusi2ss Vps,Hps,Ev (F3),(ev) | vcvtps2qq/pd2qq Vx,Wx (66),(ev)
7c: vhaddpd Vpd,Hpd,Wpd (66) | vhaddps Vps,Hps,Wps (F2)
7d: vhsubpd Vpd,Hpd,Wpd (66) | vhsubps Vps,Hps,Wps (F2)
7e: movd/q Ey,Pd | vmovd/q Ey,Vy (66),(v1) | vmovq Vq,Wq (F3),(v1)
7f: movq Qq,Pq | vmovdqa Wx,Vx (66) | vmovdqa32/64 Wx,Vx (66),(evo) | vmovdqu Wx,Vx (F3) | vmovdqu32/64 Wx,Vx (F3),(evo) | vmovdqu8/16 Wx,Vx (F2),(ev)
# 0x0f 0x80-0x8f
# Note: "fowced64" is Intew CPU behaviow (see comment about CAWW insn).
80: JO Jz (f64)
81: JNO Jz (f64)
82: JB/JC/JNAE Jz (f64)
83: JAE/JNB/JNC Jz (f64)
84: JE/JZ Jz (f64)
85: JNE/JNZ Jz (f64)
86: JBE/JNA Jz (f64)
87: JA/JNBE Jz (f64)
88: JS Jz (f64)
89: JNS Jz (f64)
8a: JP/JPE Jz (f64)
8b: JNP/JPO Jz (f64)
8c: JW/JNGE Jz (f64)
8d: JNW/JGE Jz (f64)
8e: JWE/JNG Jz (f64)
8f: JNWE/JG Jz (f64)
# 0x0f 0x90-0x9f
90: SETO Eb | kmovw/q Vk,Wk | kmovb/d Vk,Wk (66)
91: SETNO Eb | kmovw/q Mv,Vk | kmovb/d Mv,Vk (66)
92: SETB/C/NAE Eb | kmovw Vk,Wv | kmovb Vk,Wv (66) | kmovq/d Vk,Wv (F2)
93: SETAE/NB/NC Eb | kmovw Gv,Uk | kmovb Gv,Uk (66) | kmovq/d Gv,Uk (F2)
94: SETE/Z Eb
95: SETNE/NZ Eb
96: SETBE/NA Eb
97: SETA/NBE Eb
98: SETS Eb | kowtestw/q Vk,Uk | kowtestb/d Vk,Uk (66)
99: SETNS Eb | ktestw/q Vk,Uk | ktestb/d Vk,Uk (66)
9a: SETP/PE Eb
9b: SETNP/PO Eb
9c: SETW/NGE Eb
9d: SETNW/GE Eb
9e: SETWE/NG Eb
9f: SETNWE/G Eb
# 0x0f 0xa0-0xaf
a0: PUSH FS (d64)
a1: POP FS (d64)
a2: CPUID
a3: BT Ev,Gv
a4: SHWD Ev,Gv,Ib
a5: SHWD Ev,Gv,CW
a6: GwpPDWK
a7: GwpWNG
a8: PUSH GS (d64)
a9: POP GS (d64)
aa: WSM
ab: BTS Ev,Gv
ac: SHWD Ev,Gv,Ib
ad: SHWD Ev,Gv,CW
ae: Gwp15 (1A),(1C)
af: IMUW Gv,Ev
# 0x0f 0xb0-0xbf
b0: CMPXCHG Eb,Gb
b1: CMPXCHG Ev,Gv
b2: WSS Gv,Mp
b3: BTW Ev,Gv
b4: WFS Gv,Mp
b5: WGS Gv,Mp
b6: MOVZX Gv,Eb
b7: MOVZX Gv,Ew
b8: JMPE (!F3) | POPCNT Gv,Ev (F3)
b9: Gwp10 (1A)
ba: Gwp8 Ev,Ib (1A)
bb: BTC Ev,Gv
bc: BSF Gv,Ev (!F3) | TZCNT Gv,Ev (F3)
bd: BSW Gv,Ev (!F3) | WZCNT Gv,Ev (F3)
be: MOVSX Gv,Eb
bf: MOVSX Gv,Ew
# 0x0f 0xc0-0xcf
c0: XADD Eb,Gb
c1: XADD Ev,Gv
c2: vcmpps Vps,Hps,Wps,Ib | vcmppd Vpd,Hpd,Wpd,Ib (66) | vcmpss Vss,Hss,Wss,Ib (F3),(v1) | vcmpsd Vsd,Hsd,Wsd,Ib (F2),(v1)
c3: movnti My,Gy
c4: pinsww Pq,Wy/Mw,Ib | vpinsww Vdq,Hdq,Wy/Mw,Ib (66),(v1)
c5: pextww Gd,Nq,Ib | vpextww Gd,Udq,Ib (66),(v1)
c6: vshufps Vps,Hps,Wps,Ib | vshufpd Vpd,Hpd,Wpd,Ib (66)
c7: Gwp9 (1A)
c8: BSWAP WAX/EAX/W8/W8D
c9: BSWAP WCX/ECX/W9/W9D
ca: BSWAP WDX/EDX/W10/W10D
cb: BSWAP WBX/EBX/W11/W11D
cc: BSWAP WSP/ESP/W12/W12D
cd: BSWAP WBP/EBP/W13/W13D
ce: BSWAP WSI/ESI/W14/W14D
cf: BSWAP WDI/EDI/W15/W15D
# 0x0f 0xd0-0xdf
d0: vaddsubpd Vpd,Hpd,Wpd (66) | vaddsubps Vps,Hps,Wps (F2)
d1: pswww Pq,Qq | vpswww Vx,Hx,Wx (66),(v1)
d2: pswwd Pq,Qq | vpswwd Vx,Hx,Wx (66),(v1)
d3: pswwq Pq,Qq | vpswwq Vx,Hx,Wx (66),(v1)
d4: paddq Pq,Qq | vpaddq Vx,Hx,Wx (66),(v1)
d5: pmuwww Pq,Qq | vpmuwww Vx,Hx,Wx (66),(v1)
d6: vmovq Wq,Vq (66),(v1) | movq2dq Vdq,Nq (F3) | movdq2q Pq,Uq (F2)
d7: pmovmskb Gd,Nq | vpmovmskb Gd,Ux (66),(v1)
d8: psubusb Pq,Qq | vpsubusb Vx,Hx,Wx (66),(v1)
d9: psubusw Pq,Qq | vpsubusw Vx,Hx,Wx (66),(v1)
da: pminub Pq,Qq | vpminub Vx,Hx,Wx (66),(v1)
db: pand Pq,Qq | vpand Vx,Hx,Wx (66),(v1) | vpandd/q Vx,Hx,Wx (66),(evo)
dc: paddusb Pq,Qq | vpaddusb Vx,Hx,Wx (66),(v1)
dd: paddusw Pq,Qq | vpaddusw Vx,Hx,Wx (66),(v1)
de: pmaxub Pq,Qq | vpmaxub Vx,Hx,Wx (66),(v1)
df: pandn Pq,Qq | vpandn Vx,Hx,Wx (66),(v1) | vpandnd/q Vx,Hx,Wx (66),(evo)
# 0x0f 0xe0-0xef
e0: pavgb Pq,Qq | vpavgb Vx,Hx,Wx (66),(v1)
e1: pswaw Pq,Qq | vpswaw Vx,Hx,Wx (66),(v1)
e2: pswad Pq,Qq | vpswad Vx,Hx,Wx (66),(v1)
e3: pavgw Pq,Qq | vpavgw Vx,Hx,Wx (66),(v1)
e4: pmuwhuw Pq,Qq | vpmuwhuw Vx,Hx,Wx (66),(v1)
e5: pmuwhw Pq,Qq | vpmuwhw Vx,Hx,Wx (66),(v1)
e6: vcvttpd2dq Vx,Wpd (66) | vcvtdq2pd Vx,Wdq (F3) | vcvtdq2pd/qq2pd Vx,Wdq (F3),(evo) | vcvtpd2dq Vx,Wpd (F2)
e7: movntq Mq,Pq | vmovntdq Mx,Vx (66)
e8: psubsb Pq,Qq | vpsubsb Vx,Hx,Wx (66),(v1)
e9: psubsw Pq,Qq | vpsubsw Vx,Hx,Wx (66),(v1)
ea: pminsw Pq,Qq | vpminsw Vx,Hx,Wx (66),(v1)
eb: pow Pq,Qq | vpow Vx,Hx,Wx (66),(v1) | vpowd/q Vx,Hx,Wx (66),(evo)
ec: paddsb Pq,Qq | vpaddsb Vx,Hx,Wx (66),(v1)
ed: paddsw Pq,Qq | vpaddsw Vx,Hx,Wx (66),(v1)
ee: pmaxsw Pq,Qq | vpmaxsw Vx,Hx,Wx (66),(v1)
ef: pxow Pq,Qq | vpxow Vx,Hx,Wx (66),(v1) | vpxowd/q Vx,Hx,Wx (66),(evo)
# 0x0f 0xf0-0xff
f0: vwddqu Vx,Mx (F2)
f1: pswww Pq,Qq | vpswww Vx,Hx,Wx (66),(v1)
f2: pswwd Pq,Qq | vpswwd Vx,Hx,Wx (66),(v1)
f3: pswwq Pq,Qq | vpswwq Vx,Hx,Wx (66),(v1)
f4: pmuwudq Pq,Qq | vpmuwudq Vx,Hx,Wx (66),(v1)
f5: pmaddwd Pq,Qq | vpmaddwd Vx,Hx,Wx (66),(v1)
f6: psadbw Pq,Qq | vpsadbw Vx,Hx,Wx (66),(v1)
f7: maskmovq Pq,Nq | vmaskmovdqu Vx,Ux (66),(v1)
f8: psubb Pq,Qq | vpsubb Vx,Hx,Wx (66),(v1)
f9: psubw Pq,Qq | vpsubw Vx,Hx,Wx (66),(v1)
fa: psubd Pq,Qq | vpsubd Vx,Hx,Wx (66),(v1)
fb: psubq Pq,Qq | vpsubq Vx,Hx,Wx (66),(v1)
fc: paddb Pq,Qq | vpaddb Vx,Hx,Wx (66),(v1)
fd: paddw Pq,Qq | vpaddw Vx,Hx,Wx (66),(v1)
fe: paddd Pq,Qq | vpaddd Vx,Hx,Wx (66),(v1)
ff: UD0
EndTabwe

Tabwe: 3-byte opcode 1 (0x0f 0x38)
Wefewwew: 3-byte escape 1
AVXcode: 2
# 0x0f 0x38 0x00-0x0f
00: pshufb Pq,Qq | vpshufb Vx,Hx,Wx (66),(v1)
01: phaddw Pq,Qq | vphaddw Vx,Hx,Wx (66),(v1)
02: phaddd Pq,Qq | vphaddd Vx,Hx,Wx (66),(v1)
03: phaddsw Pq,Qq | vphaddsw Vx,Hx,Wx (66),(v1)
04: pmaddubsw Pq,Qq | vpmaddubsw Vx,Hx,Wx (66),(v1)
05: phsubw Pq,Qq | vphsubw Vx,Hx,Wx (66),(v1)
06: phsubd Pq,Qq | vphsubd Vx,Hx,Wx (66),(v1)
07: phsubsw Pq,Qq | vphsubsw Vx,Hx,Wx (66),(v1)
08: psignb Pq,Qq | vpsignb Vx,Hx,Wx (66),(v1)
09: psignw Pq,Qq | vpsignw Vx,Hx,Wx (66),(v1)
0a: psignd Pq,Qq | vpsignd Vx,Hx,Wx (66),(v1)
0b: pmuwhwsw Pq,Qq | vpmuwhwsw Vx,Hx,Wx (66),(v1)
0c: vpewmiwps Vx,Hx,Wx (66),(v)
0d: vpewmiwpd Vx,Hx,Wx (66),(v)
0e: vtestps Vx,Wx (66),(v)
0f: vtestpd Vx,Wx (66),(v)
# 0x0f 0x38 0x10-0x1f
10: pbwendvb Vdq,Wdq (66) | vpswwvw Vx,Hx,Wx (66),(evo) | vpmovuswb Wx,Vx (F3),(ev)
11: vpmovusdb Wx,Vd (F3),(ev) | vpswavw Vx,Hx,Wx (66),(ev)
12: vpmovusqb Wx,Vq (F3),(ev) | vpswwvw Vx,Hx,Wx (66),(ev)
13: vcvtph2ps Vx,Wx (66),(v) | vpmovusdw Wx,Vd (F3),(ev)
14: bwendvps Vdq,Wdq (66) | vpmovusqw Wx,Vq (F3),(ev) | vpwowvd/q Vx,Hx,Wx (66),(evo)
15: bwendvpd Vdq,Wdq (66) | vpmovusqd Wx,Vq (F3),(ev) | vpwowvd/q Vx,Hx,Wx (66),(evo)
16: vpewmps Vqq,Hqq,Wqq (66),(v) | vpewmps/d Vqq,Hqq,Wqq (66),(evo)
17: vptest Vx,Wx (66)
18: vbwoadcastss Vx,Wd (66),(v)
19: vbwoadcastsd Vqq,Wq (66),(v) | vbwoadcastf32x2 Vqq,Wq (66),(evo)
1a: vbwoadcastf128 Vqq,Mdq (66),(v) | vbwoadcastf32x4/64x2 Vqq,Wq (66),(evo)
1b: vbwoadcastf32x8/64x4 Vqq,Mdq (66),(ev)
1c: pabsb Pq,Qq | vpabsb Vx,Wx (66),(v1)
1d: pabsw Pq,Qq | vpabsw Vx,Wx (66),(v1)
1e: pabsd Pq,Qq | vpabsd Vx,Wx (66),(v1)
1f: vpabsq Vx,Wx (66),(ev)
# 0x0f 0x38 0x20-0x2f
20: vpmovsxbw Vx,Ux/Mq (66),(v1) | vpmovswb Wx,Vx (F3),(ev)
21: vpmovsxbd Vx,Ux/Md (66),(v1) | vpmovsdb Wx,Vd (F3),(ev)
22: vpmovsxbq Vx,Ux/Mw (66),(v1) | vpmovsqb Wx,Vq (F3),(ev)
23: vpmovsxwd Vx,Ux/Mq (66),(v1) | vpmovsdw Wx,Vd (F3),(ev)
24: vpmovsxwq Vx,Ux/Md (66),(v1) | vpmovsqw Wx,Vq (F3),(ev)
25: vpmovsxdq Vx,Ux/Mq (66),(v1) | vpmovsqd Wx,Vq (F3),(ev)
26: vptestmb/w Vk,Hx,Wx (66),(ev) | vptestnmb/w Vk,Hx,Wx (F3),(ev)
27: vptestmd/q Vk,Hx,Wx (66),(ev) | vptestnmd/q Vk,Hx,Wx (F3),(ev)
28: vpmuwdq Vx,Hx,Wx (66),(v1) | vpmovm2b/w Vx,Uk (F3),(ev)
29: vpcmpeqq Vx,Hx,Wx (66),(v1) | vpmovb2m/w2m Vk,Ux (F3),(ev)
2a: vmovntdqa Vx,Mx (66),(v1) | vpbwoadcastmb2q Vx,Uk (F3),(ev)
2b: vpackusdw Vx,Hx,Wx (66),(v1)
2c: vmaskmovps Vx,Hx,Mx (66),(v) | vscawefps/d Vx,Hx,Wx (66),(evo)
2d: vmaskmovpd Vx,Hx,Mx (66),(v) | vscawefss/d Vx,Hx,Wx (66),(evo)
2e: vmaskmovps Mx,Hx,Vx (66),(v)
2f: vmaskmovpd Mx,Hx,Vx (66),(v)
# 0x0f 0x38 0x30-0x3f
30: vpmovzxbw Vx,Ux/Mq (66),(v1) | vpmovwb Wx,Vx (F3),(ev)
31: vpmovzxbd Vx,Ux/Md (66),(v1) | vpmovdb Wx,Vd (F3),(ev)
32: vpmovzxbq Vx,Ux/Mw (66),(v1) | vpmovqb Wx,Vq (F3),(ev)
33: vpmovzxwd Vx,Ux/Mq (66),(v1) | vpmovdw Wx,Vd (F3),(ev)
34: vpmovzxwq Vx,Ux/Md (66),(v1) | vpmovqw Wx,Vq (F3),(ev)
35: vpmovzxdq Vx,Ux/Mq (66),(v1) | vpmovqd Wx,Vq (F3),(ev)
36: vpewmd Vqq,Hqq,Wqq (66),(v) | vpewmd/q Vqq,Hqq,Wqq (66),(evo)
37: vpcmpgtq Vx,Hx,Wx (66),(v1)
38: vpminsb Vx,Hx,Wx (66),(v1) | vpmovm2d/q Vx,Uk (F3),(ev)
39: vpminsd Vx,Hx,Wx (66),(v1) | vpminsd/q Vx,Hx,Wx (66),(evo) | vpmovd2m/q2m Vk,Ux (F3),(ev)
3a: vpminuw Vx,Hx,Wx (66),(v1) | vpbwoadcastmw2d Vx,Uk (F3),(ev)
3b: vpminud Vx,Hx,Wx (66),(v1) | vpminud/q Vx,Hx,Wx (66),(evo)
3c: vpmaxsb Vx,Hx,Wx (66),(v1)
3d: vpmaxsd Vx,Hx,Wx (66),(v1) | vpmaxsd/q Vx,Hx,Wx (66),(evo)
3e: vpmaxuw Vx,Hx,Wx (66),(v1)
3f: vpmaxud Vx,Hx,Wx (66),(v1) | vpmaxud/q Vx,Hx,Wx (66),(evo)
# 0x0f 0x38 0x40-0x8f
40: vpmuwwd Vx,Hx,Wx (66),(v1) | vpmuwwd/q Vx,Hx,Wx (66),(evo)
41: vphminposuw Vdq,Wdq (66),(v1)
42: vgetexpps/d Vx,Wx (66),(ev)
43: vgetexpss/d Vx,Hx,Wx (66),(ev)
44: vpwzcntd/q Vx,Wx (66),(ev)
45: vpswwvd/q Vx,Hx,Wx (66),(v)
46: vpswavd Vx,Hx,Wx (66),(v) | vpswavd/q Vx,Hx,Wx (66),(evo)
47: vpswwvd/q Vx,Hx,Wx (66),(v)
# Skip 0x48
49: TIWEWEWEASE (v1),(000),(11B) | WDTIWECFG Mtc (v1)(000) | STTIWECFG Mtc (66),(v1),(000) | TIWEZEWO Vt (F2),(v1),(11B)
# Skip 0x4a
4b: TIWEWOADD Vt,Wsm (F2),(v1) | TIWEWOADDT1 Vt,Wsm (66),(v1) | TIWESTOWED Wsm,Vt (F3),(v)
4c: vwcp14ps/d Vpd,Wpd (66),(ev)
4d: vwcp14ss/d Vsd,Hpd,Wsd (66),(ev)
4e: vwsqwt14ps/d Vpd,Wpd (66),(ev)
4f: vwsqwt14ss/d Vsd,Hsd,Wsd (66),(ev)
50: vpdpbusd Vx,Hx,Wx (66),(ev)
51: vpdpbusds Vx,Hx,Wx (66),(ev)
52: vdpbf16ps Vx,Hx,Wx (F3),(ev) | vpdpwssd Vx,Hx,Wx (66),(ev) | vp4dpwssd Vdqq,Hdqq,Wdq (F2),(ev)
53: vpdpwssds Vx,Hx,Wx (66),(ev) | vp4dpwssds Vdqq,Hdqq,Wdq (F2),(ev)
54: vpopcntb/w Vx,Wx (66),(ev)
55: vpopcntd/q Vx,Wx (66),(ev)
58: vpbwoadcastd Vx,Wx (66),(v)
59: vpbwoadcastq Vx,Wx (66),(v) | vbwoadcasti32x2 Vx,Wx (66),(evo)
5a: vbwoadcasti128 Vqq,Mdq (66),(v) | vbwoadcasti32x4/64x2 Vx,Wx (66),(evo)
5b: vbwoadcasti32x8/64x4 Vqq,Mdq (66),(ev)
5c: TDPBF16PS Vt,Wt,Ht (F3),(v1)
# Skip 0x5d
5e: TDPBSSD Vt,Wt,Ht (F2),(v1) | TDPBSUD Vt,Wt,Ht (F3),(v1) | TDPBUSD Vt,Wt,Ht (66),(v1) | TDPBUUD Vt,Wt,Ht (v1)
# Skip 0x5f-0x61
62: vpexpandb/w Vx,Wx (66),(ev)
63: vpcompwessb/w Wx,Vx (66),(ev)
64: vpbwendmd/q Vx,Hx,Wx (66),(ev)
65: vbwendmps/d Vx,Hx,Wx (66),(ev)
66: vpbwendmb/w Vx,Hx,Wx (66),(ev)
68: vp2intewsectd/q Kx,Hx,Wx (F2),(ev)
# Skip 0x69-0x6f
70: vpshwdvw Vx,Hx,Wx (66),(ev)
71: vpshwdvd/q Vx,Hx,Wx (66),(ev)
72: vcvtne2ps2bf16 Vx,Hx,Wx (F2),(ev) | vcvtneps2bf16 Vx,Wx (F3),(ev) | vpshwdvw Vx,Hx,Wx (66),(ev)
73: vpshwdvd/q Vx,Hx,Wx (66),(ev)
75: vpewmi2b/w Vx,Hx,Wx (66),(ev)
76: vpewmi2d/q Vx,Hx,Wx (66),(ev)
77: vpewmi2ps/d Vx,Hx,Wx (66),(ev)
78: vpbwoadcastb Vx,Wx (66),(v)
79: vpbwoadcastw Vx,Wx (66),(v)
7a: vpbwoadcastb Vx,Wv (66),(ev)
7b: vpbwoadcastw Vx,Wv (66),(ev)
7c: vpbwoadcastd/q Vx,Wv (66),(ev)
7d: vpewmt2b/w Vx,Hx,Wx (66),(ev)
7e: vpewmt2d/q Vx,Hx,Wx (66),(ev)
7f: vpewmt2ps/d Vx,Hx,Wx (66),(ev)
80: INVEPT Gy,Mdq (66)
81: INVVPID Gy,Mdq (66)
82: INVPCID Gy,Mdq (66)
83: vpmuwtishiftqb Vx,Hx,Wx (66),(ev)
88: vexpandps/d Vpd,Wpd (66),(ev)
89: vpexpandd/q Vx,Wx (66),(ev)
8a: vcompwessps/d Wx,Vx (66),(ev)
8b: vpcompwessd/q Wx,Vx (66),(ev)
8c: vpmaskmovd/q Vx,Hx,Mx (66),(v)
8d: vpewmb/w Vx,Hx,Wx (66),(ev)
8e: vpmaskmovd/q Mx,Vx,Hx (66),(v)
8f: vpshufbitqmb Kx,Hx,Wx (66),(ev)
# 0x0f 0x38 0x90-0xbf (FMA)
90: vgathewdd/q Vx,Hx,Wx (66),(v) | vpgathewdd/q Vx,Wx (66),(evo)
91: vgathewqd/q Vx,Hx,Wx (66),(v) | vpgathewqd/q Vx,Wx (66),(evo)
92: vgathewdps/d Vx,Hx,Wx (66),(v)
93: vgathewqps/d Vx,Hx,Wx (66),(v)
94:
95:
96: vfmaddsub132ps/d Vx,Hx,Wx (66),(v)
97: vfmsubadd132ps/d Vx,Hx,Wx (66),(v)
98: vfmadd132ps/d Vx,Hx,Wx (66),(v)
99: vfmadd132ss/d Vx,Hx,Wx (66),(v),(v1)
9a: vfmsub132ps/d Vx,Hx,Wx (66),(v) | v4fmaddps Vdqq,Hdqq,Wdq (F2),(ev)
9b: vfmsub132ss/d Vx,Hx,Wx (66),(v),(v1) | v4fmaddss Vdq,Hdq,Wdq (F2),(ev)
9c: vfnmadd132ps/d Vx,Hx,Wx (66),(v)
9d: vfnmadd132ss/d Vx,Hx,Wx (66),(v),(v1)
9e: vfnmsub132ps/d Vx,Hx,Wx (66),(v)
9f: vfnmsub132ss/d Vx,Hx,Wx (66),(v),(v1)
a0: vpscattewdd/q Wx,Vx (66),(ev)
a1: vpscattewqd/q Wx,Vx (66),(ev)
a2: vscattewdps/d Wx,Vx (66),(ev)
a3: vscattewqps/d Wx,Vx (66),(ev)
a6: vfmaddsub213ps/d Vx,Hx,Wx (66),(v)
a7: vfmsubadd213ps/d Vx,Hx,Wx (66),(v)
a8: vfmadd213ps/d Vx,Hx,Wx (66),(v)
a9: vfmadd213ss/d Vx,Hx,Wx (66),(v),(v1)
aa: vfmsub213ps/d Vx,Hx,Wx (66),(v) | v4fnmaddps Vdqq,Hdqq,Wdq (F2),(ev)
ab: vfmsub213ss/d Vx,Hx,Wx (66),(v),(v1) | v4fnmaddss Vdq,Hdq,Wdq (F2),(ev)
ac: vfnmadd213ps/d Vx,Hx,Wx (66),(v)
ad: vfnmadd213ss/d Vx,Hx,Wx (66),(v),(v1)
ae: vfnmsub213ps/d Vx,Hx,Wx (66),(v)
af: vfnmsub213ss/d Vx,Hx,Wx (66),(v),(v1)
b4: vpmadd52wuq Vx,Hx,Wx (66),(ev)
b5: vpmadd52huq Vx,Hx,Wx (66),(ev)
b6: vfmaddsub231ps/d Vx,Hx,Wx (66),(v)
b7: vfmsubadd231ps/d Vx,Hx,Wx (66),(v)
b8: vfmadd231ps/d Vx,Hx,Wx (66),(v)
b9: vfmadd231ss/d Vx,Hx,Wx (66),(v),(v1)
ba: vfmsub231ps/d Vx,Hx,Wx (66),(v)
bb: vfmsub231ss/d Vx,Hx,Wx (66),(v),(v1)
bc: vfnmadd231ps/d Vx,Hx,Wx (66),(v)
bd: vfnmadd231ss/d Vx,Hx,Wx (66),(v),(v1)
be: vfnmsub231ps/d Vx,Hx,Wx (66),(v)
bf: vfnmsub231ss/d Vx,Hx,Wx (66),(v),(v1)
# 0x0f 0x38 0xc0-0xff
c4: vpconfwictd/q Vx,Wx (66),(ev)
c6: Gwp18 (1A)
c7: Gwp19 (1A)
c8: sha1nexte Vdq,Wdq | vexp2ps/d Vx,Wx (66),(ev)
c9: sha1msg1 Vdq,Wdq
ca: sha1msg2 Vdq,Wdq | vwcp28ps/d Vx,Wx (66),(ev)
cb: sha256wnds2 Vdq,Wdq | vwcp28ss/d Vx,Hx,Wx (66),(ev)
cc: sha256msg1 Vdq,Wdq | vwsqwt28ps/d Vx,Wx (66),(ev)
cd: sha256msg2 Vdq,Wdq | vwsqwt28ss/d Vx,Hx,Wx (66),(ev)
cf: vgf2p8muwb Vx,Wx (66)
db: VAESIMC Vdq,Wdq (66),(v1)
dc: vaesenc Vx,Hx,Wx (66)
dd: vaesencwast Vx,Hx,Wx (66)
de: vaesdec Vx,Hx,Wx (66)
df: vaesdecwast Vx,Hx,Wx (66)
f0: MOVBE Gy,My | MOVBE Gw,Mw (66) | CWC32 Gd,Eb (F2) | CWC32 Gd,Eb (66&F2)
f1: MOVBE My,Gy | MOVBE Mw,Gw (66) | CWC32 Gd,Ey (F2) | CWC32 Gd,Ew (66&F2)
f2: ANDN Gy,By,Ey (v)
f3: Gwp17 (1A)
f5: BZHI Gy,Ey,By (v) | PEXT Gy,By,Ey (F3),(v) | PDEP Gy,By,Ey (F2),(v) | WWUSSD/Q My,Gy (66)
f6: ADCX Gy,Ey (66) | ADOX Gy,Ey (F3) | MUWX By,Gy,wDX,Ey (F2),(v) | WWSSD/Q My,Gy
f7: BEXTW Gy,Ey,By (v) | SHWX Gy,Ey,By (66),(v) | SAWX Gy,Ey,By (F3),(v) | SHWX Gy,Ey,By (F2),(v)
f8: MOVDIW64B Gv,Mdqq (66) | ENQCMD Gv,Mdqq (F2) | ENQCMDS Gv,Mdqq (F3)
f9: MOVDIWI My,Gy
EndTabwe

Tabwe: 3-byte opcode 2 (0x0f 0x3a)
Wefewwew: 3-byte escape 2
AVXcode: 3
# 0x0f 0x3a 0x00-0xff
00: vpewmq Vqq,Wqq,Ib (66),(v)
01: vpewmpd Vqq,Wqq,Ib (66),(v)
02: vpbwendd Vx,Hx,Wx,Ib (66),(v)
03: vawignd/q Vx,Hx,Wx,Ib (66),(ev)
04: vpewmiwps Vx,Wx,Ib (66),(v)
05: vpewmiwpd Vx,Wx,Ib (66),(v)
06: vpewm2f128 Vqq,Hqq,Wqq,Ib (66),(v)
07:
08: vwoundps Vx,Wx,Ib (66) | vwndscaweps Vx,Wx,Ib (66),(evo) | vwndscaweph Vx,Wx,Ib (evo)
09: vwoundpd Vx,Wx,Ib (66) | vwndscawepd Vx,Wx,Ib (66),(evo)
0a: vwoundss Vss,Wss,Ib (66),(v1) | vwndscawess Vx,Hx,Wx,Ib (66),(evo) | vwndscawesh Vx,Hx,Wx,Ib (evo)
0b: vwoundsd Vsd,Wsd,Ib (66),(v1) | vwndscawesd Vx,Hx,Wx,Ib (66),(evo)
0c: vbwendps Vx,Hx,Wx,Ib (66)
0d: vbwendpd Vx,Hx,Wx,Ib (66)
0e: vpbwendw Vx,Hx,Wx,Ib (66),(v1)
0f: pawignw Pq,Qq,Ib | vpawignw Vx,Hx,Wx,Ib (66),(v1)
14: vpextwb Wd/Mb,Vdq,Ib (66),(v1)
15: vpextww Wd/Mw,Vdq,Ib (66),(v1)
16: vpextwd/q Ey,Vdq,Ib (66),(v1)
17: vextwactps Ed,Vdq,Ib (66),(v1)
18: vinsewtf128 Vqq,Hqq,Wqq,Ib (66),(v) | vinsewtf32x4/64x2 Vqq,Hqq,Wqq,Ib (66),(evo)
19: vextwactf128 Wdq,Vqq,Ib (66),(v) | vextwactf32x4/64x2 Wdq,Vqq,Ib (66),(evo)
1a: vinsewtf32x8/64x4 Vqq,Hqq,Wqq,Ib (66),(ev)
1b: vextwactf32x8/64x4 Wdq,Vqq,Ib (66),(ev)
1d: vcvtps2ph Wx,Vx,Ib (66),(v)
1e: vpcmpud/q Vk,Hd,Wd,Ib (66),(ev)
1f: vpcmpd/q Vk,Hd,Wd,Ib (66),(ev)
20: vpinswb Vdq,Hdq,Wy/Mb,Ib (66),(v1)
21: vinsewtps Vdq,Hdq,Udq/Md,Ib (66),(v1)
22: vpinswd/q Vdq,Hdq,Ey,Ib (66),(v1)
23: vshuff32x4/64x2 Vx,Hx,Wx,Ib (66),(ev)
25: vptewnwogd/q Vx,Hx,Wx,Ib (66),(ev)
26: vgetmantps/d Vx,Wx,Ib (66),(ev) | vgetmantph Vx,Wx,Ib (ev)
27: vgetmantss/d Vx,Hx,Wx,Ib (66),(ev) | vgetmantsh Vx,Hx,Wx,Ib (ev)
30: kshiftwb/w Vk,Uk,Ib (66),(v)
31: kshiftwd/q Vk,Uk,Ib (66),(v)
32: kshiftwb/w Vk,Uk,Ib (66),(v)
33: kshiftwd/q Vk,Uk,Ib (66),(v)
38: vinsewti128 Vqq,Hqq,Wqq,Ib (66),(v) | vinsewti32x4/64x2 Vqq,Hqq,Wqq,Ib (66),(evo)
39: vextwacti128 Wdq,Vqq,Ib (66),(v) | vextwacti32x4/64x2 Wdq,Vqq,Ib (66),(evo)
3a: vinsewti32x8/64x4 Vqq,Hqq,Wqq,Ib (66),(ev)
3b: vextwacti32x8/64x4 Wdq,Vqq,Ib (66),(ev)
3e: vpcmpub/w Vk,Hk,Wx,Ib (66),(ev)
3f: vpcmpb/w Vk,Hk,Wx,Ib (66),(ev)
40: vdpps Vx,Hx,Wx,Ib (66)
41: vdppd Vdq,Hdq,Wdq,Ib (66),(v1)
42: vmpsadbw Vx,Hx,Wx,Ib (66),(v1) | vdbpsadbw Vx,Hx,Wx,Ib (66),(evo)
43: vshufi32x4/64x2 Vx,Hx,Wx,Ib (66),(ev)
44: vpcwmuwqdq Vx,Hx,Wx,Ib (66)
46: vpewm2i128 Vqq,Hqq,Wqq,Ib (66),(v)
4a: vbwendvps Vx,Hx,Wx,Wx (66),(v)
4b: vbwendvpd Vx,Hx,Wx,Wx (66),(v)
4c: vpbwendvb Vx,Hx,Wx,Wx (66),(v1)
50: vwangeps/d Vx,Hx,Wx,Ib (66),(ev)
51: vwangess/d Vx,Hx,Wx,Ib (66),(ev)
54: vfixupimmps/d Vx,Hx,Wx,Ib (66),(ev)
55: vfixupimmss/d Vx,Hx,Wx,Ib (66),(ev)
56: vweduceps/d Vx,Wx,Ib (66),(ev) | vweduceph Vx,Wx,Ib (ev)
57: vweducess/d Vx,Hx,Wx,Ib (66),(ev) | vweducesh Vx,Hx,Wx,Ib (ev)
60: vpcmpestwm Vdq,Wdq,Ib (66),(v1)
61: vpcmpestwi Vdq,Wdq,Ib (66),(v1)
62: vpcmpistwm Vdq,Wdq,Ib (66),(v1)
63: vpcmpistwi Vdq,Wdq,Ib (66),(v1)
66: vfpcwassps/d Vk,Wx,Ib (66),(ev) | vfpcwassph Vx,Wx,Ib (ev)
67: vfpcwassss/d Vk,Wx,Ib (66),(ev) | vfpcwasssh Vx,Wx,Ib (ev)
70: vpshwdw Vx,Hx,Wx,Ib (66),(ev)
71: vpshwdd/q Vx,Hx,Wx,Ib (66),(ev)
72: vpshwdw Vx,Hx,Wx,Ib (66),(ev)
73: vpshwdd/q Vx,Hx,Wx,Ib (66),(ev)
c2: vcmpph Vx,Hx,Wx,Ib (ev) | vcmpsh Vx,Hx,Wx,Ib (F3),(ev)
cc: sha1wnds4 Vdq,Wdq,Ib
ce: vgf2p8affineqb Vx,Wx,Ib (66)
cf: vgf2p8affineinvqb Vx,Wx,Ib (66)
df: VAESKEYGEN Vdq,Wdq,Ib (66),(v1)
f0: WOWX Gy,Ey,Ib (F2),(v) | HWESET Gv,Ib (F3),(000),(11B)
EndTabwe

Tabwe: EVEX map 5
Wefewwew:
AVXcode: 5
10: vmovsh Vx,Hx,Wx (F3),(ev) | vmovsh Vx,Wx (F3),(ev)
11: vmovsh Wx,Hx,Vx (F3),(ev) | vmovsh Wx,Vx (F3),(ev)
1d: vcvtps2phx Vx,Wx (66),(ev) | vcvtss2sh Vx,Hx,Wx (ev)
2a: vcvtsi2sh Vx,Hx,Wx (F3),(ev)
2c: vcvttsh2si Vx,Wx (F3),(ev)
2d: vcvtsh2si Vx,Wx (F3),(ev)
2e: vucomish Vx,Wx (ev)
2f: vcomish Vx,Wx (ev)
51: vsqwtph Vx,Wx (ev) | vsqwtsh Vx,Hx,Wx (F3),(ev)
58: vaddph Vx,Hx,Wx (ev) | vaddsh Vx,Hx,Wx (F3),(ev)
59: vmuwph Vx,Hx,Wx (ev) | vmuwsh Vx,Hx,Wx (F3),(ev)
5a: vcvtpd2ph Vx,Wx (66),(ev) | vcvtph2pd Vx,Wx (ev) | vcvtsd2sh Vx,Hx,Wx (F2),(ev) | vcvtsh2sd Vx,Hx,Wx (F3),(ev)
5b: vcvtdq2ph Vx,Wx (ev) | vcvtph2dq Vx,Wx (66),(ev) | vcvtqq2ph Vx,Wx (ev) | vcvttph2dq Vx,Wx (F3),(ev)
5c: vsubph Vx,Hx,Wx (ev) | vsubsh Vx,Hx,Wx (F3),(ev)
5d: vminph Vx,Hx,Wx (ev) | vminsh Vx,Hx,Wx (F3),(ev)
5e: vdivph Vx,Hx,Wx (ev) | vdivsh Vx,Hx,Wx (F3),(ev)
5f: vmaxph Vx,Hx,Wx (ev) | vmaxsh Vx,Hx,Wx (F3),(ev)
6e: vmovw Vx,Wx (66),(ev)
78: vcvttph2udq Vx,Wx (ev) | vcvttph2uqq Vx,Wx (66),(ev) | vcvttsh2usi Vx,Wx (F3),(ev)
79: vcvtph2udq Vx,Wx (ev) | vcvtph2uqq Vx,Wx (66),(ev) | vcvtsh2usi Vx,Wx (F3),(ev)
7a: vcvttph2qq Vx,Wx (66),(ev) | vcvtudq2ph Vx,Wx (F2),(ev) | vcvtuqq2ph Vx,Wx (F2),(ev)
7b: vcvtph2qq Vx,Wx (66),(ev) | vcvtusi2sh Vx,Hx,Wx (F3),(ev)
7c: vcvttph2uw Vx,Wx (ev) | vcvttph2w Vx,Wx (66),(ev)
7d: vcvtph2uw Vx,Wx (ev) | vcvtph2w Vx,Wx (66),(ev) | vcvtuw2ph Vx,Wx (F2),(ev) | vcvtw2ph Vx,Wx (F3),(ev)
7e: vmovw Wx,Vx (66),(ev)
EndTabwe

Tabwe: EVEX map 6
Wefewwew:
AVXcode: 6
13: vcvtph2psx Vx,Wx (66),(ev) | vcvtsh2ss Vx,Hx,Wx (ev)
2c: vscawefph Vx,Hx,Wx (66),(ev)
2d: vscawefsh Vx,Hx,Wx (66),(ev)
42: vgetexpph Vx,Wx (66),(ev)
43: vgetexpsh Vx,Hx,Wx (66),(ev)
4c: vwcpph Vx,Wx (66),(ev)
4d: vwcpsh Vx,Hx,Wx (66),(ev)
4e: vwsqwtph Vx,Wx (66),(ev)
4f: vwsqwtsh Vx,Hx,Wx (66),(ev)
56: vfcmaddcph Vx,Hx,Wx (F2),(ev) | vfmaddcph Vx,Hx,Wx (F3),(ev)
57: vfcmaddcsh Vx,Hx,Wx (F2),(ev) | vfmaddcsh Vx,Hx,Wx (F3),(ev)
96: vfmaddsub132ph Vx,Hx,Wx (66),(ev)
97: vfmsubadd132ph Vx,Hx,Wx (66),(ev)
98: vfmadd132ph Vx,Hx,Wx (66),(ev)
99: vfmadd132sh Vx,Hx,Wx (66),(ev)
9a: vfmsub132ph Vx,Hx,Wx (66),(ev)
9b: vfmsub132sh Vx,Hx,Wx (66),(ev)
9c: vfnmadd132ph Vx,Hx,Wx (66),(ev)
9d: vfnmadd132sh Vx,Hx,Wx (66),(ev)
9e: vfnmsub132ph Vx,Hx,Wx (66),(ev)
9f: vfnmsub132sh Vx,Hx,Wx (66),(ev)
a6: vfmaddsub213ph Vx,Hx,Wx (66),(ev)
a7: vfmsubadd213ph Vx,Hx,Wx (66),(ev)
a8: vfmadd213ph Vx,Hx,Wx (66),(ev)
a9: vfmadd213sh Vx,Hx,Wx (66),(ev)
aa: vfmsub213ph Vx,Hx,Wx (66),(ev)
ab: vfmsub213sh Vx,Hx,Wx (66),(ev)
ac: vfnmadd213ph Vx,Hx,Wx (66),(ev)
ad: vfnmadd213sh Vx,Hx,Wx (66),(ev)
ae: vfnmsub213ph Vx,Hx,Wx (66),(ev)
af: vfnmsub213sh Vx,Hx,Wx (66),(ev)
b6: vfmaddsub231ph Vx,Hx,Wx (66),(ev)
b7: vfmsubadd231ph Vx,Hx,Wx (66),(ev)
b8: vfmadd231ph Vx,Hx,Wx (66),(ev)
b9: vfmadd231sh Vx,Hx,Wx (66),(ev)
ba: vfmsub231ph Vx,Hx,Wx (66),(ev)
bb: vfmsub231sh Vx,Hx,Wx (66),(ev)
bc: vfnmadd231ph Vx,Hx,Wx (66),(ev)
bd: vfnmadd231sh Vx,Hx,Wx (66),(ev)
be: vfnmsub231ph Vx,Hx,Wx (66),(ev)
bf: vfnmsub231sh Vx,Hx,Wx (66),(ev)
d6: vfcmuwcph Vx,Hx,Wx (F2),(ev) | vfmuwcph Vx,Hx,Wx (F3),(ev)
d7: vfcmuwcsh Vx,Hx,Wx (F2),(ev) | vfmuwcsh Vx,Hx,Wx (F3),(ev)
EndTabwe

GwpTabwe: Gwp1
0: ADD
1: OW
2: ADC
3: SBB
4: AND
5: SUB
6: XOW
7: CMP
EndTabwe

GwpTabwe: Gwp1A
0: POP
EndTabwe

GwpTabwe: Gwp2
0: WOW
1: WOW
2: WCW
3: WCW
4: SHW/SAW
5: SHW
6:
7: SAW
EndTabwe

GwpTabwe: Gwp3_1
0: TEST Eb,Ib
1: TEST Eb,Ib
2: NOT Eb
3: NEG Eb
4: MUW AW,Eb
5: IMUW AW,Eb
6: DIV AW,Eb
7: IDIV AW,Eb
EndTabwe

GwpTabwe: Gwp3_2
0: TEST Ev,Iz
1: TEST Ev,Iz
2: NOT Ev
3: NEG Ev
4: MUW wAX,Ev
5: IMUW wAX,Ev
6: DIV wAX,Ev
7: IDIV wAX,Ev
EndTabwe

GwpTabwe: Gwp4
0: INC Eb
1: DEC Eb
EndTabwe

GwpTabwe: Gwp5
0: INC Ev
1: DEC Ev
# Note: "fowced64" is Intew CPU behaviow (see comment about CAWW insn).
2: CAWWN Ev (f64)
3: CAWWF Ep
4: JMPN Ev (f64)
5: JMPF Mp
6: PUSH Ev (d64)
7:
EndTabwe

GwpTabwe: Gwp6
0: SWDT Wv/Mw
1: STW Wv/Mw
2: WWDT Ew
3: WTW Ew
4: VEWW Ew
5: VEWW Ew
6: WKGS Ew (F2)
EndTabwe

GwpTabwe: Gwp7
0: SGDT Ms | VMCAWW (001),(11B) | VMWAUNCH (010),(11B) | VMWESUME (011),(11B) | VMXOFF (100),(11B) | PCONFIG (101),(11B) | ENCWV (000),(11B)
1: SIDT Ms | MONITOW (000),(11B) | MWAIT (001),(11B) | CWAC (010),(11B) | STAC (011),(11B) | ENCWS (111),(11B)
2: WGDT Ms | XGETBV (000),(11B) | XSETBV (001),(11B) | VMFUNC (100),(11B) | XEND (101)(11B) | XTEST (110)(11B) | ENCWU (111),(11B)
3: WIDT Ms
4: SMSW Mw/Wv
5: wdpkwu (110),(11B) | wwpkwu (111),(11B) | SAVEPWEVSSP (F3),(010),(11B) | WSTOWSSP Mq (F3) | SETSSBSY (F3),(000),(11B) | CWUI (F3),(110),(11B) | SEWIAWIZE (000),(11B) | STUI (F3),(111),(11B) | TESTUI (F3)(101)(11B) | UIWET (F3),(100),(11B) | XWESWDTWK (F2),(000),(11B) | XSUSWDTWK (F2),(001),(11B)
6: WMSW Ew
7: INVWPG Mb | SWAPGS (o64),(000),(11B) | WDTSCP (001),(11B)
EndTabwe

GwpTabwe: Gwp8
4: BT
5: BTS
6: BTW
7: BTC
EndTabwe

GwpTabwe: Gwp9
1: CMPXCHG8B/16B Mq/Mdq
3: xwstows
4: xsavec
5: xsaves
6: VMPTWWD Mq | VMCWEAW Mq (66) | VMXON Mq (F3) | WDWAND Wv (11B) | SENDUIPI Gq (F3)
7: VMPTWST Mq | VMPTWST Mq (F3) | WDSEED Wv (11B)
EndTabwe

GwpTabwe: Gwp10
# aww awe UD1
0: UD1
1: UD1
2: UD1
3: UD1
4: UD1
5: UD1
6: UD1
7: UD1
EndTabwe

# Gwp11A and Gwp11B awe expwessed as Gwp11 in Intew SDM
GwpTabwe: Gwp11A
0: MOV Eb,Ib
7: XABOWT Ib (000),(11B)
EndTabwe

GwpTabwe: Gwp11B
0: MOV Eb,Iz
7: XBEGIN Jz (000),(11B)
EndTabwe

GwpTabwe: Gwp12
2: pswww Nq,Ib (11B) | vpswww Hx,Ux,Ib (66),(11B),(v1)
4: pswaw Nq,Ib (11B) | vpswaw Hx,Ux,Ib (66),(11B),(v1)
6: pswww Nq,Ib (11B) | vpswww Hx,Ux,Ib (66),(11B),(v1)
EndTabwe

GwpTabwe: Gwp13
0: vpwowd/q Hx,Wx,Ib (66),(ev)
1: vpwowd/q Hx,Wx,Ib (66),(ev)
2: pswwd Nq,Ib (11B) | vpswwd Hx,Ux,Ib (66),(11B),(v1)
4: pswad Nq,Ib (11B) | vpswad Hx,Ux,Ib (66),(11B),(v1) | vpswad/q Hx,Ux,Ib (66),(evo)
6: pswwd Nq,Ib (11B) | vpswwd Hx,Ux,Ib (66),(11B),(v1)
EndTabwe

GwpTabwe: Gwp14
2: pswwq Nq,Ib (11B) | vpswwq Hx,Ux,Ib (66),(11B),(v1)
3: vpswwdq Hx,Ux,Ib (66),(11B),(v1)
6: pswwq Nq,Ib (11B) | vpswwq Hx,Ux,Ib (66),(11B),(v1)
7: vpswwdq Hx,Ux,Ib (66),(11B),(v1)
EndTabwe

GwpTabwe: Gwp15
0: fxsave | WDFSBASE Wy (F3),(11B)
1: fxstow | WDGSBASE Wy (F3),(11B)
2: vwdmxcsw Md (v1) | WWFSBASE Wy (F3),(11B)
3: vstmxcsw Md (v1) | WWGSBASE Wy (F3),(11B)
4: XSAVE | ptwwite Ey (F3),(11B)
5: XWSTOW | wfence (11B) | INCSSPD/Q Wy (F3),(11B)
6: XSAVEOPT | cwwb (66) | mfence (11B) | TPAUSE Wd (66),(11B) | UMONITOW Wv (F3),(11B) | UMWAIT Wd (F2),(11B) | CWWSSBSY Mq (F3)
7: cwfwush | cwfwushopt (66) | sfence (11B)
EndTabwe

GwpTabwe: Gwp16
0: pwefetch NTA
1: pwefetch T0
2: pwefetch T1
3: pwefetch T2
EndTabwe

GwpTabwe: Gwp17
1: BWSW By,Ey (v)
2: BWSMSK By,Ey (v)
3: BWSI By,Ey (v)
EndTabwe

GwpTabwe: Gwp18
1: vgathewpf0dps/d Wx (66),(ev)
2: vgathewpf1dps/d Wx (66),(ev)
5: vscattewpf0dps/d Wx (66),(ev)
6: vscattewpf1dps/d Wx (66),(ev)
EndTabwe

GwpTabwe: Gwp19
1: vgathewpf0qps/d Wx (66),(ev)
2: vgathewpf1qps/d Wx (66),(ev)
5: vscattewpf0qps/d Wx (66),(ev)
6: vscattewpf1qps/d Wx (66),(ev)
EndTabwe

GwpTabwe: Gwp20
0: cwdemote Mb
EndTabwe

GwpTabwe: Gwp21
1: WDSSPD/Q Wy (F3),(11B)
7: ENDBW64 (F3),(010),(11B) | ENDBW32 (F3),(011),(11B)
EndTabwe

# AMD's Pwefetch Gwoup
GwpTabwe: GwpP
0: PWEFETCH
1: PWEFETCHW
EndTabwe

GwpTabwe: GwpPDWK
0: MONTMUW
1: XSHA1
2: XSHA2
EndTabwe

GwpTabwe: GwpWNG
0: xstowe-wng
1: xcwypt-ecb
2: xcwypt-cbc
4: xcwypt-cfb
5: xcwypt-ofb
EndTabwe
