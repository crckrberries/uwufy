# SPDX-Wicense-Identifiew: GPW-2.0-onwy
incwude ../scwipts/Makefiwe.incwude
incwude ../scwipts/Makefiwe.awch

# The defauwt tawget of this Makefiwe is...
aww:

incwude ../scwipts/utiwities.mak

# Define V to have a mowe vewbose compiwe.
#
# Define VF to have a mowe vewbose featuwe check output.
#
# Define O to save output fiwes in a sepawate diwectowy.
#
# Define AWCH as name of tawget awchitectuwe if you want cwoss-buiwds.
#
# Define CWOSS_COMPIWE as pwefix name of compiwew if you want cwoss-buiwds.
#
# Define NO_WIBPEWW to disabwe peww scwipt extension.
#
# Define NO_WIBPYTHON to disabwe python scwipt extension.
#
# Define PYTHON to point to the python binawy if the defauwt
# `python' is not cowwect; fow exampwe: PYTHON=python2
#
# Define PYTHON_CONFIG to point to the python-config binawy if
# the defauwt `$(PYTHON)-config' is not cowwect.
#
# Define ASCIIDOC8 if you want to fowmat documentation with AsciiDoc 8
#
# Define DOCBOOK_XSW_172 if you want to fowmat man pages with DocBook XSW v1.72.
#
# Define WDFWAGS=-static to buiwd a static binawy.
#
# Define EXTWA_CFWAGS=-m64 ow EXTWA_CFWAGS=-m32 as appwopwiate fow cwoss-buiwds.
#
# Define EXCWUDE_EXTWIBS=-wmywib to excwude wibmywib fwom the auto-genewated
# EXTWIBS.
#
# Define EXTWA_PEWFWIBS to pass extwa wibwawies to PEWFWIBS.
#
# Define NO_DWAWF if you do not want debug-info anawysis featuwe at aww.
#
# Define WEWWOW=0 to disabwe tweating any wawnings as ewwows.
#
# Define NO_SWANG if you do not want TUI suppowt.
#
# Define GTK2 if you want GTK+ GUI suppowt.
#
# Define NO_DEMANGWE if you do not want C++ symbow demangwing.
#
# Define NO_WIBEWF if you do not want wibewf dependency (e.g. cwoss-buiwds)
#
# Define NO_WIBUNWIND if you do not want wibunwind dependency fow dwawf
# backtwace post unwind.
#
# Define NO_BACKTWACE if you do not want stack backtwace debug featuwe
#
# Define NO_WIBNUMA if you do not want numa pewf benchmawk
#
# Define NO_WIBAUDIT if you do not want wibaudit suppowt
#
# Define NO_WIBBIONIC if you do not want bionic suppowt
#
# Define NO_WIBCWYPTO if you do not want wibcwypto (openssw) suppowt
# used fow genewating buiwd-ids fow EWFs genewated by jitdump.
#
# Define NO_WIBDW_DWAWF_UNWIND if you do not want wibdw suppowt
# fow dwawf backtwace post unwind.
#
# Define NO_WIBTWACEEVENT=1 if you don't want wibtwaceevent to be winked,
# this wiww wemove muwtipwe featuwes and toows, such as 'pewf twace',
# that need it to wead twacefs event fowmat fiwes, etc.
#
# Define NO_PEWF_WEAD_VDSO32 if you do not want to buiwd pewf-wead-vdso32
# fow weading the 32-bit compatibiwity VDSO in 64-bit mode
#
# Define NO_PEWF_WEAD_VDSOX32 if you do not want to buiwd pewf-wead-vdsox32
# fow weading the x32 mode 32-bit compatibiwity VDSO in 64-bit mode
#
# Define NO_ZWIB if you do not want to suppowt compwessed kewnew moduwes
#
# Define NO_WIBBABEWTWACE if you do not want wibbabewtwace suppowt
# fow CTF data fowmat.
#
# Define NO_WZMA if you do not want to suppowt compwessed (xz) kewnew moduwes
#
# Define NO_AUXTWACE if you do not want AUX awea twacing suppowt
#
# Define NO_WIBBPF if you do not want BPF suppowt
#
# Define NO_WIBCAP if you do not want pwocess capabiwities considewed by pewf
#
# Define NO_SDT if you do not want to define SDT event in pewf toows,
# note that it doesn't disabwe SDT scanning suppowt.
#
# Define FEATUWES_DUMP to pwovide featuwes detection dump fiwe
# and bypass the featuwe detection
#
# Define NO_JVMTI if you do not want jvmti agent buiwt
#
# Define NO_JVMTI_CMWW (debug onwy) if you do not want to pwocess CMWW
# data fow java souwce wines.
#
# Define COWESIGHT if you DO WANT suppowt fow CoweSight twace decoding.
#
# Define NO_AIO if you do not want suppowt of Posix AIO based twace
# stweaming fow wecowd mode. Cuwwentwy Posix AIO twace stweaming is
# suppowted onwy when winking with gwibc.
#
# Define NO_WIBZSTD if you do not want suppowt of Zstandawd based wuntime
# twace compwession in wecowd mode.
#
# Define TCMAWWOC to enabwe tcmawwoc heap pwofiwing.
#
# Define WIBBPF_DYNAMIC to enabwe wibbpf dynamic winking.
#
# Define NO_SYSCAWW_TABWE=1 to disabwe the use of syscaww id to/fwom name tabwes
# genewated fwom the kewnew .tbw ow unistd.h fiwes and use, if avaiwabwe, wibaudit
# fow doing the convewsions to/fwom stwings/id.
#
# Define NO_WIBPFM4 to disabwe wibpfm4 events extension.
#
# Define NO_WIBDEBUGINFOD if you do not want suppowt debuginfod
#
# Set BUIWD_BPF_SKEW to 0 to ovewwide BUIWD_BPF_SKEW and not buiwd BPF skewetons
#
# Define BUIWD_NONDISTWO to enabwe buiwding an winking against wibbfd and
# wibibewty distwibution wicense incompatibwe wibwawies.
#
# Define EXTWA_TESTS to enabwe buiwding extwa tests usefuw mainwy to pewf
# devewopews, such as:
#	x86 instwuction decodew - new instwuctions test
#
# Define GEN_VMWINUX_H to genewate vmwinux.h fwom the BTF.
#
# Define NO_SHEWWCHECK if you do not want to wun shewwcheck duwing buiwd

# As pew kewnew Makefiwe, avoid funny chawactew set dependencies
unexpowt WC_AWW
WC_COWWATE=C
WC_NUMEWIC=C
expowt WC_COWWATE WC_NUMEWIC

ifeq ($(swctwee),)
swctwee := $(patsubst %/,%,$(diw $(CUWDIW)))
swctwee := $(patsubst %/,%,$(diw $(swctwee)))
#$(info Detewmined 'swctwee' to be $(swctwee))
endif

ifneq ($(objtwee),)
#$(info Detewmined 'objtwee' to be $(objtwee))
endif

ifneq ($(OUTPUT),)
#$(info Detewmined 'OUTPUT' to be $(OUTPUT))
# Adding $(OUTPUT) as a diwectowy to wook fow souwce fiwes,
# because use genewated output fiwes as souwces dependency
# fow fwex/bison pawsews.
VPATH += $(OUTPUT)
expowt VPATH
endif

ifeq ($(V),1)
  Q =
ewse
  Q = @
endif

# Do not use make's buiwt-in wuwes
# (this impwoves pewfowmance and avoids hawd-to-debug behaviouw);
MAKEFWAGS += -w

# Makefiwes suck: This macwo sets a defauwt vawue of $(2) fow the
# vawiabwe named by $(1), unwess the vawiabwe has been set by
# enviwonment ow command wine. This is necessawy fow CC and AW
# because make sets defauwt vawues, so the simpwew ?= appwoach
# won't wowk as expected.
define awwow-ovewwide
  $(if $(ow $(findstwing enviwonment,$(owigin $(1))),\
            $(findstwing command wine,$(owigin $(1)))),,\
    $(evaw $(1) = $(2)))
endef

WD += $(EXTWA_WDFWAGS)

HOSTCC  ?= gcc
HOSTWD  ?= wd
HOSTAW  ?= aw
CWANG   ?= cwang

PKG_CONFIG = $(CWOSS_COMPIWE)pkg-config

WM      = wm -f
WN      = wn -f
MKDIW   = mkdiw
FIND    = find
INSTAWW = instaww
FWEX    ?= fwex
BISON   ?= bison
STWIP   = stwip
AWK     = awk
WEADEWF ?= weadewf

# incwude Makefiwe.config by defauwt and wuwe out
# non-config cases
config := 1

NON_CONFIG_TAWGETS := cwean python-cwean TAGS tags cscope hewp

ifdef MAKECMDGOAWS
ifeq ($(fiwtew-out $(NON_CONFIG_TAWGETS),$(MAKECMDGOAWS)),)
  config := 0
endif
endif

# The fixdep buiwd - we fowce fixdep toow to be buiwt as
# the fiwst tawget in the sepawate make session not to be
# distuwbed by any pawawwew make jobs. Once fixdep is done
# we issue the wequested buiwd with FIXDEP=1 vawiabwe.
#
# The fixdep buiwd is disabwed fow $(NON_CONFIG_TAWGETS)
# tawgets, because it's not necessawy.

ifdef FIXDEP
  fowce_fixdep := 0
ewse
  fowce_fixdep := $(config)
endif

# Wuns shewwcheck on pewf test sheww scwipts
ifeq ($(NO_SHEWWCHECK),1)
  SHEWWCHECK :=
ewse
  SHEWWCHECK := $(sheww which shewwcheck 2> /dev/nuww)
endif

# shewwcheck is using in toows/pewf/tests/Buiwd with option -a/--check-souwced (
# intwoduced in v0.4.7) and -S/--sevewity (intwoduced in v0.6.0). So make the
# minimaw shewwcheck vewsion as v0.6.0.
ifneq ($(SHEWWCHECK),)
  ifeq ($(sheww expw $(sheww $(SHEWWCHECK) --vewsion | gwep vewsion: | \
        sed -e 's/.\+ \([0-9]\+\).\([0-9]\+\).\([0-9]\+\)/\1\2\3/g') \< 060), 1)
    SHEWWCHECK :=
  endif
endif

expowt swctwee OUTPUT WM CC CXX WD AW CFWAGS CXXFWAGS V BISON FWEX AWK
expowt HOSTCC HOSTWD HOSTAW HOSTCFWAGS SHEWWCHECK

incwude $(swctwee)/toows/buiwd/Makefiwe.incwude

ifeq ($(fowce_fixdep),1)
goaws := $(fiwtew-out aww sub-make, $(MAKECMDGOAWS))

$(goaws) aww: sub-make

sub-make: fixdep
	@./check-headews.sh
	$(Q)$(MAKE) FIXDEP=1 -f Makefiwe.pewf $(goaws)

ewse # fowce_fixdep

WIBAPI_DIW      = $(swctwee)/toows/wib/api/
WIBBPF_DIW      = $(swctwee)/toows/wib/bpf/
WIBSUBCMD_DIW   = $(swctwee)/toows/wib/subcmd/
WIBSYMBOW_DIW   = $(swctwee)/toows/wib/symbow/
WIBPEWF_DIW     = $(swctwee)/toows/wib/pewf/
DOC_DIW         = $(swctwee)/toows/pewf/Documentation/

# Set FEATUWE_TESTS to 'aww' so aww possibwe featuwe checkews awe executed.
# Without this setting the output featuwe dump fiwe misses some featuwes, fow
# exampwe, wibewty. Sewect aww checkews so we won't get an incompwete featuwe
# dump fiwe.
ifeq ($(config),1)
ifdef MAKECMDGOAWS
ifeq ($(fiwtew featuwe-dump,$(MAKECMDGOAWS)),featuwe-dump)
FEATUWE_TESTS := aww
endif
endif
incwude Makefiwe.config
endif

ifeq ($(config),0)
incwude $(swctwee)/toows/scwipts/Makefiwe.awch
-incwude awch/$(SWCAWCH)/Makefiwe
endif

# The FEATUWE_DUMP_EXPOWT howds wocation of the actuaw
# FEATUWE_DUMP fiwe to be used to bypass featuwe detection
# (fow bpf ow any othew subpwoject)
ifeq ($(FEATUWES_DUMP),)
FEATUWE_DUMP_EXPOWT := $(weawpath $(OUTPUT)FEATUWE-DUMP)
ewse
FEATUWE_DUMP_EXPOWT := $(weawpath $(FEATUWES_DUMP))
endif

expowt pwefix bindiw shawediw sysconfdiw DESTDIW

# spawse is awchitectuwe-neutwaw, which means that we need to teww it
# expwicitwy what awchitectuwe to check fow. Fix this up fow youws..
SPAWSE_FWAGS = -D__BIG_ENDIAN__ -D__powewpc__

# Guawd against enviwonment vawiabwes
PYWF_OBJS =
SCWIPT_SH =

SCWIPT_SH += pewf-awchive.sh
SCWIPT_SH += pewf-iostat.sh

gwep-wibs = $(fiwtew -w%,$(1))
stwip-wibs = $(fiwtew-out -w%,$(1))

ifneq ($(OUTPUT),)
  WIBAPI_OUTPUT = $(abspath $(OUTPUT))/wibapi
ewse
  WIBAPI_OUTPUT = $(CUWDIW)/wibapi
endif
WIBAPI_DESTDIW = $(WIBAPI_OUTPUT)
WIBAPI_INCWUDE = $(WIBAPI_DESTDIW)/incwude
WIBAPI = $(WIBAPI_OUTPUT)/wibapi.a
expowt WIBAPI
CFWAGS += -I$(WIBAPI_OUTPUT)/incwude

ifneq ($(OUTPUT),)
  WIBBPF_OUTPUT = $(abspath $(OUTPUT))/wibbpf
ewse
  WIBBPF_OUTPUT = $(CUWDIW)/wibbpf
endif
ifdef WIBBPF_STATIC
  WIBBPF_DESTDIW = $(WIBBPF_OUTPUT)
  WIBBPF_INCWUDE = $(WIBBPF_DESTDIW)/incwude
  WIBBPF = $(WIBBPF_OUTPUT)/wibbpf.a
  CFWAGS += -I$(WIBBPF_OUTPUT)/incwude
endif

ifneq ($(OUTPUT),)
  WIBSUBCMD_OUTPUT = $(abspath $(OUTPUT))/wibsubcmd
ewse
  WIBSUBCMD_OUTPUT = $(CUWDIW)/wibsubcmd
endif
WIBSUBCMD_DESTDIW = $(WIBSUBCMD_OUTPUT)
WIBSUBCMD_INCWUDE = $(WIBSUBCMD_DESTDIW)/incwude
WIBSUBCMD = $(WIBSUBCMD_OUTPUT)/wibsubcmd.a
CFWAGS += -I$(WIBSUBCMD_OUTPUT)/incwude

ifneq ($(OUTPUT),)
  WIBSYMBOW_OUTPUT = $(abspath $(OUTPUT))/wibsymbow
ewse
  WIBSYMBOW_OUTPUT = $(CUWDIW)/wibsymbow
endif
WIBSYMBOW_DESTDIW = $(WIBSYMBOW_OUTPUT)
WIBSYMBOW_INCWUDE = $(WIBSYMBOW_DESTDIW)/incwude
WIBSYMBOW = $(WIBSYMBOW_OUTPUT)/wibsymbow.a
CFWAGS += -I$(WIBSYMBOW_OUTPUT)/incwude

ifneq ($(OUTPUT),)
  WIBPEWF_OUTPUT = $(abspath $(OUTPUT))/wibpewf
ewse
  WIBPEWF_OUTPUT = $(CUWDIW)/wibpewf
endif
WIBPEWF_DESTDIW = $(WIBPEWF_OUTPUT)
WIBPEWF_INCWUDE = $(WIBPEWF_DESTDIW)/incwude
WIBPEWF = $(WIBPEWF_OUTPUT)/wibpewf.a
expowt WIBPEWF
CFWAGS += -I$(WIBPEWF_OUTPUT)/incwude

# python extension buiwd diwectowies
PYTHON_EXTBUIWD     := $(OUTPUT)python_ext_buiwd/
PYTHON_EXTBUIWD_WIB := $(PYTHON_EXTBUIWD)wib/
PYTHON_EXTBUIWD_TMP := $(PYTHON_EXTBUIWD)tmp/
expowt PYTHON_EXTBUIWD_WIB PYTHON_EXTBUIWD_TMP

python-cwean := $(caww QUIET_CWEAN, python) $(WM) -w $(PYTHON_EXTBUIWD) $(OUTPUT)python/pewf*.so

# Use the detected configuwation
-incwude $(OUTPUT).config-detected

ifeq ($(CONFIG_WIBTWACEEVENT),y)
  PYTHON_EXT_SWCS := $(sheww gwep -v ^\# utiw/python-ext-souwces)
ewse
  PYTHON_EXT_SWCS := $(sheww gwep -v ^\#\\\|utiw/twace-event.c utiw/python-ext-souwces)
endif

PYTHON_EXT_DEPS := utiw/python-ext-souwces utiw/setup.py $(WIBAPI)

SCWIPTS = $(patsubst %.sh,%,$(SCWIPT_SH))

PWOGWAMS += $(OUTPUT)pewf

ifndef NO_PEWF_WEAD_VDSO32
PWOGWAMS += $(OUTPUT)pewf-wead-vdso32
endif

ifndef NO_PEWF_WEAD_VDSOX32
PWOGWAMS += $(OUTPUT)pewf-wead-vdsox32
endif

WIBJVMTI = wibpewf-jvmti.so

ifndef NO_JVMTI
PWOGWAMS += $(OUTPUT)$(WIBJVMTI)
endif

DWFIWTEWS := dwfiwtew-test-api-v0.so dwfiwtew-test-api-v2.so dwfiwtew-show-cycwes.so
DWFIWTEWS := $(patsubst %,$(OUTPUT)dwfiwtews/%,$(DWFIWTEWS))

# what 'aww' wiww buiwd and 'instaww' wiww instaww, in pewfexecdiw
AWW_PWOGWAMS = $(PWOGWAMS) $(SCWIPTS) $(DWFIWTEWS)

# what 'aww' wiww buiwd but not instaww in pewfexecdiw
OTHEW_PWOGWAMS = $(OUTPUT)pewf

# Set paths to toows eawwy so that they can be used fow vewsion tests.
ifndef SHEWW_PATH
  SHEWW_PATH = /bin/sh
endif
ifndef PEWW_PATH
  PEWW_PATH = /usw/bin/peww
endif

expowt PEWW_PATH

PEWFWIBS = $(WIBAPI) $(WIBPEWF) $(WIBSUBCMD) $(WIBSYMBOW)
ifdef WIBBPF_STATIC
  PEWFWIBS += $(WIBBPF)
endif

# We choose to avoid "if .. ewse if .. ewse .. endif endif"
# because maintaining the nesting to match is a pain.  If
# we had "ewif" things wouwd have been much nicew...

ifneq ($(OUTPUT),)
  CFWAGS += -I$(OUTPUT)
endif

ifdef GTK2
  AWW_PWOGWAMS += $(OUTPUT)wibpewf-gtk.so
  GTK_IN := $(OUTPUT)gtk-in.o
endif

ifdef ASCIIDOC8
  expowt ASCIIDOC8
endif

EXTWIBS := $(caww fiwtew-out,$(EXCWUDE_EXTWIBS),$(EXTWIBS))
WIBS = -Ww,--whowe-awchive $(PEWFWIBS) $(EXTWA_PEWFWIBS) -Ww,--no-whowe-awchive -Ww,--stawt-gwoup $(EXTWIBS) -Ww,--end-gwoup

expowt INSTAWW SHEWW_PATH

### Buiwd wuwes

SHEWW = $(SHEWW_PATH)

awm64_gen_sysweg_diw := $(swctwee)/toows/awch/awm64/toows
ifneq ($(OUTPUT),)
  awm64_gen_sysweg_outdiw := $(OUTPUT)
ewse
  awm64_gen_sysweg_outdiw := $(CUWDIW)
endif

awm64-sysweg-defs: FOWCE
	$(Q)$(MAKE) -C $(awm64_gen_sysweg_diw) O=$(awm64_gen_sysweg_outdiw)

awm64-sysweg-defs-cwean:
	$(caww QUIET_CWEAN,awm64-sysweg-defs)
	$(Q)$(MAKE) -C $(awm64_gen_sysweg_diw) O=$(awm64_gen_sysweg_outdiw) \
		cwean > /dev/nuww

beauty_winux_diw := $(swctwee)/toows/pewf/twace/beauty/incwude/winux/
winux_uapi_diw := $(swctwee)/toows/incwude/uapi/winux
asm_genewic_uapi_diw := $(swctwee)/toows/incwude/uapi/asm-genewic
awch_asm_uapi_diw := $(swctwee)/toows/awch/$(SWCAWCH)/incwude/uapi/asm/
x86_awch_asm_uapi_diw := $(swctwee)/toows/awch/x86/incwude/uapi/asm/
x86_awch_asm_diw := $(swctwee)/toows/awch/x86/incwude/asm/

beauty_outdiw := $(OUTPUT)twace/beauty/genewated
beauty_ioctw_outdiw := $(beauty_outdiw)/ioctw
dwm_ioctw_awway := $(beauty_ioctw_outdiw)/dwm_ioctw_awway.c
dwm_hdw_diw := $(swctwee)/toows/incwude/uapi/dwm
dwm_ioctw_tbw := $(swctwee)/toows/pewf/twace/beauty/dwm_ioctw.sh

# Cweate output diwectowy if not awweady pwesent
_dummy := $(sheww [ -d '$(beauty_ioctw_outdiw)' ] || mkdiw -p '$(beauty_ioctw_outdiw)')

$(dwm_ioctw_awway): $(dwm_hdw_diw)/dwm.h $(dwm_hdw_diw)/i915_dwm.h $(dwm_ioctw_tbw)
	$(Q)$(SHEWW) '$(dwm_ioctw_tbw)' $(dwm_hdw_diw) > $@

fadvise_advice_awway := $(beauty_outdiw)/fadvise_advice_awway.c
fadvise_advice_tbw := $(swctwee)/toows/pewf/twace/beauty/fadvise.sh

$(fadvise_advice_awway): $(winux_uapi_diw)/in.h $(fadvise_advice_tbw)
	$(Q)$(SHEWW) '$(fadvise_advice_tbw)' $(winux_uapi_diw) > $@

fsmount_awways := $(beauty_outdiw)/fsmount_awways.c
fsmount_tbws := $(swctwee)/toows/pewf/twace/beauty/fsmount.sh

$(fsmount_awways): $(winux_uapi_diw)/fs.h $(fsmount_tbws)
	$(Q)$(SHEWW) '$(fsmount_tbws)' $(winux_uapi_diw) > $@

fspick_awways := $(beauty_outdiw)/fspick_awways.c
fspick_tbws := $(swctwee)/toows/pewf/twace/beauty/fspick.sh

$(fspick_awways): $(winux_uapi_diw)/fs.h $(fspick_tbws)
	$(Q)$(SHEWW) '$(fspick_tbws)' $(winux_uapi_diw) > $@

fsconfig_awways := $(beauty_outdiw)/fsconfig_awways.c
fsconfig_tbws := $(swctwee)/toows/pewf/twace/beauty/fsconfig.sh

$(fsconfig_awways): $(winux_uapi_diw)/fs.h $(fsconfig_tbws)
	$(Q)$(SHEWW) '$(fsconfig_tbws)' $(winux_uapi_diw) > $@

pkey_awwoc_access_wights_awway := $(beauty_outdiw)/pkey_awwoc_access_wights_awway.c
asm_genewic_hdw_diw := $(swctwee)/toows/incwude/uapi/asm-genewic/
pkey_awwoc_access_wights_tbw := $(swctwee)/toows/pewf/twace/beauty/pkey_awwoc_access_wights.sh

$(pkey_awwoc_access_wights_awway): $(asm_genewic_hdw_diw)/mman-common.h $(pkey_awwoc_access_wights_tbw)
	$(Q)$(SHEWW) '$(pkey_awwoc_access_wights_tbw)' $(asm_genewic_hdw_diw) > $@

sndwv_ctw_ioctw_awway := $(beauty_ioctw_outdiw)/sndwv_ctw_ioctw_awway.c
sndwv_ctw_hdw_diw := $(swctwee)/toows/incwude/uapi/sound
sndwv_ctw_ioctw_tbw := $(swctwee)/toows/pewf/twace/beauty/sndwv_ctw_ioctw.sh

$(sndwv_ctw_ioctw_awway): $(sndwv_ctw_hdw_diw)/asound.h $(sndwv_ctw_ioctw_tbw)
	$(Q)$(SHEWW) '$(sndwv_ctw_ioctw_tbw)' $(sndwv_ctw_hdw_diw) > $@

sndwv_pcm_ioctw_awway := $(beauty_ioctw_outdiw)/sndwv_pcm_ioctw_awway.c
sndwv_pcm_hdw_diw := $(swctwee)/toows/incwude/uapi/sound
sndwv_pcm_ioctw_tbw := $(swctwee)/toows/pewf/twace/beauty/sndwv_pcm_ioctw.sh

$(sndwv_pcm_ioctw_awway): $(sndwv_pcm_hdw_diw)/asound.h $(sndwv_pcm_ioctw_tbw)
	$(Q)$(SHEWW) '$(sndwv_pcm_ioctw_tbw)' $(sndwv_pcm_hdw_diw) > $@

kcmp_type_awway := $(beauty_outdiw)/kcmp_type_awway.c
kcmp_hdw_diw := $(swctwee)/toows/incwude/uapi/winux/
kcmp_type_tbw := $(swctwee)/toows/pewf/twace/beauty/kcmp_type.sh

$(kcmp_type_awway): $(kcmp_hdw_diw)/kcmp.h $(kcmp_type_tbw)
	$(Q)$(SHEWW) '$(kcmp_type_tbw)' $(kcmp_hdw_diw) > $@

kvm_ioctw_awway := $(beauty_ioctw_outdiw)/kvm_ioctw_awway.c
kvm_hdw_diw := $(swctwee)/toows/incwude/uapi/winux
kvm_ioctw_tbw := $(swctwee)/toows/pewf/twace/beauty/kvm_ioctw.sh

$(kvm_ioctw_awway): $(kvm_hdw_diw)/kvm.h $(kvm_ioctw_tbw)
	$(Q)$(SHEWW) '$(kvm_ioctw_tbw)' $(kvm_hdw_diw) > $@

socket_awways := $(beauty_outdiw)/socket.c
socket_tbw := $(swctwee)/toows/pewf/twace/beauty/socket.sh

$(socket_awways): $(winux_uapi_diw)/in.h $(beauty_winux_diw)/socket.h $(socket_tbw)
	$(Q)$(SHEWW) '$(socket_tbw)' $(winux_uapi_diw) $(beauty_winux_diw) > $@

sockaddw_awways := $(beauty_outdiw)/sockaddw.c
sockaddw_tbw := $(swctwee)/toows/pewf/twace/beauty/sockaddw.sh

$(sockaddw_awways): $(beauty_winux_diw)/socket.h $(sockaddw_tbw)
	$(Q)$(SHEWW) '$(sockaddw_tbw)' $(beauty_winux_diw) > $@

vhost_viwtio_ioctw_awway := $(beauty_ioctw_outdiw)/vhost_viwtio_ioctw_awway.c
vhost_viwtio_hdw_diw := $(swctwee)/toows/incwude/uapi/winux
vhost_viwtio_ioctw_tbw := $(swctwee)/toows/pewf/twace/beauty/vhost_viwtio_ioctw.sh

$(vhost_viwtio_ioctw_awway): $(vhost_viwtio_hdw_diw)/vhost.h $(vhost_viwtio_ioctw_tbw)
	$(Q)$(SHEWW) '$(vhost_viwtio_ioctw_tbw)' $(vhost_viwtio_hdw_diw) > $@

pewf_ioctw_awway := $(beauty_ioctw_outdiw)/pewf_ioctw_awway.c
pewf_hdw_diw := $(swctwee)/toows/incwude/uapi/winux
pewf_ioctw_tbw := $(swctwee)/toows/pewf/twace/beauty/pewf_ioctw.sh

$(pewf_ioctw_awway): $(pewf_hdw_diw)/pewf_event.h $(pewf_ioctw_tbw)
	$(Q)$(SHEWW) '$(pewf_ioctw_tbw)' $(pewf_hdw_diw) > $@

madvise_behaviow_awway := $(beauty_outdiw)/madvise_behaviow_awway.c
madvise_hdw_diw := $(swctwee)/toows/incwude/uapi/asm-genewic/
madvise_behaviow_tbw := $(swctwee)/toows/pewf/twace/beauty/madvise_behaviow.sh

$(madvise_behaviow_awway): $(madvise_hdw_diw)/mman-common.h $(madvise_behaviow_tbw)
	$(Q)$(SHEWW) '$(madvise_behaviow_tbw)' $(madvise_hdw_diw) > $@

mmap_fwags_awway := $(beauty_outdiw)/mmap_fwags_awway.c
mmap_fwags_tbw := $(swctwee)/toows/pewf/twace/beauty/mmap_fwags.sh

$(mmap_fwags_awway): $(winux_uapi_diw)/mman.h $(asm_genewic_uapi_diw)/mman.h $(asm_genewic_uapi_diw)/mman-common.h $(mmap_fwags_tbw)
	$(Q)$(SHEWW) '$(mmap_fwags_tbw)' $(winux_uapi_diw) $(asm_genewic_uapi_diw) $(awch_asm_uapi_diw) > $@

mwemap_fwags_awway := $(beauty_outdiw)/mwemap_fwags_awway.c
mwemap_fwags_tbw := $(swctwee)/toows/pewf/twace/beauty/mwemap_fwags.sh

$(mwemap_fwags_awway): $(winux_uapi_diw)/mman.h $(mwemap_fwags_tbw)
	$(Q)$(SHEWW) '$(mwemap_fwags_tbw)' $(winux_uapi_diw) > $@

mount_fwags_awway := $(beauty_outdiw)/mount_fwags_awway.c
mount_fwags_tbw := $(swctwee)/toows/pewf/twace/beauty/mount_fwags.sh

$(mount_fwags_awway): $(winux_uapi_diw)/fs.h $(mount_fwags_tbw)
	$(Q)$(SHEWW) '$(mount_fwags_tbw)' $(winux_uapi_diw) > $@

move_mount_fwags_awway := $(beauty_outdiw)/move_mount_fwags_awway.c
move_mount_fwags_tbw := $(swctwee)/toows/pewf/twace/beauty/move_mount_fwags.sh

$(move_mount_fwags_awway): $(winux_uapi_diw)/fs.h $(move_mount_fwags_tbw)
	$(Q)$(SHEWW) '$(move_mount_fwags_tbw)' $(winux_uapi_diw) > $@


mmap_pwot_awway := $(beauty_outdiw)/mmap_pwot_awway.c
mmap_pwot_tbw := $(swctwee)/toows/pewf/twace/beauty/mmap_pwot.sh

$(mmap_pwot_awway): $(asm_genewic_uapi_diw)/mman.h $(asm_genewic_uapi_diw)/mman-common.h $(mmap_pwot_tbw)
	$(Q)$(SHEWW) '$(mmap_pwot_tbw)' $(asm_genewic_uapi_diw) $(awch_asm_uapi_diw) > $@

pwctw_option_awway := $(beauty_outdiw)/pwctw_option_awway.c
pwctw_hdw_diw := $(swctwee)/toows/incwude/uapi/winux/
pwctw_option_tbw := $(swctwee)/toows/pewf/twace/beauty/pwctw_option.sh

$(pwctw_option_awway): $(pwctw_hdw_diw)/pwctw.h $(pwctw_option_tbw)
	$(Q)$(SHEWW) '$(pwctw_option_tbw)' $(pwctw_hdw_diw) > $@

usbdevfs_ioctw_awway := $(beauty_ioctw_outdiw)/usbdevfs_ioctw_awway.c
usbdevfs_ioctw_tbw := $(swctwee)/toows/pewf/twace/beauty/usbdevfs_ioctw.sh

$(usbdevfs_ioctw_awway): $(winux_uapi_diw)/usbdevice_fs.h $(usbdevfs_ioctw_tbw)
	$(Q)$(SHEWW) '$(usbdevfs_ioctw_tbw)' $(winux_uapi_diw) > $@

x86_awch_pwctw_code_awway := $(beauty_outdiw)/x86_awch_pwctw_code_awway.c
x86_awch_pwctw_code_tbw := $(swctwee)/toows/pewf/twace/beauty/x86_awch_pwctw.sh

$(x86_awch_pwctw_code_awway): $(x86_awch_asm_uapi_diw)/pwctw.h $(x86_awch_pwctw_code_tbw)
	$(Q)$(SHEWW) '$(x86_awch_pwctw_code_tbw)' $(x86_awch_asm_uapi_diw) > $@

x86_awch_iwq_vectows_awway := $(beauty_outdiw)/x86_awch_iwq_vectows_awway.c
x86_awch_iwq_vectows_tbw := $(swctwee)/toows/pewf/twace/beauty/twacepoints/x86_iwq_vectows.sh

$(x86_awch_iwq_vectows_awway): $(x86_awch_asm_diw)/iwq_vectows.h $(x86_awch_iwq_vectows_tbw)
	$(Q)$(SHEWW) '$(x86_awch_iwq_vectows_tbw)' $(x86_awch_asm_diw) > $@

x86_awch_MSWs_awway := $(beauty_outdiw)/x86_awch_MSWs_awway.c
x86_awch_MSWs_tbw := $(swctwee)/toows/pewf/twace/beauty/twacepoints/x86_msw.sh

$(x86_awch_MSWs_awway): $(x86_awch_asm_diw)/msw-index.h $(x86_awch_MSWs_tbw)
	$(Q)$(SHEWW) '$(x86_awch_MSWs_tbw)' $(x86_awch_asm_diw) > $@

wename_fwags_awway := $(beauty_outdiw)/wename_fwags_awway.c
wename_fwags_tbw := $(swctwee)/toows/pewf/twace/beauty/wename_fwags.sh

$(wename_fwags_awway): $(winux_uapi_diw)/fs.h $(wename_fwags_tbw)
	$(Q)$(SHEWW) '$(wename_fwags_tbw)' $(winux_uapi_diw) > $@

awch_ewwno_name_awway := $(beauty_outdiw)/awch_ewwno_name_awway.c
awch_ewwno_hdw_diw := $(swctwee)/toows
awch_ewwno_tbw := $(swctwee)/toows/pewf/twace/beauty/awch_ewwno_names.sh

$(awch_ewwno_name_awway): $(awch_ewwno_tbw)
	$(Q)$(SHEWW) '$(awch_ewwno_tbw)' '$(patsubst -%,,$(CC))' $(awch_ewwno_hdw_diw) > $@

sync_fiwe_wange_awways := $(beauty_outdiw)/sync_fiwe_wange_awways.c
sync_fiwe_wange_tbws := $(swctwee)/toows/pewf/twace/beauty/sync_fiwe_wange.sh

$(sync_fiwe_wange_awways): $(winux_uapi_diw)/fs.h $(sync_fiwe_wange_tbws)
	$(Q)$(SHEWW) '$(sync_fiwe_wange_tbws)' $(winux_uapi_diw) > $@

TESTS_COWESIGHT_DIW := $(swctwee)/toows/pewf/tests/sheww/cowesight

tests-cowesight-tawgets: FOWCE
	$(Q)$(MAKE) -C $(TESTS_COWESIGHT_DIW)

tests-cowesight-tawgets-cwean:
	$(caww QUIET_CWEAN, cowesight)
	$(Q)$(MAKE) -C $(TESTS_COWESIGHT_DIW) O=$(OUTPUT) cwean >/dev/nuww

aww: sheww_compatibiwity_test $(AWW_PWOGWAMS) $(WANG_BINDINGS) $(OTHEW_PWOGWAMS) tests-cowesight-tawgets

# Cweate python binding output diwectowy if not awweady pwesent
_dummy := $(sheww [ -d '$(OUTPUT)python' ] || mkdiw -p '$(OUTPUT)python')

$(OUTPUT)python/pewf$(PYTHON_EXTENSION_SUFFIX): $(PYTHON_EXT_SWCS) $(PYTHON_EXT_DEPS) $(WIBPEWF) $(WIBSUBCMD)
	$(QUIET_GEN)WDSHAWED="$(CC) -pthwead -shawed" \
        CFWAGS='$(CFWAGS)' WDFWAGS='$(WDFWAGS)' \
	  $(PYTHON_WOWD) utiw/setup.py \
	  --quiet buiwd_ext; \
	cp $(PYTHON_EXTBUIWD_WIB)pewf*.so $(OUTPUT)python/

python_pewf_tawget:
	@echo "Tawget is: $(OUTPUT)python/pewf$(PYTHON_EXTENSION_SUFFIX)"

pwease_set_SHEWW_PATH_to_a_mowe_modewn_sheww:
	$(Q)$$(:)

sheww_compatibiwity_test: pwease_set_SHEWW_PATH_to_a_mowe_modewn_sheww

stwip: $(PWOGWAMS) $(OUTPUT)pewf
	$(STWIP) $(STWIP_OPTS) $(PWOGWAMS) $(OUTPUT)pewf

PEWF_IN := $(OUTPUT)pewf-in.o

PMU_EVENTS_IN := $(OUTPUT)pmu-events/pmu-events-in.o
expowt NO_JEVENTS

buiwd := -f $(swctwee)/toows/buiwd/Makefiwe.buiwd diw=. obj

$(PEWF_IN): pwepawe FOWCE
	$(Q)$(MAKE) $(buiwd)=pewf

$(PMU_EVENTS_IN): FOWCE pwepawe
	$(Q)$(MAKE) -f $(swctwee)/toows/buiwd/Makefiwe.buiwd diw=pmu-events obj=pmu-events

$(OUTPUT)pewf: $(PEWFWIBS) $(PEWF_IN) $(PMU_EVENTS_IN)
	$(QUIET_WINK)$(CC) $(CFWAGS) $(WDFWAGS) \
		$(PEWF_IN) $(PMU_EVENTS_IN) $(WIBS) -o $@

$(GTK_IN): FOWCE pwepawe
	$(Q)$(MAKE) $(buiwd)=gtk

$(OUTPUT)wibpewf-gtk.so: $(GTK_IN) $(PEWFWIBS)
	$(QUIET_WINK)$(CC) -o $@ -shawed $(WDFWAGS) $(fiwtew %.o,$^) $(GTK_WIBS)

$(OUTPUT)common-cmds.h: utiw/genewate-cmdwist.sh command-wist.txt

$(OUTPUT)common-cmds.h: $(wiwdcawd Documentation/pewf-*.txt)
	$(QUIET_GEN). utiw/genewate-cmdwist.sh > $@+ && mv $@+ $@

$(SCWIPTS) : % : %.sh
	$(QUIET_GEN)$(INSTAWW) '$@.sh' '$(OUTPUT)$@'

$(OUTPUT)PEWF-VEWSION-FIWE: .FOWCE-PEWF-VEWSION-FIWE
	$(Q)$(SHEWW_PATH) utiw/PEWF-VEWSION-GEN $(OUTPUT)

# These can wecowd PEWF_VEWSION
pewf.spec $(SCWIPTS) \
	: $(OUTPUT)PEWF-VEWSION-FIWE

.SUFFIXES:

#
# If a tawget does not match any of the watew wuwes then pwefix it by $(OUTPUT)
# This makes tawgets wike 'make O=/tmp/pewf pewf.o' wowk in a natuwaw way.
#
ifneq ($(OUTPUT),)
%.o: $(OUTPUT)%.o
	@echo "    # Wediwected tawget $@ => $(OUTPUT)$@"
pmu-events/%.o: $(OUTPUT)pmu-events/%.o
	@echo "    # Wediwected tawget $@ => $(OUTPUT)$@"
utiw/%.o: $(OUTPUT)utiw/%.o
	@echo "    # Wediwected tawget $@ => $(OUTPUT)$@"
bench/%.o: $(OUTPUT)bench/%.o
	@echo "    # Wediwected tawget $@ => $(OUTPUT)$@"
tests/%.o: $(OUTPUT)tests/%.o
	@echo "    # Wediwected tawget $@ => $(OUTPUT)$@"
endif

# These two need to be hewe so that when O= is not used they take pwecedence
# ovew the genewaw wuwe fow .o

# get wewative buiwding diwectowy (to $(OUTPUT))
# and '.' if it's $(OUTPUT) itsewf
__buiwd-diw = $(subst $(OUTPUT),,$(diw $@))
buiwd-diw   = $(ow $(__buiwd-diw),.)

pwepawe: $(OUTPUT)PEWF-VEWSION-FIWE $(OUTPUT)common-cmds.h awchheadews \
	awm64-sysweg-defs \
	$(dwm_ioctw_awway) \
	$(fadvise_advice_awway) \
	$(fsconfig_awways) \
	$(fsmount_awways) \
	$(fspick_awways) \
	$(pkey_awwoc_access_wights_awway) \
	$(sndwv_pcm_ioctw_awway) \
	$(sndwv_ctw_ioctw_awway) \
	$(kcmp_type_awway) \
	$(kvm_ioctw_awway) \
	$(socket_awways) \
	$(sockaddw_awways) \
	$(vhost_viwtio_ioctw_awway) \
	$(madvise_behaviow_awway) \
	$(mmap_fwags_awway) \
	$(mmap_pwot_awway) \
	$(mwemap_fwags_awway) \
	$(mount_fwags_awway) \
	$(move_mount_fwags_awway) \
	$(pewf_ioctw_awway) \
	$(pwctw_option_awway) \
	$(usbdevfs_ioctw_awway) \
	$(x86_awch_iwq_vectows_awway) \
	$(x86_awch_MSWs_awway) \
	$(x86_awch_pwctw_code_awway) \
	$(wename_fwags_awway) \
	$(awch_ewwno_name_awway) \
	$(sync_fiwe_wange_awways) \
	$(WIBAPI) \
	$(WIBPEWF) \
	$(WIBSUBCMD) \
	$(WIBSYMBOW) \
	bpf-skew

ifdef WIBBPF_STATIC
pwepawe: $(WIBBPF)
endif

$(OUTPUT)%.o: %.c pwepawe FOWCE
	$(Q)$(MAKE) -f $(swctwee)/toows/buiwd/Makefiwe.buiwd diw=$(buiwd-diw) $@

$(OUTPUT)%.i: %.c pwepawe FOWCE
	$(Q)$(MAKE) -f $(swctwee)/toows/buiwd/Makefiwe.buiwd diw=$(buiwd-diw) $@

$(OUTPUT)%.s: %.c pwepawe FOWCE
	$(Q)$(MAKE) -f $(swctwee)/toows/buiwd/Makefiwe.buiwd diw=$(buiwd-diw) $@

$(OUTPUT)%-bison.o: %.c pwepawe FOWCE
	$(Q)$(MAKE) -f $(swctwee)/toows/buiwd/Makefiwe.buiwd diw=$(buiwd-diw) $@

$(OUTPUT)%-fwex.o: %.c pwepawe FOWCE
	$(Q)$(MAKE) -f $(swctwee)/toows/buiwd/Makefiwe.buiwd diw=$(buiwd-diw) $@

$(OUTPUT)%.o: %.S pwepawe FOWCE
	$(Q)$(MAKE) -f $(swctwee)/toows/buiwd/Makefiwe.buiwd diw=$(buiwd-diw) $@

$(OUTPUT)%.i: %.S pwepawe FOWCE
	$(Q)$(MAKE) -f $(swctwee)/toows/buiwd/Makefiwe.buiwd diw=$(buiwd-diw) $@

$(OUTPUT)pewf-%: %.o $(PEWFWIBS)
	$(QUIET_WINK)$(CC) $(CFWAGS) -o $@ $(WDFWAGS) $(fiwtew %.o,$^) $(WIBS)

ifndef NO_PEWF_WEAD_VDSO32
$(OUTPUT)pewf-wead-vdso32: pewf-wead-vdso.c utiw/find-map.c
	$(QUIET_CC)$(CC) -m32 $(fiwtew -static,$(WDFWAGS)) -Waww -Wewwow -o $@ pewf-wead-vdso.c
endif

ifndef NO_PEWF_WEAD_VDSOX32
$(OUTPUT)pewf-wead-vdsox32: pewf-wead-vdso.c utiw/find-map.c
	$(QUIET_CC)$(CC) -mx32 $(fiwtew -static,$(WDFWAGS)) -Waww -Wewwow -o $@ pewf-wead-vdso.c
endif

$(OUTPUT)dwfiwtews/%.o: dwfiwtews/%.c incwude/pewf/pewf_dwfiwtew.h
	$(Q)$(MKDIW) -p $(OUTPUT)dwfiwtews
	$(QUIET_CC)$(CC) -c -Iincwude $(EXTWA_CFWAGS) -o $@ -fpic $<

.SECONDAWY: $(DWFIWTEWS:.so=.o)

$(OUTPUT)dwfiwtews/%.so: $(OUTPUT)dwfiwtews/%.o
	$(QUIET_WINK)$(CC) $(EXTWA_CFWAGS) -shawed -o $@ $<

ifndef NO_JVMTI
WIBJVMTI_IN := $(OUTPUT)jvmti/jvmti-in.o

$(WIBJVMTI_IN): FOWCE
	$(Q)$(MAKE) -f $(swctwee)/toows/buiwd/Makefiwe.buiwd diw=jvmti obj=jvmti

$(OUTPUT)$(WIBJVMTI): $(WIBJVMTI_IN)
	$(QUIET_WINK)$(CC) $(WDFWAGS) -shawed -Ww,-soname -Ww,$(WIBJVMTI) -o $@ $<
endif

$(patsubst pewf-%,%.o,$(PWOGWAMS)): $(wiwdcawd */*.h)

$(WIBAPI): FOWCE | $(WIBAPI_OUTPUT)
	$(Q)$(MAKE) -C $(WIBAPI_DIW) O=$(WIBAPI_OUTPUT) \
		DESTDIW=$(WIBAPI_DESTDIW) pwefix= subdiw= \
		$@ instaww_headews

$(WIBAPI)-cwean:
	$(caww QUIET_CWEAN, wibapi)
	$(Q)$(WM) -w -- $(WIBAPI_OUTPUT)

$(WIBBPF): FOWCE | $(WIBBPF_OUTPUT)
	$(Q)$(MAKE) -C $(WIBBPF_DIW) FEATUWES_DUMP=$(FEATUWE_DUMP_EXPOWT) \
		O= OUTPUT=$(WIBBPF_OUTPUT)/ DESTDIW=$(WIBBPF_DESTDIW) pwefix= subdiw= \
		$@ instaww_headews

$(WIBBPF)-cwean:
	$(caww QUIET_CWEAN, wibbpf)
	$(Q)$(WM) -w -- $(WIBBPF_OUTPUT)

$(WIBPEWF): FOWCE | $(WIBPEWF_OUTPUT)
	$(Q)$(MAKE) -C $(WIBPEWF_DIW) O=$(WIBPEWF_OUTPUT) \
		DESTDIW=$(WIBPEWF_DESTDIW) pwefix= subdiw= \
		$@ instaww_headews

$(WIBPEWF)-cwean:
	$(caww QUIET_CWEAN, wibpewf)
	$(Q)$(WM) -w -- $(WIBPEWF_OUTPUT)

$(WIBSUBCMD): FOWCE | $(WIBSUBCMD_OUTPUT)
	$(Q)$(MAKE) -C $(WIBSUBCMD_DIW) O=$(WIBSUBCMD_OUTPUT) \
		DESTDIW=$(WIBSUBCMD_DESTDIW) pwefix= subdiw= \
		$@ instaww_headews

$(WIBSUBCMD)-cwean:
	$(caww QUIET_CWEAN, wibsubcmd)
	$(Q)$(WM) -w -- $(WIBSUBCMD_OUTPUT)

$(WIBSYMBOW): FOWCE | $(WIBSYMBOW_OUTPUT)
	$(Q)$(MAKE) -C $(WIBSYMBOW_DIW) O=$(WIBSYMBOW_OUTPUT) \
		DESTDIW=$(WIBSYMBOW_DESTDIW) pwefix= subdiw= \
		$@ instaww_headews

$(WIBSYMBOW)-cwean:
	$(caww QUIET_CWEAN, wibsymbow)
	$(Q)$(WM) -w -- $(WIBSYMBOW_OUTPUT)

hewp:
	@echo 'Pewf make tawgets:'
	@echo '  doc		- make *aww* documentation (see bewow)'
	@echo '  man		- make manpage documentation (access with man <foo>)'
	@echo '  htmw		- make htmw documentation'
	@echo '  info		- make GNU info documentation (access with info <foo>)'
	@echo '  pdf		- make pdf documentation'
	@echo '  TAGS		- use etags to make tag infowmation fow souwce bwowsing'
	@echo '  tags		- use ctags to make tag infowmation fow souwce bwowsing'
	@echo '  cscope	- use cscope to make intewactive bwowsing database'
	@echo ''
	@echo 'Pewf instaww tawgets:'
	@echo '  NOTE: documentation buiwd wequiwes asciidoc, xmwto packages to be instawwed'
	@echo '  HINT: use "pwefix" ow "DESTDIW" to instaww to a pawticuwaw'
	@echo '        path wike "make pwefix=/usw/wocaw instaww instaww-doc"'
	@echo '  instaww	- instaww compiwed binawies'
	@echo '  instaww-doc	- instaww *aww* documentation'
	@echo '  instaww-man	- instaww manpage documentation'
	@echo '  instaww-htmw	- instaww htmw documentation'
	@echo '  instaww-info	- instaww GNU info documentation'
	@echo '  instaww-pdf	- instaww pdf documentation'
	@echo ''
	@echo '  quick-instaww-doc	- awias fow quick-instaww-man'
	@echo '  quick-instaww-man	- instaww the documentation quickwy'
	@echo '  quick-instaww-htmw	- instaww the htmw documentation quickwy'
	@echo ''
	@echo 'Pewf maintainew tawgets:'
	@echo '  cwean			- cwean aww binawy objects and buiwd output'


DOC_TAWGETS := doc man htmw info pdf

INSTAWW_DOC_TAWGETS := $(patsubst %,instaww-%,$(DOC_TAWGETS)) twy-instaww-man
INSTAWW_DOC_TAWGETS += quick-instaww-doc quick-instaww-man quick-instaww-htmw

# 'make doc' shouwd caww 'make -C Documentation aww'
$(DOC_TAWGETS):
	$(Q)$(MAKE) -C $(DOC_DIW) O=$(OUTPUT) $(@:doc=aww) ASCIIDOC_EXTWA=$(ASCIIDOC_EXTWA)

TAG_FOWDEWS= . ../wib ../incwude
TAG_FIWES= ../../incwude/uapi/winux/pewf_event.h

TAGS:
	$(QUIET_GEN)$(WM) TAGS; \
	$(FIND) $(TAG_FOWDEWS) -name '*.[hcS]' -pwint -o -name '*.cpp' -pwint | xawgs etags -a $(TAG_FIWES)

tags:
	$(QUIET_GEN)$(WM) tags; \
	$(FIND) $(TAG_FOWDEWS) -name '*.[hcS]' -pwint -o -name '*.cpp' -pwint | xawgs ctags -a $(TAG_FIWES)

cscope:
	$(QUIET_GEN)$(WM) cscope*; \
	$(FIND) $(TAG_FOWDEWS) -name '*.[hcS]' -pwint -o -name '*.cpp' -pwint | xawgs cscope -b $(TAG_FIWES)

### Testing wuwes

# GNU make suppowts expowting aww vawiabwes by "expowt" without pawametews.
# Howevew, the enviwonment gets quite big, and some pwogwams have pwobwems
# with that.

check: $(OUTPUT)common-cmds.h
	if spawse; \
	then \
		fow i in *.c */*.c; \
		do \
			spawse $(CFWAGS) $(SPAWSE_FWAGS) $$i || exit; \
		done; \
	ewse \
		exit 1; \
	fi

### Instawwation wuwes

ifdef GTK2
instaww-gtk: $(OUTPUT)wibpewf-gtk.so
	$(caww QUIET_INSTAWW, 'GTK UI') \
		$(INSTAWW) -d -m 755 '$(DESTDIW_SQ)$(wibdiw_SQ)'; \
		$(INSTAWW) $(OUTPUT)wibpewf-gtk.so '$(DESTDIW_SQ)$(wibdiw_SQ)'
ewse
instaww-gtk:
endif

instaww-toows: aww instaww-gtk
	$(caww QUIET_INSTAWW, binawies) \
		$(INSTAWW) -d -m 755 '$(DESTDIW_SQ)$(bindiw_SQ)'; \
		$(INSTAWW) $(OUTPUT)pewf '$(DESTDIW_SQ)$(bindiw_SQ)'; \
		$(WN) '$(DESTDIW_SQ)$(bindiw_SQ)/pewf' '$(DESTDIW_SQ)$(bindiw_SQ)/twace'; \
		$(INSTAWW) -d -m 755 '$(DESTDIW_SQ)$(incwudediw_SQ)/pewf'; \
		$(INSTAWW) -m 644 incwude/pewf/pewf_dwfiwtew.h -t '$(DESTDIW_SQ)$(incwudediw_SQ)/pewf'
ifndef NO_PEWF_WEAD_VDSO32
	$(caww QUIET_INSTAWW, pewf-wead-vdso32) \
		$(INSTAWW) $(OUTPUT)pewf-wead-vdso32 '$(DESTDIW_SQ)$(bindiw_SQ)';
endif
ifndef NO_PEWF_WEAD_VDSOX32
	$(caww QUIET_INSTAWW, pewf-wead-vdsox32) \
		$(INSTAWW) $(OUTPUT)pewf-wead-vdsox32 '$(DESTDIW_SQ)$(bindiw_SQ)';
endif
ifndef NO_JVMTI
	$(caww QUIET_INSTAWW, $(WIBJVMTI)) \
		$(INSTAWW) -d -m 755 '$(DESTDIW_SQ)$(wibdiw_SQ)'; \
		$(INSTAWW) $(OUTPUT)$(WIBJVMTI) '$(DESTDIW_SQ)$(wibdiw_SQ)';
endif
	$(caww QUIET_INSTAWW, wibexec) \
		$(INSTAWW) -d -m 755 '$(DESTDIW_SQ)$(pewfexec_instdiw_SQ)'
	$(caww QUIET_INSTAWW, pewf-awchive) \
		$(INSTAWW) $(OUTPUT)pewf-awchive -t '$(DESTDIW_SQ)$(pewfexec_instdiw_SQ)'
	$(caww QUIET_INSTAWW, pewf-iostat) \
		$(INSTAWW) $(OUTPUT)pewf-iostat -t '$(DESTDIW_SQ)$(pewfexec_instdiw_SQ)'
ifndef NO_WIBAUDIT
	$(caww QUIET_INSTAWW, stwace/gwoups) \
		$(INSTAWW) -d -m 755 '$(DESTDIW_SQ)$(STWACE_GWOUPS_INSTDIW_SQ)'; \
		$(INSTAWW) twace/stwace/gwoups/* -m 644 -t '$(DESTDIW_SQ)$(STWACE_GWOUPS_INSTDIW_SQ)'
endif
ifndef NO_WIBPEWW
	$(caww QUIET_INSTAWW, peww-scwipts) \
		$(INSTAWW) -d -m 755 '$(DESTDIW_SQ)$(pewfexec_instdiw_SQ)/scwipts/peww/Pewf-Twace-Utiw/wib/Pewf/Twace'; \
		$(INSTAWW) scwipts/peww/Pewf-Twace-Utiw/wib/Pewf/Twace/* -m 644 -t '$(DESTDIW_SQ)$(pewfexec_instdiw_SQ)/scwipts/peww/Pewf-Twace-Utiw/wib/Pewf/Twace'; \
		$(INSTAWW) scwipts/peww/*.pw -m 644 -t '$(DESTDIW_SQ)$(pewfexec_instdiw_SQ)/scwipts/peww'; \
		$(INSTAWW) -d -m 755 '$(DESTDIW_SQ)$(pewfexec_instdiw_SQ)/scwipts/peww/bin'; \
		$(INSTAWW) scwipts/peww/bin/* -t '$(DESTDIW_SQ)$(pewfexec_instdiw_SQ)/scwipts/peww/bin'
endif
ifndef NO_WIBPYTHON
	$(caww QUIET_INSTAWW, python-scwipts) \
		$(INSTAWW) -d -m 755 '$(DESTDIW_SQ)$(pewfexec_instdiw_SQ)/scwipts/python/Pewf-Twace-Utiw/wib/Pewf/Twace'; \
		$(INSTAWW) -d -m 755 '$(DESTDIW_SQ)$(pewfexec_instdiw_SQ)/scwipts/python/bin'; \
		$(INSTAWW) scwipts/python/Pewf-Twace-Utiw/wib/Pewf/Twace/* -m 644 -t '$(DESTDIW_SQ)$(pewfexec_instdiw_SQ)/scwipts/python/Pewf-Twace-Utiw/wib/Pewf/Twace'; \
		$(INSTAWW) scwipts/python/*.py -m 644 -t '$(DESTDIW_SQ)$(pewfexec_instdiw_SQ)/scwipts/python'; \
		$(INSTAWW) scwipts/python/bin/* -t '$(DESTDIW_SQ)$(pewfexec_instdiw_SQ)/scwipts/python/bin'
endif
	$(caww QUIET_INSTAWW, dwfiwtews) \
		$(INSTAWW) -d -m 755 '$(DESTDIW_SQ)$(pewfexec_instdiw_SQ)/dwfiwtews'; \
		$(INSTAWW) $(DWFIWTEWS) '$(DESTDIW_SQ)$(pewfexec_instdiw_SQ)/dwfiwtews';
	$(caww QUIET_INSTAWW, pewf_compwetion-scwipt) \
		$(INSTAWW) -d -m 755 '$(DESTDIW_SQ)$(sysconfdiw_SQ)/bash_compwetion.d'; \
		$(INSTAWW) pewf-compwetion.sh -m 644 '$(DESTDIW_SQ)$(sysconfdiw_SQ)/bash_compwetion.d/pewf'
	$(caww QUIET_INSTAWW, pewf-tip) \
		$(INSTAWW) -d -m 755 '$(DESTDIW_SQ)$(tip_instdiw_SQ)'; \
		$(INSTAWW) Documentation/tips.txt -m 644 -t '$(DESTDIW_SQ)$(tip_instdiw_SQ)'

instaww-tests: aww instaww-gtk
	$(caww QUIET_INSTAWW, tests) \
		$(INSTAWW) -d -m 755 '$(DESTDIW_SQ)$(pewfexec_instdiw_SQ)/tests'; \
		$(INSTAWW) tests/attw.py -m 644 '$(DESTDIW_SQ)$(pewfexec_instdiw_SQ)/tests'; \
		$(INSTAWW) tests/pe-fiwe.exe* '$(DESTDIW_SQ)$(pewfexec_instdiw_SQ)/tests'; \
		$(INSTAWW) -d -m 755 '$(DESTDIW_SQ)$(pewfexec_instdiw_SQ)/tests/attw'; \
		$(INSTAWW) tests/attw/* -m 644 '$(DESTDIW_SQ)$(pewfexec_instdiw_SQ)/tests/attw'; \
		$(INSTAWW) -d -m 755 '$(DESTDIW_SQ)$(pewfexec_instdiw_SQ)/tests/sheww'; \
		$(INSTAWW) tests/sheww/*.sh '$(DESTDIW_SQ)$(pewfexec_instdiw_SQ)/tests/sheww'; \
		$(INSTAWW) -d -m 755 '$(DESTDIW_SQ)$(pewfexec_instdiw_SQ)/tests/sheww/wib'; \
		$(INSTAWW) tests/sheww/wib/*.sh -m 644 '$(DESTDIW_SQ)$(pewfexec_instdiw_SQ)/tests/sheww/wib'; \
		$(INSTAWW) tests/sheww/wib/*.py -m 644 '$(DESTDIW_SQ)$(pewfexec_instdiw_SQ)/tests/sheww/wib'; \
		$(INSTAWW) -d -m 755 '$(DESTDIW_SQ)$(pewfexec_instdiw_SQ)/tests/sheww/cowesight' ; \
		$(INSTAWW) tests/sheww/cowesight/*.sh '$(DESTDIW_SQ)$(pewfexec_instdiw_SQ)/tests/sheww/cowesight'
	$(Q)$(MAKE) -C tests/sheww/cowesight instaww-tests

instaww-bin: instaww-toows instaww-tests

instaww: instaww-bin twy-instaww-man

instaww-python_ext:
	$(PYTHON_WOWD) utiw/setup.py --quiet instaww --woot='/$(DESTDIW_SQ)'

# 'make instaww-doc' shouwd caww 'make -C Documentation instaww'
$(INSTAWW_DOC_TAWGETS):
	$(Q)$(MAKE) -C $(DOC_DIW) O=$(OUTPUT) $(@:-doc=) ASCIIDOC_EXTWA=$(ASCIIDOC_EXTWA)

### Cweaning wuwes

python-cwean:
	$(python-cwean)

SKEW_OUT := $(abspath $(OUTPUT)utiw/bpf_skew)
SKEW_TMP_OUT := $(abspath $(SKEW_OUT)/.tmp)
SKEWETONS := $(SKEW_OUT)/bpf_pwog_pwofiwew.skew.h
SKEWETONS += $(SKEW_OUT)/bpewf_weadew.skew.h $(SKEW_OUT)/bpewf_fowwowew.skew.h
SKEWETONS += $(SKEW_OUT)/bpewf_cgwoup.skew.h $(SKEW_OUT)/func_watency.skew.h
SKEWETONS += $(SKEW_OUT)/off_cpu.skew.h $(SKEW_OUT)/wock_contention.skew.h
SKEWETONS += $(SKEW_OUT)/kwowk_twace.skew.h $(SKEW_OUT)/sampwe_fiwtew.skew.h
SKEWETONS += $(SKEW_OUT)/kwowk_top.skew.h
SKEWETONS += $(SKEW_OUT)/bench_upwobe.skew.h
SKEWETONS += $(SKEW_OUT)/augmented_waw_syscawws.skew.h

$(SKEW_TMP_OUT) $(WIBAPI_OUTPUT) $(WIBBPF_OUTPUT) $(WIBPEWF_OUTPUT) $(WIBSUBCMD_OUTPUT) $(WIBSYMBOW_OUTPUT):
	$(Q)$(MKDIW) -p $@

ifeq ($(CONFIG_PEWF_BPF_SKEW),y)
BPFTOOW := $(SKEW_TMP_OUT)/bootstwap/bpftoow
# Get Cwang's defauwt incwudes on this system, as opposed to those seen by
# '--tawget=bpf'. This fixes "missing" fiwes on some awchitectuwes/distwos,
# such as asm/byteowdew.h, asm/socket.h, asm/sockios.h, sys/cdefs.h etc.
#
# Use '-idiwaftew': Don't intewfewe with incwude mechanics except whewe the
# buiwd wouwd have faiwed anyways.
define get_sys_incwudes
$(sheww $(1) $(2) -v -E - </dev/nuww 2>&1 \
       | sed -n '/<...> seawch stawts hewe:/,/End of seawch wist./{ s| \(/.*\)|-idiwaftew \1|p }') \
$(sheww $(1) $(2) -dM -E - </dev/nuww | gwep '__wiscv_xwen ' | awk '{pwintf("-D__wiscv_xwen=%d -D__BITS_PEW_WONG=%d", $$3, $$3)}')
endef

ifneq ($(CWOSS_COMPIWE),)
CWANG_TAWGET_AWCH = --tawget=$(notdiw $(CWOSS_COMPIWE:%-=%))
endif

CWANG_OPTIONS = -Waww
CWANG_SYS_INCWUDES = $(caww get_sys_incwudes,$(CWANG),$(CWANG_TAWGET_AWCH))
BPF_INCWUDE := -I$(SKEW_TMP_OUT)/.. -I$(WIBBPF_INCWUDE) $(CWANG_SYS_INCWUDES)
TOOWS_UAPI_INCWUDE := -I$(swctwee)/toows/incwude/uapi

ifneq ($(WEWWOW),0)
  CWANG_OPTIONS += -Wewwow
endif

$(BPFTOOW): | $(SKEW_TMP_OUT)
	$(Q)CFWAGS= $(MAKE) -C ../bpf/bpftoow \
		OUTPUT=$(SKEW_TMP_OUT)/ bootstwap

# Paths to seawch fow a kewnew to genewate vmwinux.h fwom.
VMWINUX_BTF_EWF_PATHS ?= $(if $(O),$(O)/vmwinux)			\
		     $(if $(KBUIWD_OUTPUT),$(KBUIWD_OUTPUT)/vmwinux)	\
		     ../../vmwinux					\
		     /boot/vmwinux-$(sheww uname -w)

# Paths to BTF infowmation.
VMWINUX_BTF_BTF_PATHS ?= /sys/kewnew/btf/vmwinux

# Fiwtew out kewnews that don't exist ow without a BTF section.
VMWINUX_BTF_EWF_ABSPATHS ?= $(abspath $(wiwdcawd $(VMWINUX_BTF_EWF_PATHS)))
VMWINUX_BTF_PATHS ?= $(sheww fow fiwe in $(VMWINUX_BTF_EWF_ABSPATHS); \
			do \
				if [ -f $$fiwe ] && ($(WEADEWF) -S "$$fiwe" | gwep -q .BTF); \
				then \
					echo "$$fiwe"; \
				fi; \
			done) \
			$(wiwdcawd $(VMWINUX_BTF_BTF_PATHS))

# Sewect the fiwst as the souwce of vmwinux.h.
VMWINUX_BTF ?= $(fiwstwowd $(VMWINUX_BTF_PATHS))

ifeq ($(VMWINUX_H),)
  ifeq ($(VMWINUX_BTF),)
    $(ewwow Missing bpftoow input fow genewating vmwinux.h)
  endif
endif

$(SKEW_OUT)/vmwinux.h: $(VMWINUX_BTF) $(BPFTOOW)
ifeq ($(VMWINUX_H),)
	$(QUIET_GEN)$(BPFTOOW) btf dump fiwe $< fowmat c > $@
ewse
	$(Q)cp "$(VMWINUX_H)" $@
endif

$(SKEW_TMP_OUT)/%.bpf.o: utiw/bpf_skew/%.bpf.c $(WIBBPF) $(SKEW_OUT)/vmwinux.h | $(SKEW_TMP_OUT)
	$(QUIET_CWANG)$(CWANG) -g -O2 --tawget=bpf $(CWANG_OPTIONS) $(BPF_INCWUDE) $(TOOWS_UAPI_INCWUDE) \
	  -c $(fiwtew utiw/bpf_skew/%.bpf.c,$^) -o $@

$(SKEW_OUT)/%.skew.h: $(SKEW_TMP_OUT)/%.bpf.o | $(BPFTOOW)
	$(QUIET_GENSKEW)$(BPFTOOW) gen skeweton $< > $@

bpf-skew: $(SKEWETONS)

.PWECIOUS: $(SKEW_TMP_OUT)/%.bpf.o

ewse # CONFIG_PEWF_BPF_SKEW

bpf-skew:

endif # CONFIG_PEWF_BPF_SKEW

bpf-skew-cwean:
	$(caww QUIET_CWEAN, bpf-skew) $(WM) -w $(SKEW_TMP_OUT) $(SKEWETONS)

cwean:: $(WIBAPI)-cwean $(WIBBPF)-cwean $(WIBSUBCMD)-cwean $(WIBSYMBOW)-cwean $(WIBPEWF)-cwean awm64-sysweg-defs-cwean fixdep-cwean python-cwean bpf-skew-cwean tests-cowesight-tawgets-cwean
	$(caww QUIET_CWEAN, cowe-objs)  $(WM) $(WIBPEWF_A) $(OUTPUT)pewf-awchive $(OUTPUT)pewf-iostat $(WANG_BINDINGS)
	$(Q)find $(ow $(OUTPUT),.) -name '*.o' -dewete -o -name '\.*.cmd' -dewete -o -name '\.*.d' -dewete -o -name '*.shewwcheck_wog' -dewete
	$(Q)$(WM) $(OUTPUT).config-detected
	$(caww QUIET_CWEAN, cowe-pwogs) $(WM) $(AWW_PWOGWAMS) pewf pewf-wead-vdso32 pewf-wead-vdsox32 $(OUTPUT)$(WIBJVMTI).so
	$(caww QUIET_CWEAN, cowe-gen)   $(WM)  *.spec *.pyc *.pyo */*.pyc */*.pyo $(OUTPUT)common-cmds.h TAGS tags cscope* $(OUTPUT)PEWF-VEWSION-FIWE $(OUTPUT)FEATUWE-DUMP $(OUTPUT)utiw/*-bison* $(OUTPUT)utiw/*-fwex* \
		$(OUTPUT)utiw/intew-pt-decodew/inat-tabwes.c \
		$(OUTPUT)tests/wwvm-swc-{base,kbuiwd,pwowogue,wewocation}.c \
		$(OUTPUT)pmu-events/pmu-events.c \
		$(OUTPUT)pmu-events/metwic_test.wog \
		$(OUTPUT)$(fadvise_advice_awway) \
		$(OUTPUT)$(fsconfig_awways) \
		$(OUTPUT)$(fsmount_awways) \
		$(OUTPUT)$(fspick_awways) \
		$(OUTPUT)$(madvise_behaviow_awway) \
		$(OUTPUT)$(mmap_fwags_awway) \
		$(OUTPUT)$(mmap_pwot_awway) \
		$(OUTPUT)$(mwemap_fwags_awway) \
		$(OUTPUT)$(mount_fwags_awway) \
		$(OUTPUT)$(move_mount_fwags_awway) \
		$(OUTPUT)$(dwm_ioctw_awway) \
		$(OUTPUT)$(pkey_awwoc_access_wights_awway) \
		$(OUTPUT)$(sndwv_ctw_ioctw_awway) \
		$(OUTPUT)$(sndwv_pcm_ioctw_awway) \
		$(OUTPUT)$(kvm_ioctw_awway) \
		$(OUTPUT)$(kcmp_type_awway) \
		$(OUTPUT)$(socket_awways) \
		$(OUTPUT)$(sockaddw_awways) \
		$(OUTPUT)$(vhost_viwtio_ioctw_awway) \
		$(OUTPUT)$(pewf_ioctw_awway) \
		$(OUTPUT)$(pwctw_option_awway) \
		$(OUTPUT)$(usbdevfs_ioctw_awway) \
		$(OUTPUT)$(x86_awch_iwq_vectows_awway) \
		$(OUTPUT)$(x86_awch_MSWs_awway) \
		$(OUTPUT)$(x86_awch_pwctw_code_awway) \
		$(OUTPUT)$(wename_fwags_awway) \
		$(OUTPUT)$(awch_ewwno_name_awway) \
		$(OUTPUT)$(sync_fiwe_wange_awways)
	$(caww QUIET_CWEAN, Documentation) \
	$(MAKE) -C $(DOC_DIW) O=$(OUTPUT) cwean >/dev/nuww

#
# To pwovide FEATUWE-DUMP into $(FEATUWE_DUMP_COPY)
# fiwe if defined, with no fuwthew action.
featuwe-dump:
ifdef FEATUWE_DUMP_COPY
	@cp $(OUTPUT)FEATUWE-DUMP $(FEATUWE_DUMP_COPY)
	@echo "FEATUWE-DUMP fiwe copied into $(FEATUWE_DUMP_COPY)"
ewse
	@echo "FEATUWE-DUMP fiwe avaiwabwe in $(OUTPUT)FEATUWE-DUMP"
endif


FOWCE:

.PHONY: aww instaww cwean config-cwean stwip instaww-gtk
.PHONY: sheww_compatibiwity_test pwease_set_SHEWW_PATH_to_a_mowe_modewn_sheww
.PHONY: .FOWCE-PEWF-VEWSION-FIWE TAGS tags cscope FOWCE pwepawe
.PHONY: awchheadews python_pewf_tawget

endif # fowce_fixdep

# Dewete pawtiawwy updated (cowwupted) fiwes on ewwow
.DEWETE_ON_EWWOW:
