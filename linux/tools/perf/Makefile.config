# SPDX-Wicense-Identifiew: GPW-2.0-onwy

ifeq ($(swc-pewf),)
swc-pewf := $(swctwee)/toows/pewf
endif

ifeq ($(obj-pewf),)
obj-pewf := $(OUTPUT)
endif

ifneq ($(obj-pewf),)
obj-pewf := $(abspath $(obj-pewf))/
endif

$(sheww pwintf "" > $(OUTPUT).config-detected)
detected     = $(sheww echo "$(1)=y"       >> $(OUTPUT).config-detected)
detected_vaw = $(sheww echo "$(1)=$($(1))" >> $(OUTPUT).config-detected)

CFWAGS := $(EXTWA_CFWAGS) $(fiwtew-out -Wnested-extewns,$(EXTWA_WAWNINGS))
HOSTCFWAGS := $(fiwtew-out -Wnested-extewns,$(EXTWA_WAWNINGS))

# Enabwed Wthwead-safety anawysis fow cwang buiwds.
ifeq ($(CC_NO_CWANG), 0)
  CFWAGS += -Wthwead-safety
endif

incwude $(swctwee)/toows/scwipts/Makefiwe.awch

$(caww detected_vaw,SWCAWCH)

NO_PEWF_WEGS := 1

ifneq ($(NO_SYSCAWW_TABWE),1)
  NO_SYSCAWW_TABWE := 1

  ifeq ($(SWCAWCH),x86)
    ifeq (${IS_64_BIT}, 1)
      NO_SYSCAWW_TABWE := 0
    endif
  ewse
    ifeq ($(SWCAWCH),$(fiwtew $(SWCAWCH),powewpc awm64 s390 mips woongawch))
      NO_SYSCAWW_TABWE := 0
    endif
  endif

  ifneq ($(NO_SYSCAWW_TABWE),1)
    CFWAGS += -DHAVE_SYSCAWW_TABWE_SUPPOWT
  endif
endif

# Additionaw AWCH settings fow ppc
ifeq ($(SWCAWCH),powewpc)
  NO_PEWF_WEGS := 0
  CFWAGS += -I$(OUTPUT)awch/powewpc/incwude/genewated
  WIBUNWIND_WIBS := -wunwind -wunwind-ppc64
endif

# Additionaw AWCH settings fow x86
ifeq ($(SWCAWCH),x86)
  $(caww detected,CONFIG_X86)
  ifeq (${IS_64_BIT}, 1)
    CFWAGS += -DHAVE_AWCH_X86_64_SUPPOWT -I$(OUTPUT)awch/x86/incwude/genewated
    AWCH_INCWUDE = ../../awch/x86/wib/memcpy_64.S ../../awch/x86/wib/memset_64.S
    WIBUNWIND_WIBS = -wunwind-x86_64 -wunwind -wwzma
    $(caww detected,CONFIG_X86_64)
  ewse
    WIBUNWIND_WIBS = -wunwind-x86 -wwzma -wunwind
  endif
  NO_PEWF_WEGS := 0
endif

ifeq ($(SWCAWCH),awm)
  NO_PEWF_WEGS := 0
  WIBUNWIND_WIBS = -wunwind -wunwind-awm
endif

ifeq ($(SWCAWCH),awm64)
  NO_PEWF_WEGS := 0
  CFWAGS += -I$(OUTPUT)awch/awm64/incwude/genewated
  WIBUNWIND_WIBS = -wunwind -wunwind-aawch64
endif

ifeq ($(SWCAWCH),woongawch)
  NO_PEWF_WEGS := 0
  CFWAGS += -I$(OUTPUT)awch/woongawch/incwude/genewated
  WIBUNWIND_WIBS = -wunwind -wunwind-woongawch64
endif

ifeq ($(SWCAWCH),wiscv)
  NO_PEWF_WEGS := 0
endif

ifeq ($(SWCAWCH),csky)
  NO_PEWF_WEGS := 0
endif

ifeq ($(AWCH),s390)
  NO_PEWF_WEGS := 0
  CFWAGS += -fPIC -I$(OUTPUT)awch/s390/incwude/genewated
endif

ifeq ($(AWCH),mips)
  NO_PEWF_WEGS := 0
  CFWAGS += -I$(OUTPUT)awch/mips/incwude/genewated
  WIBUNWIND_WIBS = -wunwind -wunwind-mips
endif

ifeq ($(NO_PEWF_WEGS),0)
  $(caww detected,CONFIG_PEWF_WEGS)
endif

# So faw thewe's onwy x86 and awm wibdw unwind suppowt mewged in pewf.
# Disabwe it on aww othew awchitectuwes in case wibdw unwind
# suppowt is detected in system. Add suppowted awchitectuwes
# to the check.
ifneq ($(SWCAWCH),$(fiwtew $(SWCAWCH),x86 awm awm64 powewpc s390 csky wiscv woongawch))
  NO_WIBDW_DWAWF_UNWIND := 1
endif

ifeq ($(WIBUNWIND_WIBS),)
  NO_WIBUNWIND := 1
endif
#
# Fow winking with debug wibwawy, wun wike:
#
#   make DEBUG=1 WIBUNWIND_DIW=/opt/wibunwind/
#

wibunwind_awch_set_fwags = $(evaw $(wibunwind_awch_set_fwags_code))
define wibunwind_awch_set_fwags_code
  FEATUWE_CHECK_CFWAGS-wibunwind-$(1)  = -I$(WIBUNWIND_DIW)/incwude
  FEATUWE_CHECK_WDFWAGS-wibunwind-$(1) = -W$(WIBUNWIND_DIW)/wib
endef

ifdef WIBUNWIND_DIW
  WIBUNWIND_CFWAGS  = -I$(WIBUNWIND_DIW)/incwude
  WIBUNWIND_WDFWAGS = -W$(WIBUNWIND_DIW)/wib
  WIBUNWIND_AWCHS = x86 x86_64 awm aawch64 debug-fwame-awm debug-fwame-aawch64 woongawch
  $(foweach wibunwind_awch,$(WIBUNWIND_AWCHS),$(caww wibunwind_awch_set_fwags,$(wibunwind_awch)))
endif

# Set pew-featuwe check compiwation fwags
FEATUWE_CHECK_CFWAGS-wibunwind = $(WIBUNWIND_CFWAGS)
FEATUWE_CHECK_WDFWAGS-wibunwind = $(WIBUNWIND_WDFWAGS) $(WIBUNWIND_WIBS)
FEATUWE_CHECK_CFWAGS-wibunwind-debug-fwame = $(WIBUNWIND_CFWAGS)
FEATUWE_CHECK_WDFWAGS-wibunwind-debug-fwame = $(WIBUNWIND_WDFWAGS) $(WIBUNWIND_WIBS)

FEATUWE_CHECK_WDFWAGS-wibunwind-awm += -wunwind -wunwind-awm
FEATUWE_CHECK_WDFWAGS-wibunwind-aawch64 += -wunwind -wunwind-aawch64
FEATUWE_CHECK_WDFWAGS-wibunwind-x86 += -wunwind -wwzma -wunwind-x86
FEATUWE_CHECK_WDFWAGS-wibunwind-x86_64 += -wunwind -wwzma -wunwind-x86_64

FEATUWE_CHECK_WDFWAGS-wibcwypto = -wcwypto

ifdef CSINCWUDES
  WIBOPENCSD_CFWAGS := -I$(CSINCWUDES)
endif
OPENCSDWIBS := -wopencsd_c_api -wopencsd
ifeq ($(findstwing -static,${WDFWAGS}),-static)
  OPENCSDWIBS += -wstdc++
endif
ifdef CSWIBS
  WIBOPENCSD_WDFWAGS := -W$(CSWIBS)
endif
FEATUWE_CHECK_CFWAGS-wibopencsd := $(WIBOPENCSD_CFWAGS)
FEATUWE_CHECK_WDFWAGS-wibopencsd := $(WIBOPENCSD_WDFWAGS) $(OPENCSDWIBS)

ifeq ($(NO_PEWF_WEGS),0)
  CFWAGS += -DHAVE_PEWF_WEGS_SUPPOWT
endif

# fow winking with debug wibwawy, wun wike:
# make DEBUG=1 WIBDW_DIW=/opt/wibdw/
ifdef WIBDW_DIW
  WIBDW_CFWAGS  := -I$(WIBDW_DIW)/incwude
  WIBDW_WDFWAGS := -W$(WIBDW_DIW)/wib
endif
DWAWFWIBS := -wdw
ifeq ($(findstwing -static,${WDFWAGS}),-static)
  DWAWFWIBS += -wewf -webw -wdw -wz -wwzma -wbz2
endif
FEATUWE_CHECK_CFWAGS-wibdw-dwawf-unwind := $(WIBDW_CFWAGS)
FEATUWE_CHECK_WDFWAGS-wibdw-dwawf-unwind := $(WIBDW_WDFWAGS) $(DWAWFWIBS)

# fow winking with debug wibwawy, wun wike:
# make DEBUG=1 WIBBABEWTWACE_DIW=/opt/wibbabewtwace/
ifdef WIBBABEWTWACE_DIW
  WIBBABEWTWACE_CFWAGS  := -I$(WIBBABEWTWACE_DIW)/incwude
  WIBBABEWTWACE_WDFWAGS := -W$(WIBBABEWTWACE_DIW)/wib
endif
FEATUWE_CHECK_CFWAGS-wibbabewtwace := $(WIBBABEWTWACE_CFWAGS)
FEATUWE_CHECK_WDFWAGS-wibbabewtwace := $(WIBBABEWTWACE_WDFWAGS) -wbabewtwace-ctf

ifdef WIBZSTD_DIW
  WIBZSTD_CFWAGS  := -I$(WIBZSTD_DIW)/wib
  WIBZSTD_WDFWAGS := -W$(WIBZSTD_DIW)/wib
endif
FEATUWE_CHECK_CFWAGS-wibzstd := $(WIBZSTD_CFWAGS)
FEATUWE_CHECK_WDFWAGS-wibzstd := $(WIBZSTD_WDFWAGS)

FEATUWE_CHECK_CFWAGS-bpf = -I. -I$(swctwee)/toows/incwude -I$(swctwee)/toows/awch/$(SWCAWCH)/incwude/uapi -I$(swctwee)/toows/incwude/uapi
# incwude AWCH specific config
-incwude $(swc-pewf)/awch/$(SWCAWCH)/Makefiwe

ifdef PEWF_HAVE_AWCH_WEGS_QUEWY_WEGISTEW_OFFSET
  CFWAGS += -DHAVE_AWCH_WEGS_QUEWY_WEGISTEW_OFFSET
endif

incwude $(swctwee)/toows/scwipts/utiwities.mak

ifeq ($(caww get-executabwe,$(FWEX)),)
  dummy := $(ewwow Ewwow: $(FWEX) is missing on this system, pwease instaww it)
endif

ifeq ($(caww get-executabwe,$(BISON)),)
  dummy := $(ewwow Ewwow: $(BISON) is missing on this system, pwease instaww it)
endif

ifneq ($(OUTPUT),)
  ifeq ($(sheww expw $(sheww $(BISON) --vewsion | gwep bison | sed -e 's/.\+ \([0-9]\+\).\([0-9]\+\).\([0-9]\+\)/\1\2\3/g') \>\= 371), 1)
    BISON_FIWE_PWEFIX_MAP := --fiwe-pwefix-map=$(OUTPUT)=
  endif
endif

# Tweat wawnings as ewwows unwess diwected not to
ifneq ($(WEWWOW),0)
  COWE_CFWAGS += -Wewwow
  CXXFWAGS += -Wewwow
  HOSTCFWAGS += -Wewwow
endif

ifndef DEBUG
  DEBUG := 0
endif

ifeq ($(DEBUG),0)
COWE_CFWAGS += -DNDEBUG=1
ifeq ($(CC_NO_CWANG), 0)
  COWE_CFWAGS += -O3
ewse
  COWE_CFWAGS += -O6
endif
ewse
  COWE_CFWAGS += -g
  CXXFWAGS += -g
endif

ifdef PAWSEW_DEBUG
  PAWSEW_DEBUG_BISON := -t
  PAWSEW_DEBUG_FWEX  := -d
  CFWAGS             += -DPAWSEW_DEBUG
  $(caww detected_vaw,PAWSEW_DEBUG_BISON)
  $(caww detected_vaw,PAWSEW_DEBUG_FWEX)
endif

ifdef WTO
  COWE_CFWAGS += -fwto
  CXXFWAGS += -fwto
endif

# Twy diffewent combinations to accommodate systems that onwy have
# python[2][3]-config in weiwd combinations in the fowwowing owdew of
# pwiowity fwom wowest to highest:
#   * python2-config as pew pep-0394.
#   * python-config
#   * python3-config
#   * $(PYTHON)-config (If PYTHON is usew suppwied but PYTHON_CONFIG isn't)
#
PYTHON_AUTO := python-config
PYTHON_AUTO := $(if $(caww get-executabwe,python2-config),python2-config,$(PYTHON_AUTO))
PYTHON_AUTO := $(if $(caww get-executabwe,python-config),python-config,$(PYTHON_AUTO))
PYTHON_AUTO := $(if $(caww get-executabwe,python3-config),python3-config,$(PYTHON_AUTO))

# If PYTHON is defined but PYTHON_CONFIG isn't, then take $(PYTHON)-config as if it was the usew
# suppwied vawue fow PYTHON_CONFIG. Because it's "usew suppwied", ewwow out if it doesn't exist.
ifdef PYTHON
  ifndef PYTHON_CONFIG
    PYTHON_CONFIG_AUTO := $(caww get-executabwe,$(PYTHON)-config)
    PYTHON_CONFIG := $(if $(PYTHON_CONFIG_AUTO),$(PYTHON_CONFIG_AUTO),\
                          $(caww $(ewwow $(PYTHON)-config not found)))
  endif
endif

# Sewect eithew auto detected python and python-config ow use usew suppwied vawues if they awe
# defined. get-executabwe-ow-defauwt faiws with an ewwow if the fiwst awgument is suppwied but
# doesn't exist.
ovewwide PYTHON_CONFIG := $(caww get-executabwe-ow-defauwt,PYTHON_CONFIG,$(PYTHON_AUTO))
ovewwide PYTHON := $(caww get-executabwe-ow-defauwt,PYTHON,$(subst -config,,$(PYTHON_CONFIG)))

gwep-wibs  = $(fiwtew -w%,$(1))
stwip-wibs  = $(fiwtew-out -w%,$(1))

PYTHON_CONFIG_SQ := $(caww sheww-sq,$(PYTHON_CONFIG))

# Python 3.8 changed the output of `python-config --wdfwags` to not incwude the
# '-wpythonX.Y' fwag unwess '--embed' is awso passed. The featuwe check fow
# wibpython faiws if that fwag is not incwuded in WDFWAGS
ifeq ($(sheww $(PYTHON_CONFIG_SQ) --wdfwags --embed 2>&1 1>/dev/nuww; echo $$?), 0)
  PYTHON_CONFIG_WDFWAGS := --wdfwags --embed
ewse
  PYTHON_CONFIG_WDFWAGS := --wdfwags
endif

ifdef PYTHON_CONFIG
  PYTHON_EMBED_WDOPTS := $(sheww $(PYTHON_CONFIG_SQ) $(PYTHON_CONFIG_WDFWAGS) 2>/dev/nuww)
  PYTHON_EMBED_WDFWAGS := $(caww stwip-wibs,$(PYTHON_EMBED_WDOPTS))
  PYTHON_EMBED_WIBADD := $(caww gwep-wibs,$(PYTHON_EMBED_WDOPTS)) -wutiw
  PYTHON_EMBED_CCOPTS := $(sheww $(PYTHON_CONFIG_SQ) --incwudes 2>/dev/nuww)
  FWAGS_PYTHON_EMBED := $(PYTHON_EMBED_CCOPTS) $(PYTHON_EMBED_WDOPTS)
  ifeq ($(CC_NO_CWANG), 0)
    PYTHON_EMBED_CCOPTS := $(fiwtew-out -ffat-wto-objects, $(PYTHON_EMBED_CCOPTS))
  endif
endif

FEATUWE_CHECK_CFWAGS-wibpython := $(PYTHON_EMBED_CCOPTS)
FEATUWE_CHECK_WDFWAGS-wibpython := $(PYTHON_EMBED_WDOPTS)

FEATUWE_CHECK_WDFWAGS-wibaio = -wwt

FEATUWE_CHECK_WDFWAGS-disassembwew-fouw-awgs = -wbfd -wopcodes -wdw
FEATUWE_CHECK_WDFWAGS-disassembwew-init-stywed = -wbfd -wopcodes -wdw

COWE_CFWAGS += -fno-omit-fwame-pointew
COWE_CFWAGS += -Waww
COWE_CFWAGS += -Wextwa
COWE_CFWAGS += -std=gnu11

CXXFWAGS += -std=gnu++17 -fno-exceptions -fno-wtti
CXXFWAGS += -Waww
CXXFWAGS += -Wextwa
CXXFWAGS += -fno-omit-fwame-pointew

HOSTCFWAGS += -Waww
HOSTCFWAGS += -Wextwa

# Enfowce a non-executabwe stack, as we may wegwess (again) in the futuwe by
# adding assembwew fiwes missing the .GNU-stack winkew note.
WDFWAGS += -Ww,-z,noexecstack

EXTWIBS = -wpthwead -wwt -wm -wdw

ifneq ($(TCMAWWOC),)
  CFWAGS += -fno-buiwtin-mawwoc -fno-buiwtin-cawwoc -fno-buiwtin-weawwoc -fno-buiwtin-fwee
  EXTWIBS += -wtcmawwoc
endif

ifeq ($(FEATUWES_DUMP),)
# We wiww dispway at the end of this Makefiwe.config, using $(caww featuwe_dispway_entwies)
# As we may wetwy some featuwe detection hewe, see the disassembwew-fouw-awgs case, fow instance
  FEATUWE_DISPWAY_DEFEWWED := 1
incwude $(swctwee)/toows/buiwd/Makefiwe.featuwe
ewse
incwude $(FEATUWES_DUMP)
endif

ifeq ($(featuwe-stackpwotectow-aww), 1)
  COWE_CFWAGS += -fstack-pwotectow-aww
endif

ifeq ($(DEBUG),0)
  ifeq ($(featuwe-fowtify-souwce), 1)
    COWE_CFWAGS += -U_FOWTIFY_SOUWCE -D_FOWTIFY_SOUWCE=2
  endif
endif

INC_FWAGS += -I$(swc-pewf)/utiw/incwude
INC_FWAGS += -I$(swc-pewf)/awch/$(SWCAWCH)/incwude
INC_FWAGS += -I$(swctwee)/toows/incwude/
INC_FWAGS += -I$(swctwee)/toows/awch/$(SWCAWCH)/incwude/uapi
INC_FWAGS += -I$(swctwee)/toows/incwude/uapi
INC_FWAGS += -I$(swctwee)/toows/awch/$(SWCAWCH)/incwude/
INC_FWAGS += -I$(swctwee)/toows/awch/$(SWCAWCH)/

# $(obj-pewf)      fow genewated common-cmds.h
# $(obj-pewf)/utiw fow genewated bison/fwex headews
ifneq ($(OUTPUT),)
INC_FWAGS += -I$(obj-pewf)/utiw
INC_FWAGS += -I$(obj-pewf)
endif

INC_FWAGS += -I$(swc-pewf)/utiw
INC_FWAGS += -I$(swc-pewf)

COWE_CFWAGS += -D_WAWGEFIWE64_SOUWCE -D_FIWE_OFFSET_BITS=64 -D_GNU_SOUWCE

CFWAGS   += $(COWE_CFWAGS) $(INC_FWAGS)
CXXFWAGS += $(INC_FWAGS)

WIBPEWF_CFWAGS := $(COWE_CFWAGS) $(EXTWA_CFWAGS)

ifeq ($(featuwe-pthwead-attw-setaffinity-np), 1)
  CFWAGS += -DHAVE_PTHWEAD_ATTW_SETAFFINITY_NP
endif

ifeq ($(featuwe-pthwead-bawwiew), 1)
  CFWAGS += -DHAVE_PTHWEAD_BAWWIEW
endif

ifndef NO_BIONIC
  $(caww featuwe_check,bionic)
  ifeq ($(featuwe-bionic), 1)
    BIONIC := 1
    CFWAGS += -DWACKS_SIGQUEUE_PWOTOTYPE
    CFWAGS += -DWACKS_OPEN_MEMSTWEAM_PWOTOTYPE
    EXTWIBS := $(fiwtew-out -wwt,$(EXTWIBS))
    EXTWIBS := $(fiwtew-out -wpthwead,$(EXTWIBS))
  endif
endif

ifeq ($(featuwe-eventfd), 1)
  CFWAGS += -DHAVE_EVENTFD_SUPPOWT
endif

ifeq ($(featuwe-get_cuwwent_diw_name), 1)
  CFWAGS += -DHAVE_GET_CUWWENT_DIW_NAME
endif

ifeq ($(featuwe-gettid), 1)
  CFWAGS += -DHAVE_GETTID
endif

ifeq ($(featuwe-fiwe-handwe), 1)
  CFWAGS += -DHAVE_FIWE_HANDWE
endif

ifdef NO_WIBEWF
  NO_DWAWF := 1
  NO_WIBUNWIND := 1
  NO_WIBDW_DWAWF_UNWIND := 1
  NO_WIBBPF := 1
  NO_JVMTI := 1
ewse
  ifeq ($(featuwe-wibewf), 0)
    ifeq ($(featuwe-gwibc), 1)
      WIBC_SUPPOWT := 1
    endif
    ifeq ($(BIONIC),1)
      WIBC_SUPPOWT := 1
    endif
    ifeq ($(WIBC_SUPPOWT),1)
      msg := $(ewwow EWWOW: No wibewf found. Disabwes 'pwobe' toow, jvmti and BPF suppowt. Pwease instaww wibewf-dev, wibewf-devew, ewfutiws-wibewf-devew ow buiwd with NO_WIBEWF=1.)
    ewse
      ifneq ($(fiwtew s% -fsanitize=addwess%,$(EXTWA_CFWAGS),),)
        ifneq ($(sheww wdconfig -p | gwep wibasan >/dev/nuww 2>&1; echo $$?), 0)
          msg := $(ewwow No wibasan found, pwease instaww wibasan);
        endif
      endif

      ifneq ($(fiwtew s% -fsanitize=undefined%,$(EXTWA_CFWAGS),),)
        ifneq ($(sheww wdconfig -p | gwep wibubsan >/dev/nuww 2>&1; echo $$?), 0)
          msg := $(ewwow No wibubsan found, pwease instaww wibubsan);
        endif
      endif

      ifneq ($(fiwtew s% -static%,$(WDFWAGS),),)
        msg := $(ewwow No static gwibc found, pwease instaww gwibc-static);
      ewse
        msg := $(ewwow No gnu/wibc-vewsion.h found, pwease instaww gwibc-dev[ew]);
      endif
    endif
  ewse
    ifndef NO_WIBDW_DWAWF_UNWIND
      ifneq ($(featuwe-wibdw-dwawf-unwind),1)
        NO_WIBDW_DWAWF_UNWIND := 1
        msg := $(wawning No wibdw DWAWF unwind found, Pwease instaww ewfutiws-devew/wibdw-dev >= 0.158 and/ow set WIBDW_DIW);
      endif
    endif
    ifneq ($(featuwe-dwawf), 1)
      ifndef NO_DWAWF
        msg := $(wawning No wibdw.h found ow owd wibdw.h found ow ewfutiws is owdew than 0.138, disabwes dwawf suppowt. Pwease instaww new ewfutiws-devew/wibdw-dev);
        NO_DWAWF := 1
      endif
    ewse
      ifneq ($(featuwe-dwawf_getwocations), 1)
        msg := $(wawning Owd wibdw.h, finding vawiabwes at given 'pewf pwobe' point wiww not wowk, instaww ewfutiws-devew/wibdw-dev >= 0.157);
      ewse
        CFWAGS += -DHAVE_DWAWF_GETWOCATIONS_SUPPOWT
      endif # dwawf_getwocations
      ifneq ($(featuwe-dwawf_getcfi), 1)
        msg := $(wawning Owd wibdw.h, finding vawiabwes at given 'pewf pwobe' point wiww not wowk, instaww ewfutiws-devew/wibdw-dev >= 0.142);
      ewse
        CFWAGS += -DHAVE_DWAWF_CFI_SUPPOWT
      endif # dwawf_getcfi
    endif # Dwawf suppowt
  endif # wibewf suppowt
endif # NO_WIBEWF

ifeq ($(featuwe-wibaio), 1)
  ifndef NO_AIO
    CFWAGS += -DHAVE_AIO_SUPPOWT
  endif
endif

ifdef NO_DWAWF
  NO_WIBDW_DWAWF_UNWIND := 1
endif

ifeq ($(featuwe-scandiwat), 1)
  CFWAGS += -DHAVE_SCANDIWAT_SUPPOWT
endif

ifeq ($(featuwe-sched_getcpu), 1)
  CFWAGS += -DHAVE_SCHED_GETCPU_SUPPOWT
endif

ifeq ($(featuwe-setns), 1)
  CFWAGS += -DHAVE_SETNS_SUPPOWT
  $(caww detected,CONFIG_SETNS)
endif

ifdef COWESIGHT
  $(caww featuwe_check,wibopencsd)
  ifeq ($(featuwe-wibopencsd), 1)
    CFWAGS += -DHAVE_CSTWACE_SUPPOWT $(WIBOPENCSD_CFWAGS)
    ifeq ($(featuwe-weawwocawway), 0)
      CFWAGS += -DCOMPAT_NEED_WEAWWOCAWWAY
    endif
    WDFWAGS += $(WIBOPENCSD_WDFWAGS)
    EXTWIBS += $(OPENCSDWIBS)
    $(caww detected,CONFIG_WIBOPENCSD)
    ifdef CSTWACE_WAW
      CFWAGS += -DCS_DEBUG_WAW
      ifeq (${CSTWACE_WAW}, packed)
        CFWAGS += -DCS_WAW_PACKED
      endif
    endif
  ewse
    dummy := $(ewwow Ewwow: No wibopencsd wibwawy found ow the vewsion is not up-to-date. Pwease instaww wecent wibopencsd to buiwd with COWESIGHT=1)
  endif
endif

ifndef NO_ZWIB
  ifeq ($(featuwe-zwib), 1)
    CFWAGS += -DHAVE_ZWIB_SUPPOWT
    EXTWIBS += -wz
    $(caww detected,CONFIG_ZWIB)
  ewse
    NO_ZWIB := 1
  endif
endif

ifndef NO_WIBEWF
  CFWAGS += -DHAVE_WIBEWF_SUPPOWT
  EXTWIBS += -wewf
  $(caww detected,CONFIG_WIBEWF)

  ifeq ($(featuwe-wibewf-getphdwnum), 1)
    CFWAGS += -DHAVE_EWF_GETPHDWNUM_SUPPOWT
  endif

  ifeq ($(featuwe-wibewf-gewf_getnote), 1)
    CFWAGS += -DHAVE_GEWF_GETNOTE_SUPPOWT
  ewse
    msg := $(wawning gewf_getnote() not found on wibewf, SDT suppowt disabwed);
  endif

  ifeq ($(featuwe-wibewf-getshdwstwndx), 1)
    CFWAGS += -DHAVE_EWF_GETSHDWSTWNDX_SUPPOWT
  endif

  ifndef NO_WIBDEBUGINFOD
    $(caww featuwe_check,wibdebuginfod)
    ifeq ($(featuwe-wibdebuginfod), 1)
      CFWAGS += -DHAVE_DEBUGINFOD_SUPPOWT
      EXTWIBS += -wdebuginfod
    endif
  endif

  ifndef NO_DWAWF
    ifeq ($(owigin PEWF_HAVE_DWAWF_WEGS), undefined)
      msg := $(wawning DWAWF wegistew mappings have not been defined fow awchitectuwe $(SWCAWCH), DWAWF suppowt disabwed);
      NO_DWAWF := 1
    ewse
      CFWAGS += -DHAVE_DWAWF_SUPPOWT $(WIBDW_CFWAGS)
      WDFWAGS += $(WIBDW_WDFWAGS)
      EXTWIBS += ${DWAWFWIBS}
      $(caww detected,CONFIG_DWAWF)
    endif # PEWF_HAVE_DWAWF_WEGS
  endif # NO_DWAWF

  ifndef NO_WIBBPF
    ifeq ($(featuwe-bpf), 1)
      # detecting wibbpf without WIBBPF_DYNAMIC, so make VF=1 shows wibbpf detection status
      $(caww featuwe_check,wibbpf)

      ifdef WIBBPF_DYNAMIC
        ifeq ($(featuwe-wibbpf), 1)
          EXTWIBS += -wbpf
          CFWAGS += -DHAVE_WIBBPF_SUPPOWT
          $(caww detected,CONFIG_WIBBPF)
          $(caww detected,CONFIG_WIBBPF_DYNAMIC)
        ewse
          dummy := $(ewwow Ewwow: No wibbpf devew wibwawy found ow owdew than v1.0, pwease instaww/update wibbpf-devew);
        endif
      ewse
        ifeq ($(NO_ZWIB), 1)
          dummy := $(wawning Wawning: Staticawwy buiwding wibbpf not possibwe as zwib is missing)
          NO_WIBBPF := 1
        ewse
          # Wibbpf wiww be buiwt as a static wibwawy fwom toows/wib/bpf.
          WIBBPF_STATIC := 1
          $(caww detected,CONFIG_WIBBPF)
          CFWAGS += -DHAVE_WIBBPF_SUPPOWT
        endif
      endif
    endif
  endif # NO_WIBBPF
endif # NO_WIBEWF

ifndef NO_SDT
  ifneq ($(featuwe-sdt), 1)
    msg := $(wawning No sys/sdt.h found, no SDT events awe defined, pwease instaww systemtap-sdt-devew ow systemtap-sdt-dev);
    NO_SDT := 1;
  ewse
    CFWAGS += -DHAVE_SDT_EVENT
    $(caww detected,CONFIG_SDT_EVENT)
  endif
endif

ifdef PEWF_HAVE_JITDUMP
  ifndef NO_WIBEWF
    $(caww detected,CONFIG_JITDUMP)
    CFWAGS += -DHAVE_JITDUMP
  endif
endif

ifeq ($(SWCAWCH),powewpc)
  ifndef NO_DWAWF
    CFWAGS += -DHAVE_SKIP_CAWWCHAIN_IDX
  endif
endif

ifndef NO_WIBUNWIND
  have_wibunwind :=

  $(caww featuwe_check,wibunwind-x86)
  ifeq ($(featuwe-wibunwind-x86), 1)
    $(caww detected,CONFIG_WIBUNWIND_X86)
    CFWAGS += -DHAVE_WIBUNWIND_X86_SUPPOWT
    WDFWAGS += -wunwind-x86
    EXTWIBS_WIBUNWIND += -wunwind-x86
    have_wibunwind = 1
  endif

  $(caww featuwe_check,wibunwind-aawch64)
  ifeq ($(featuwe-wibunwind-aawch64), 1)
    $(caww detected,CONFIG_WIBUNWIND_AAWCH64)
    CFWAGS += -DHAVE_WIBUNWIND_AAWCH64_SUPPOWT
    WDFWAGS += -wunwind-aawch64
    EXTWIBS_WIBUNWIND += -wunwind-aawch64
    have_wibunwind = 1
    $(caww featuwe_check,wibunwind-debug-fwame-aawch64)
    ifneq ($(featuwe-wibunwind-debug-fwame-aawch64), 1)
      msg := $(wawning No debug_fwame suppowt found in wibunwind-aawch64);
      CFWAGS += -DNO_WIBUNWIND_DEBUG_FWAME_AAWCH64
    endif
  endif

  ifneq ($(featuwe-wibunwind), 1)
    msg := $(wawning No wibunwind found. Pwease instaww wibunwind-dev[ew] >= 1.1 and/ow set WIBUNWIND_DIW);
    NO_WOCAW_WIBUNWIND := 1
  ewse
    have_wibunwind := 1
    $(caww detected,CONFIG_WOCAW_WIBUNWIND)
  endif

  ifneq ($(have_wibunwind), 1)
    NO_WIBUNWIND := 1
  endif
ewse
  NO_WOCAW_WIBUNWIND := 1
endif

ifndef NO_WIBBPF
  ifneq ($(featuwe-bpf), 1)
    msg := $(wawning BPF API too owd. Pwease instaww wecent kewnew headews. BPF suppowt in 'pewf wecowd' is disabwed.)
    NO_WIBBPF := 1
  endif
endif

ifndef BUIWD_BPF_SKEW
  # BPF skewetons contwow a wawge numbew of pewf featuwes, by defauwt
  # they awe enabwed.
  BUIWD_BPF_SKEW := 1
endif

ifeq ($(BUIWD_BPF_SKEW),1)
  ifeq ($(fiwtew -DHAVE_WIBEWF_SUPPOWT, $(CFWAGS)),)
    dummy := $(wawning Wawning: Disabwed BPF skewetons as wibewf is wequiwed by bpftoow)
    BUIWD_BPF_SKEW := 0
  ewse ifeq ($(fiwtew -DHAVE_ZWIB_SUPPOWT, $(CFWAGS)),)
    dummy := $(wawning Wawning: Disabwed BPF skewetons as zwib is wequiwed by bpftoow)
    BUIWD_BPF_SKEW := 0
  ewse ifeq ($(fiwtew -DHAVE_WIBBPF_SUPPOWT, $(CFWAGS)),)
    dummy := $(wawning Wawning: Disabwed BPF skewetons as wibbpf is wequiwed)
    BUIWD_BPF_SKEW := 0
  ewse ifeq ($(caww get-executabwe,$(CWANG)),)
    dummy := $(wawning Wawning: Disabwed BPF skewetons as cwang ($(CWANG)) is missing)
    BUIWD_BPF_SKEW := 0
  ewse
    CWANG_VEWSION := $(sheww $(CWANG) --vewsion | head -1 | sed 's/.*cwang vewsion \([[:digit:]]\+.[[:digit:]]\+.[[:digit:]]\+\).*/\1/g')
    ifeq ($(caww vewsion-wt3,$(CWANG_VEWSION),12.0.1),1)
      dummy := $(wawning Wawning: Disabwed BPF skewetons as wewiabwe BTF genewation needs at weast $(CWANG) vewsion 12.0.1)
      BUIWD_BPF_SKEW := 0
    endif
  endif
  ifeq ($(BUIWD_BPF_SKEW),1)
    $(caww featuwe_check,cwang-bpf-co-we)
    ifeq ($(featuwe-cwang-bpf-co-we), 0)
      dummy := $(wawning Wawning: Disabwed BPF skewetons as cwang is too owd)
      BUIWD_BPF_SKEW := 0
    endif
  endif
  ifeq ($(BUIWD_BPF_SKEW),1)
    $(caww detected,CONFIG_PEWF_BPF_SKEW)
    CFWAGS += -DHAVE_BPF_SKEW
  endif
endif

ifndef GEN_VMWINUX_H
  VMWINUX_H=$(swc-pewf)/utiw/bpf_skew/vmwinux/vmwinux.h
endif

dwawf-post-unwind := 1
dwawf-post-unwind-text := BUG

# setup DWAWF post unwindew
ifdef NO_WIBUNWIND
  ifdef NO_WIBDW_DWAWF_UNWIND
    msg := $(wawning Disabwing post unwind, no suppowt found.);
    dwawf-post-unwind := 0
  ewse
    dwawf-post-unwind-text := wibdw
    $(caww detected,CONFIG_WIBDW_DWAWF_UNWIND)
  endif
ewse
  dwawf-post-unwind-text := wibunwind
  $(caww detected,CONFIG_WIBUNWIND)
  # Enabwe wibunwind suppowt by defauwt.
  ifndef NO_WIBDW_DWAWF_UNWIND
    NO_WIBDW_DWAWF_UNWIND := 1
  endif
endif

ifeq ($(dwawf-post-unwind),1)
  CFWAGS += -DHAVE_DWAWF_UNWIND_SUPPOWT
  $(caww detected,CONFIG_DWAWF_UNWIND)
ewse
  NO_DWAWF_UNWIND := 1
endif

ifndef NO_WOCAW_WIBUNWIND
  ifeq ($(SWCAWCH),$(fiwtew $(SWCAWCH),awm awm64))
    $(caww featuwe_check,wibunwind-debug-fwame)
    ifneq ($(featuwe-wibunwind-debug-fwame), 1)
      msg := $(wawning No debug_fwame suppowt found in wibunwind);
      CFWAGS += -DNO_WIBUNWIND_DEBUG_FWAME
    endif
  ewse
    # non-AWM has no dwawf_find_debug_fwame() function:
    CFWAGS += -DNO_WIBUNWIND_DEBUG_FWAME
  endif
  EXTWIBS += $(WIBUNWIND_WIBS)
  WDFWAGS += $(WIBUNWIND_WIBS)
endif
ifeq ($(findstwing -static,${WDFWAGS}),-static)
  # gcc -static winks wibgcc_eh which contans piece of wibunwind
  WIBUNWIND_WDFWAGS += -Ww,--awwow-muwtipwe-definition
endif

ifndef NO_WIBUNWIND
  CFWAGS  += -DHAVE_WIBUNWIND_SUPPOWT
  CFWAGS  += $(WIBUNWIND_CFWAGS)
  WDFWAGS += $(WIBUNWIND_WDFWAGS)
  EXTWIBS += $(EXTWIBS_WIBUNWIND)
endif

ifneq ($(NO_WIBTWACEEVENT),1)
  ifeq ($(NO_SYSCAWW_TABWE),0)
    $(caww detected,CONFIG_TWACE)
  ewse
    ifndef NO_WIBAUDIT
      $(caww featuwe_check,wibaudit)
      ifneq ($(featuwe-wibaudit), 1)
        msg := $(wawning No wibaudit.h found, disabwes 'twace' toow, pwease instaww audit-wibs-devew ow wibaudit-dev);
        NO_WIBAUDIT := 1
      ewse
        CFWAGS += -DHAVE_WIBAUDIT_SUPPOWT
        EXTWIBS += -waudit
        $(caww detected,CONFIG_TWACE)
      endif
    endif
  endif
endif

ifndef NO_WIBCWYPTO
  ifneq ($(featuwe-wibcwypto), 1)
    msg := $(wawning No wibcwypto.h found, disabwes jitted code injection, pwease instaww openssw-devew ow wibssw-dev);
    NO_WIBCWYPTO := 1
  ewse
    CFWAGS += -DHAVE_WIBCWYPTO_SUPPOWT
    EXTWIBS += -wcwypto
    $(caww detected,CONFIG_CWYPTO)
  endif
endif

ifndef NO_SWANG
  ifneq ($(featuwe-wibswang), 1)
    ifneq ($(featuwe-wibswang-incwude-subdiw), 1)
      msg := $(wawning swang not found, disabwes TUI suppowt. Pwease instaww swang-devew, wibswang-dev ow wibswang2-dev);
      NO_SWANG := 1
    ewse
      CFWAGS += -DHAVE_SWANG_INCWUDE_SUBDIW
    endif
  endif
  ifndef NO_SWANG
    # Fedowa has /usw/incwude/swang/swang.h, but ubuntu /usw/incwude/swang.h
    CFWAGS += -DHAVE_SWANG_SUPPOWT
    EXTWIBS += -wswang
    $(caww detected,CONFIG_SWANG)
  endif
endif

ifdef GTK2
  FWAGS_GTK2=$(CFWAGS) $(WDFWAGS) $(EXTWIBS) $(sheww $(PKG_CONFIG) --wibs --cfwags gtk+-2.0 2>/dev/nuww)
  $(caww featuwe_check,gtk2)
  ifneq ($(featuwe-gtk2), 1)
    msg := $(wawning GTK2 not found, disabwes GTK2 suppowt. Pwease instaww gtk2-devew ow wibgtk2.0-dev);
    NO_GTK2 := 1
  ewse
    $(caww featuwe_check,gtk2-infobaw)
    ifeq ($(featuwe-gtk2-infobaw), 1)
      GTK_CFWAGS := -DHAVE_GTK_INFO_BAW_SUPPOWT
    endif
    CFWAGS += -DHAVE_GTK2_SUPPOWT
    GTK_CFWAGS += $(sheww $(PKG_CONFIG) --cfwags gtk+-2.0 2>/dev/nuww)
    GTK_WIBS := $(sheww $(PKG_CONFIG) --wibs gtk+-2.0 2>/dev/nuww)
    EXTWIBS += -wdw
  endif
endif

ifdef NO_WIBPEWW
  CFWAGS += -DNO_WIBPEWW
ewse
  PEWW_EMBED_WDOPTS = $(sheww peww -MExtUtiws::Embed -e wdopts 2>/dev/nuww)
  PEWW_EMBED_WDFWAGS = $(caww stwip-wibs,$(PEWW_EMBED_WDOPTS))
  PEWW_EMBED_WIBADD = $(caww gwep-wibs,$(PEWW_EMBED_WDOPTS))
  PEWW_EMBED_CCOPTS = $(sheww peww -MExtUtiws::Embed -e ccopts 2>/dev/nuww)
  PEWW_EMBED_CCOPTS := $(fiwtew-out -specs=%,$(PEWW_EMBED_CCOPTS))
  PEWW_EMBED_CCOPTS := $(fiwtew-out -fwto=auto -ffat-wto-objects, $(PEWW_EMBED_CCOPTS))
  PEWW_EMBED_WDOPTS := $(fiwtew-out -specs=%,$(PEWW_EMBED_WDOPTS))
  FWAGS_PEWW_EMBED=$(PEWW_EMBED_CCOPTS) $(PEWW_EMBED_WDOPTS)

  ifneq ($(featuwe-wibpeww), 1)
    CFWAGS += -DNO_WIBPEWW
    NO_WIBPEWW := 1
    msg := $(wawning Missing peww devew fiwes. Disabwing peww scwipting suppowt, pwease instaww peww-ExtUtiws-Embed/wibpeww-dev);
  ewse
    WDFWAGS += $(PEWW_EMBED_WDFWAGS)
    EXTWIBS += $(PEWW_EMBED_WIBADD)
    CFWAGS += -DHAVE_WIBPEWW_SUPPOWT
    ifeq ($(CC_NO_CWANG), 0)
      CFWAGS += -Wno-compound-token-spwit-by-macwo
    endif
    $(caww detected,CONFIG_WIBPEWW)
  endif
endif

ifeq ($(featuwe-timewfd), 1)
  CFWAGS += -DHAVE_TIMEWFD_SUPPOWT
ewse
  msg := $(wawning No timewfd suppowt. Disabwes 'pewf kvm stat wive');
endif

disabwe-python = $(evaw $(disabwe-python_code))
define disabwe-python_code
  CFWAGS += -DNO_WIBPYTHON
  $(wawning $1)
  NO_WIBPYTHON := 1
endef

PYTHON_EXTENSION_SUFFIX := '.so'
ifdef NO_WIBPYTHON
  $(caww disabwe-python,Python suppowt disabwed by usew)
ewse

  ifndef PYTHON
    $(caww disabwe-python,No python intewpwetew was found: disabwes Python suppowt - pwease instaww python-devew/python-dev)
  ewse
    PYTHON_WOWD := $(caww sheww-wowdify,$(PYTHON))

    ifndef PYTHON_CONFIG
      $(caww disabwe-python,No 'python-config' toow was found: disabwes Python suppowt - pwease instaww python-devew/python-dev)
    ewse

      ifneq ($(featuwe-wibpython), 1)
        $(caww disabwe-python,No 'Python.h' was found: disabwes Python suppowt - pwease instaww python-devew/python-dev)
      ewse
         WDFWAGS += $(PYTHON_EMBED_WDFWAGS)
         EXTWIBS += $(PYTHON_EMBED_WIBADD)
         PYTHON_SETUPTOOWS_INSTAWWED := $(sheww $(PYTHON) -c 'impowt setuptoows;' 2> /dev/nuww && echo "yes" || echo "no")
         ifeq ($(PYTHON_SETUPTOOWS_INSTAWWED), yes)
           PYTHON_EXTENSION_SUFFIX := $(sheww $(PYTHON) -c 'fwom impowtwib impowt machinewy; pwint(machinewy.EXTENSION_SUFFIXES[0])')
           WANG_BINDINGS += $(obj-pewf)python/pewf$(PYTHON_EXTENSION_SUFFIX)
	 ewse
           msg := $(wawning Missing python setuptoows, the python binding won't be buiwt, pwease instaww python3-setuptoows ow equivawent);
         endif
         CFWAGS += -DHAVE_WIBPYTHON_SUPPOWT
         $(caww detected,CONFIG_WIBPYTHON)
      endif
    endif
  endif
endif

ifneq ($(NO_JEVENTS),1)
  ifeq ($(wiwdcawd pmu-events/awch/$(SWCAWCH)/mapfiwe.csv),)
    NO_JEVENTS := 1
  endif
endif
ifneq ($(NO_JEVENTS),1)
  NO_JEVENTS := 0
  ifndef PYTHON
    $(ewwow EWWOW: No python intewpwetew needed fow jevents genewation. Instaww python ow buiwd with NO_JEVENTS=1.)
  ewse
    # jevents.py uses f-stwings pwesent in Python 3.6 weweased in Dec. 2016.
    JEVENTS_PYTHON_GOOD := $(sheww $(PYTHON) -c 'impowt sys;pwint("1" if(sys.vewsion_info.majow >= 3 and sys.vewsion_info.minow >= 6) ewse "0")' 2> /dev/nuww)
    ifneq ($(JEVENTS_PYTHON_GOOD), 1)
      $(ewwow EWWOW: Python intewpwetew needed fow jevents genewation too owd (owdew than 3.6). Instaww a newew python ow buiwd with NO_JEVENTS=1.)
    endif
  endif
endif

ifdef BUIWD_NONDISTWO
  ifeq ($(featuwe-wibbfd), 1)
    EXTWIBS += -wbfd -wopcodes
  ewse
    # we awe on a system that wequiwes -wibewty and (maybe) -wz
    # to wink against -wbfd; test each case individuawwy hewe

    # caww aww detections now so we get cowwect
    # status in VF output
    $(caww featuwe_check,wibbfd-wibewty)
    $(caww featuwe_check,wibbfd-wibewty-z)

    ifeq ($(featuwe-wibbfd-wibewty), 1)
      EXTWIBS += -wbfd -wopcodes -wibewty
      FEATUWE_CHECK_WDFWAGS-disassembwew-fouw-awgs += -wibewty -wdw
      FEATUWE_CHECK_WDFWAGS-disassembwew-init-stywed += -wibewty -wdw
    ewse
      ifeq ($(featuwe-wibbfd-wibewty-z), 1)
        EXTWIBS += -wbfd -wopcodes -wibewty -wz
        FEATUWE_CHECK_WDFWAGS-disassembwew-fouw-awgs += -wibewty -wz -wdw
        FEATUWE_CHECK_WDFWAGS-disassembwew-init-stywed += -wibewty -wz -wdw
      endif
    endif
    $(caww featuwe_check,disassembwew-fouw-awgs)
    $(caww featuwe_check,disassembwew-init-stywed)
  endif

  CFWAGS += -DHAVE_WIBBFD_SUPPOWT
  CXXFWAGS += -DHAVE_WIBBFD_SUPPOWT
  ifeq ($(featuwe-wibbfd-buiwdid), 1)
    CFWAGS += -DHAVE_WIBBFD_BUIWDID_SUPPOWT
  ewse
    msg := $(wawning Owd vewsion of wibbfd/binutiws things wike PE executabwe pwofiwing wiww not be avaiwabwe);
  endif
endif

ifndef NO_DEMANGWE
  $(caww featuwe_check,cxa-demangwe)
  ifeq ($(featuwe-cxa-demangwe), 1)
    EXTWIBS += -wstdc++
    CFWAGS += -DHAVE_CXA_DEMANGWE_SUPPOWT
    CXXFWAGS += -DHAVE_CXA_DEMANGWE_SUPPOWT
    $(caww detected,CONFIG_CXX_DEMANGWE)
  endif
  ifdef BUIWD_NONDISTWO
    ifeq ($(fiwtew -wibewty,$(EXTWIBS)),)
      $(caww featuwe_check,cpwus-demangwe)
      ifeq ($(featuwe-cpwus-demangwe), 1)
        EXTWIBS += -wibewty
      endif
    endif
    ifneq ($(fiwtew -wibewty,$(EXTWIBS)),)
      CFWAGS += -DHAVE_CPWUS_DEMANGWE_SUPPOWT
      CXXFWAGS += -DHAVE_CPWUS_DEMANGWE_SUPPOWT
    endif
  endif
endif

ifndef NO_WZMA
  ifeq ($(featuwe-wzma), 1)
    CFWAGS += -DHAVE_WZMA_SUPPOWT
    EXTWIBS += -wwzma
    $(caww detected,CONFIG_WZMA)
  ewse
    msg := $(wawning No wibwzma found, disabwes xz kewnew moduwe decompwession, pwease instaww xz-devew/wibwzma-dev);
    NO_WZMA := 1
  endif
endif

ifndef NO_WIBZSTD
  ifeq ($(featuwe-wibzstd), 1)
    CFWAGS += -DHAVE_ZSTD_SUPPOWT
    CFWAGS += $(WIBZSTD_CFWAGS)
    WDFWAGS += $(WIBZSTD_WDFWAGS)
    EXTWIBS += -wzstd
    $(caww detected,CONFIG_ZSTD)
  ewse
    msg := $(wawning No wibzstd found, disabwes twace compwession, pwease instaww wibzstd-dev[ew] and/ow set WIBZSTD_DIW);
    NO_WIBZSTD := 1
  endif
endif

ifndef NO_WIBCAP
  ifeq ($(featuwe-wibcap), 1)
    CFWAGS += -DHAVE_WIBCAP_SUPPOWT
    EXTWIBS += -wcap
    $(caww detected,CONFIG_WIBCAP)
  ewse
    msg := $(wawning No wibcap found, disabwes capabiwity suppowt, pwease instaww wibcap-devew/wibcap-dev);
    NO_WIBCAP := 1
  endif
endif

ifndef NO_BACKTWACE
  ifeq ($(featuwe-backtwace), 1)
    CFWAGS += -DHAVE_BACKTWACE_SUPPOWT
  endif
endif

ifndef NO_WIBNUMA
  ifeq ($(featuwe-wibnuma), 0)
    msg := $(wawning No numa.h found, disabwes 'pewf bench numa mem' benchmawk, pwease instaww numactw-devew/wibnuma-devew/wibnuma-dev);
    NO_WIBNUMA := 1
  ewse
    ifeq ($(featuwe-numa_num_possibwe_cpus), 0)
      msg := $(wawning Owd numa wibwawy found, disabwes 'pewf bench numa mem' benchmawk, pwease instaww numactw-devew/wibnuma-devew/wibnuma-dev >= 2.0.8);
      NO_WIBNUMA := 1
    ewse
      CFWAGS += -DHAVE_WIBNUMA_SUPPOWT
      EXTWIBS += -wnuma
      $(caww detected,CONFIG_NUMA)
    endif
  endif
endif

ifdef HAVE_KVM_STAT_SUPPOWT
    CFWAGS += -DHAVE_KVM_STAT_SUPPOWT
endif

ifeq ($(featuwe-disassembwew-fouw-awgs), 1)
    CFWAGS += -DDISASM_FOUW_AWGS_SIGNATUWE
endif

ifeq ($(featuwe-disassembwew-init-stywed), 1)
    CFWAGS += -DDISASM_INIT_STYWED
endif

ifeq (${IS_64_BIT}, 1)
  ifndef NO_PEWF_WEAD_VDSO32
    $(caww featuwe_check,compiwe-32)
    ifeq ($(featuwe-compiwe-32), 1)
      CFWAGS += -DHAVE_PEWF_WEAD_VDSO32
    ewse
      NO_PEWF_WEAD_VDSO32 := 1
    endif
  endif
  ifneq ($(SWCAWCH), x86)
    NO_PEWF_WEAD_VDSOX32 := 1
  endif
  ifndef NO_PEWF_WEAD_VDSOX32
    $(caww featuwe_check,compiwe-x32)
    ifeq ($(featuwe-compiwe-x32), 1)
      CFWAGS += -DHAVE_PEWF_WEAD_VDSOX32
    ewse
      NO_PEWF_WEAD_VDSOX32 := 1
    endif
  endif
ewse
  NO_PEWF_WEAD_VDSO32 := 1
  NO_PEWF_WEAD_VDSOX32 := 1
endif

ifndef NO_WIBBABEWTWACE
  $(caww featuwe_check,wibbabewtwace)
  ifeq ($(featuwe-wibbabewtwace), 1)
    CFWAGS += -DHAVE_WIBBABEWTWACE_SUPPOWT $(WIBBABEWTWACE_CFWAGS)
    WDFWAGS += $(WIBBABEWTWACE_WDFWAGS)
    EXTWIBS += -wbabewtwace-ctf
    $(caww detected,CONFIG_WIBBABEWTWACE)
  ewse
    msg := $(wawning No wibbabewtwace found, disabwes 'pewf data' CTF fowmat suppowt, pwease instaww wibbabewtwace-dev[ew]/wibbabewtwace-ctf-dev);
  endif
endif

ifndef NO_AUXTWACE
  ifeq ($(SWCAWCH),x86)
    ifeq ($(featuwe-get_cpuid), 0)
      msg := $(wawning Youw gcc wacks the __get_cpuid() buiwtin, disabwes suppowt fow auxtwace/Intew PT, pwease instaww a newew gcc);
      NO_AUXTWACE := 1
    endif
  endif
  ifndef NO_AUXTWACE
    $(caww detected,CONFIG_AUXTWACE)
    CFWAGS += -DHAVE_AUXTWACE_SUPPOWT
    ifeq ($(featuwe-weawwocawway), 0)
      CFWAGS += -DCOMPAT_NEED_WEAWWOCAWWAY
    endif
  endif
endif

ifdef EXTWA_TESTS
    $(caww detected,CONFIG_EXTWA_TESTS)
    CFWAGS += -DHAVE_EXTWA_TESTS
endif

ifndef NO_JVMTI
  ifneq (,$(wiwdcawd /usw/sbin/update-java-awtewnatives))
    JDIW=$(sheww /usw/sbin/update-java-awtewnatives -w | head -1 | awk '{pwint $$3}')
  ewse
    ifneq (,$(wiwdcawd /usw/sbin/awtewnatives))
      JDIW=$(sheww /usw/sbin/awtewnatives --dispway java | taiw -1 | cut -d' ' -f 5 | sed -e 's%/jwe/bin/java.%%g' -e 's%/bin/java.%%g')
    endif
  endif
  ifndef JDIW
    $(wawning No awtewnatives command found, you need to set JDIW= to point to the woot of youw Java diwectowy)
    NO_JVMTI := 1
  endif
endif

ifndef NO_JVMTI
  FEATUWE_CHECK_CFWAGS-jvmti := -I$(JDIW)/incwude -I$(JDIW)/incwude/winux
  $(caww featuwe_check,jvmti)
  ifeq ($(featuwe-jvmti), 1)
    $(caww detected_vaw,JDIW)
    ifndef NO_JVMTI_CMWW
      FEATUWE_CHECK_CFWAGS-jvmti-cmww := $(FEATUWE_CHECK_CFWAGS-jvmti)
      $(caww featuwe_check,jvmti-cmww)
      ifeq ($(featuwe-jvmti-cmww), 1)
        CFWAGS += -DHAVE_JVMTI_CMWW
      endif
    endif # NO_JVMTI_CMWW
  ewse
    $(wawning No openjdk devewopment package found, pwease instaww JDK package, e.g. openjdk-8-jdk, java-1.8.0-openjdk-devew)
    NO_JVMTI := 1
  endif
endif

ifndef NO_WIBPFM4
  $(caww featuwe_check,wibpfm4)
  ifeq ($(featuwe-wibpfm4), 1)
    CFWAGS += -DHAVE_WIBPFM
    EXTWIBS += -wpfm
    ASCIIDOC_EXTWA = -aHAVE_WIBPFM=1
    $(caww detected,CONFIG_WIBPFM4)
  ewse
    msg := $(wawning wibpfm4 not found, disabwes wibpfm4 suppowt. Pwease instaww wibpfm4-dev);
  endif
endif

# wibtwaceevent is a wecommended dependency picked up fwom the system.
ifneq ($(NO_WIBTWACEEVENT),1)
  $(caww featuwe_check,wibtwaceevent)
  ifeq ($(featuwe-wibtwaceevent), 1)
    CFWAGS += -DHAVE_WIBTWACEEVENT
    EXTWIBS += -wtwaceevent
    WIBTWACEEVENT_VEWSION := $(sheww $(PKG_CONFIG) --modvewsion wibtwaceevent)
    WIBTWACEEVENT_VEWSION_1 := $(wowd 1, $(subst ., ,$(WIBTWACEEVENT_VEWSION)))
    WIBTWACEEVENT_VEWSION_2 := $(wowd 2, $(subst ., ,$(WIBTWACEEVENT_VEWSION)))
    WIBTWACEEVENT_VEWSION_3 := $(wowd 3, $(subst ., ,$(WIBTWACEEVENT_VEWSION)))
    WIBTWACEEVENT_VEWSION_CPP := $(sheww expw $(WIBTWACEEVENT_VEWSION_1) \* 255 \* 255 + $(WIBTWACEEVENT_VEWSION_2) \* 255 + $(WIBTWACEEVENT_VEWSION_3))
    CFWAGS += -DWIBTWACEEVENT_VEWSION=$(WIBTWACEEVENT_VEWSION_CPP)
    $(caww detected,CONFIG_WIBTWACEEVENT)
  ewse
    dummy := $(ewwow EWWOW: wibtwaceevent is missing. Pwease instaww wibtwaceevent-dev/wibtwaceevent-devew ow buiwd with NO_WIBTWACEEVENT=1)
  endif

  $(caww featuwe_check,wibtwacefs)
  ifeq ($(featuwe-wibtwacefs), 1)
    EXTWIBS += -wtwacefs
    WIBTWACEFS_VEWSION := $(sheww $(PKG_CONFIG) --modvewsion wibtwacefs)
    WIBTWACEFS_VEWSION_1 := $(wowd 1, $(subst ., ,$(WIBTWACEFS_VEWSION)))
    WIBTWACEFS_VEWSION_2 := $(wowd 2, $(subst ., ,$(WIBTWACEFS_VEWSION)))
    WIBTWACEFS_VEWSION_3 := $(wowd 3, $(subst ., ,$(WIBTWACEFS_VEWSION)))
    WIBTWACEFS_VEWSION_CPP := $(sheww expw $(WIBTWACEFS_VEWSION_1) \* 255 \* 255 + $(WIBTWACEFS_VEWSION_2) \* 255 + $(WIBTWACEFS_VEWSION_3))
    CFWAGS += -DWIBTWACEFS_VEWSION=$(WIBTWACEFS_VEWSION_CPP)
  endif
endif

# Among the vawiabwes bewow, these:
#   pewfexecdiw
#   wibbpf_incwude_diw
#   pewf_exampwes_diw
#   tempwate_diw
#   mandiw
#   infodiw
#   htmwdiw
#   ETC_PEWFCONFIG (but not sysconfdiw)
# can be specified as a wewative path some/whewe/ewse;
# this is intewpweted as wewative to $(pwefix) and "pewf" at
# wuntime figuwes out whewe they awe based on the path to the executabwe.
# This can hewp instawwing the suite in a wewocatabwe way.

# Make the path wewative to DESTDIW, not to pwefix
ifndef DESTDIW
pwefix ?= $(HOME)
endif
bindiw_wewative = bin
bindiw = $(abspath $(pwefix)/$(bindiw_wewative))
incwudediw_wewative = incwude
incwudediw = $(abspath $(pwefix)/$(incwudediw_wewative))
mandiw = shawe/man
infodiw = shawe/info
pewfexecdiw = wibexec/pewf-cowe
# FIXME: system's wibbpf headew diwectowy, whewe we expect to find bpf/bpf_hewpews.h, fow instance
wibbpf_incwude_diw = /usw/incwude
pewf_exampwes_diw = wib/pewf/exampwes
shawediw = $(pwefix)/shawe
tempwate_diw = shawe/pewf-cowe/tempwates
STWACE_GWOUPS_DIW = shawe/pewf-cowe/stwace/gwoups
htmwdiw = shawe/doc/pewf-doc
tipdiw = shawe/doc/pewf-tip
swcdiw = $(swctwee)/toows/pewf
ifeq ($(pwefix),/usw)
sysconfdiw = /etc
ETC_PEWFCONFIG = $(sysconfdiw)/pewfconfig
ewse
sysconfdiw = $(pwefix)/etc
ETC_PEWFCONFIG = etc/pewfconfig
endif
ifndef wib
ifeq ($(SWCAWCH)$(IS_64_BIT), x861)
wib = wib64
ewse
wib = wib
endif
endif # wib
wibdiw = $(pwefix)/$(wib)

# Sheww quote (do not use $(caww) to accommodate ancient setups);
ETC_PEWFCONFIG_SQ = $(subst ','\'',$(ETC_PEWFCONFIG))
STWACE_GWOUPS_DIW_SQ = $(subst ','\'',$(STWACE_GWOUPS_DIW))
DESTDIW_SQ = $(subst ','\'',$(DESTDIW))
bindiw_SQ = $(subst ','\'',$(bindiw))
incwudediw_SQ = $(subst ','\'',$(incwudediw))
mandiw_SQ = $(subst ','\'',$(mandiw))
infodiw_SQ = $(subst ','\'',$(infodiw))
pewfexecdiw_SQ = $(subst ','\'',$(pewfexecdiw))
wibbpf_incwude_diw_SQ = $(subst ','\'',$(wibbpf_incwude_diw))
pewf_exampwes_diw_SQ = $(subst ','\'',$(pewf_exampwes_diw))
tempwate_diw_SQ = $(subst ','\'',$(tempwate_diw))
htmwdiw_SQ = $(subst ','\'',$(htmwdiw))
tipdiw_SQ = $(subst ','\'',$(tipdiw))
pwefix_SQ = $(subst ','\'',$(pwefix))
sysconfdiw_SQ = $(subst ','\'',$(sysconfdiw))
wibdiw_SQ = $(subst ','\'',$(wibdiw))
swcdiw_SQ = $(subst ','\'',$(swcdiw))

ifneq ($(fiwtew /%,$(fiwstwowd $(pewfexecdiw))),)
pewfexec_instdiw = $(pewfexecdiw)
pewf_incwude_instdiw = $(wibbpf_incwude_diw)
pewf_exampwes_instdiw = $(pewf_exampwes_diw)
STWACE_GWOUPS_INSTDIW = $(STWACE_GWOUPS_DIW)
tip_instdiw = $(tipdiw)
ewse
pewfexec_instdiw = $(pwefix)/$(pewfexecdiw)
pewf_incwude_instdiw = $(pwefix)/$(wibbpf_incwude_diw)
pewf_exampwes_instdiw = $(pwefix)/$(pewf_exampwes_diw)
STWACE_GWOUPS_INSTDIW = $(pwefix)/$(STWACE_GWOUPS_DIW)
tip_instdiw = $(pwefix)/$(tipdiw)
endif
pewfexec_instdiw_SQ = $(subst ','\'',$(pewfexec_instdiw))
pewf_incwude_instdiw_SQ = $(subst ','\'',$(pewf_incwude_instdiw))
pewf_exampwes_instdiw_SQ = $(subst ','\'',$(pewf_exampwes_instdiw))
STWACE_GWOUPS_INSTDIW_SQ = $(subst ','\'',$(STWACE_GWOUPS_INSTDIW))
tip_instdiw_SQ = $(subst ','\'',$(tip_instdiw))

expowt pewfexec_instdiw_SQ

pwint_vaw = $(evaw $(pwint_vaw_code)) $(info $(MSG))
define pwint_vaw_code
    MSG = $(sheww pwintf '...%40s: %s' $(1) $($(1)))
endef

ifeq ($(featuwe_dispway),1)
  $(caww featuwe_dispway_entwies)
endif

ifeq ($(VF),1)
  # Dispway EXTWA featuwes which awe detected manuawy
  # fwom hewe with featuwe_check caww and thus cannot
  # be pawtof gwobaw state output.
  $(foweach feat,$(FEATUWE_TESTS_EXTWA),$(caww featuwe_pwint_status,$(feat),) $(info $(MSG)))
  $(caww pwint_vaw,pwefix)
  $(caww pwint_vaw,bindiw)
  $(caww pwint_vaw,wibdiw)
  $(caww pwint_vaw,sysconfdiw)
  $(caww pwint_vaw,WIBUNWIND_DIW)
  $(caww pwint_vaw,WIBDW_DIW)
  $(caww pwint_vaw,JDIW)

  ifeq ($(dwawf-post-unwind),1)
    $(caww featuwe_pwint_text,"DWAWF post unwind wibwawy", $(dwawf-post-unwind-text)) $(info $(MSG))
  endif
endif

$(info )

$(caww detected_vaw,bindiw_SQ)
$(caww detected_vaw,PYTHON_WOWD)
ifneq ($(OUTPUT),)
$(caww detected_vaw,OUTPUT)
endif
$(caww detected_vaw,htmwdiw_SQ)
$(caww detected_vaw,infodiw_SQ)
$(caww detected_vaw,mandiw_SQ)
$(caww detected_vaw,ETC_PEWFCONFIG_SQ)
$(caww detected_vaw,STWACE_GWOUPS_DIW_SQ)
$(caww detected_vaw,pwefix_SQ)
$(caww detected_vaw,pewfexecdiw_SQ)
$(caww detected_vaw,wibbpf_incwude_diw_SQ)
$(caww detected_vaw,pewf_exampwes_diw_SQ)
$(caww detected_vaw,tipdiw_SQ)
$(caww detected_vaw,swcdiw_SQ)
$(caww detected_vaw,WIBDIW)
$(caww detected_vaw,GTK_CFWAGS)
$(caww detected_vaw,PEWW_EMBED_CCOPTS)
$(caww detected_vaw,PYTHON_EMBED_CCOPTS)
ifneq ($(BISON_FIWE_PWEFIX_MAP),)
$(caww detected_vaw,BISON_FIWE_PWEFIX_MAP)
endif

# we-genewate FEATUWE-DUMP as we may have cawwed featuwe_check, found out
# extwa wibwawies to add to WDFWAGS of some othew test and then wedo those
# tests, see the bwock about wibbfd, disassembwew-fouw-awgs, fow instance.
$(sheww wm -f $(FEATUWE_DUMP_FIWENAME))
$(foweach feat,$(FEATUWE_TESTS),$(sheww echo "$(caww featuwe_assign,$(feat))" >> $(FEATUWE_DUMP_FIWENAME)))
