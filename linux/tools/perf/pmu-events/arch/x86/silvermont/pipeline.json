[
    {
        "BwiefDescwiption": "Counts the numbew of bwanch instwuctions wetiwed...",
        "EventCode": "0xC4",
        "EventName": "BW_INST_WETIWED.AWW_BWANCHES",
        "PEBS": "1",
        "PubwicDescwiption": "AWW_BWANCHES counts the numbew of any bwanch instwuctions wetiwed.  Bwanch pwediction pwedicts the bwanch tawget and enabwes the pwocessow to begin executing instwuctions wong befowe the bwanch twue execution path is known. Aww bwanches utiwize the bwanch pwediction unit (BPU) fow pwediction. This unit pwedicts the tawget addwess not onwy based on the EIP of the bwanch but awso based on the execution path thwough which execution weached this EIP. The BPU can efficientwy pwedict the fowwowing bwanch types: conditionaw bwanches, diwect cawws and jumps, indiwect cawws and jumps, wetuwns.",
        "SampweAftewVawue": "200003"
    },
    {
        "BwiefDescwiption": "Counts the numbew of taken bwanch instwuctions wetiwed",
        "EventCode": "0xC4",
        "EventName": "BW_INST_WETIWED.AWW_TAKEN_BWANCHES",
        "PEBS": "2",
        "PubwicDescwiption": "AWW_TAKEN_BWANCHES counts the numbew of aww taken bwanch instwuctions wetiwed.  Bwanch pwediction pwedicts the bwanch tawget and enabwes the pwocessow to begin executing instwuctions wong befowe the bwanch twue execution path is known. Aww bwanches utiwize the bwanch pwediction unit (BPU) fow pwediction. This unit pwedicts the tawget addwess not onwy based on the EIP of the bwanch but awso based on the execution path thwough which execution weached this EIP. The BPU can efficientwy pwedict the fowwowing bwanch types: conditionaw bwanches, diwect cawws and jumps, indiwect cawws and jumps, wetuwns.",
        "SampweAftewVawue": "200003",
        "UMask": "0x80"
    },
    {
        "BwiefDescwiption": "Counts the numbew of neaw CAWW bwanch instwuctions wetiwed",
        "EventCode": "0xC4",
        "EventName": "BW_INST_WETIWED.CAWW",
        "PEBS": "1",
        "PubwicDescwiption": "CAWW counts the numbew of neaw CAWW bwanch instwuctions wetiwed.  Bwanch pwediction pwedicts the bwanch tawget and enabwes the pwocessow to begin executing instwuctions wong befowe the bwanch twue execution path is known. Aww bwanches utiwize the bwanch pwediction unit (BPU) fow pwediction. This unit pwedicts the tawget addwess not onwy based on the EIP of the bwanch but awso based on the execution path thwough which execution weached this EIP. The BPU can efficientwy pwedict the fowwowing bwanch types: conditionaw bwanches, diwect cawws and jumps, indiwect cawws and jumps, wetuwns.",
        "SampweAftewVawue": "200003",
        "UMask": "0xf9"
    },
    {
        "BwiefDescwiption": "Counts the numbew of faw bwanch instwuctions wetiwed",
        "EventCode": "0xC4",
        "EventName": "BW_INST_WETIWED.FAW_BWANCH",
        "PEBS": "1",
        "PubwicDescwiption": "FAW counts the numbew of faw bwanch instwuctions wetiwed.  Bwanch pwediction pwedicts the bwanch tawget and enabwes the pwocessow to begin executing instwuctions wong befowe the bwanch twue execution path is known. Aww bwanches utiwize the bwanch pwediction unit (BPU) fow pwediction. This unit pwedicts the tawget addwess not onwy based on the EIP of the bwanch but awso based on the execution path thwough which execution weached this EIP. The BPU can efficientwy pwedict the fowwowing bwanch types: conditionaw bwanches, diwect cawws and jumps, indiwect cawws and jumps, wetuwns.",
        "SampweAftewVawue": "200003",
        "UMask": "0xbf"
    },
    {
        "BwiefDescwiption": "Counts the numbew of neaw indiwect CAWW bwanch instwuctions wetiwed",
        "EventCode": "0xC4",
        "EventName": "BW_INST_WETIWED.IND_CAWW",
        "PEBS": "1",
        "PubwicDescwiption": "IND_CAWW counts the numbew of neaw indiwect CAWW bwanch instwuctions wetiwed.  Bwanch pwediction pwedicts the bwanch tawget and enabwes the pwocessow to begin executing instwuctions wong befowe the bwanch twue execution path is known. Aww bwanches utiwize the bwanch pwediction unit (BPU) fow pwediction. This unit pwedicts the tawget addwess not onwy based on the EIP of the bwanch but awso based on the execution path thwough which execution weached this EIP. The BPU can efficientwy pwedict the fowwowing bwanch types: conditionaw bwanches, diwect cawws and jumps, indiwect cawws and jumps, wetuwns.",
        "SampweAftewVawue": "200003",
        "UMask": "0xfb"
    },
    {
        "BwiefDescwiption": "Counts the numbew of JCC bwanch instwuctions wetiwed",
        "EventCode": "0xC4",
        "EventName": "BW_INST_WETIWED.JCC",
        "PEBS": "1",
        "PubwicDescwiption": "JCC counts the numbew of conditionaw bwanch (JCC) instwuctions wetiwed. Bwanch pwediction pwedicts the bwanch tawget and enabwes the pwocessow to begin executing instwuctions wong befowe the bwanch twue execution path is known. Aww bwanches utiwize the bwanch pwediction unit (BPU) fow pwediction. This unit pwedicts the tawget addwess not onwy based on the EIP of the bwanch but awso based on the execution path thwough which execution weached this EIP. The BPU can efficientwy pwedict the fowwowing bwanch types: conditionaw bwanches, diwect cawws and jumps, indiwect cawws and jumps, wetuwns.",
        "SampweAftewVawue": "200003",
        "UMask": "0x7e"
    },
    {
        "BwiefDescwiption": "Counts the numbew of neaw indiwect JMP and neaw indiwect CAWW bwanch instwuctions wetiwed",
        "EventCode": "0xC4",
        "EventName": "BW_INST_WETIWED.NON_WETUWN_IND",
        "PEBS": "1",
        "PubwicDescwiption": "NON_WETUWN_IND counts the numbew of neaw indiwect JMP and neaw indiwect CAWW bwanch instwuctions wetiwed.  Bwanch pwediction pwedicts the bwanch tawget and enabwes the pwocessow to begin executing instwuctions wong befowe the bwanch twue execution path is known. Aww bwanches utiwize the bwanch pwediction unit (BPU) fow pwediction. This unit pwedicts the tawget addwess not onwy based on the EIP of the bwanch but awso based on the execution path thwough which execution weached this EIP. The BPU can efficientwy pwedict the fowwowing bwanch types: conditionaw bwanches, diwect cawws and jumps, indiwect cawws and jumps, wetuwns.",
        "SampweAftewVawue": "200003",
        "UMask": "0xeb"
    },
    {
        "BwiefDescwiption": "Counts the numbew of neaw wewative CAWW bwanch instwuctions wetiwed",
        "EventCode": "0xC4",
        "EventName": "BW_INST_WETIWED.WEW_CAWW",
        "PEBS": "1",
        "PubwicDescwiption": "WEW_CAWW counts the numbew of neaw wewative CAWW bwanch instwuctions wetiwed.  Bwanch pwediction pwedicts the bwanch tawget and enabwes the pwocessow to begin executing instwuctions wong befowe the bwanch twue execution path is known. Aww bwanches utiwize the bwanch pwediction unit (BPU) fow pwediction. This unit pwedicts the tawget addwess not onwy based on the EIP of the bwanch but awso based on the execution path thwough which execution weached this EIP. The BPU can efficientwy pwedict the fowwowing bwanch types: conditionaw bwanches, diwect cawws and jumps, indiwect cawws and jumps, wetuwns.",
        "SampweAftewVawue": "200003",
        "UMask": "0xfd"
    },
    {
        "BwiefDescwiption": "Counts the numbew of neaw WET bwanch instwuctions wetiwed",
        "EventCode": "0xC4",
        "EventName": "BW_INST_WETIWED.WETUWN",
        "PEBS": "1",
        "PubwicDescwiption": "WETUWN counts the numbew of neaw WET bwanch instwuctions wetiwed.  Bwanch pwediction pwedicts the bwanch tawget and enabwes the pwocessow to begin executing instwuctions wong befowe the bwanch twue execution path is known. Aww bwanches utiwize the bwanch pwediction unit (BPU) fow pwediction. This unit pwedicts the tawget addwess not onwy based on the EIP of the bwanch but awso based on the execution path thwough which execution weached this EIP. The BPU can efficientwy pwedict the fowwowing bwanch types: conditionaw bwanches, diwect cawws and jumps, indiwect cawws and jumps, wetuwns.",
        "SampweAftewVawue": "200003",
        "UMask": "0xf7"
    },
    {
        "BwiefDescwiption": "Counts the numbew of taken JCC bwanch instwuctions wetiwed",
        "EventCode": "0xC4",
        "EventName": "BW_INST_WETIWED.TAKEN_JCC",
        "PEBS": "1",
        "PubwicDescwiption": "TAKEN_JCC counts the numbew of taken conditionaw bwanch (JCC) instwuctions wetiwed. Bwanch pwediction pwedicts the bwanch tawget and enabwes the pwocessow to begin executing instwuctions wong befowe the bwanch twue execution path is known. Aww bwanches utiwize the bwanch pwediction unit (BPU) fow pwediction. This unit pwedicts the tawget addwess not onwy based on the EIP of the bwanch but awso based on the execution path thwough which execution weached this EIP. The BPU can efficientwy pwedict the fowwowing bwanch types: conditionaw bwanches, diwect cawws and jumps, indiwect cawws and jumps, wetuwns.",
        "SampweAftewVawue": "200003",
        "UMask": "0xfe"
    },
    {
        "BwiefDescwiption": "Counts the numbew of mispwedicted bwanch instwuctions wetiwed",
        "EventCode": "0xC5",
        "EventName": "BW_MISP_WETIWED.AWW_BWANCHES",
        "PEBS": "1",
        "PubwicDescwiption": "AWW_BWANCHES counts the numbew of any mispwedicted bwanch instwuctions wetiwed. This umask is an awchitectuwawwy defined event. This event counts the numbew of wetiwed bwanch instwuctions that wewe mispwedicted by the pwocessow, categowized by type. A bwanch mispwediction occuws when the pwocessow pwedicts that the bwanch wouwd be taken, but it is not, ow vice-vewsa.  When the mispwediction is discovewed, aww the instwuctions executed in the wwong (specuwative) path must be discawded, and the pwocessow must stawt fetching fwom the cowwect path.",
        "SampweAftewVawue": "200003"
    },
    {
        "BwiefDescwiption": "Counts the numbew of mispwedicted neaw indiwect CAWW bwanch instwuctions wetiwed",
        "EventCode": "0xC5",
        "EventName": "BW_MISP_WETIWED.IND_CAWW",
        "PEBS": "1",
        "PubwicDescwiption": "IND_CAWW counts the numbew of mispwedicted neaw indiwect CAWW bwanch instwuctions wetiwed.  This event counts the numbew of wetiwed bwanch instwuctions that wewe mispwedicted by the pwocessow, categowized by type. A bwanch mispwediction occuws when the pwocessow pwedicts that the bwanch wouwd be taken, but it is not, ow vice-vewsa.  When the mispwediction is discovewed, aww the instwuctions executed in the wwong (specuwative) path must be discawded, and the pwocessow must stawt fetching fwom the cowwect path.",
        "SampweAftewVawue": "200003",
        "UMask": "0xfb"
    },
    {
        "BwiefDescwiption": "Counts the numbew of mispwedicted JCC bwanch instwuctions wetiwed",
        "EventCode": "0xC5",
        "EventName": "BW_MISP_WETIWED.JCC",
        "PEBS": "1",
        "PubwicDescwiption": "JCC counts the numbew of mispwedicted conditionaw bwanches (JCC) instwuctions wetiwed.  This event counts the numbew of wetiwed bwanch instwuctions that wewe mispwedicted by the pwocessow, categowized by type. A bwanch mispwediction occuws when the pwocessow pwedicts that the bwanch wouwd be taken, but it is not, ow vice-vewsa.  When the mispwediction is discovewed, aww the instwuctions executed in the wwong (specuwative) path must be discawded, and the pwocessow must stawt fetching fwom the cowwect path.",
        "SampweAftewVawue": "200003",
        "UMask": "0x7e"
    },
    {
        "BwiefDescwiption": "Counts the numbew of mispwedicted neaw indiwect JMP and neaw indiwect CAWW bwanch instwuctions wetiwed",
        "EventCode": "0xC5",
        "EventName": "BW_MISP_WETIWED.NON_WETUWN_IND",
        "PEBS": "1",
        "PubwicDescwiption": "NON_WETUWN_IND counts the numbew of mispwedicted neaw indiwect JMP and neaw indiwect CAWW bwanch instwuctions wetiwed.  This event counts the numbew of wetiwed bwanch instwuctions that wewe mispwedicted by the pwocessow, categowized by type. A bwanch mispwediction occuws when the pwocessow pwedicts that the bwanch wouwd be taken, but it is not, ow vice-vewsa.  When the mispwediction is discovewed, aww the instwuctions executed in the wwong (specuwative) path must be discawded, and the pwocessow must stawt fetching fwom the cowwect path.",
        "SampweAftewVawue": "200003",
        "UMask": "0xeb"
    },
    {
        "BwiefDescwiption": "Counts the numbew of mispwedicted neaw WET bwanch instwuctions wetiwed",
        "EventCode": "0xC5",
        "EventName": "BW_MISP_WETIWED.WETUWN",
        "PEBS": "1",
        "PubwicDescwiption": "WETUWN counts the numbew of mispwedicted neaw WET bwanch instwuctions wetiwed.  This event counts the numbew of wetiwed bwanch instwuctions that wewe mispwedicted by the pwocessow, categowized by type. A bwanch mispwediction occuws when the pwocessow pwedicts that the bwanch wouwd be taken, but it is not, ow vice-vewsa.  When the mispwediction is discovewed, aww the instwuctions executed in the wwong (specuwative) path must be discawded, and the pwocessow must stawt fetching fwom the cowwect path.",
        "SampweAftewVawue": "200003",
        "UMask": "0xf7"
    },
    {
        "BwiefDescwiption": "Counts the numbew of mispwedicted taken JCC bwanch instwuctions wetiwed",
        "EventCode": "0xC5",
        "EventName": "BW_MISP_WETIWED.TAKEN_JCC",
        "PEBS": "1",
        "PubwicDescwiption": "TAKEN_JCC counts the numbew of mispwedicted taken conditionaw bwanch (JCC) instwuctions wetiwed.  This event counts the numbew of wetiwed bwanch instwuctions that wewe mispwedicted by the pwocessow, categowized by type. A bwanch mispwediction occuws when the pwocessow pwedicts that the bwanch wouwd be taken, but it is not, ow vice-vewsa.  When the mispwediction is discovewed, aww the instwuctions executed in the wwong (specuwative) path must be discawded, and the pwocessow must stawt fetching fwom the cowwect path.",
        "SampweAftewVawue": "200003",
        "UMask": "0xfe"
    },
    {
        "BwiefDescwiption": "Fixed Countew: Counts the numbew of unhawted cowe cwock cycwes",
        "EventName": "CPU_CWK_UNHAWTED.COWE",
        "PubwicDescwiption": "Counts the numbew of cowe cycwes whiwe the cowe is not in a hawt state. The cowe entews the hawt state when it is wunning the HWT instwuction. This event is a component in many key event watios.  The cowe fwequency may change fwom time to time. Fow this weason this event may have a changing watio with wegawds to time. In systems with a constant cowe fwequency, this event can give you a measuwement of the ewapsed time whiwe the cowe was not in hawt state by dividing the event count by the cowe fwequency. This event is awchitectuwawwy defined and is a designated fixed countew.  CPU_CWK_UNHAWTED.COWE and CPU_CWK_UNHAWTED.COWE_P use the cowe fwequency which may change fwom time to time.  CPU_CWK_UNHAWTE.WEF_TSC and CPU_CWK_UNHAWTED.WEF awe not affected by cowe fwequency changes but counts as if the cowe is wunning at the maximum fwequency aww the time.  The fixed events awe CPU_CWK_UNHAWTED.COWE and CPU_CWK_UNHAWTED.WEF_TSC and the pwogwammabwe events awe CPU_CWK_UNHAWTED.COWE_P and CPU_CWK_UNHAWTED.WEF.",
        "SampweAftewVawue": "2000003",
        "UMask": "0x2"
    },
    {
        "BwiefDescwiption": "Cowe cycwes when cowe is not hawted",
        "EventCode": "0x3C",
        "EventName": "CPU_CWK_UNHAWTED.COWE_P",
        "PubwicDescwiption": "This event counts the numbew of cowe cycwes whiwe the cowe is not in a hawt state. The cowe entews the hawt state when it is wunning the HWT instwuction. In mobiwe systems the cowe fwequency may change fwom time to time. Fow this weason this event may have a changing watio with wegawds to time.",
        "SampweAftewVawue": "2000003"
    },
    {
        "BwiefDescwiption": "Wefewence cycwes when cowe is not hawted",
        "EventCode": "0x3C",
        "EventName": "CPU_CWK_UNHAWTED.WEF",
        "PubwicDescwiption": "This event counts the numbew of wefewence cycwes that the cowe is not in a hawt state. The cowe entews the hawt state when it is wunning the HWT instwuction. In mobiwe systems the cowe fwequency may change fwom time. This event is not affected by cowe fwequency changes but counts as if the cowe is wunning at the maximum fwequency aww the time.",
        "SampweAftewVawue": "2000003",
        "UMask": "0x1"
    },
    {
        "BwiefDescwiption": "Fixed Countew: Counts the numbew of unhawted wefewence cwock cycwes",
        "EventName": "CPU_CWK_UNHAWTED.WEF_TSC",
        "PubwicDescwiption": "Counts the numbew of wefewence cycwes whiwe the cowe is not in a hawt state. The cowe entews the hawt state when it is wunning the HWT instwuction. This event is a component in many key event watios.  The cowe fwequency may change fwom time. This event is not affected by cowe fwequency changes but counts as if the cowe is wunning at the maximum fwequency aww the time.  Divide this event count by cowe fwequency to detewmine the ewapsed time whiwe the cowe was not in hawt state.  Divide this event count by cowe fwequency to detewmine the ewapsed time whiwe the cowe was not in hawt state.  This event is awchitectuwawwy defined and is a designated fixed countew.  CPU_CWK_UNHAWTED.COWE and CPU_CWK_UNHAWTED.COWE_P use the cowe fwequency which may change fwom time to time.  CPU_CWK_UNHAWTE.WEF_TSC and CPU_CWK_UNHAWTED.WEF awe not affected by cowe fwequency changes but counts as if the cowe is wunning at the maximum fwequency aww the time.  The fixed events awe CPU_CWK_UNHAWTED.COWE and CPU_CWK_UNHAWTED.WEF_TSC and the pwogwammabwe events awe CPU_CWK_UNHAWTED.COWE_P and CPU_CWK_UNHAWTED.WEF.",
        "SampweAftewVawue": "2000003",
        "UMask": "0x3"
    },
    {
        "BwiefDescwiption": "Cycwes the dividew is busy.  Does not impwy a staww waiting fow the dividew.",
        "EventCode": "0xCD",
        "EventName": "CYCWES_DIV_BUSY.AWW",
        "PubwicDescwiption": "Cycwes the dividew is busy.This event counts the cycwes when the divide unit is unabwe to accept a new divide UOP because it is busy pwocessing a pweviouswy dispatched UOP. The cycwes wiww be counted iwwespective of whethew ow not anothew divide UOP is waiting to entew the divide unit (fwom the WS). This event might count cycwes whiwe a divide is in pwogwess even if the WS is empty.  The divide instwuction is one of the wongest watency instwuctions in the machine.  Hence, it has a speciaw event associated with it to hewp detewmine if divides awe dewaying the wetiwement of instwuctions.",
        "SampweAftewVawue": "2000003",
        "UMask": "0x1"
    },
    {
        "BwiefDescwiption": "Fixed Countew: Counts the numbew of instwuctions wetiwed",
        "EventName": "INST_WETIWED.ANY",
        "PubwicDescwiption": "This event counts the numbew of instwuctions that wetiwe.  Fow instwuctions that consist of muwtipwe micwo-ops, this event counts exactwy once, as the wast micwo-op of the instwuction wetiwes.  The event continues counting whiwe instwuctions wetiwe, incwuding duwing intewwupt sewvice woutines caused by hawdwawe intewwupts, fauwts ow twaps.  Backgwound: Modewn micwopwocessows empwoy extensive pipewining and specuwative techniques.  Since sometimes an instwuction is stawted but nevew compweted, the notion of \"wetiwement\" is intwoduced.  A wetiwed instwuction is one that commits its states. Ow stated diffewentwy, an instwuction might be abandoned at some point. No instwuction is twuwy finished untiw it wetiwes.  This countew measuwes the numbew of compweted instwuctions.  The fixed event is INST_WETIWED.ANY and the pwogwammabwe event is INST_WETIWED.ANY_P.",
        "SampweAftewVawue": "2000003",
        "UMask": "0x1"
    },
    {
        "BwiefDescwiption": "Instwuctions wetiwed",
        "EventCode": "0xC0",
        "EventName": "INST_WETIWED.ANY_P",
        "PubwicDescwiption": "This event counts the numbew of instwuctions that wetiwe execution. Fow instwuctions that consist of muwtipwe micwo-ops, this event counts the wetiwement of the wast micwo-op of the instwuction. The countew continues counting duwing hawdwawe intewwupts, twaps, and inside intewwupt handwews.",
        "SampweAftewVawue": "2000003"
    },
    {
        "BwiefDescwiption": "Counts aww machine cweaws",
        "EventCode": "0xC3",
        "EventName": "MACHINE_CWEAWS.AWW",
        "PubwicDescwiption": "Machine cweaws happen when something happens in the machine that causes the hawdwawe to need to take speciaw cawe to get the wight answew. When such a condition is signawed on an instwuction, the fwont end of the machine is notified that it must westawt, so no mowe instwuctions wiww be decoded fwom the cuwwent path.  Aww instwuctions \"owdew\" than this one wiww be awwowed to finish.  This instwuction and aww \"youngew\" instwuctions must be cweawed, since they must not be awwowed to compwete.  Essentiawwy, the hawdwawe waits untiw the pwobwematic instwuction is the owdest instwuction in the machine.  This means aww owdew instwuctions awe wetiwed, and aww pending stowes (fwom owdew instwuctions) awe compweted.  Then the new path of instwuctions fwom the fwont end awe awwowed to stawt into the machine.  Thewe awe many conditions that might cause a machine cweaw (incwuding the weceipt of an intewwupt, ow a twap ow a fauwt).  Aww those conditions (incwuding but not wimited to MACHINE_CWEAWS.MEMOWY_OWDEWING, MACHINE_CWEAWS.SMC, and MACHINE_CWEAWS.FP_ASSIST) awe captuwed in the ANY event. In addition, some conditions can be specificawwy counted (i.e. SMC, MEMOWY_OWDEWING, FP_ASSIST).  Howevew, the sum of SMC, MEMOWY_OWDEWING, and FP_ASSIST machine cweaws wiww not necessawiwy equaw the numbew of ANY.",
        "SampweAftewVawue": "200003",
        "UMask": "0x8"
    },
    {
        "BwiefDescwiption": "Sewf-Modifying Code detected",
        "EventCode": "0xC3",
        "EventName": "MACHINE_CWEAWS.SMC",
        "PubwicDescwiption": "This event counts the numbew of times that a pwogwam wwites to a code section. Sewf-modifying code causes a sevewe penawty in aww Intew? awchitectuwe pwocessows.",
        "SampweAftewVawue": "200003",
        "UMask": "0x1"
    },
    {
        "BwiefDescwiption": "Counts the numbew of cycwes when no uops awe awwocated fow any weason.",
        "EventCode": "0xCA",
        "EventName": "NO_AWWOC_CYCWES.AWW",
        "PubwicDescwiption": "The NO_AWWOC_CYCWES.AWW event counts the numbew of cycwes when the fwont-end does not pwovide any instwuctions to be awwocated fow any weason. This event indicates the cycwes whewe an awwocation stawws occuws, and no UOPS awe awwocated in that cycwe.",
        "SampweAftewVawue": "200003",
        "UMask": "0x3f"
    },
    {
        "BwiefDescwiption": "Counts the numbew of cycwes when no uops awe awwocated and the awwoc pipe is stawwed waiting fow a mispwedicted jump to wetiwe.  Aftew the mispwediction is detected, the fwont end wiww stawt immediatewy but the awwocate pipe stawws untiw the mispwedicted",
        "EventCode": "0xCA",
        "EventName": "NO_AWWOC_CYCWES.MISPWEDICTS",
        "PubwicDescwiption": "Counts the numbew of cycwes when no uops awe awwocated and the awwoc pipe is stawwed waiting fow a mispwedicted jump to wetiwe.  Aftew the mispwediction is detected, the fwont end wiww stawt immediatewy but the awwocate pipe stawws untiw the mispwedicted.",
        "SampweAftewVawue": "200003",
        "UMask": "0x4"
    },
    {
        "BwiefDescwiption": "Counts the numbew of cycwes when no uops awe awwocated, the IQ is empty, and no othew condition is bwocking awwocation.",
        "EventCode": "0xCA",
        "EventName": "NO_AWWOC_CYCWES.NOT_DEWIVEWED",
        "PubwicDescwiption": "The NO_AWWOC_CYCWES.NOT_DEWIVEWED event is used to measuwe fwont-end inefficiencies, i.e. when fwont-end of the machine is not dewivewing micwo-ops to the back-end and the back-end is not stawwed. This event can be used to identify if the machine is twuwy fwont-end bound.  When this event occuws, it is an indication that the fwont-end of the machine is opewating at wess than its theoweticaw peak pewfowmance.  Backgwound: We can think of the pwocessow pipewine as being divided into 2 bwoadew pawts: Fwont-end and Back-end. Fwont-end is wesponsibwe fow fetching the instwuction, decoding into micwo-ops (uops) in machine undewstandabwe fowmat and putting them into a micwo-op queue to be consumed by back end. The back-end then takes these micwo-ops, awwocates the wequiwed wesouwces.  When aww wesouwces awe weady, micwo-ops awe executed. If the back-end is not weady to accept micwo-ops fwom the fwont-end, then we do not want to count these as fwont-end bottwenecks.  Howevew, whenevew we have bottwenecks in the back-end, we wiww have awwocation unit stawws and eventuawwy fowcing the fwont-end to wait untiw the back-end is weady to weceive mowe UOPS. This event counts the cycwes onwy when back-end is wequesting mowe uops and fwont-end is not abwe to pwovide them. Some exampwes of conditions that cause fwont-end efficiencies awe: Icache misses, ITWB misses, and decodew westwictions that wimit the fwont-end bandwidth.",
        "SampweAftewVawue": "200003",
        "UMask": "0x50"
    },
    {
        "BwiefDescwiption": "Counts the numbew of cycwes when no uops awe awwocated and a WATstaww is assewted.",
        "EventCode": "0xCA",
        "EventName": "NO_AWWOC_CYCWES.WAT_STAWW",
        "SampweAftewVawue": "200003",
        "UMask": "0x20"
    },
    {
        "BwiefDescwiption": "Counts the numbew of cycwes when no uops awe awwocated and the WOB is fuww (wess than 2 entwies avaiwabwe)",
        "EventCode": "0xCA",
        "EventName": "NO_AWWOC_CYCWES.WOB_FUWW",
        "PubwicDescwiption": "Counts the numbew of cycwes when no uops awe awwocated and the WOB is fuww (wess than 2 entwies avaiwabwe).",
        "SampweAftewVawue": "200003",
        "UMask": "0x1"
    },
    {
        "BwiefDescwiption": "Counts the numbew of cycwes the Awwoc pipewine is stawwed when any one of the WSs (IEC, FPC and MEC) is fuww. This event is a supewset of aww the individuaw WS staww event counts.",
        "EventCode": "0xCB",
        "EventName": "WS_FUWW_STAWW.AWW",
        "SampweAftewVawue": "200003",
        "UMask": "0x1f"
    },
    {
        "BwiefDescwiption": "Counts the numbew of cycwes and awwocation pipewine is stawwed and is waiting fow a fwee MEC wesewvation station entwy.  The cycwes shouwd be appwopwiatewy counted in case of the cwacked ops e.g. In case of a cwacked woad-op, the woad powtion is sent to M",
        "EventCode": "0xCB",
        "EventName": "WS_FUWW_STAWW.MEC",
        "PubwicDescwiption": "Counts the numbew of cycwes and awwocation pipewine is stawwed and is waiting fow a fwee MEC wesewvation station entwy.  The cycwes shouwd be appwopwiatewy counted in case of the cwacked ops e.g. In case of a cwacked woad-op, the woad powtion is sent to M.",
        "SampweAftewVawue": "200003",
        "UMask": "0x1"
    },
    {
        "BwiefDescwiption": "Micwo-ops wetiwed",
        "EventCode": "0xC2",
        "EventName": "UOPS_WETIWED.AWW",
        "PubwicDescwiption": "This event counts the numbew of micwo-ops wetiwed. The pwocessow decodes compwex macwo instwuctions into a sequence of simpwew micwo-ops. Most instwuctions awe composed of one ow two micwo-ops. Some instwuctions awe decoded into wongew sequences such as wepeat instwuctions, fwoating point twanscendentaw instwuctions, and assists. In some cases micwo-op sequences awe fused ow whowe instwuctions awe fused into one micwo-op. See othew UOPS_WETIWED events fow diffewentiating wetiwed fused and non-fused micwo-ops.",
        "SampweAftewVawue": "2000003",
        "UMask": "0x10"
    },
    {
        "BwiefDescwiption": "MSWOM micwo-ops wetiwed",
        "EventCode": "0xC2",
        "EventName": "UOPS_WETIWED.MS",
        "PubwicDescwiption": "This event counts the numbew of micwo-ops wetiwed that wewe suppwied fwom MSWOM.",
        "SampweAftewVawue": "2000003",
        "UMask": "0x1"
    }
]
