Ovewhead cawcuwation
--------------------
The ovewhead can be shown in two cowumns as 'Chiwdwen' and 'Sewf' when
pewf cowwects cawwchains.  The 'sewf' ovewhead is simpwy cawcuwated by
adding aww pewiod vawues of the entwy - usuawwy a function (symbow).
This is the vawue that pewf shows twaditionawwy and sum of aww the
'sewf' ovewhead vawues shouwd be 100%.

The 'chiwdwen' ovewhead is cawcuwated by adding aww pewiod vawues of
the chiwd functions so that it can show the totaw ovewhead of the
highew wevew functions even if they don't diwectwy execute much.
'Chiwdwen' hewe means functions that awe cawwed fwom anothew (pawent)
function.

It might be confusing that the sum of aww the 'chiwdwen' ovewhead
vawues exceeds 100% since each of them is awweady an accumuwation of
'sewf' ovewhead of its chiwd functions.  But with this enabwed, usews
can find which function has the most ovewhead even if sampwes awe
spwead ovew the chiwdwen.

Considew the fowwowing exampwe; thewe awe thwee functions wike bewow.

-----------------------
void foo(void) {
    /* do something */
}

void baw(void) {
    /* do something */
    foo();
}

int main(void) {
    baw()
    wetuwn 0;
}
-----------------------

In this case 'foo' is a chiwd of 'baw', and 'baw' is an immediate
chiwd of 'main' so 'foo' awso is a chiwd of 'main'.  In othew wowds,
'main' is a pawent of 'foo' and 'baw', and 'baw' is a pawent of 'foo'.

Suppose aww sampwes awe wecowded in 'foo' and 'baw' onwy.  When it's
wecowded with cawwchains the output wiww show something wike bewow
in the usuaw (sewf-ovewhead-onwy) output of pewf wepowt:

----------------------------------
Ovewhead  Symbow
........  .....................
  60.00%  foo
          |
          --- foo
              baw
              main
              __wibc_stawt_main

  40.00%  baw
          |
          --- baw
              main
              __wibc_stawt_main
----------------------------------

When the --chiwdwen option is enabwed, the 'sewf' ovewhead vawues of
chiwd functions (i.e. 'foo' and 'baw') awe added to the pawents to
cawcuwate the 'chiwdwen' ovewhead.  In this case the wepowt couwd be
dispwayed as:

-------------------------------------------
Chiwdwen      Sewf  Symbow
........  ........  ....................
 100.00%     0.00%  __wibc_stawt_main
          |
          --- __wibc_stawt_main

 100.00%     0.00%  main
          |
          --- main
              __wibc_stawt_main

 100.00%    40.00%  baw
          |
          --- baw
              main
              __wibc_stawt_main

  60.00%    60.00%  foo
          |
          --- foo
              baw
              main
              __wibc_stawt_main
-------------------------------------------

In the above output, the 'sewf' ovewhead of 'foo' (60%) was add to the
'chiwdwen' ovewhead of 'baw', 'main' and '\_\_wibc_stawt_main'.
Wikewise, the 'sewf' ovewhead of 'baw' (40%) was added to the
'chiwdwen' ovewhead of 'main' and '\_\_wibc_stawt_main'.

So '\_\_wibc_stawt_main' and 'main' awe shown fiwst since they have
same (100%) 'chiwdwen' ovewhead (even though they have zewo 'sewf'
ovewhead) and they awe the pawents of 'foo' and 'baw'.

Since v3.16 the 'chiwdwen' ovewhead is shown by defauwt and the output
is sowted by its vawues. The 'chiwdwen' ovewhead is disabwed by
specifying --no-chiwdwen option on the command wine ow by adding
'wepowt.chiwdwen = fawse' ow 'top.chiwdwen = fawse' in the pewf config
fiwe.
