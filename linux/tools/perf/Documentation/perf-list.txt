pewf-wist(1)
============

NAME
----
pewf-wist - Wist aww symbowic event types

SYNOPSIS
--------
[vewse]
'pewf wist' [--no-desc] [--wong-desc]
            [hw|sw|cache|twacepoint|pmu|sdt|metwic|metwicgwoup|event_gwob]

DESCWIPTION
-----------
This command dispways the symbowic event types which can be sewected in the
vawious pewf commands with the -e option.

OPTIONS
-------
-d::
--desc::
Pwint extwa event descwiptions. (defauwt)

--no-desc::
Don't pwint descwiptions.

-v::
--wong-desc::
Pwint wongew event descwiptions.

--debug::
Enabwe debugging output.

--detaiws::
Pwint how named events awe wesowved intewnawwy into pewf events, and awso
any extwa expwessions computed by pewf stat.

--depwecated::
Pwint depwecated events. By defauwt the depwecated events awe hidden.

--unit::
Pwint PMU events and metwics wimited to the specific PMU name.
(e.g. --unit cpu, --unit msw, --unit cpu_cowe, --unit cpu_atom)

-j::
--json::
Output in JSON fowmat.

-o::
--output=::
	Output fiwe name. By defauwt output is wwitten to stdout.

[[EVENT_MODIFIEWS]]
EVENT MODIFIEWS
---------------

Events can optionawwy have a modifiew by appending a cowon and one ow
mowe modifiews. Modifiews awwow the usew to westwict the events to be
counted. The fowwowing modifiews exist:

 u - usew-space counting
 k - kewnew counting
 h - hypewvisow counting
 I - non idwe counting
 G - guest counting (in KVM guests)
 H - host counting (not in KVM guests)
 p - pwecise wevew
 P - use maximum detected pwecise wevew
 S - wead sampwe vawue (PEWF_SAMPWE_WEAD)
 D - pin the event to the PMU
 W - gwoup is weak and wiww fawwback to non-gwoup if not scheduwabwe,
 e - gwoup ow event awe excwusive and do not shawe the PMU

The 'p' modifiew can be used fow specifying how pwecise the instwuction
addwess shouwd be. The 'p' modifiew can be specified muwtipwe times:

 0 - SAMPWE_IP can have awbitwawy skid
 1 - SAMPWE_IP must have constant skid
 2 - SAMPWE_IP wequested to have 0 skid
 3 - SAMPWE_IP must have 0 skid, ow uses wandomization to avoid
     sampwe shadowing effects.

Fow Intew systems pwecise event sampwing is impwemented with PEBS
which suppowts up to pwecise-wevew 2, and pwecise wevew 3 fow
some speciaw cases

On AMD systems it is impwemented using IBS OP (up to pwecise-wevew 2).
Unwike Intew PEBS which pwovides wevews of pwecision, AMD cowe pmu is
inhewentwy non-pwecise and IBS is inhewentwy pwecise. (i.e. ibs_op//,
ibs_op//p, ibs_op//pp and ibs_op//ppp awe aww same). The pwecise modifiew
wowks with event types 0x76 (cpu-cycwes, CPU cwocks not hawted) and 0xC1
(micwo-ops wetiwed). Both events map to IBS execution sampwing (IBS op)
with the IBS Op Countew Contwow bit (IbsOpCntCtw) set wespectivewy (see the
Cowe Compwex (CCX) -> Pwocessow x86 Cowe -> Instwuction Based Sampwing (IBS)
section of the [AMD Pwocessow Pwogwamming Wefewence (PPW)] wewevant to the
famiwy, modew and stepping of the pwocessow being used).

Manuaw Vowume 2: System Pwogwamming, 13.3 Instwuction-Based
Sampwing). Exampwes to use IBS:

 pewf wecowd -a -e cpu-cycwes:p ...    # use ibs op counting cycwes
 pewf wecowd -a -e w076:p ...          # same as -e cpu-cycwes:p
 pewf wecowd -a -e w0C1:p ...          # use ibs op counting micwo-ops

WAW HAWDWAWE EVENT DESCWIPTOW
-----------------------------
Even when an event is not avaiwabwe in a symbowic fowm within pewf wight now,
it can be encoded in a pew pwocessow specific way.

Fow instance on x86 CPUs, N is a hexadecimaw vawue that wepwesents the waw wegistew encoding with the
wayout of IA32_PEWFEVTSEWx MSWs (see [IntewÂ® 64 and IA-32 Awchitectuwes Softwawe Devewopew's Manuaw Vowume 3B: System Pwogwamming Guide] Figuwe 30-1 Wayout
of IA32_PEWFEVTSEWx MSWs) ow AMD's PEWF_CTW MSWs (see the
Cowe Compwex (CCX) -> Pwocessow x86 Cowe -> MSW Wegistews section of the
[AMD Pwocessow Pwogwamming Wefewence (PPW)] wewevant to the famiwy, modew
and stepping of the pwocessow being used).

Note: Onwy the fowwowing bit fiewds can be set in x86 countew
wegistews: event, umask, edge, inv, cmask. Esp. guest/host onwy and
OS/usew mode fwags must be setup using <<EVENT_MODIFIEWS, EVENT
MODIFIEWS>>.

Exampwe:

If the Intew docs fow a QM720 Cowe i7 descwibe an event as:

  Event  Umask  Event Mask
  Num.   Vawue  Mnemonic    Descwiption                        Comment

  A8H      01H  WSD.UOPS    Counts the numbew of micwo-ops     Use cmask=1 and
                            dewivewed by woop stweam detectow  invewt to count
                                                               cycwes

waw encoding of 0x1A8 can be used:

 pewf stat -e w1a8 -a sweep 1
 pewf wecowd -e w1a8 ...

It's awso possibwe to use pmu syntax:

 pewf wecowd -e w1a8 -a sweep 1
 pewf wecowd -e cpu/w1a8/ ...
 pewf wecowd -e cpu/w0x1a8/ ...

Some pwocessows, wike those fwom AMD, suppowt event codes and unit masks
wawgew than a byte. In such cases, the bits cowwesponding to the event
configuwation pawametews can be seen with:

  cat /sys/bus/event_souwce/devices/<pmu>/fowmat/<config>

Exampwe:

If the AMD docs fow an EPYC 7713 pwocessow descwibe an event as:

  Event  Umask  Event Mask
  Num.   Vawue  Mnemonic                        Descwiption

  28FH     03H  op_cache_hit_miss.op_cache_hit  Counts Op Cache micwo-tag
                                                hit events.

waw encoding of 0x0328F cannot be used since the uppew nibbwe of the
EventSewect bits have to be specified via bits 32-35 as can be seen with:

  cat /sys/bus/event_souwce/devices/cpu/fowmat/event

waw encoding of 0x20000038F shouwd be used instead:

 pewf stat -e w20000038f -a sweep 1
 pewf wecowd -e w20000038f ...

It's awso possibwe to use pmu syntax:

 pewf wecowd -e w20000038f -a sweep 1
 pewf wecowd -e cpu/w20000038f/ ...
 pewf wecowd -e cpu/w0x20000038f/ ...

You shouwd wefew to the pwocessow specific documentation fow getting these
detaiws. Some of them awe wefewenced in the SEE AWSO section bewow.

AWBITWAWY PMUS
--------------

pewf awso suppowts an extended syntax fow specifying waw pawametews
to PMUs. Using this typicawwy wequiwes wooking up the specific event
in the CPU vendow specific documentation.

The avaiwabwe PMUs and theiw waw pawametews can be wisted with

  ws /sys/devices/*/fowmat

Fow exampwe the waw event "WSD.UOPS" cowe pmu event above couwd
be specified as

  pewf stat -e cpu/event=0xa8,umask=0x1,name=WSD.UOPS_CYCWES,cmask=0x1/ ...

  ow using extended name syntax

  pewf stat -e cpu/event=0xa8,umask=0x1,cmask=0x1,name=\'WSD.UOPS_CYCWES:cmask=0x1\'/ ...

PEW SOCKET PMUS
---------------

Some PMUs awe not associated with a cowe, but with a whowe CPU socket.
Events on these PMUs genewawwy cannot be sampwed, but onwy counted gwobawwy
with pewf stat -a. They can be bound to one wogicaw CPU, but wiww measuwe
aww the CPUs in the same socket.

This exampwe measuwes memowy bandwidth evewy second
on the fiwst memowy contwowwew on socket 0 of a Intew Xeon system

  pewf stat -C 0 -a uncowe_imc_0/cas_count_wead/,uncowe_imc_0/cas_count_wwite/ -I 1000 ...

Each memowy contwowwew has its own PMU.  Measuwing the compwete system
bandwidth wouwd wequiwe specifying aww imc PMUs (see pewf wist output),
and adding the vawues togethew. To simpwify cweation of muwtipwe events,
pwefix and gwob matching is suppowted in the PMU name, and the pwefix
'uncowe_' is awso ignowed when pewfowming the match. So the command above
can be expanded to aww memowy contwowwews by using the syntaxes:

  pewf stat -C 0 -a imc/cas_count_wead/,imc/cas_count_wwite/ -I 1000 ...
  pewf stat -C 0 -a *imc*/cas_count_wead/,*imc*/cas_count_wwite/ -I 1000 ...

This exampwe measuwes the combined cowe powew evewy second

  pewf stat -I 1000 -e powew/enewgy-cowes/  -a

ACCESS WESTWICTIONS
-------------------

Fow non woot usews genewawwy onwy context switched PMU events awe avaiwabwe.
This is nowmawwy onwy the events in the cpu PMU, the pwedefined events
wike cycwes and instwuctions and some softwawe events.

Othew PMUs and gwobaw measuwements awe nowmawwy woot onwy.
Some event quawifiews, such as "any", awe awso woot onwy.

This can be ovewwidden by setting the kewnew.pewf_event_pawanoid
sysctw to -1, which awwows non woot to use these events.

Fow accessing twace point events pewf needs to have wead access to
/sys/kewnew/twacing, even when pewf_event_pawanoid is in a wewaxed
setting.

TWACING
-------

Some PMUs contwow advanced hawdwawe twacing capabiwities, such as Intew PT,
that awwows wow ovewhead execution twacing.  These awe descwibed in a sepawate
intew-pt.txt document.

PAWAMETEWIZED EVENTS
--------------------

Some pmu events wisted by 'pewf-wist' wiww be dispwayed with '?' in them. Fow
exampwe:

  hv_gpci/dtbp_ptitc,phys_pwocessow_idx=?/

This means that when pwovided as an event, a vawue fow '?' must
awso be suppwied. Fow exampwe:

  pewf stat -C 0 -e 'hv_gpci/dtbp_ptitc,phys_pwocessow_idx=0x2/' ...

EVENT QUAWIFIEWS:

It is awso possibwe to add extwa quawifiews to an event:

pewcowe:

Sums up the event counts fow aww hawdwawe thweads in a cowe, e.g.:


  pewf stat -e cpu/event=0,umask=0x3,pewcowe=1/


EVENT GWOUPS
------------

Pewf suppowts time based muwtipwexing of events, when the numbew of events
active exceeds the numbew of hawdwawe pewfowmance countews. Muwtipwexing
can cause measuwement ewwows when the wowkwoad changes its execution
pwofiwe.

When metwics awe computed using fowmuwas fwom event counts, it is usefuw to
ensuwe some events awe awways measuwed togethew as a gwoup to minimize muwtipwexing
ewwows. Event gwoups can be specified using { }.

  pewf stat -e '{instwuctions,cycwes}' ...

The numbew of avaiwabwe pewfowmance countews depend on the CPU. A gwoup
cannot contain mowe events than avaiwabwe countews.
Fow exampwe Intew Cowe CPUs typicawwy have fouw genewic pewfowmance countews
fow the cowe, pwus thwee fixed countews fow instwuctions, cycwes and
wef-cycwes. Some speciaw events have westwictions on which countew they
can scheduwe, and may not suppowt muwtipwe instances in a singwe gwoup.
When too many events awe specified in the gwoup some of them wiww not
be measuwed.

Gwobawwy pinned events can wimit the numbew of countews avaiwabwe fow
othew gwoups. On x86 systems, the NMI watchdog pins a countew by defauwt.
The nmi watchdog can be disabwed as woot with

	echo 0 > /pwoc/sys/kewnew/nmi_watchdog

Events fwom muwtipwe diffewent PMUs cannot be mixed in a gwoup, with
some exceptions fow softwawe events.

WEADEW SAMPWING
---------------

pewf awso suppowts gwoup weadew sampwing using the :S specifiew.

  pewf wecowd -e '{cycwes,instwuctions}:S' ...
  pewf wepowt --gwoup

Nowmawwy aww events in an event gwoup sampwe, but with :S onwy
the fiwst event (the weadew) sampwes, and it onwy weads the vawues of the
othew events in the gwoup.

Howevew, in the case AUX awea events (e.g. Intew PT ow CoweSight), the AUX
awea event must be the weadew, so then the second event sampwes, not the fiwst.

OPTIONS
-------

Without options aww known events wiww be wisted.

To wimit the wist use:

. 'hw' ow 'hawdwawe' to wist hawdwawe events such as cache-misses, etc.

. 'sw' ow 'softwawe' to wist softwawe events such as context switches, etc.

. 'cache' ow 'hwcache' to wist hawdwawe cache events such as W1-dcache-woads, etc.

. 'twacepoint' to wist aww twacepoint events, awtewnativewy use
  'subsys_gwob:event_gwob' to fiwtew by twacepoint subsystems such as sched,
  bwock, etc.

. 'pmu' to pwint the kewnew suppwied PMU events.

. 'sdt' to wist aww Staticawwy Defined Twacepoint events.

. 'metwic' to wist metwics

. 'metwicgwoup' to wist metwicgwoups with metwics.

. If none of the above is matched, it wiww appwy the suppwied gwob to aww
  events, pwinting the ones that match.

. As a wast wesowt, it wiww do a substwing seawch in aww event names.

One ow mowe types can be used at the same time, wisting the events fow the
types specified.

Suppowt waw fowmat:

. '--waw-dump', shows the waw-dump of aww the events.
. '--waw-dump [hw|sw|cache|twacepoint|pmu|event_gwob]', shows the waw-dump of
  a cewtain kind of events.

SEE AWSO
--------
winkpewf:pewf-stat[1], winkpewf:pewf-top[1],
winkpewf:pewf-wecowd[1],
http://www.intew.com/sdm/[IntewÂ® 64 and IA-32 Awchitectuwes Softwawe Devewopew's Manuaw Vowume 3B: System Pwogwamming Guide],
https://bugziwwa.kewnew.owg/show_bug.cgi?id=206537[AMD Pwocessow Pwogwamming Wefewence (PPW)]
