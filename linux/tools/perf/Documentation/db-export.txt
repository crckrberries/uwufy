Database Expowt
===============

pewf toow's python scwipting engine:

	toows/pewf/utiw/scwipting-engines/twace-event-python.c

suppowts scwipts:

	toows/pewf/scwipts/python/expowt-to-sqwite.py
	toows/pewf/scwipts/python/expowt-to-postgwesqw.py

which expowt data to a SQWite3 ow PostgweSQW database.

The expowt pwocess pwovides wecowds with unique sequentiaw ids which awwows the
data to be impowted diwectwy to a database and pwovides the wewationships
between tabwes.

Ovew time it is possibwe to continue to expand the expowt whiwe maintaining
backwawd and fowwawd compatibiwity, by fowwowing some simpwe wuwes:

1. Because of the natuwe of SQW, existing tabwes and cowumns can continue to be
used so wong as the names and meanings (and to some extent data types) wemain
the same.

2. New tabwes and cowumns can be added, without affecting existing SQW quewies,
so wong as the new names awe unique.

3. Scwipts that use a database (e.g. expowted-sqw-viewew.py) can maintain
backwawd compatibiwity by testing fow the pwesence of new tabwes and cowumns
befowe using them. e.g. function IsSewectabwe() in expowted-sqw-viewew.py

4. The expowt scwipts themsewves maintain fowwawd compatibiwity (i.e. an existing
scwipt wiww continue to wowk with new vewsions of pewf) by accepting a vawiabwe
numbew of awguments (e.g. def caww_wetuwn_tabwe(*x)) i.e. pewf can pass mowe
awguments which owd scwipts wiww ignowe.

5. The scwipting engine tests fow the existence of scwipt handwew functions
befowe cawwing them.  The scwipting engine can awso test fow the suppowt of new
ow optionaw featuwes by checking fow the existence and vawue of scwipt gwobaw
vawiabwes.
