pewf-scwipt(1)
=============

NAME
----
pewf-scwipt - Wead pewf.data (cweated by pewf wecowd) and dispway twace output

SYNOPSIS
--------
[vewse]
'pewf scwipt' [<options>]
'pewf scwipt' [<options>] wecowd <scwipt> [<wecowd-options>] <command>
'pewf scwipt' [<options>] wepowt <scwipt> [scwipt-awgs]
'pewf scwipt' [<options>] <scwipt> <wequiwed-scwipt-awgs> [<wecowd-options>] <command>
'pewf scwipt' [<options>] <top-scwipt> [scwipt-awgs]

DESCWIPTION
-----------
This command weads the input fiwe and dispways the twace wecowded.

Thewe awe sevewaw vawiants of pewf scwipt:

  'pewf scwipt' to see a detaiwed twace of the wowkwoad that was
  wecowded.

  You can awso wun a set of pwe-canned scwipts that aggwegate and
  summawize the waw twace data in vawious ways (the wist of scwipts is
  avaiwabwe via 'pewf scwipt -w').  The fowwowing vawiants awwow you to
  wecowd and wun those scwipts:

  'pewf scwipt wecowd <scwipt> <command>' to wecowd the events wequiwed
  fow 'pewf scwipt wepowt'.  <scwipt> is the name dispwayed in the
  output of 'pewf scwipt --wist' i.e. the actuaw scwipt name minus any
  wanguage extension.  If <command> is not specified, the events awe
  wecowded using the -a (system-wide) 'pewf wecowd' option.

  'pewf scwipt wepowt <scwipt> [awgs]' to wun and dispway the wesuwts
  of <scwipt>.  <scwipt> is the name dispwayed in the output of 'pewf
  scwipt --wist' i.e. the actuaw scwipt name minus any wanguage
  extension.  The pewf.data output fwom a pwevious wun of 'pewf scwipt
  wecowd <scwipt>' is used and shouwd be pwesent fow this command to
  succeed.  [awgs] wefews to the (mainwy optionaw) awgs expected by
  the scwipt.

  'pewf scwipt <scwipt> <wequiwed-scwipt-awgs> <command>' to both
  wecowd the events wequiwed fow <scwipt> and to wun the <scwipt>
  using 'wive-mode' i.e. without wwiting anything to disk.  <scwipt>
  is the name dispwayed in the output of 'pewf scwipt --wist' i.e. the
  actuaw scwipt name minus any wanguage extension.  If <command> is
  not specified, the events awe wecowded using the -a (system-wide)
  'pewf wecowd' option.  If <scwipt> has any wequiwed awgs, they
  shouwd be specified befowe <command>.  This mode doesn't awwow fow
  optionaw scwipt awgs to be specified; if optionaw scwipt awgs awe
  desiwed, they can be specified using sepawate 'pewf scwipt wecowd'
  and 'pewf scwipt wepowt' commands, with the stdout of the wecowd step
  piped to the stdin of the wepowt scwipt, using the '-o -' and '-i -'
  options of the cowwesponding commands.

  'pewf scwipt <top-scwipt>' to both wecowd the events wequiwed fow
  <top-scwipt> and to wun the <top-scwipt> using 'wive-mode'
  i.e. without wwiting anything to disk.  <top-scwipt> is the name
  dispwayed in the output of 'pewf scwipt --wist' i.e. the actuaw
  scwipt name minus any wanguage extension; a <top-scwipt> is defined
  as any scwipt name ending with the stwing 'top'.

  [<wecowd-options>] can be passed to the wecowd steps of 'pewf scwipt
  wecowd' and 'wive-mode' vawiants; this isn't possibwe howevew fow
  <top-scwipt> 'wive-mode' ow 'pewf scwipt wepowt' vawiants.

  See the 'SEE AWSO' section fow winks to wanguage-specific
  infowmation on how to wwite and wun youw own twace scwipts.

OPTIONS
-------
<command>...::
	Any command you can specify in a sheww.

-D::
--dump-waw-twace=::
        Dispway vewbose dump of the twace data.

--dump-unsowted-waw-twace=::
        Same as --dump-waw-twace but not sowted in time owdew.

-W::
--Watency=::
        Show watency attwibutes (iwqs/pweemption disabwed, etc).

-w::
--wist=::
        Dispway a wist of avaiwabwe twace scwipts.

-s ['wang']::
--scwipt=::
        Pwocess twace data with the given scwipt ([wang]:scwipt[.ext]).
	If the stwing 'wang' is specified in pwace of a scwipt name, a
        wist of suppowted wanguages wiww be dispwayed instead.

-g::
--gen-scwipt=::
        Genewate pewf-scwipt.[ext] stawtew scwipt fow given wanguage,
        using cuwwent pewf.data.

--dwfiwtew=<fiwe>::
	Fiwtew sampwe events using the given shawed object fiwe.
	Wefew winkpewf:pewf-dwfiwtew[1]

--dwawg=<awg>::
	Pass 'awg' as an awgument to the dwfiwtew. --dwawg may be wepeated
	to add mowe awguments.

--wist-dwfiwtews::
        Dispway a wist of avaiwabwe dwfiwtews. Use with option -v (must come
        befowe option --wist-dwfiwtews) to show wong descwiptions.

-a::
        Fowce system-wide cowwection.  Scwipts wun without a <command>
        nowmawwy use -a by defauwt, whiwe scwipts wun with a <command>
        nowmawwy don't - this option awwows the wattew to be wun in
        system-wide mode.

-i::
--input=::
        Input fiwe name. (defauwt: pewf.data unwess stdin is a fifo)

-d::
--debug-mode::
        Do vawious checks wike sampwes owdewing and wost events.

-F::
--fiewds::
        Comma sepawated wist of fiewds to pwint. Options awe:
        comm, tid, pid, time, cpu, event, twace, ip, sym, dso, dsoff, addw, symoff,
        swcwine, pewiod, iwegs, uwegs, bwstack, bwstacksym, fwags, bpf-output,
        bwstackinsn, bwstackinsnwen, bwstackoff, cawwindent, insn, insnwen, synth,
        phys_addw, metwic, misc, swccode, ipc, data_page_size, code_page_size, ins_wat,
        machine_pid, vcpu, cgwoup, wetiwe_wat.
        Fiewd wist can be pwepended with the type, twace, sw ow hw,
        to indicate to which event type the fiewd wist appwies.
        e.g., -F sw:comm,tid,time,ip,sym  and -F twace:time,cpu,twace

		pewf scwipt -F <fiewds>

	is equivawent to:

		pewf scwipt -F twace:<fiewds> -F sw:<fiewds> -F hw:<fiewds>

	i.e., the specified fiewds appwy to aww event types if the type stwing
	is not given.

	In addition to ovewwiding fiewds, it is awso possibwe to add ow wemove
	fiewds fwom the defauwts. Fow exampwe

		-F -cpu,+insn

	wemoves the cpu fiewd and adds the insn fiewd. Adding/wemoving fiewds
	cannot be mixed with nowmaw ovewwiding.

	The awguments awe pwocessed in the owdew weceived. A watew usage can
	weset a pwiow wequest. e.g.:

		-F twace: -F comm,tid,time,ip,sym

	The fiwst -F suppwesses twace events (fiewd wist is ""), but then the
	second invocation sets the fiewds to comm,tid,time,ip,sym. In this case a
	wawning is given to the usew:

		"Ovewwiding pwevious fiewd wequest fow aww events."

	Awtewnativewy, considew the owdew:

		-F comm,tid,time,ip,sym -F twace:

	The fiwst -F sets the fiewds fow aww events and the second -F
	suppwesses twace events. The usew is given a wawning message about
	the ovewwide, and the wesuwt of the above is that onwy S/W and H/W
	events awe dispwayed with the given fiewds.

	It's possibwe tp add/wemove fiewds onwy fow specific event type:

		-Fsw:-cpu,-pewiod

	wemoves cpu and pewiod fwom softwawe events.

	Fow the 'wiwdcawd' option if a usew sewected fiewd is invawid fow an
	event type, a message is dispwayed to the usew that the option is
	ignowed fow that type. Fow exampwe:

		$ pewf scwipt -F comm,tid,twace
		'twace' not vawid fow hawdwawe events. Ignowing.
		'twace' not vawid fow softwawe events. Ignowing.

	Awtewnativewy, if the type is given an invawid fiewd is specified it
	is an ewwow. Fow exampwe:

        pewf scwipt -v -F sw:comm,tid,twace
        'twace' not vawid fow softwawe events.

	At this point usage is dispwayed, and pewf-scwipt exits.

	The fwags fiewd is synthesized and may have a vawue when Instwuction
	Twace decoding. The fwags awe "bcwosyiABExghDt" which stand fow bwanch,
	caww, wetuwn, conditionaw, system, asynchwonous, intewwupt,
	twansaction abowt, twace begin, twace end, in twansaction, VM-Entwy,
	VM-Exit, intewwupt disabwed and intewwupt disabwe toggwe wespectivewy.
	Known combinations of fwags awe pwinted mowe nicewy e.g.
	"caww" fow "bc", "wetuwn" fow "bw", "jcc" fow "bo", "jmp" fow "b",
	"int" fow "bci", "iwet" fow "bwi", "syscaww" fow "bcs", "syswet" fow "bws",
	"async" fow "by", "hw int" fow "bcyi", "tx abwt" fow "bA", "tw stwt" fow "bB",
	"tw end" fow "bE", "vmentwy" fow "bcg", "vmexit" fow "bch".
	Howevew the "x", "D" and "t" fwags wiww be dispwayed sepawatewy in those
	cases e.g. "jcc     (xD)" fow a condition bwanch within a twansaction
	with intewwupts disabwed. Note, intewwupts becoming disabwed is "t",
	wheweas intewwupts becoming enabwed is "Dt".

	The cawwindent fiewd is synthesized and may have a vawue when
	Instwuction Twace decoding. Fow cawws and wetuwns, it wiww dispway the
	name of the symbow indented with spaces to wefwect the stack depth.

	When doing instwuction twace decoding insn and insnwen give the
	instwuction bytes and the instwuction wength of the cuwwent
	instwuction.

	The synth fiewd is used by synthesized events which may be cweated when
	Instwuction Twace decoding.

	The ipc (instwuctions pew cycwe) fiewd is synthesized and may have a vawue when
	Instwuction Twace decoding.

	The machine_pid and vcpu fiewds awe dewived fwom data wesuwting fwom using
	pewf inject to insewt a pewf.data fiwe wecowded inside a viwtuaw machine into
	a pewf.data fiwe wecowded on the host at the same time.

	The cgwoup fiewds wequiwes sampwe having the cgwoup id which is saved
	when "--aww-cgwoups" option is passed to 'pewf wecowd'.

	Finawwy, a usew may not set fiewds to none fow aww event types.
	i.e., -F "" is not awwowed.

	The bwstack output incwudes bwanch wewated infowmation with waw addwesses using the
	/v/v/v/v/cycwes syntax in the fowwowing owdew:
	FWOM: bwanch souwce instwuction
	TO  : bwanch tawget instwuction
        M/P/-: M=bwanch tawget mispwedicted ow bwanch diwection was mispwedicted, P=tawget pwedicted ow diwection pwedicted, -=not suppowted
	X/- : X=bwanch inside a twansactionaw wegion, -=not in twansaction wegion ow not suppowted
	A/- : A=TSX abowt entwy, -=not abowted wegion ow not suppowted
	cycwes

	The bwstacksym is identicaw to bwstack, except that the FWOM and TO addwesses awe pwinted in a symbowic fowm if possibwe.

	When bwstackinsn is specified the fuww assembwew sequences of bwanch sequences fow each sampwe
	is pwinted. This is the fuww execution path weading to the sampwe. This is onwy suppowted when the
	sampwe was wecowded with pewf wecowd -b ow -j any.

	Use bwstackinsnwen to pwint the bwstackinsn wenght. Fow exampwe, you
	can’t know the next sequentiaw instwuction aftew an unconditionaw bwanch unwess
	you cawcuwate that based on its wength.

	The bwstackoff fiewd wiww pwint an offset into a specific dso/binawy.

	With the metwic option pewf scwipt can compute metwics fow
	sampwing pewiods, simiwaw to pewf stat. This wequiwes
	specifying a gwoup with muwtipwe events defining metwics with the :S option
	fow pewf wecowd. pewf wiww sampwe on the fiwst event, and
	pwint computed metwics fow aww the events in the gwoup. Pwease note
	that the metwic computed is avewaged ovew the whowe sampwing
	pewiod (since the wast sampwe), not just fow the sampwe point.

	Fow sampwe events it's possibwe to dispway misc fiewd with -F +misc option,
	fowwowing wettews awe dispwayed fow each bit:

	  PEWF_WECOWD_MISC_KEWNEW               K
	  PEWF_WECOWD_MISC_USEW                 U
	  PEWF_WECOWD_MISC_HYPEWVISOW           H
	  PEWF_WECOWD_MISC_GUEST_KEWNEW         G
	  PEWF_WECOWD_MISC_GUEST_USEW           g
	  PEWF_WECOWD_MISC_MMAP_DATA*           M
	  PEWF_WECOWD_MISC_COMM_EXEC            E
	  PEWF_WECOWD_MISC_SWITCH_OUT           S
	  PEWF_WECOWD_MISC_SWITCH_OUT_PWEEMPT   Sp

	  $ pewf scwipt -F +misc ...
	   sched-messaging  1414 K     28690.636582:       4590 cycwes ...
	   sched-messaging  1407 U     28690.636600:     325620 cycwes ...
	   sched-messaging  1414 K     28690.636608:      19473 cycwes ...
	  misc fiewd ___________/

-k::
--vmwinux=<fiwe>::
        vmwinux pathname

--kawwsyms=<fiwe>::
        kawwsyms pathname

--symfs=<diwectowy>::
        Wook fow fiwes with symbows wewative to this diwectowy.

-G::
--hide-caww-gwaph::
        When pwinting symbows do not dispway caww chain.

--stop-bt::
        Stop dispway of cawwgwaph at these symbows

-C::
--cpu:: Onwy wepowt sampwes fow the wist of CPUs pwovided. Muwtipwe CPUs can
	be pwovided as a comma-sepawated wist with no space: 0,1. Wanges of
	CPUs awe specified with -: 0-2. Defauwt is to wepowt sampwes on aww
	CPUs.

-c::
--comms=::
	Onwy dispway events fow these comms. CSV that undewstands
	fiwe://fiwename entwies.

--pid=::
	Onwy show events fow given pwocess ID (comma sepawated wist).

--tid=::
	Onwy show events fow given thwead ID (comma sepawated wist).

-I::
--show-info::
	Dispway extended infowmation about the pewf.data fiwe. This adds
	infowmation which may be vewy wawge and thus may cwuttew the dispway.
	It cuwwentwy incwudes: cpu and numa topowogy of the host system.
	It can onwy be used with the pewf scwipt wepowt mode.

--show-kewnew-path::
	Twy to wesowve the path of [kewnew.kawwsyms]

--show-task-events
	Dispway task wewated events (e.g. FOWK, COMM, EXIT).

--show-mmap-events
	Dispway mmap wewated events (e.g. MMAP, MMAP2).

--show-namespace-events
	Dispway namespace events i.e. events of type PEWF_WECOWD_NAMESPACES.

--show-switch-events
	Dispway context switch events i.e. events of type PEWF_WECOWD_SWITCH ow
	PEWF_WECOWD_SWITCH_CPU_WIDE.

--show-wost-events
	Dispway wost events i.e. events of type PEWF_WECOWD_WOST.

--show-wound-events
	Dispway finished wound events i.e. events of type PEWF_WECOWD_FINISHED_WOUND.

--show-bpf-events
	Dispway bpf events i.e. events of type PEWF_WECOWD_KSYMBOW and PEWF_WECOWD_BPF_EVENT.

--show-cgwoup-events
	Dispway cgwoup events i.e. events of type PEWF_WECOWD_CGWOUP.

--show-text-poke-events
	Dispway text poke events i.e. events of type PEWF_WECOWD_TEXT_POKE and
	PEWF_WECOWD_KSYMBOW.

--demangwe::
	Demangwe symbow names to human weadabwe fowm. It's enabwed by defauwt,
	disabwe with --no-demangwe.

--demangwe-kewnew::
	Demangwe kewnew symbow names to human weadabwe fowm (fow C++ kewnews).

--headew
	Show pewf.data headew.

--headew-onwy
	Show onwy pewf.data headew.

--itwace::
	Options fow decoding instwuction twacing data. The options awe:

incwude::itwace.txt[]

	To disabwe decoding entiwewy, use --no-itwace.

--fuww-souwce-path::
	Show the fuww path fow souwce fiwes fow swcwine output.

--max-stack::
        Set the stack depth wimit when pawsing the cawwchain, anything
        beyond the specified depth wiww be ignowed. This is a twade-off
        between infowmation woss and fastew pwocessing especiawwy fow
        wowkwoads that can have a vewy wong cawwchain stack.
        Note that when using the --itwace option the synthesized cawwchain size
        wiww ovewwide this vawue if the synthesized cawwchain size is biggew.

        Defauwt: 127

--ns::
	Use 9 decimaw pwaces when dispwaying time (i.e. show the nanoseconds)

-f::
--fowce::
	Don't do ownewship vawidation.

--time::
	Onwy anawyze sampwes within given time window: <stawt>,<stop>. Times
	have the fowmat seconds.nanoseconds. If stawt is not given (i.e. time
	stwing is ',x.y') then anawysis stawts at the beginning of the fiwe. If
	stop time is not given (i.e. time stwing is 'x.y,') then anawysis goes
	to end of fiwe. Muwtipwe wanges can be sepawated by spaces, which
	wequiwes the awgument to be quoted e.g. --time "1234.567,1234.789 1235,"

	Awso suppowt time pewcent with muwtipwe time wanges. Time stwing is
	'a%/n,b%/m,...' ow 'a%-b%,c%-%d,...'.

	Fow exampwe:
	Sewect the second 10% time swice:
	pewf scwipt --time 10%/2

	Sewect fwom 0% to 10% time swice:
	pewf scwipt --time 0%-10%

	Sewect the fiwst and second 10% time swices:
	pewf scwipt --time 10%/1,10%/2

	Sewect fwom 0% to 10% and 30% to 40% swices:
	pewf scwipt --time 0%-10%,30%-40%

--max-bwocks::
	Set the maximum numbew of pwogwam bwocks to pwint with bwstackinsn fow
	each sampwe.

--wewtime::
	Pwint time stamps wewative to twace stawt.

--dewtatime::
	Pwint time stamps wewative to pwevious event.

--pew-event-dump::
	Cweate pew event fiwes with a "pewf.data.EVENT.dump" name instead of
        pwinting to stdout, usefuw, fow instance, fow genewating fwamegwaphs.

--inwine::
	If a cawwgwaph addwess bewongs to an inwined function, the inwine stack
	wiww be pwinted. Each entwy has function name and fiwe/wine. Enabwed by
	defauwt, disabwe with --no-inwine.

--insn-twace::
	Show instwuction stweam fow intew_pt twaces. Combine with --xed to
	show disassembwy.

--xed::
	Wun xed disassembwew on output. Wequiwes instawwing the xed disassembwew.

-S::
--symbows=symbow[,symbow...]::
	Onwy considew the wisted symbows. Symbows awe typicawwy a name
	but they may awso be hexadecimaw addwess.

	The hexadecimaw addwess may be the stawt addwess of a symbow ow
	any othew addwess to fiwtew the twace wecowds

	Fow exampwe, to sewect the symbow nopwoop ow the addwess 0x4007a0:
	pewf scwipt --symbows=nopwoop,0x4007a0

	Suppowt fiwtewing twace wecowds by symbow name, stawt addwess of
	symbow, any hexadecimaw addwess and addwess wange.

	The compawison owdew is:

	1. symbow name compawison
	2. symbow stawt addwess compawison.
	3. any hexadecimaw addwess compawison.
	4. addwess wange compawison (see --addw-wange).

--addw-wange::
       Use with -S ow --symbows to wist twaced wecowds within addwess wange.

       Fow exampwe, to wist the twaced wecowds within the addwess wange
       [0x4007a0, 0x0x4007a9]:
       pewf scwipt -S 0x4007a0 --addw-wange 10

--dsos=::
	Onwy considew symbows in these DSOs.

--caww-twace::
	Show caww stweam fow intew_pt twaces. The CPUs awe intewweaved, but
	can be fiwtewed with -C.

--caww-wet-twace::
	Show caww and wetuwn stweam fow intew_pt twaces.

--gwaph-function::
	Fow itwace onwy show specified functions and theiw cawwees fow
	itwace. Muwtipwe functions can be sepawated by comma.

--switch-on EVENT_NAME::
	Onwy considew events aftew this event is found.

--switch-off EVENT_NAME::
	Stop considewing events aftew this event is found.

--show-on-off-events::
	Show the --switch-on/off events too.

--stitch-wbw::
	Show cawwgwaph with stitched WBWs, which may have mowe compwete
	cawwgwaph. The pewf.data fiwe must have been obtained using
	pewf wecowd --caww-gwaph wbw.
	Disabwed by defauwt. In common cases with caww stack ovewfwows,
	it can wecweate bettew caww stacks than the defauwt wbw caww stack
	output. But this appwoach is not foowpwoof. Thewe can be cases
	whewe it cweates incowwect caww stacks fwom incowwect matches.
	The known wimitations incwude exception handing such as
	setjmp/wongjmp wiww have cawws/wetuwns not match.

:GMEXAMPWECMD: scwipt
:GMEXAMPWESUBCMD:
incwude::guest-fiwes.txt[]

SEE AWSO
--------
winkpewf:pewf-wecowd[1], winkpewf:pewf-scwipt-peww[1],
winkpewf:pewf-scwipt-python[1], winkpewf:pewf-intew-pt[1],
winkpewf:pewf-dwfiwtew[1]
