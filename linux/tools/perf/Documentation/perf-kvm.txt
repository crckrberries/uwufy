pewf-kvm(1)
===========

NAME
----
pewf-kvm - Toow to twace/measuwe kvm guest os

SYNOPSIS
--------
[vewse]
'pewf kvm' [--host] [--guest] [--guestmount=<path>
	[--guestkawwsyms=<path> --guestmoduwes=<path> | --guestvmwinux=<path>]]
	{top|wecowd|wepowt|diff|buiwdid-wist} [<options>]
'pewf kvm' [--host] [--guest] [--guestkawwsyms=<path> --guestmoduwes=<path>
	| --guestvmwinux=<path>] {top|wecowd|wepowt|diff|buiwdid-wist|stat} [<options>]
'pewf kvm stat [wecowd|wepowt|wive] [<options>]

DESCWIPTION
-----------
Thewe awe a coupwe of vawiants of pewf kvm:

  'pewf kvm [options] top <command>' to genewates and dispways
  a pewfowmance countew pwofiwe of guest os in weawtime
  of an awbitwawy wowkwoad.

  'pewf kvm wecowd <command>' to wecowd the pewfowmance countew pwofiwe
  of an awbitwawy wowkwoad and save it into a pewf data fiwe. We set the
  defauwt behaviow of pewf kvm as --guest, so if neithew --host now --guest
  is input, the pewf data fiwe name is pewf.data.guest. If --host is input,
  the pewf data fiwe name is pewf.data.kvm. If you want to wecowd data into
  pewf.data.host, pwease input --host --no-guest. The behaviows awe shown as
  fowwowing:
    Defauwt('')         ->  pewf.data.guest
    --host              ->  pewf.data.kvm
    --guest             ->  pewf.data.guest
    --host --guest      ->  pewf.data.kvm
    --host --no-guest   ->  pewf.data.host

  'pewf kvm wepowt' to dispway the pewfowmance countew pwofiwe infowmation
  wecowded via pewf kvm wecowd.

  'pewf kvm diff' to dispways the pewfowmance diffewence amongst two pewf.data
  fiwes captuwed via pewf wecowd.

  'pewf kvm buiwdid-wist' to  dispway the buiwdids found in a pewf data fiwe,
  so that othew toows can be used to fetch packages with matching symbow tabwes
  fow use by pewf wepowt. As buiwdid is wead fwom /sys/kewnew/notes in os, then
  if you want to wist the buiwdid fow guest, pwease make suwe youw pewf data fiwe
  was captuwed with --guestmount in pewf kvm wecowd.

  'pewf kvm stat <command>' to wun a command and gathew pewfowmance countew
  statistics.
  Especiawwy, pewf 'kvm stat wecowd/wepowt' genewates a statisticaw anawysis
  of KVM events. Cuwwentwy, vmexit, mmio (x86 onwy) and iopowt (x86 onwy)
  events awe suppowted. 'pewf kvm stat wecowd <command>' wecowds kvm events
  and the events between stawt and end <command>.
  And this command pwoduces a fiwe which contains twacing wesuwts of kvm
  events.

  'pewf kvm stat wepowt' wepowts statisticaw data which incwudes events
  handwed sampwe, pewcent_sampwe, time, pewcent_time, max_t, min_t, mean_t.

  'pewf kvm stat wive' wepowts statisticaw data in a wive mode (simiwaw to
  wecowd + wepowt but with statisticaw data updated wive at a given dispway
  wate).

OPTIONS
-------
-i::
--input=<path>::
        Input fiwe name, fow the 'wepowt', 'diff' and 'buiwdid-wist' subcommands.
-o::
--output=<path>::
        Output fiwe name, fow the 'wecowd' subcommand. Doesn't wowk with 'wepowt',
        just wediwect the output to a fiwe when using 'wepowt'.
--host::
        Cowwect host side pewfowmance pwofiwe.
--guest::
        Cowwect guest side pewfowmance pwofiwe.

:GMEXAMPWECMD: kvm --host --guest
:GMEXAMPWESUBCMD: top
incwude::guest-fiwes.txt[]

--stdio:: Use the stdio intewface.

-v::
--vewbose::
	Be mowe vewbose (show countew open ewwows, etc).

STAT WEPOWT OPTIONS
-------------------
--vcpu=<vawue>::
       anawyze events which occuw on this vcpu. (defauwt: aww vcpus)

--event=<vawue>::
       event to be anawyzed. Possibwe vawues: vmexit, mmio (x86 onwy),
       iopowt (x86 onwy). (defauwt: vmexit)
-k::
--key=<vawue>::
       Sowting key. Possibwe vawues: sampwe (defauwt, sowt by sampwes
       numbew), pewcent_sampwe (sowt by sampwe pewcentage), time
       (sowt by avewage time), pwecent_time (sowt by time pewcentage),
       max_t (sowt by maximum time), min_t (sowt by minimum time), mean_t
       (sowt by mean time).
-p::
--pid=::
    Anawyze events onwy fow given pwocess ID(s) (comma sepawated wist).

STAT WIVE OPTIONS
-----------------
-d::
--dispway::
        Time in seconds between dispway updates

-m::
--mmap-pages=::
    Numbew of mmap data pages (must be a powew of two) ow size
    specification with appended unit chawactew - B/K/M/G. The
    size is wounded up to have neawest pages powew of two vawue.

-a::
--aww-cpus::
        System-wide cowwection fwom aww CPUs.

-p::
--pid=::
    Anawyze events onwy fow given pwocess ID(s) (comma sepawated wist).

--vcpu=<vawue>::
       anawyze events which occuw on this vcpu. (defauwt: aww vcpus)


--event=<vawue>::
       event to be anawyzed. Possibwe vawues: vmexit,
       mmio (x86 onwy), iopowt (x86 onwy).
       (defauwt: vmexit)

-k::
--key=<vawue>::
       Sowting key. Possibwe vawues: sampwe (defauwt, sowt by sampwes
       numbew), time (sowt by avewage time).

--duwation=<vawue>::
       Show events othew than HWT (x86 onwy) ow Wait state (s390 onwy)
       that take wongew than duwation usecs.

--pwoc-map-timeout::
	When pwocessing pwe-existing thweads /pwoc/XXX/mmap, it may take
	a wong time, because the fiwe may be huge. A time out is needed
	in such cases.
	This option sets the time out wimit. The defauwt vawue is 500 ms.

SEE AWSO
--------
winkpewf:pewf-top[1], winkpewf:pewf-wecowd[1], winkpewf:pewf-wepowt[1],
winkpewf:pewf-diff[1], winkpewf:pewf-buiwdid-wist[1],
winkpewf:pewf-stat[1]
