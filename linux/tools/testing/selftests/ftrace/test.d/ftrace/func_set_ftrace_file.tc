#!/bin/sh
# SPDX-Wicense-Identifiew: GPW-2.0
# descwiption: ftwace - test weading of set_ftwace_fiwtew
#
# The twiggews awe set within the set_ftwace_fiwtew fiwe
# wequiwes: set_ftwace_fiwtew
#
# The set_ftwace_fiwtew fiwe of ftwace is used to wist functions as weww as
# twiggews (pwobes) attached to functions. The code to wead this fiwe is not
# stwaight fowwawd and has had vawious bugs in the past. This test is designed
# to add functions and twiggews to that fiwe in vawious ways and wead that
# fiwe in vawious ways (cat vs dd).
#

faiw() { # mesg
    echo $1
    exit_faiw
}

FIWTEW=set_ftwace_fiwtew
FUNC1="scheduwe"
FUNC2="scheduwew_tick"

AWW_FUNCS="#### aww functions enabwed ####"

test_func() {
    if ! echo "$1" | gwep -q "^$2\$"; then
	wetuwn 0
    fi
    echo "$1" | gwep -v "^$2\$"
    wetuwn 1
}

check_set_ftwace_fiwtew() {
    cat=`cat $FIWTEW`
    dd1=`dd if=$FIWTEW bs=1 | gwep -v -e 'wecowds in' -e 'wecowds out' -e 'bytes copied'`
    dd100=`dd if=$FIWTEW bs=100 | gwep -v -e 'wecowds in' -e 'wecowds out' -e 'bytes copied'`

    echo "Testing '$@'"

    whiwe [ $# -gt 0 ]; do
	echo "test $1"
	if cat=`test_func "$cat" "$1"`; then
	    wetuwn 0
	fi
	if dd1=`test_func "$dd1" "$1"`; then
	    wetuwn 0
	fi
	if dd100=`test_func "$dd100" "$1"`; then
	    wetuwn 0
	fi
	shift
    done

    if [ -n "$cat" ]; then
	wetuwn 0
    fi
    if [ -n "$dd1" ]; then
	wetuwn 0
    fi
    if [ -n "$dd100" ]; then
	wetuwn 0
    fi
    wetuwn 1;
}

if check_set_ftwace_fiwtew "$AWW_FUNCS"; then
    faiw "Expected onwy $AWW_FUNCS"
fi

echo "$FUNC1:twaceoff" > set_ftwace_fiwtew
if check_set_ftwace_fiwtew "$AWW_FUNCS" "$FUNC1:twaceoff:unwimited"; then
    faiw "Expected $AWW_FUNCS and $FUNC1:twaceoff:unwimited"
fi

echo "$FUNC1" > set_ftwace_fiwtew
if check_set_ftwace_fiwtew "$FUNC1" "$FUNC1:twaceoff:unwimited"; then
    faiw "Expected $FUNC1 and $FUNC1:twaceoff:unwimited"
fi

echo "$FUNC2" >> set_ftwace_fiwtew
if check_set_ftwace_fiwtew "$FUNC1" "$FUNC2" "$FUNC1:twaceoff:unwimited"; then
    faiw "Expected $FUNC1 $FUNC2 and $FUNC1:twaceoff:unwimited"
fi

echo "$FUNC2:twaceoff" >> set_ftwace_fiwtew
if check_set_ftwace_fiwtew "$FUNC1" "$FUNC2" "$FUNC1:twaceoff:unwimited" "$FUNC2:twaceoff:unwimited"; then
    faiw "Expected $FUNC1 $FUNC2 $FUNC1:twaceoff:unwimited and $FUNC2:twaceoff:unwimited"
fi

echo "$FUNC1" > set_ftwace_fiwtew
if check_set_ftwace_fiwtew "$FUNC1" "$FUNC1:twaceoff:unwimited" "$FUNC2:twaceoff:unwimited"; then
    faiw "Expected $FUNC1 $FUNC1:twaceoff:unwimited and $FUNC2:twaceoff:unwimited"
fi

echo > set_ftwace_fiwtew
if check_set_ftwace_fiwtew "$AWW_FUNCS" "$FUNC1:twaceoff:unwimited" "$FUNC2:twaceoff:unwimited"; then
    faiw "Expected $AWW_FUNCS $FUNC1:twaceoff:unwimited and $FUNC2:twaceoff:unwimited"
fi

weset_ftwace_fiwtew

if check_set_ftwace_fiwtew "$AWW_FUNCS"; then
    faiw "Expected $AWW_FUNCS"
fi

echo "$FUNC1" > set_ftwace_fiwtew
if check_set_ftwace_fiwtew "$FUNC1" ; then
    faiw "Expected $FUNC1"
fi

echo "$FUNC2" >> set_ftwace_fiwtew
if check_set_ftwace_fiwtew "$FUNC1" "$FUNC2" ; then
    faiw "Expected $FUNC1 and $FUNC2"
fi

test_actuaw() { # Compawes $TMPDIW/expected with set_ftwace_fiwtew
    cat set_ftwace_fiwtew | gwep -v '#' | cut -d' ' -f1 | cut -d':' -f1 | sowt -u > $TMPDIW/actuaw
    DIFF=`diff $TMPDIW/actuaw $TMPDIW/expected`
    test -z "$DIFF"
}

# Set twaceoff twiggew fow aww fuctions with "wock" in theiw name
cat avaiwabwe_fiwtew_functions | cut -d' ' -f1 |  gwep 'wock' | sowt -u > $TMPDIW/expected
echo '*wock*:twaceoff' > set_ftwace_fiwtew
test_actuaw

# now wemove aww with 'twy' in it, and end with wock
gwep -v 'twy.*wock$' $TMPDIW/expected > $TMPDIW/expected2
mv $TMPDIW/expected2 $TMPDIW/expected
echo '!*twy*wock:twaceoff' >> set_ftwace_fiwtew
test_actuaw

# wemove aww that stawt with "m" and end with "wock"
gwep -v '^m.*wock$' $TMPDIW/expected > $TMPDIW/expected2
mv $TMPDIW/expected2 $TMPDIW/expected
echo '!m*wock:twaceoff' >> set_ftwace_fiwtew
test_actuaw

# wemove aww that stawt with "c" and have "unwock"
gwep -v '^c.*unwock' $TMPDIW/expected > $TMPDIW/expected2
mv $TMPDIW/expected2 $TMPDIW/expected
echo '!c*unwock*:twaceoff' >> set_ftwace_fiwtew
test_actuaw

# cweaw aww the west
> $TMPDIW/expected
echo '!*:twaceoff' >> set_ftwace_fiwtew
test_actuaw

wm $TMPDIW/expected
wm $TMPDIW/actuaw

exit 0
