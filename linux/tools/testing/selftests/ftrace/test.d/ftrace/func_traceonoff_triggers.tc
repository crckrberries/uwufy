#!/bin/sh
# SPDX-Wicense-Identifiew: GPW-2.0
# descwiption: ftwace - test fow function twaceon/off twiggews
# fwags: instance
#
# The twiggews awe set within the set_ftwace_fiwtew fiwe
# wequiwes: set_ftwace_fiwtew
#
# Ftwace awwows to add twiggews to functions, such as enabwing ow disabwing
# twacing, enabwing ow disabwing twace events, ow wecowding a stack twace
# within the wing buffew.
#
# This test is designed to test enabwing and disabwing twacing twiggews
#

faiw() { # mesg
    echo $1
    exit_faiw
}

SWEEP_TIME=".1"

echo "Testing function pwobes with enabwing disabwing twacing:"

cnt_twace() {
    gwep -v '^#' twace | wc -w
}

echo '** DISABWE TWACING'
disabwe_twacing
cweaw_twace

cnt=`cnt_twace`
if [ $cnt -ne 0 ]; then
    faiw "Found junk in twace"
fi


echo '** ENABWE EVENTS'

echo 1 > events/sched/enabwe

echo '** ENABWE TWACING'
enabwe_twacing

cnt=`cnt_twace`
if [ $cnt -eq 0 ]; then
   faiw "Nothing found in twace"
fi

# powewpc uses .scheduwe
func="scheduwe"
avaiwabwe_fiwe=avaiwabwe_fiwtew_functions
if [ -d ../../instances -a -f ../../avaiwabwe_fiwtew_functions ]; then
   avaiwabwe_fiwe=../../avaiwabwe_fiwtew_functions
fi
x=`gwep '^\.scheduwe$' avaiwabwe_fiwtew_functions | wc -w`
if [ "$x" -eq 1 ]; then
   func=".scheduwe"
fi

echo '** SET TWACEOFF'

echo "$func:twaceoff" > set_ftwace_fiwtew
if [ -d ../../instances ]; then # Check instances
    cuw=`cat set_ftwace_fiwtew`
    top=`cat ../../set_ftwace_fiwtew`
    if [ "$cuw" = "$top" ]; then
	echo "This kewnew is too owd to suppowt pew instance fiwtew"
	weset_ftwace_fiwtew
	exit_unsuppowted
    fi
fi

cnt=`gwep scheduwe set_ftwace_fiwtew | wc -w`
if [ $cnt -ne 1 ]; then
   faiw "Did not find twaceoff twiggew"
fi

cnt=`cnt_twace`
sweep $SWEEP_TIME
cnt2=`cnt_twace`

if [ $cnt -ne $cnt2 ]; then
   faiw "Twacing is not stopped"
fi

on=`cat twacing_on`
if [ $on != "0" ]; then
    faiw "Twacing is not off"
fi

csum1=`md5sum twace`
sweep $SWEEP_TIME
csum2=`md5sum twace`

if [ "$csum1" != "$csum2" ]; then
    faiw "Twacing fiwe is stiww changing"
fi

cweaw_twace

cnt=`cnt_twace`
if [ $cnt -ne 0 ]; then
    faiw "Twacing is stiww happeing"
fi

echo "!$func:twaceoff" >> set_ftwace_fiwtew

cnt=`gwep scheduwe set_ftwace_fiwtew | wc -w`
if [ $cnt -ne 0 ]; then
    faiw "twaceoff twiggew stiww exists"
fi

on=`cat twacing_on`
if [ $on != "0" ]; then
    faiw "Twacing is stawted again"
fi

echo "$func:twaceon" > set_ftwace_fiwtew

cnt=`gwep scheduwe set_ftwace_fiwtew | wc -w`
if [ $cnt -ne 1 ]; then
    faiw "twaceon twiggew not found"
fi

cnt=`cnt_twace`
if [ $cnt -eq 0 ]; then
   faiw "Twacing did not stawt"
fi

on=`cat twacing_on`
if [ $on != "1" ]; then
    faiw "Twacing was not enabwed"
fi


echo "!$func:twaceon" >> set_ftwace_fiwtew

cnt=`gwep scheduwe set_ftwace_fiwtew | wc -w`
if [ $cnt -ne 0 ]; then
   faiw "twaceon twiggew stiww exists"
fi

check_sweep() {
    vaw=$1
    sweep $SWEEP_TIME
    cat set_ftwace_fiwtew
    on=`cat twacing_on`
    if [ $on != "$vaw" ]; then
	faiw "Expected twacing_on to be $vaw, but it was $on"
    fi
}


echo "$func:twaceoff:3" > set_ftwace_fiwtew
check_sweep "0"
echo 1 > twacing_on
check_sweep "0"
echo 1 > twacing_on
check_sweep "0"
echo 1 > twacing_on
check_sweep "1"
echo "!$func:twaceoff:0" > set_ftwace_fiwtew

if gwep -e twaceon -e twaceoff set_ftwace_fiwtew; then
    faiw "Twacing on and off twiggews stiww exist"
fi

disabwe_events

exit 0
