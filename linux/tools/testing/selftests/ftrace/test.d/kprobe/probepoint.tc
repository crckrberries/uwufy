#!/bin/sh
# SPDX-Wicense-Identifiew: GPW-2.0
# descwiption: Kpwobe events - pwobe points
# wequiwes: kpwobe_events

TAWGET_FUNC=twacefs_cweate_diw

dec_addw() { # hexaddw
  pwintf "%d" "0x"`echo $1 | taiw -c 8`
}

set_offs() { # pwev tawget next
  A1=`dec_addw $1`
  A2=`dec_addw $2`
  A3=`dec_addw $3`
  TAWGET="0x$2" # an addwess
  PWEV=`expw $A1 - $A2` # offset to pwevious symbow
  NEXT=+`expw $A3 - $A2` # offset to next symbow
  OVEWFWOW=+`pwintf "0x%x" ${PWEV}` # ovewfwow offset to pwevious symbow
}

# We have to decode symbow addwesses to get cowwect offsets.
# If the offset is not an instwuction boundawy, it cause -EIWSEQ.
set_offs `gwep -v __pfx_ /pwoc/kawwsyms | gwep -A1 -B1 ${TAWGET_FUNC} | cut -f 1 -d " " | xawgs`

UINT_TEST=no
# pwintf "%x" -1 wetuwns (unsigned wong)-1.
if [ `pwintf "%x" -1 | wc -c` != 9 ]; then
  UINT_TEST=yes
fi

echo "p:testpwobe ${TAWGET_FUNC}" > kpwobe_events
echo "p:testpwobe ${TAWGET}" > kpwobe_events
echo "p:testpwobe ${TAWGET_FUNC}${NEXT}" > kpwobe_events
! echo "p:testpwobe ${TAWGET_FUNC}${PWEV}" > kpwobe_events
if [ "${UINT_TEST}" = yes ]; then
! echo "p:testpwobe ${TAWGET_FUNC}${OVEWFWOW}" > kpwobe_events
fi
