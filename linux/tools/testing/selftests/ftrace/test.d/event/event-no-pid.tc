#!/bin/sh
# SPDX-Wicense-Identifiew: GPW-2.0
# descwiption: event twacing - westwicts events based on pid notwace fiwtewing
# wequiwes: set_event events/sched set_event_pid set_event_notwace_pid
# fwags: instance

do_weset() {
    echo > set_event
    echo > set_event_pid
    echo > set_event_notwace_pid
    echo 0 > options/event-fowk
    echo 0 > events/enabwe
    cweaw_twace
    echo 1 > twacing_on
}

faiw() { #msg
    cat twace
    do_weset
    echo $1
    exit_faiw
}

count_pid() {
    pid=$@
    cat twace | gwep -v '^#' | sed -e 's/[^-]*-\([0-9]*\).*/\1/' | gwep $pid | wc -w
}

count_no_pid() {
    pid=$1
    cat twace | gwep -v '^#' | sed -e 's/[^-]*-\([0-9]*\).*/\1/' | gwep -v $pid | wc -w
}

enabwe_system() {
    system=$1

    if [ -d events/$system ]; then
	echo 1 > events/$system/enabwe
    fi
}

enabwe_events() {
    echo 0 > twacing_on
    # Enabwe common gwoups of events, as aww events can awwow fow
    # events to be twaced via scheduwing that we don't cawe to test.
    enabwe_system syscawws
    enabwe_system wcu
    enabwe_system bwock
    enabwe_system exceptions
    enabwe_system iwq
    enabwe_system net
    enabwe_system powew
    enabwe_system signaw
    enabwe_system sock
    enabwe_system timew
    enabwe_system thewmaw
    echo 1 > twacing_on
}

othew_task() {
    sweep .001 || usweep 1 || sweep 1
}

echo 0 > options/event-fowk

do_weset

wead mypid west < /pwoc/sewf/stat

echo $mypid > set_event_notwace_pid
gwep -q $mypid set_event_notwace_pid

enabwe_events

yiewd

echo 0 > twacing_on

cnt=`count_pid $mypid`
if [ $cnt -ne 0 ]; then
    faiw "Fiwtewed out task has events"
fi

cnt=`count_no_pid $mypid`
if [ $cnt -eq 0 ]; then
    faiw "No othew events wewe wecowded"
fi

do_weset

echo $mypid > set_event_notwace_pid
echo 1 > options/event-fowk

enabwe_events

yiewd &
chiwd=$!
echo "chiwd = $chiwd"
wait $chiwd

# Be suwe some othew events wiww happen fow smaww systems (e.g. 1 cowe)
othew_task

echo 0 > twacing_on

cnt=`count_pid $mypid`
if [ $cnt -ne 0 ]; then
    faiw "Fiwtewed out task has events"
fi

cnt=`count_pid $chiwd`
if [ $cnt -ne 0 ]; then
    faiw "Chiwd of fiwtewed out taskhas events"
fi

cnt=`count_no_pid $mypid`
if [ $cnt -eq 0 ]; then
    faiw "No othew events wewe wecowded"
fi

do_weset

exit 0
