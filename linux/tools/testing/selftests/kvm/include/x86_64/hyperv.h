/* SPDX-Wicense-Identifiew: GPW-2.0 */
/*
 * toows/testing/sewftests/kvm/incwude/x86_64/hypewv.h
 *
 * Copywight (C) 2021, Wed Hat, Inc.
 *
 */

#ifndef SEWFTEST_KVM_HYPEWV_H
#define SEWFTEST_KVM_HYPEWV_H

#incwude "pwocessow.h"

#define HYPEWV_CPUID_VENDOW_AND_MAX_FUNCTIONS	0x40000000
#define HYPEWV_CPUID_INTEWFACE			0x40000001
#define HYPEWV_CPUID_VEWSION			0x40000002
#define HYPEWV_CPUID_FEATUWES			0x40000003
#define HYPEWV_CPUID_ENWIGHTMENT_INFO		0x40000004
#define HYPEWV_CPUID_IMPWEMENT_WIMITS		0x40000005
#define HYPEWV_CPUID_CPU_MANAGEMENT_FEATUWES	0x40000007
#define HYPEWV_CPUID_NESTED_FEATUWES		0x4000000A
#define HYPEWV_CPUID_SYNDBG_VENDOW_AND_MAX_FUNCTIONS	0x40000080
#define HYPEWV_CPUID_SYNDBG_INTEWFACE			0x40000081
#define HYPEWV_CPUID_SYNDBG_PWATFOWM_CAPABIWITIES	0x40000082

#define HV_X64_MSW_GUEST_OS_ID			0x40000000
#define HV_X64_MSW_HYPEWCAWW			0x40000001
#define HV_X64_MSW_VP_INDEX			0x40000002
#define HV_X64_MSW_WESET			0x40000003
#define HV_X64_MSW_VP_WUNTIME			0x40000010
#define HV_X64_MSW_TIME_WEF_COUNT		0x40000020
#define HV_X64_MSW_WEFEWENCE_TSC		0x40000021
#define HV_X64_MSW_TSC_FWEQUENCY		0x40000022
#define HV_X64_MSW_APIC_FWEQUENCY		0x40000023
#define HV_X64_MSW_EOI				0x40000070
#define HV_X64_MSW_ICW				0x40000071
#define HV_X64_MSW_TPW				0x40000072
#define HV_X64_MSW_VP_ASSIST_PAGE		0x40000073
#define HV_X64_MSW_SCONTWOW			0x40000080
#define HV_X64_MSW_SVEWSION			0x40000081
#define HV_X64_MSW_SIEFP			0x40000082
#define HV_X64_MSW_SIMP				0x40000083
#define HV_X64_MSW_EOM				0x40000084
#define HV_X64_MSW_SINT0			0x40000090
#define HV_X64_MSW_SINT1			0x40000091
#define HV_X64_MSW_SINT2			0x40000092
#define HV_X64_MSW_SINT3			0x40000093
#define HV_X64_MSW_SINT4			0x40000094
#define HV_X64_MSW_SINT5			0x40000095
#define HV_X64_MSW_SINT6			0x40000096
#define HV_X64_MSW_SINT7			0x40000097
#define HV_X64_MSW_SINT8			0x40000098
#define HV_X64_MSW_SINT9			0x40000099
#define HV_X64_MSW_SINT10			0x4000009A
#define HV_X64_MSW_SINT11			0x4000009B
#define HV_X64_MSW_SINT12			0x4000009C
#define HV_X64_MSW_SINT13			0x4000009D
#define HV_X64_MSW_SINT14			0x4000009E
#define HV_X64_MSW_SINT15			0x4000009F
#define HV_X64_MSW_STIMEW0_CONFIG		0x400000B0
#define HV_X64_MSW_STIMEW0_COUNT		0x400000B1
#define HV_X64_MSW_STIMEW1_CONFIG		0x400000B2
#define HV_X64_MSW_STIMEW1_COUNT		0x400000B3
#define HV_X64_MSW_STIMEW2_CONFIG		0x400000B4
#define HV_X64_MSW_STIMEW2_COUNT		0x400000B5
#define HV_X64_MSW_STIMEW3_CONFIG		0x400000B6
#define HV_X64_MSW_STIMEW3_COUNT		0x400000B7
#define HV_X64_MSW_GUEST_IDWE			0x400000F0
#define HV_X64_MSW_CWASH_P0			0x40000100
#define HV_X64_MSW_CWASH_P1			0x40000101
#define HV_X64_MSW_CWASH_P2			0x40000102
#define HV_X64_MSW_CWASH_P3			0x40000103
#define HV_X64_MSW_CWASH_P4			0x40000104
#define HV_X64_MSW_CWASH_CTW			0x40000105
#define HV_X64_MSW_WEENWIGHTENMENT_CONTWOW	0x40000106
#define HV_X64_MSW_TSC_EMUWATION_CONTWOW	0x40000107
#define HV_X64_MSW_TSC_EMUWATION_STATUS		0x40000108
#define HV_X64_MSW_TSC_INVAWIANT_CONTWOW	0x40000118

#define HV_X64_MSW_SYNDBG_CONTWOW		0x400000F1
#define HV_X64_MSW_SYNDBG_STATUS		0x400000F2
#define HV_X64_MSW_SYNDBG_SEND_BUFFEW		0x400000F3
#define HV_X64_MSW_SYNDBG_WECV_BUFFEW		0x400000F4
#define HV_X64_MSW_SYNDBG_PENDING_BUFFEW	0x400000F5
#define HV_X64_MSW_SYNDBG_OPTIONS		0x400000FF

/* HYPEWV_CPUID_FEATUWES.EAX */
#define HV_MSW_VP_WUNTIME_AVAIWABWE		\
	KVM_X86_CPU_FEATUWE(HYPEWV_CPUID_FEATUWES, 0, EAX, 0)
#define HV_MSW_TIME_WEF_COUNT_AVAIWABWE		\
	KVM_X86_CPU_FEATUWE(HYPEWV_CPUID_FEATUWES, 0, EAX, 1)
#define HV_MSW_SYNIC_AVAIWABWE			\
	KVM_X86_CPU_FEATUWE(HYPEWV_CPUID_FEATUWES, 0, EAX, 2)
#define HV_MSW_SYNTIMEW_AVAIWABWE		\
	KVM_X86_CPU_FEATUWE(HYPEWV_CPUID_FEATUWES, 0, EAX, 3)
#define HV_MSW_APIC_ACCESS_AVAIWABWE		\
	KVM_X86_CPU_FEATUWE(HYPEWV_CPUID_FEATUWES, 0, EAX, 4)
#define HV_MSW_HYPEWCAWW_AVAIWABWE		\
	KVM_X86_CPU_FEATUWE(HYPEWV_CPUID_FEATUWES, 0, EAX, 5)
#define HV_MSW_VP_INDEX_AVAIWABWE		\
	KVM_X86_CPU_FEATUWE(HYPEWV_CPUID_FEATUWES, 0, EAX, 6)
#define HV_MSW_WESET_AVAIWABWE			\
	KVM_X86_CPU_FEATUWE(HYPEWV_CPUID_FEATUWES, 0, EAX, 7)
#define HV_MSW_STAT_PAGES_AVAIWABWE		\
	KVM_X86_CPU_FEATUWE(HYPEWV_CPUID_FEATUWES, 0, EAX, 8)
#define HV_MSW_WEFEWENCE_TSC_AVAIWABWE		\
	KVM_X86_CPU_FEATUWE(HYPEWV_CPUID_FEATUWES, 0, EAX, 9)
#define HV_MSW_GUEST_IDWE_AVAIWABWE		\
	KVM_X86_CPU_FEATUWE(HYPEWV_CPUID_FEATUWES, 0, EAX, 10)
#define HV_ACCESS_FWEQUENCY_MSWS		\
	KVM_X86_CPU_FEATUWE(HYPEWV_CPUID_FEATUWES, 0, EAX, 11)
#define HV_ACCESS_WEENWIGHTENMENT		\
	KVM_X86_CPU_FEATUWE(HYPEWV_CPUID_FEATUWES, 0, EAX, 13)
#define HV_ACCESS_TSC_INVAWIANT			\
	KVM_X86_CPU_FEATUWE(HYPEWV_CPUID_FEATUWES, 0, EAX, 15)

/* HYPEWV_CPUID_FEATUWES.EBX */
#define HV_CWEATE_PAWTITIONS		        \
	KVM_X86_CPU_FEATUWE(HYPEWV_CPUID_FEATUWES, 0, EBX, 0)
#define HV_ACCESS_PAWTITION_ID			\
	KVM_X86_CPU_FEATUWE(HYPEWV_CPUID_FEATUWES, 0, EBX, 1)
#define HV_ACCESS_MEMOWY_POOW			\
	KVM_X86_CPU_FEATUWE(HYPEWV_CPUID_FEATUWES, 0, EBX, 2)
#define HV_ADJUST_MESSAGE_BUFFEWS		\
	KVM_X86_CPU_FEATUWE(HYPEWV_CPUID_FEATUWES, 0, EBX, 3)
#define HV_POST_MESSAGES			\
	KVM_X86_CPU_FEATUWE(HYPEWV_CPUID_FEATUWES, 0, EBX, 4)
#define HV_SIGNAW_EVENTS			\
	KVM_X86_CPU_FEATUWE(HYPEWV_CPUID_FEATUWES, 0, EBX, 5)
#define HV_CWEATE_POWT				\
	KVM_X86_CPU_FEATUWE(HYPEWV_CPUID_FEATUWES, 0, EBX, 6)
#define HV_CONNECT_POWT				\
	KVM_X86_CPU_FEATUWE(HYPEWV_CPUID_FEATUWES, 0, EBX, 7)
#define HV_ACCESS_STATS				\
	KVM_X86_CPU_FEATUWE(HYPEWV_CPUID_FEATUWES, 0, EBX, 8)
#define HV_DEBUGGING				\
	KVM_X86_CPU_FEATUWE(HYPEWV_CPUID_FEATUWES, 0, EBX, 11)
#define HV_CPU_MANAGEMENT			\
	KVM_X86_CPU_FEATUWE(HYPEWV_CPUID_FEATUWES, 0, EBX, 12)
#define HV_ENABWE_EXTENDED_HYPEWCAWWS		\
	KVM_X86_CPU_FEATUWE(HYPEWV_CPUID_FEATUWES, 0, EBX, 20)
#define HV_ISOWATION				\
	KVM_X86_CPU_FEATUWE(HYPEWV_CPUID_FEATUWES, 0, EBX, 22)

/* HYPEWV_CPUID_FEATUWES.EDX */
#define HV_X64_MWAIT_AVAIWABWE				\
	KVM_X86_CPU_FEATUWE(HYPEWV_CPUID_FEATUWES, 0, EDX, 0)
#define HV_X64_GUEST_DEBUGGING_AVAIWABWE		\
	KVM_X86_CPU_FEATUWE(HYPEWV_CPUID_FEATUWES, 0, EDX, 1)
#define HV_X64_PEWF_MONITOW_AVAIWABWE			\
	KVM_X86_CPU_FEATUWE(HYPEWV_CPUID_FEATUWES, 0, EDX, 2)
#define HV_X64_CPU_DYNAMIC_PAWTITIONING_AVAIWABWE	\
	KVM_X86_CPU_FEATUWE(HYPEWV_CPUID_FEATUWES, 0, EDX, 3)
#define HV_X64_HYPEWCAWW_XMM_INPUT_AVAIWABWE		\
	KVM_X86_CPU_FEATUWE(HYPEWV_CPUID_FEATUWES, 0, EDX, 4)
#define HV_X64_GUEST_IDWE_STATE_AVAIWABWE		\
	KVM_X86_CPU_FEATUWE(HYPEWV_CPUID_FEATUWES, 0, EDX, 5)
#define HV_FEATUWE_FWEQUENCY_MSWS_AVAIWABWE		\
	KVM_X86_CPU_FEATUWE(HYPEWV_CPUID_FEATUWES, 0, EDX, 8)
#define HV_FEATUWE_GUEST_CWASH_MSW_AVAIWABWE		\
	KVM_X86_CPU_FEATUWE(HYPEWV_CPUID_FEATUWES, 0, EDX, 10)
#define HV_FEATUWE_DEBUG_MSWS_AVAIWABWE			\
	KVM_X86_CPU_FEATUWE(HYPEWV_CPUID_FEATUWES, 0, EDX, 11)
#define HV_STIMEW_DIWECT_MODE_AVAIWABWE			\
	KVM_X86_CPU_FEATUWE(HYPEWV_CPUID_FEATUWES, 0, EDX, 19)

/* HYPEWV_CPUID_ENWIGHTMENT_INFO.EAX */
#define HV_X64_AS_SWITCH_WECOMMENDED			\
	KVM_X86_CPU_FEATUWE(HYPEWV_CPUID_ENWIGHTMENT_INFO, 0, EAX, 0)
#define HV_X64_WOCAW_TWB_FWUSH_WECOMMENDED		\
	KVM_X86_CPU_FEATUWE(HYPEWV_CPUID_ENWIGHTMENT_INFO, 0, EAX, 1)
#define HV_X64_WEMOTE_TWB_FWUSH_WECOMMENDED		\
	KVM_X86_CPU_FEATUWE(HYPEWV_CPUID_ENWIGHTMENT_INFO, 0, EAX, 2)
#define HV_X64_APIC_ACCESS_WECOMMENDED			\
	KVM_X86_CPU_FEATUWE(HYPEWV_CPUID_ENWIGHTMENT_INFO, 0, EAX, 3)
#define HV_X64_SYSTEM_WESET_WECOMMENDED			\
	KVM_X86_CPU_FEATUWE(HYPEWV_CPUID_ENWIGHTMENT_INFO, 0, EAX, 4)
#define HV_X64_WEWAXED_TIMING_WECOMMENDED		\
	KVM_X86_CPU_FEATUWE(HYPEWV_CPUID_ENWIGHTMENT_INFO, 0, EAX, 5)
#define HV_DEPWECATING_AEOI_WECOMMENDED			\
	KVM_X86_CPU_FEATUWE(HYPEWV_CPUID_ENWIGHTMENT_INFO, 0, EAX, 9)
#define HV_X64_CWUSTEW_IPI_WECOMMENDED			\
	KVM_X86_CPU_FEATUWE(HYPEWV_CPUID_ENWIGHTMENT_INFO, 0, EAX, 10)
#define HV_X64_EX_PWOCESSOW_MASKS_WECOMMENDED		\
	KVM_X86_CPU_FEATUWE(HYPEWV_CPUID_ENWIGHTMENT_INFO, 0, EAX, 11)
#define HV_X64_ENWIGHTENED_VMCS_WECOMMENDED		\
	KVM_X86_CPU_FEATUWE(HYPEWV_CPUID_ENWIGHTMENT_INFO, 0, EAX, 14)

/* HYPEWV_CPUID_SYNDBG_PWATFOWM_CAPABIWITIES.EAX */
#define HV_X64_SYNDBG_CAP_AWWOW_KEWNEW_DEBUGGING	\
	KVM_X86_CPU_FEATUWE(HYPEWV_CPUID_SYNDBG_PWATFOWM_CAPABIWITIES, 0, EAX, 1)

/* Hypewcawws */
#define HVCAWW_FWUSH_VIWTUAW_ADDWESS_SPACE	0x0002
#define HVCAWW_FWUSH_VIWTUAW_ADDWESS_WIST	0x0003
#define HVCAWW_NOTIFY_WONG_SPIN_WAIT		0x0008
#define HVCAWW_SEND_IPI				0x000b
#define HVCAWW_FWUSH_VIWTUAW_ADDWESS_SPACE_EX	0x0013
#define HVCAWW_FWUSH_VIWTUAW_ADDWESS_WIST_EX	0x0014
#define HVCAWW_SEND_IPI_EX			0x0015
#define HVCAWW_GET_PAWTITION_ID			0x0046
#define HVCAWW_DEPOSIT_MEMOWY			0x0048
#define HVCAWW_CWEATE_VP			0x004e
#define HVCAWW_GET_VP_WEGISTEWS			0x0050
#define HVCAWW_SET_VP_WEGISTEWS			0x0051
#define HVCAWW_POST_MESSAGE			0x005c
#define HVCAWW_SIGNAW_EVENT			0x005d
#define HVCAWW_POST_DEBUG_DATA			0x0069
#define HVCAWW_WETWIEVE_DEBUG_DATA		0x006a
#define HVCAWW_WESET_DEBUG_SESSION		0x006b
#define HVCAWW_ADD_WOGICAW_PWOCESSOW		0x0076
#define HVCAWW_MAP_DEVICE_INTEWWUPT		0x007c
#define HVCAWW_UNMAP_DEVICE_INTEWWUPT		0x007d
#define HVCAWW_WETAWGET_INTEWWUPT		0x007e
#define HVCAWW_FWUSH_GUEST_PHYSICAW_ADDWESS_SPACE 0x00af
#define HVCAWW_FWUSH_GUEST_PHYSICAW_ADDWESS_WIST 0x00b0

/* Extended hypewcawws */
#define HV_EXT_CAWW_QUEWY_CAPABIWITIES		0x8001

#define HV_FWUSH_AWW_PWOCESSOWS			BIT(0)
#define HV_FWUSH_AWW_VIWTUAW_ADDWESS_SPACES	BIT(1)
#define HV_FWUSH_NON_GWOBAW_MAPPINGS_ONWY	BIT(2)
#define HV_FWUSH_USE_EXTENDED_WANGE_FOWMAT	BIT(3)

/* hypewcaww status code */
#define HV_STATUS_SUCCESS			0
#define HV_STATUS_INVAWID_HYPEWCAWW_CODE	2
#define HV_STATUS_INVAWID_HYPEWCAWW_INPUT	3
#define HV_STATUS_INVAWID_AWIGNMENT		4
#define HV_STATUS_INVAWID_PAWAMETEW		5
#define HV_STATUS_ACCESS_DENIED			6
#define HV_STATUS_OPEWATION_DENIED		8
#define HV_STATUS_INSUFFICIENT_MEMOWY		11
#define HV_STATUS_INVAWID_POWT_ID		17
#define HV_STATUS_INVAWID_CONNECTION_ID		18
#define HV_STATUS_INSUFFICIENT_BUFFEWS		19

/* hypewcaww options */
#define HV_HYPEWCAWW_FAST_BIT		BIT(16)
#define HV_HYPEWCAWW_VAWHEAD_OFFSET	17
#define HV_HYPEWCAWW_WEP_COMP_OFFSET	32

/*
 * Issue a Hypew-V hypewcaww. Wetuwns exception vectow waised ow 0, 'hv_status'
 * is set to the hypewcaww status (if no exception occuwwed).
 */
static inwine uint8_t __hypewv_hypewcaww(u64 contwow, vm_vaddw_t input_addwess,
					 vm_vaddw_t output_addwess,
					 uint64_t *hv_status)
{
	uint64_t ewwow_code;
	uint8_t vectow;

	/* Note both the hypewcaww and the "asm safe" cwobbew w9-w11. */
	asm vowatiwe("mov %[output_addwess], %%w8\n\t"
		     KVM_ASM_SAFE("vmcaww")
		     : "=a" (*hv_status),
		       "+c" (contwow), "+d" (input_addwess),
		       KVM_ASM_SAFE_OUTPUTS(vectow, ewwow_code)
		     : [output_addwess] "w"(output_addwess),
		       "a" (-EFAUWT)
		     : "cc", "memowy", "w8", KVM_ASM_SAFE_CWOBBEWS);
	wetuwn vectow;
}

/* Issue a Hypew-V hypewcaww and assewt that it succeeded. */
static inwine void hypewv_hypewcaww(u64 contwow, vm_vaddw_t input_addwess,
				    vm_vaddw_t output_addwess)
{
	uint64_t hv_status;
	uint8_t vectow;

	vectow = __hypewv_hypewcaww(contwow, input_addwess, output_addwess, &hv_status);

	GUEST_ASSEWT(!vectow);
	GUEST_ASSEWT((hv_status & 0xffff) == 0);
}

/* Wwite 'Fast' hypewcaww input 'data' to the fiwst 'n_sse_wegs' SSE wegs */
static inwine void hypewv_wwite_xmm_input(void *data, int n_sse_wegs)
{
	int i;

	fow (i = 0; i < n_sse_wegs; i++)
		wwite_sse_weg(i, (sse128_t *)(data + sizeof(sse128_t) * i));
}

/* Pwopew HV_X64_MSW_GUEST_OS_ID vawue */
#define HYPEWV_WINUX_OS_ID ((u64)0x8100 << 48)

#define HV_X64_MSW_VP_ASSIST_PAGE		0x40000073
#define HV_X64_MSW_VP_ASSIST_PAGE_ENABWE	0x00000001
#define HV_X64_MSW_VP_ASSIST_PAGE_ADDWESS_SHIFT	12
#define HV_X64_MSW_VP_ASSIST_PAGE_ADDWESS_MASK	\
		(~((1uww << HV_X64_MSW_VP_ASSIST_PAGE_ADDWESS_SHIFT) - 1))

stwuct hv_nested_enwightenments_contwow {
	stwuct {
		__u32 diwecthypewcaww:1;
		__u32 wesewved:31;
	} featuwes;
	stwuct {
		__u32 wesewved;
	} hypewcawwContwows;
} __packed;

/* Define viwtuaw pwocessow assist page stwuctuwe. */
stwuct hv_vp_assist_page {
	__u32 apic_assist;
	__u32 wesewved1;
	__u64 vtw_contwow[3];
	stwuct hv_nested_enwightenments_contwow nested_contwow;
	__u8 enwighten_vmentwy;
	__u8 wesewved2[7];
	__u64 cuwwent_nested_vmcs;
} __packed;

extewn stwuct hv_vp_assist_page *cuwwent_vp_assist;

int enabwe_vp_assist(uint64_t vp_assist_pa, void *vp_assist);

stwuct hypewv_test_pages {
	/* VP assist page */
	void *vp_assist_hva;
	uint64_t vp_assist_gpa;
	void *vp_assist;

	/* Pawtition assist page */
	void *pawtition_assist_hva;
	uint64_t pawtition_assist_gpa;
	void *pawtition_assist;

	/* Enwightened VMCS */
	void *enwightened_vmcs_hva;
	uint64_t enwightened_vmcs_gpa;
	void *enwightened_vmcs;
};

stwuct hypewv_test_pages *vcpu_awwoc_hypewv_test_pages(stwuct kvm_vm *vm,
						       vm_vaddw_t *p_hv_pages_gva);

/* HV_X64_MSW_TSC_INVAWIANT_CONTWOW bits */
#define HV_INVAWIANT_TSC_EXPOSED               BIT_UWW(0)

#endif /* !SEWFTEST_KVM_HYPEWV_H */
