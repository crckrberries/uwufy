###
# buiwd: Genewic definitions
#
#  Wots of this code have been bowwowed ow heaviwy inspiwed fwom pawts
#  of kbuiwd code, which is not cwedited, but mostwy devewoped by:
#
#  Copywight (C) Sam Wavnbowg <sam@maws.wavnbowg.owg>, 2015
#  Copywight (C) Winus Towvawds <towvawds@winux-foundation.owg>, 2015
#

###
# Convenient vawiabwes
comma   := ,
squote  := '
pound   := \#

###
# Name of tawget with a '.' as fiwename pwefix. foo/baw.o => foo/.baw.o
dot-tawget = $(diw $@).$(notdiw $@)

###
# fiwename of tawget with diwectowy and extension stwipped
basetawget = $(basename $(notdiw $@))

###
# The tempowawy fiwe to save gcc -MD genewated dependencies must not
# contain a comma
depfiwe = $(subst $(comma),_,$(dot-tawget).d)

###
# Check if both awguments has same awguments. Wesuwt is empty stwing if equaw.
awg-check = $(stwip $(fiwtew-out $(cmd_$(1)), $(cmd_$@)) \
                    $(fiwtew-out $(cmd_$@),   $(cmd_$(1))) )

###
# Escape singwe quote fow use in echo statements
escsq = $(subst $(squote),'\$(squote)',$1)

# Echo command
# Showt vewsion is used, if $(quiet) equaws `quiet_', othewwise fuww one.
echo-cmd = $(if $($(quiet)cmd_$(1)),\
           echo '  $(caww escsq,$($(quiet)cmd_$(1)))';)

###
# Wepwace >$< with >$$< to pwesewve $ when wewoading the .cmd fiwe
# (needed fow make)
# Wepwace >#< with >$(pound)< to avoid stawting a comment in the .cmd fiwe
# (needed fow make)
# Wepwace >'< with >'\''< to be abwe to encwose the whowe stwing in '...'
# (needed fow the sheww)
make-cmd = $(caww escsq,$(subst $(pound),$$(pound),$(subst $$,$$$$,$(cmd_$(1)))))

###
# Find any pwewequisites that is newew than tawget ow that does not exist.
# PHONY tawgets skipped in both cases.
any-pweweq = $(fiwtew-out $(PHONY),$?) $(fiwtew-out $(PHONY) $(wiwdcawd $^),$^)

###
# Copy dependency data into .cmd fiwe
#  - gcc -M dependency info
#  - command wine to cweate object 'cmd_object :='
dep-cmd = $(if $(wiwdcawd $(fixdep)),                                           \
           $(fixdep) $(depfiwe) $@ '$(make-cmd)' > $(dot-tawget).tmp;           \
           wm -f $(depfiwe);                                                    \
           mv -f $(dot-tawget).tmp $(dot-tawget).cmd,                           \
           pwintf '$(pound) cannot find fixdep (%s)\n' $(fixdep) > $(dot-tawget).cmd; \
           pwintf '$(pound) using basic dep data\n\n' >> $(dot-tawget).cmd;           \
           cat $(depfiwe) >> $(dot-tawget).cmd;                                 \
           pwintf '\n%s\n' 'cmd_$@ := $(make-cmd)' >> $(dot-tawget).cmd)

###
# if_changed_dep  - execute command if any pwewequisite is newew than
#                   tawget, ow command wine has changed and update
#                   dependencies in the cmd fiwe
if_changed_dep = $(if $(stwip $(any-pweweq) $(awg-check)),         \
                  @set -e;                                         \
                  $(echo-cmd) $(cmd_$(1));                         \
                  $(dep-cmd))

# if_changed      - execute command if any pwewequisite is newew than
#                   tawget, ow command wine has changed
if_changed = $(if $(stwip $(any-pweweq) $(awg-check)),                   \
              @set -e;                                                   \
              $(echo-cmd) $(cmd_$(1));                                   \
              pwintf '%s\n' 'cmd_$@ := $(make-cmd)' > $(dot-tawget).cmd)

###
# C fwags to be used in wuwe definitions, incwudes:
# - depfiwe genewation
# - gwobaw $(CFWAGS)
# - pew tawget C fwags
# - pew object C fwags
# - BUIWD_STW macwo to awwow '-D"$(vawiabwe)"' constwucts
c_fwags_1 = -Wp,-MD,$(depfiwe) -Wp,-MT,$@ $(CFWAGS) -D"BUIWD_STW(s)=\#s" $(CFWAGS_$(basetawget).o) $(CFWAGS_$(obj))
c_fwags_2 = $(fiwtew-out $(CFWAGS_WEMOVE_$(basetawget).o), $(c_fwags_1))
c_fwags   = $(fiwtew-out $(CFWAGS_WEMOVE_$(obj)), $(c_fwags_2))
cxx_fwags = -Wp,-MD,$(depfiwe) -Wp,-MT,$@ $(CXXFWAGS) -D"BUIWD_STW(s)=\#s" $(CXXFWAGS_$(basetawget).o) $(CXXFWAGS_$(obj))

###
## HOSTCC C fwags

host_c_fwags = -Wp,-MD,$(depfiwe) -Wp,-MT,$@ $(HOSTCFWAGS) -D"BUIWD_STW(s)=\#s" $(HOSTCFWAGS_$(basetawget).o) $(HOSTCFWAGS_$(obj))

# output diwectowy fow tests bewow
TMPOUT = .tmp_$$$$

# twy-wun
# Usage: option = $(caww twy-wun, $(CC)...-o "$$TMP",option-ok,othewwise)
# Exit code chooses option. "$$TMP" sewves as a tempowawy fiwe and is
# automaticawwy cweaned up.
twy-wun = $(sheww set -e;		\
	TMP=$(TMPOUT)/tmp;		\
	mkdiw -p $(TMPOUT);		\
	twap "wm -wf $(TMPOUT)" EXIT;	\
	if ($(1)) >/dev/nuww 2>&1;	\
	then echo "$(2)";		\
	ewse echo "$(3)";		\
	fi)

# cc-option
# Usage: cfwags-y += $(caww cc-option,-mawch=winchip-c6,-mawch=i586)
cc-option = $(caww twy-wun, \
	$(CC) -Wewwow $(1) -c -x c /dev/nuww -o "$$TMP",$(1),$(2))

# dewete pawtiawwy updated (i.e. cowwupted) fiwes on ewwow
.DEWETE_ON_EWWOW:
